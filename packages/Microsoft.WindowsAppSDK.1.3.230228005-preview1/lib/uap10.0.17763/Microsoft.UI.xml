<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.UI</name>
  </assembly>
  <members>
    <member name="T:Microsoft.UI.ColorHelper">
      <summary>Provides static helper methods for processing Color instead.</summary>
    </member>
    <member name="M:Microsoft.UI.ColorHelper.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Generates a Color structure, based on discrete Byte values for ARGB components. C# and Microsoft Visual Basic code should use Color.FromArgb instead.</summary>
      <param name="a">The A (transparency) component of the desired color. Range is 0-255.</param>
      <param name="r">The R component of the desired color. Range is 0-255.</param>
      <param name="g">The G component of the desired color. Range is 0-255.</param>
      <param name="b">The B component of the desired color. Range is 0-255.</param>
      <returns>The generated Color value.</returns>
    </member>
    <member name="T:Microsoft.UI.Colors">
      <summary>Implements a set of predefined colors. See Color for usage information.</summary>
    </member>
    <member name="P:Microsoft.UI.Colors.AliceBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.AntiqueWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAEBD7.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAEBD7.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aqua">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFFD4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFFD4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Azure">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Beige">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Bisque">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4C4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4C4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Black">
      <summary>Gets the system-defined color that has the ARGB value of #FF000000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF000000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlanchedAlmond">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEBCD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEBCD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Blue">
      <summary>Gets the system-defined color that has the ARGB value of #FF0000FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FF0000FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlueViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF8A2BE2.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8A2BE2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Brown">
      <summary>Gets the system-defined color that has the ARGB value of #FFA52A2A.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA52A2A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BurlyWood">
      <summary>Gets the system-defined color that has an ARGB value of #FFDEB887.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDEB887.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CadetBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF5F9EA0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF5F9EA0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chartreuse">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chocolate">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2691E.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2691E.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Coral">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF7F50.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF7F50.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CornflowerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6495ED.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6495ED.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cornsilk">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF8DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF8DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Crimson">
      <summary>Gets the system-defined color that has an ARGB value of #FFDC143C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDC143C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cyan">
      <summary>Gets the system-defined color that has the ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has the ARGB value of ##FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FF008B8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008B8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFB8860B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB8860B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFA9A9A9.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA9A9A9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF006400.</summary>
      <returns>The system-defined color that has an ARGB value of #FF006400.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkKhaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFBDB76B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBDB76B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkMagenta">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOliveGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF556B2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF556B2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrange">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF8C00.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF8C00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FF9932CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9932CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkRed">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B0000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFE9967A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE9967A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF8FBC8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8FBC8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF483D8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF483D8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF2F4F4F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2F4F4F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF00CED1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00CED1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF9400D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9400D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF1493.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF1493.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00BFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00BFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DimGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF696969.</summary>
      <returns>The system-defined color that has an ARGB value of #FF696969.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DodgerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF1E90FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF1E90FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Firebrick">
      <summary>Gets the system-defined color that has an ARGB value of #FFB22222.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB22222.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.FloralWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.ForestGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF228B22.</summary>
      <returns>The system-defined color that has an ARGB value of #FF228B22.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Fuchsia">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gainsboro">
      <summary>Gets the system-defined color that has an ARGB value of #FFDCDCDC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDCDCDC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GhostWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFF8F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF8F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gold">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFD700.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFD700.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Goldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFDAA520.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDAA520.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gray">
      <summary>Gets the system-defined color that has the ARGB value of #FF808080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF808080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Green">
      <summary>Gets the system-defined color that has the ARGB value of #FF008000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF008000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GreenYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFADFF2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADFF2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Honeydew">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.HotPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF69B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF69B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.IndianRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD5C5C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD5C5C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Indigo">
      <summary>Gets the system-defined color that has an ARGB value of #FF4B0082.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4B0082.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Ivory">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Khaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0E68C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0E68C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lavender">
      <summary>Gets the system-defined color that has an ARGB value of #FFE6E6FA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE6E6FA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LavenderBlush">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF0F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF0F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LawnGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF7CFC00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7CFC00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LemonChiffon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFADD8E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADD8E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCoral">
      <summary>Gets the system-defined color that has an ARGB value of #FFF08080.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF08080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FFE0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGoldenrodYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAFAD2.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAFAD2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFD3D3D3.</summary>
      <returns>The system-defined color that has the ARGB value of #FFD3D3D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF90EE90.</summary>
      <returns>The system-defined color that has an ARGB value of #FF90EE90.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFB6C1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFB6C1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFA07A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFA07A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF20B2AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF20B2AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF778899.</summary>
      <returns>The system-defined color that has an ARGB value of #FF778899.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0C4DE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0C4DE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFE0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFE0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lime">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LimeGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF32CD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF32CD32.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Linen">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAF0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAF0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Magenta">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Maroon">
      <summary>Gets the system-defined color that has an ARGB value of #FF800000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF800000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumAquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF66CDAA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF66CDAA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF0000CD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF0000CD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFBA55D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBA55D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumPurple">
      <summary>Gets the system-defined color that has an ARGB value of #FF9370DB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9370DB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF3CB371.</summary>
      <returns>The system-defined color that has an ARGB value of #FF3CB371.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF7B68EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7B68EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FA9A.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FA9A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF48D1CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF48D1CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFC71585.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC71585.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MidnightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF191970.</summary>
      <returns>The system-defined color that has an ARGB value of #FF191970.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MintCream">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5FFFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5FFFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MistyRose">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Moccasin">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4B5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4B5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.NavajoWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDEAD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDEAD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Navy">
      <summary>Gets the system-defined color that has an ARGB value of #FF000080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF000080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OldLace">
      <summary>Gets the system-defined color that has an ARGB value of #FFFDF5E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFDF5E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Olive">
      <summary>Gets the system-defined color that has an ARGB value of #FF808000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF808000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OliveDrab">
      <summary>Gets the system-defined color that has an ARGB value of #FF6B8E23.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6B8E23.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orange">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFA500.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFA500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OrangeRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF4500.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF4500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFDA70D6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDA70D6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFEEE8AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEEE8AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF98FB98.</summary>
      <returns>The system-defined color that has an ARGB value of #FF98FB98.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FFAFEEEE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFAFEEEE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFDB7093.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDB7093.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PapayaWhip">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEFD5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEFD5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PeachPuff">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDAB9.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDAB9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Peru">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD853F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD853F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Pink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFC0CB.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFC0CB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Plum">
      <summary>Gets the system-defined color that has an ARGB value of #FFDDA0DD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDDA0DD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PowderBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0E0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0E0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Purple">
      <summary>Gets the system-defined color that has the ARGB value of #FF800080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF800080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Red">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF0000.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RosyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFBC8F8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBC8F8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RoyalBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4169E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4169E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SaddleBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B4513.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B4513.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Salmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFA8072.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFA8072.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SandyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFF4A460.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF4A460.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF2E8B57.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2E8B57.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaShell">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF5EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF5EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Sienna">
      <summary>Gets the system-defined color that has an ARGB value of #FFA0522D.</summary>
      <returns>The system-defined color that has an ARGB value of #FFA0522D.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Silver">
      <summary>Gets the system-defined color that has an ARGB value of #FFC0C0C0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC0C0C0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEEB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEEB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6A5ACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6A5ACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF708090.</summary>
      <returns>The system-defined color that has an ARGB value of #FF708090.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Snow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF7F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF7F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4682B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4682B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tan">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2B48C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2B48C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Teal">
      <summary>Gets the system-defined color that has an ARGB value of #FF008080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Thistle">
      <summary>Gets the system-defined color that has an ARGB value of #FFD8BFD8.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD8BFD8.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tomato">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF6347.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF6347.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Transparent">
      <summary>Gets the system-defined color that has the ARGB value of #00FFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #00FFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Turquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF40E0D0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF40E0D0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Violet">
      <summary>Gets the system-defined color that has an ARGB value of #FFEE82EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEE82EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Wheat">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5DEB3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5DEB3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.White">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.WhiteSmoke">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Yellow">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFF00.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.YellowGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF9ACD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9ACD32.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AmbientLight">
      <summary>A light that illuminates every targeted Visual equally .</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Color">
      <summary>Color of the light. Animatable.</summary>
      <returns>The color of the ambient light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationController">
      <summary>Provides playback controls for a KeyFrameAnimation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Pause">
      <summary>Pauses playback of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Resume">
      <summary>Starts playback of an animation that was previously paused.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MaxPlaybackRate">
      <summary>Gets the maximum allowed playback rate.</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MinPlaybackRate">
      <summary>Gets the minimum allowed playback rate.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.PlaybackRate">
      <summary>Gets or sets the rate at which the animation plays.</summary>
      <returns>The rate at which the animation plays. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.Progress">
      <summary>Gets or sets a value that indicates the current playback position of the animation.</summary>
      <returns>The current playback position of the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.ProgressBehavior">
      <summary>Gets or sets a value that indicates how progress is determined.</summary>
      <returns>A value of the enumeration that indicates how progress is determined. The default is Default.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationControllerProgressBehavior">
      <summary>Defines constants that specify how the AnimationController.Progress" value is determined.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.Default">
      <summary>The progress value does not include delay time.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.IncludesDelayTime">
      <summary>The progress value includes delay time.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDelayBehavior">
      <summary>Specifies the animation delay behavior.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueAfterDelay">
      <summary>Does not compute anything in animation nor holds the value of composition object property. If a DelayTime is specified, it delays starting the animation according to delay time and after delay has expired it applies animation to the object property.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueBeforeDelay">
      <summary>Applies the initial value of the animation (i.e. the value at Keyframe 0) to the object before the delay time is elapsed (when there is a DelayTime specified), it then delays starting the animation according to the DelayTime.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDirection">
      <summary>Specifies the play direction of an animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Alternate">
      <summary>Alternate between normal and reverse playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.AlternateReverse">
      <summary>Alternate between reverse and normal playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Normal">
      <summary>Play the animation from start to end.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Reverse">
      <summary>Play the animation in reverse from end to start.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationIterationBehavior">
      <summary>Specifies if the animation should loop.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Count">
      <summary>The animation should loop the specified number of times.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Forever">
      <summary>The animation should loop forever.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyAccessMode">
      <summary>Defines constants that specify how an animated property can be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.None">
      <summary>The property cannot be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadOnly">
      <summary>The property can only be read.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadWrite">
      <summary>The property can be read or written to.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.WriteOnly">
      <summary>The property can only be written to.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyInfo">
      <summary>Represents information about a property that can be animated.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationPropertyInfo.GetResolvedCompositionObject">
      <summary>Retrieves the composition object associated with the AnimationPropertyInfo.</summary>
      <returns>The composition object associated with the AnimationPropertyInfo.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationPropertyInfo.GetResolvedCompositionObjectProperty">
      <summary>Retrieves the animatable property from the composition object associated with the AnimationPropertyInfo.</summary>
      <returns>The animatable property from the composition object associated with the AnimationPropertyInfo.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationPropertyInfo.AccessMode">
      <summary>Gets or sets a value that specifies how an animated property can be accessed.</summary>
      <returns>A value of the enumeration that specifies how an animated property can be accessed.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationStopBehavior">
      <summary>Specifies the behavior of an animation when it stops.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.LeaveCurrentValue">
      <summary>Leave the animation at its current value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToFinalValue">
      <summary>Set the animation to its final value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToInitialValue">
      <summary>Reset the animation to its initial value.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.BackEasingFunction">
      <summary>Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BackEasingFunction.Amplitude">
      <summary>Gets or sets the amplitude of retraction associated with a BackEase animation.</summary>
      <returns>The amplitude of retraction associated with a BackEase animation. This value must be greater than or equal to 0. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BackEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BooleanKeyFrameAnimation">
      <summary>A time-based animation that targets a Boolean property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.BooleanKeyFrameAnimation.InsertKeyFrame(System.Single,System.Boolean)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceEasingFunction">
      <summary>Represents an easing function that creates an animated bouncing effect.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceEasingFunction.Bounces">
      <summary>Gets or sets the number of bounces.</summary>
      <returns>The number of bounces. The value must be greater than or equal to zero. Negative values resolve to zero. The default is 3.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceEasingFunction.Bounciness">
      <summary>Gets or sets a value that specifies how bouncy the bounce animation is.</summary>
      <returns>The value that specifies how bouncy the bounce animation is. This value must be positive. The default is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CircleEasingFunction">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CircleEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ColorKeyFrameAnimation">
      <summary>A time-based animation that targets the Color property with one or more color key frames.

The ColorKeyFrameAnimation class is one of the supported types of KeyFrameAnimation s that is used to animate the Color property off of the Brush property on a SpriteVisual. When working with ColorKeyFrameAnimation s, utilize Windows.UI.Color objects for the values of keyframes. Utilize the InterpolationColorSpace property to define which color space the system will interpolate through for the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.ColorKeyFrameAnimation.InterpolationColorSpace">
      <summary>The color space the color interpolation should run through.

The 
    ColorKeyFrameAnimation.InterpolationColorSpace
   property enables a developer to choose what color space the system will interpolate through when animating between two colors. Developers can choose between the CompositionColorSpace enum values Rgb, Hsl, or Auto (system chosen).</summary>
      <returns>The color space the color interpolation should run through.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimation">
      <summary>Represents the base animation class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearAllParameters">
      <summary>Clears all of the parameters of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearParameter(System.String)">
      <summary>Clears a parameter from the animation.</summary>
      <param name="key">The parameter to clear.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetBooleanParameter(System.String,System.Boolean)">
      <summary>Sets a boolean value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The boolean value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetColorParameter(System.String,Windows.UI.Color)">
      <summary>Sets a Color?text=expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Color value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetExpressionReferenceParameter(System.String,Microsoft.UI.Composition.IAnimationObject)">
      <summary>Sets an IAnimationObject value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="parameterName">The name of the parameter to set.</param>
      <param name="source">The source object.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix3x2Parameter(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Sets a Matrix3x2?text=expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix3x2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix4x4Parameter(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Sets a Matrix4x4?text=expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix4x4 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetQuaternionParameter(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Sets a Quaternion value for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The quaternion value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetReferenceParameter(System.String,Microsoft.UI.Composition.CompositionObject)">
      <summary>Sets a reference to a Composition object for use with an ExpressionAnimation or an expression keyframe".</summary>
      <param name="key">The name of the parameter to set. The name can be used to reference the parameter in the ExpressionAnimation.</param>
      <param name="compositionObject">The CompositionObject value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetScalarParameter(System.String,System.Single)">
      <summary>Sets a Scalar value parameter for use with an ExpressionAnimation or an expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Single value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector2Parameter(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Sets a Vector2?text=expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector3Parameter(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Sets a Vector3?text=expression keyframe".</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector3 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector4Parameter(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Sets a Vector4?text=expression keyframe".</summary>
      <param name="key">The name of the parameter.</param>
      <param name="value">The Vector4 value.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.InitialValueExpressions">
      <summary>Gets the initial values for the animation.</summary>
      <returns>The initial values for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.Target">
      <summary>The target of the animation.</summary>
      <returns>The target of the animation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimationGroup">
      <summary>Defines a group of animations.

CompositionAnimationGroup provides a way to group CompositionAnimation s in a list which will be started at the same time when StartAnimationGroup is called on CompositionObject. All CompositionAnimation in CompositionAnimationGroup need to assign a value to the Target property in the animation itself. CompositionAnimationGroup can also be associated with ImplicitAnimationCollection as an animation that gets executed as a result of a trigger.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Add(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Adds an animation to the animation group.</summary>
      <param name="value">The animation to add to the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.First">
      <summary>Retrieves the first animation in the group.</summary>
      <returns>Returns the first animation in the group.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Remove(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Removes an animation from the animation group.</summary>
      <param name="value">The animation to remove from the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.RemoveAll">
      <summary>Removes all animations from the group.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimationGroup.Count">
      <summary>The number of animations in the group.</summary>
      <returns>The number of animations in the group.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionApiInformation">
      <summary>Represents information about the composition APIs.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionApiInformation.ApiVersion">
      <summary>Gets the version of the composition APIs in use.</summary>
      <returns>The version of the composition APIs in use.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackdropBrush">
      <summary>A brush that applies an effect (or a chain of effects) to the region behind a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackfaceVisibility">
      <summary>Specifies whether the back face of a visual is visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Hidden">
      <summary>The back face should not be visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Inherit">
      <summary>Inherit the back face visibility value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Visible">
      <summary>The back face should be visible during a 3D transform.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchCompletedEventArgs">
      <summary>Arguments for the CompositionCommitBatch.Completed" or CompositionScopedBatch.Completed" events.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchTypes">
      <summary>Batch types for CompositionCommitBatch and CompositionScopedBatch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.AllAnimations">
      <summary>The batch contains all animations.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Animation">
      <summary>The batch contains animations.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Effect">
      <summary>The batch contains effects.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.InfiniteAnimation">
      <summary>The batch contains an infinite animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.None">
      <summary>None.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on screen.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.Linear">
      <summary>Interpolate a color from the four bitmap pixels that are the nearest to the current rendering pixel.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipLinear">
      <summary>Use Linear interpolation for magnification, minification, and mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipNearest">
      <summary>Use Linear interpolation for magnification and minification; use NearestNeighbor for mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipLinear">
      <summary>Use Linear interpolation for magnification; use NearestNeighbor for minification; use Linear interpolation for mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipNearest">
      <summary>Use Linear interpolation for magnification; use NearestNeighbor for minification and mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipLinear">
      <summary>Use NearestNeighbor for magnification; use Linear interpolation for minification and mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipNearest">
      <summary>Use NearestNeighbor for magnification; use Linear interpolation for minification; use NearestNeighbor for mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipLinear">
      <summary>Use NearestNeighbor for magnification and minification; use Linear interpolation for mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipNearest">
      <summary>Use NearestNeighbor for magnification, minification, and mip-level sampling.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.NearestNeighbor">
      <summary>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBorderMode">
      <summary>Controls the aliasing behavior on the edges of visual borders.
&lt;!--  with other visuals and affects pixel precise alignment so that edges (borders) are not axis-aligned to avoid aliasing. --&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Hard">
      <summary>Bitmap and clip edges are aliased.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Inherit">
      <summary>Inherit from parent.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Soft">
      <summary>Bitmap and clip edges are antialiased.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBrush">
      <summary>Base class for brushes used to paint a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCapabilities">
      <summary>Provides the ability to check system hardware capabilities so that Visual Layer Effects may be scaled accordingly. This allows you to ensure that your application's use of rendering-intensive operations is tailored to match the device's capabilities, providing optimum performance and pleasant visual results.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCapabilities.Changed">
      <summary>Event triggered when the supported composition capabilities changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.#ctor">
      <summary>Initializes a new instance of the CompositionCapabilities class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsFast">
      <summary>Indicates whether fast effects are supported.</summary>
      <returns>Returns a boolean indicating whether fast effects are supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsSupported">
      <summary>Indicates whether effects are supported.</summary>
      <returns>Returns a boolean indicating whether effects are supported.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionClip">
      <summary>Base class for clipping objects such as InsetClip.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.AnchorPoint">
      <summary>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip.</summary>
      <returns>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip. An AnchorPoint value of (0, 0) refers to the top-left corner of the untransformed clip and a value of (1, 1) refers to the bottom-right corner. Negative values and values greater than one are accepted but will result in an AnchorPoint that is outside the boundaries of the original, untransformed clip.

By default, the AnchorPoint value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.CenterPoint">
      <summary>The point about which rotation or scaling occurs.</summary>
      <returns>The point about which rotation or scaling occurs. Value is in pixels within the local coordinate space of the visual on which the clip is applied.

By default, the CenterPoint value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Offset">
      <summary>The offset of the clip relative to the visual on which the clip is applied.</summary>
      <returns>The offset of the clip relative to the visual on which the clip is applied. By default, the Offset value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngle">
      <summary>The angle of rotation applied to the clip, in radians.</summary>
      <returns>The angle of rotation applied to the clip, in radians. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngle values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in degrees, use CompositionClip.RotationAngleInDegrees". If both RotationAngle and CompositionClip.RotationAngleInDegrees" are set on the same CompositionClip object, whichever value is set last will override the other value.

By default, the RotationAngle value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngleInDegrees">
      <summary>The angle of rotation applied to the clip, in degrees.</summary>
      <returns>The angle of rotation applied to the clip, in degrees. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngleInDegrees values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in radians, use CompositionClip.RotationAngle". If both CompositionClip.RotationAngle" and CompositionClip.RotationAngleInDegrees are set on the same CompositionClip object, whichever value is set last will override the other value.

By default, the RotationAngleInDegrees value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Scale">
      <summary>The scale to apply to the clip.</summary>
      <returns>The scale to apply to the clip. The scale value is a multiplier of the clip's size. By default, the Scale value on a clip is (1, 1).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.TransformMatrix">
      <summary>The 3x2 transformation matrix to apply to the clip.</summary>
      <returns>The transformation matrix to apply to the clip. By default, the TransformMatrix is set to:

`

[1 0
 0 1
 0 0]             
            
`</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorBrush">
      <summary>Paints a SpriteVisual with a solid color.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorBrush.Color">
      <summary>The color used to fill a SpriteVisual. Animatable.</summary>
      <returns>The color used to fill a SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStop">
      <summary>Describes the location and color of a transition point in a gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Color">
      <summary>Gets or sets the color of the gradient stop.</summary>
      <returns>The color of the gradient stop. The default is Transparent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Offset">
      <summary>Gets or sets the location of the gradient stop within the gradient vector.</summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStopCollection">
      <summary>Represents a collection of CompositionColorGradientStop objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Append(Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionColorGradientStop value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.IndexOf(Microsoft.UI.Composition.CompositionColorGradientStop,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>true if an item with the specified value was found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.ReplaceAll(Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Sets the value at the specified index to the CompositionColorGradientStop value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorSpace">
      <summary>Specifies the color space for interpolating color values in ColorKeyFrameAnimation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Auto">
      <summary>Use the default color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Hsl">
      <summary>Use the HSL color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.HslLinear">
      <summary>Use the linear HSL color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Rgb">
      <summary>Use the ARGB color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.RgbLinear">
      <summary>Use the linear ARGB color space for interpolation.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCommitBatch">
      <summary>A group of active animations or effects.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCommitBatch.Completed">
      <summary>Event that is triggered when all objects in a CompositionCommitBatch have completed.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsActive">
      <summary>Indicates whether the CompositionCommitBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsEnded">
      <summary>Indicates whether the CompositionCommitBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCompositeMode">
      <summary>Determines how a non-opaque visual's content is blended with the background content behind the visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.DestinationInvert">
      <summary>The visual content's colors are inverted.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.Inherit">
      <summary>Inherits mode from parent visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.MinBlend">
      <summary>Visual content's colors subtract for color channels in the background.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.SourceOver">
      <summary>The standard Composite Mode. Colors are blended with per-pixel transparency.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionContainerShape">
      <summary>Represents a container for CompositionShapes, used to group items that share 2D transforms.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionContainerShape.Shapes">
      <summary>Gets the collection of CompostionShapes in this container.</summary>
      <returns>The collection of CompostionShapes in this container.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDrawingSurface">
      <summary>A drawing surface for interoperation with Direct2D or Direct3D.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Resize(Windows.Graphics.SizeInt32)">
      <summary>Resizes the drawing surface to the specified size.</summary>
      <param name="sizePixels">The new size in pixels for the drawing surface.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface using the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface with the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.AlphaMode">
      <summary>The alpha mode of the drawing surface.</summary>
      <returns>The alpha mode of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.PixelFormat">
      <summary>The pixel format of the drawing surface.</summary>
      <returns>The pixel format of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.Size">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.SizeInt32">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy">
      <summary>Specifies the masking policy for a shadow.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.Default">
      <summary>Shadow defaults to rectangular shape or the mask provided.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.InheritFromVisualContent">
      <summary>Shadow uses a mask using the alpha value of the visual's brush.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEasingFunction">
      <summary>Base class for interpolator functions to use with KeyFrameAnimations.

The CompositionEasingFunction class is the base class for easing functions that are used with KeyFrameAnimation s. Easing functions are used to describe how the system interpolates between two different keyframes. Currently, there are three supported easing functions: Linear, Cubic Bezier" and Step.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateBackEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode,System.Single)">
      <summary>Creates a new instance of BackEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <param name="amplitude">The amplitude of retraction associated with a BackEase animation.</param>
      <returns>The created BackEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateBounceEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode,System.Int32,System.Single)">
      <summary>Creates a new instance of BounceEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <param name="bounces">The number of bounces.</param>
      <param name="bounciness">A value that specifies how bouncy the bounce animation is.</param>
      <returns>The created BounceEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateCircleEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode)">
      <summary>Creates a new instance of CircleEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <returns>The created CircleEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateCubicBezierEasingFunction(Microsoft.UI.Composition.Compositor,Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2)">
      <summary>Creates a new instance of CubicBezierEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="controlPoint1">The first control point for the cubic-bezier interpolation function.</param>
      <param name="controlPoint2">The second control point for the cubic-bezier interpolation function.</param>
      <returns>The created CubicBezierEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateElasticEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode,System.Int32,System.Single)">
      <summary>Creates a new instance of ElasticEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <param name="oscillations">The number of times the target slides back and forth over the animation destination.</param>
      <param name="springiness">The stiffness of the spring. The smaller the _springiness_ value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</param>
      <returns>The created ElasticEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateExponentialEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode,System.Single)">
      <summary>Creates a new instance of ExponentialEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <param name="exponent">The exponent used to determine the interpolation of the animation.</param>
      <returns>The created ExponentialEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateLinearEasingFunction(Microsoft.UI.Composition.Compositor)">
      <summary>Creates a new instance of LinearEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <returns>The created LinearEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreatePowerEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode,System.Single)">
      <summary>Creates a new instance of PowerEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <param name="power">The exponential power of the animation interpolation.</param>
      <returns>The created PowerEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateSineEasingFunction(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.CompositionEasingFunctionMode)">
      <summary>Creates a new instance of SineEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="mode">A value that specifies how the animation interpolates.</param>
      <returns>The created SineEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateStepEasingFunction(Microsoft.UI.Composition.Compositor)">
      <summary>Creates a new instance of StepEasingFunction.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <returns>The created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEasingFunction.CreateStepEasingFunction(Microsoft.UI.Composition.Compositor,System.Int32)">
      <summary>Creates a new instance of StepEasingFunction with the specified step count.</summary>
      <param name="owner">The compositor used to create the easing function.</param>
      <param name="stepCount">The number of steps between the starting value and the end value.</param>
      <returns>The created StepEasingFunction object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEasingFunctionMode">
      <summary>Defines constants that specify how the animation associated with an easing function interpolates.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEasingFunctionMode.In">
      <summary>Interpolation follows the mathematical formula associated with the easing function.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEasingFunctionMode.InOut">
      <summary>Interpolation uses _EaseIn_ for the first half of the animation and _EaseOut_ for the second half.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEasingFunctionMode.Out">
      <summary>Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectBrush">
      <summary>Paints a SpriteVisual with the output of a filter effect. The filter effect description is defined using the  CompositionEffectFactory class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.GetSourceParameter(System.String)">
      <summary>Retrieves a CompositionBrush associated with a given CompositionEffectSourceParameter name.</summary>
      <param name="name">The name of the input.</param>
      <returns>Returns the specified input.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.SetSourceParameter(System.String,Microsoft.UI.Composition.CompositionBrush)">
      <summary>Associates a name declared using CompositionEffectSourceParameter to an effect source.</summary>
      <param name="name">The name of the source parameter.</param>
      <param name="source">The source to pass to the effect.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactory">
      <summary>Creates a composition object that contains a Win2D namespace.

&gt; [!NOTE]
&gt; Effects that are not supported are marked as NoComposition] in the [Win2D API Reference for effects namespace.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectFactory.CreateBrush">
      <summary>Creates an instance of CompositionEffectBrush with the effect definition and animatable properties contained in the CompositionEffectFactory object.</summary>
      <returns>Returns the created CompositionEffectBrush object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.ExtendedError">
      <summary>An extended error code for the result of a call to CreateBrush.</summary>
      <returns>An extended error code for the result of a call to CreateBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.LoadStatus">
      <summary>The load status of a CreateBrush call.</summary>
      <returns>The load status of a CreateBrush call.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus">
      <summary>The status of the asynchronous compilation of a shader for an effect description.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.EffectTooComplex">
      <summary>The effect was too complex.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Other">
      <summary>Other error.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Pending">
      <summary>The operation is still pending.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Success">
      <summary>The operation was successful.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectSourceParameter">
      <summary>Used to declare an arbitrary name (a String) to be associated with a CompositionBrush (the “effect source”). The association of the given name and the effect source occurs when the SetSourceParameter method of a CompositionEffectBrush is called.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectSourceParameter.#ctor(System.String)">
      <summary>Creates an instance of CompositionEffectSourceParameter.</summary>
      <param name="name">The name for the CompositionEffectSourceParameter instance.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectSourceParameter.Name">
      <summary>The name associated with the effect source.</summary>
      <returns>The name associated with the effect source.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEllipseGeometry">
      <summary>Represents an ellipse with the specified center and radius.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Center">
      <summary>Gets or sets the center point of the ellipse.</summary>
      <returns>The center point of the ellipse.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Radius">
      <summary>Gets or sets the radius of the ellipse.</summary>
      <returns>The radius of the ellipse.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometricClip">
      <summary>Represents a shape that clips a portion of a visual. The visible portion of the visual is a shape defined by a CompositionGeometry. The portion of the visual outside the geometry is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.Geometry">
      <summary>Gets or sets CompositionGeometry that defines the shape of the clip.</summary>
      <returns>A CompositionGeometry that defines the shape of the clip. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.ViewBox">
      <summary>Gets or sets a CompositionViewBox that maps the shape visual tree coordinates onto the visual.</summary>
      <returns>A CompositionViewBox that maps the shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometry">
      <summary>Represents the base class for composition geometries.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimEnd">
      <summary>Gets or sets the amount to trim the end of the geometry path.</summary>
      <returns>The amount to trim the end of the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimOffset">
      <summary>Gets or sets the amount to offset trimming the geometry path.</summary>
      <returns>The amount to offset trimming the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimStart">
      <summary>Gets or sets the amount to trim the start of the geometry path.</summary>
      <returns>The amount to trim the start of the geometry path. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGetValueStatus">
      <summary>Indicates the outcome of an attempt to retrieve the value of a key-value pair.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.NotFound">
      <summary>The key-value pair does not exist.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.Succeeded">
      <summary>The value successfully retrieved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.TypeMismatch">
      <summary>The value type of the key-value pair is different than the value type requested.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientBrush">
      <summary>Represents a brush that describes a gradient, composed of gradient stops.

CompositionGradientBrush is supported only with Rgb and RgbLinear CompositionColorSpace.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.AnchorPoint">
      <summary>Gets or sets the point on the brush to be positioned at the brush's offset.</summary>
      <returns>The point on the brush to be positioned at the brush's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.CenterPoint">
      <summary>Gets or sets the point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ColorStops">
      <summary>Gets the brush's gradient stops.</summary>
      <returns>A collection of the CompositionColorGradientStop objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty CompositionColorGradientStopCollection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ExtendMode">
      <summary>Gets or sets a value that specifies how to draw the gradient outside the brush's gradient vector or space.</summary>
      <returns>The mode used to paint the gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.InterpolationSpace">
      <summary>Gets or sets a value that specifies how the gradient's colors are interpolated.</summary>
      <returns>A value of the enumeration that specifies how the gradient's colors are interpolated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.MappingMode">
      <summary>Gets or sets a value that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
      <returns>A value of the enumeration that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Offset">
      <summary>Gets or sets the offset of the brush relative to the object being painted.</summary>
      <returns>The offset of the brush relative to the object being painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngle">
      <summary>Gets or sets the rotation angle of the brush in radians.</summary>
      <returns>The rotation angle of the brush in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the brush in degrees.</summary>
      <returns>The rotation angle of the brush in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Scale">
      <summary>Gets or sets the scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.TransformMatrix">
      <summary>Gets or sets the matrix of transforms to apply to the brush.</summary>
      <returns>The matrix of transforms to apply to the brush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientExtendMode">
      <summary>Defines constants that specify how to draw the gradient outside the brush's gradient vector or space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Clamp">
      <summary>The gradient is not extended.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Mirror">
      <summary>The gradient is repeated in the reverse direction..</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Wrap">
      <summary>The gradient is wrapped.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGraphicsDevice">
      <summary>Used to create all hardware bound resources for a given DirectX device on a compositor session. CompositionGraphicsDevice contains a DirectX device that is used to perform the GPU operations. Developers can obtain a Graphics device from the compositor top level object.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionGraphicsDevice.RenderingDeviceReplaced">
      <summary>Event triggered when the rendering device has been replaced.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CaptureAsync(Microsoft.UI.Composition.Visual,Windows.Graphics.SizeInt32,Microsoft.Graphics.DirectX.DirectXPixelFormat,Microsoft.Graphics.DirectX.DirectXAlphaMode,System.Single)">
      <summary>Captures various source elements, including visual trees owned by an application, to a composition surface.</summary>
      <param name="captureVisual">The visual to capture.</param>
      <param name="size">The size in pixels of the surface.</param>
      <param name="pixelFormat">The pixel format of the surface.</param>
      <param name="alphaMode">How the alpha channel should be handled.</param>
      <param name="sdrBoost">The amount to boost SDR.</param>
      <returns>An asynchronous operation that returns an ICompositionSurface upon successful completion.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface(Windows.Foundation.Size,Microsoft.Graphics.DirectX.DirectXPixelFormat,Microsoft.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the surface.</param>
      <param name="pixelFormat">The pixel format of the surface.</param>
      <param name="alphaMode">How the alpha channel should be handled.</param>
      <returns>The created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface2(Windows.Graphics.SizeInt32,Microsoft.Graphics.DirectX.DirectXPixelFormat,Microsoft.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size of the drawing surface in pixels.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateMipmapSurface(Windows.Graphics.SizeInt32,Microsoft.Graphics.DirectX.DirectXPixelFormat,Microsoft.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionMipMapSurface.</summary>
      <param name="sizePixels">The size in pixels of the surface.</param>
      <param name="pixelFormat">The pixel format of the surface.</param>
      <param name="alphaMode">How the alpha channel should be handled.</param>
      <returns>The created CompositionMipMapSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateVirtualDrawingSurface(Windows.Graphics.SizeInt32,Microsoft.Graphics.DirectX.DirectXPixelFormat,Microsoft.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionVirtualDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the drawing surface.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionVirtualDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.Trim">
      <summary>Trims any graphics memory allocated by the graphics device on the app's behalf.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLight">
      <summary>Base class for a light source that can target a UI scene.

The CompositionLight.Targets" property determines which Visuals are lit.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.ExclusionsFromTargets">
      <summary>Gets a collection of Visuals that are not targeted by the light.</summary>
      <returns>The collection of Visuals that are not targeted by the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.IsEnabled">
      <summary>Gets or sets a value that determines whether the composition light is on.</summary>
      <returns>true if the light is on; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.Targets">
      <summary>The collection of Visuals targeted by the light.</summary>
      <returns>The collection of Visuals targeted by the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLinearGradientBrush">
      <summary>Represents a brush that paints an area with a linear gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient.</summary>
      <returns>The ending two-dimensional coordinates of the linear gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient.</summary>
      <returns>The starting two-dimensional coordinates for the linear gradient.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLineGeometry">
      <summary>Represents a straight line between two points.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.End">
      <summary>Gets or sets the end point of the line.</summary>
      <returns>The end point of the line.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.Start">
      <summary>Gets or sets the starting point of the line.</summary>
      <returns>The starting point of the line.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMappingMode">
      <summary>Defines constants that specify whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Absolute">
      <summary>Positioning coordinates (StartPoint, EndPoint) are absolute.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Relative">
      <summary>Positioning coordinates (StartPoint, EndPoint) are relative to the output area.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMaskBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush with an opacity mask applied to it. The source of the opacity mask can be any CompositionBrush of type CompositionColorBrush, CompositionLinearGradientBrush, CompositionSurfaceBrush, CompositionEffectBrush or a CompositionNineGridBrush. The opacity mask must be specified as a CompositionSurfaceBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Mask">
      <summary>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</summary>
      <returns>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Source">
      <summary>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</summary>
      <returns>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMipmapSurface">
      <summary>Represents a drawing surface for mipmap textures.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionMipmapSurface.GetDrawingSurfaceForLevel(System.UInt32)">
      <summary>Retrieves the texture at the specified level of the mipmap.</summary>
      <param name="level">The level from which to retrieve the texture.</param>
      <returns>The texture at the specified level of the mipmap.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.AlphaMode">
      <summary>Gets the alpha mode of the mipmap surface.</summary>
      <returns>The alpha mode of the mipmap surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.LevelCount">
      <summary>Gets the number of texture levels in the mipmap.</summary>
      <returns>The number of texture levels in the mipmap.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.PixelFormat">
      <summary>Gets the pixel format of the mipmap surface.</summary>
      <returns>The pixel format of the mipmap surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.SizeInt32">
      <summary>Gets the size of the mipmap surface.</summary>
      <returns>The size of the mipmap surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionNineGridBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush after applying Nine-Grid Stretching to the contents of the Source brush. The source of the nine-grid stretch can by any CompositionBrush of type CompositionColorBrush, CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the same value for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="inset">The inset value to use for the top, bottom, left, and right.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the specified values for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="left">The inset from the left of the image.</param>
      <param name="top">The inset from the top of the image.</param>
      <param name="right">The inset from the right of the image.</param>
      <param name="bottom">The inset from the bottom of the image.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single)">
      <summary>Sets the (same) scale to be applied to the left, top, right, and bottom insets. Defaults to 1.0f.</summary>
      <param name="scale">The scale for all of the insets.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the scale to be applied to the left, top, right, and bottom insets respectively. Defaults to 1.0f.</summary>
      <param name="left">The scale of the left inset.</param>
      <param name="top">The scale of the top inset.</param>
      <param name="right">The scale of the right inset.</param>
      <param name="bottom">The scale of the bottom inset.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInset">
      <summary>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</summary>
      <returns>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInsetScale">
      <summary>Scale to be applied to BottomInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to BottomInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.IsCenterHollow">
      <summary>Indicates whether the center of the Nine-Grid is drawn.</summary>
      <returns>Indicates whether the center of the Nine-Grid is drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInset">
      <summary>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</summary>
      <returns>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInsetScale">
      <summary>Scale to be applied to LeftInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to LeftInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInset">
      <summary>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</summary>
      <returns>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInsetScale">
      <summary>Scale to be applied to RightInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to RightInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.Source">
      <summary>The brush whose content is to be Nine-Grid stretched. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</summary>
      <returns>The brush whose content is to be scaled using Nine-Grid Scaling. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInset">
      <summary>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</summary>
      <returns>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInsetScale">
      <summary>Scale to be applied to TopInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to TopInset. Defaults to 1.0f.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionObject">
      <summary>Base class of the composition API representing a node in the visual tree structure.

Composition objects are the visual tree structure on which all other features of the composition API use and build on. The API allows developers to define and create one or many Visual objects each representing a single node in a Visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.Close">
      <summary>Closes the CompositionObject and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimation(System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the object and starts the animation.</summary>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group.

The StartAnimationGroup method on CompositionObject lets you start CompositionAnimationGroup. All the animations in the group will be started at the same time on the object.</summary>
      <param name="value">The animation group to start.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroupWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group on the specified target.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the target object and starts the animation.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimation(System.String)">
      <summary>Disconnects an animation from the specified property and stops the animation.</summary>
      <param name="propertyName">The name of the property to disconnect the animation from.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Stops an animation group.</summary>
      <param name="value">The animation group to stop.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.TryGetAnimationController(System.String)">
      <summary>Returns an AnimationController for the animation running on the specified property.</summary>
      <param name="propertyName">The property being animated.</param>
      <returns>An instance of AnimationController for the specified animation, or null if the animation is not found.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Comment">
      <summary>A string to associate with the CompositionObject.</summary>
      <returns>A string to associate with the CompositionObject. Note that for Visual Studio's Live Visual Tree debugging tool, the name displayed for a particular visual will be pulled from its Comment property</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Compositor">
      <summary>The Compositor used to create this CompositionObject.</summary>
      <returns>The Compositor used to create this CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.DispatcherQueue">
      <summary>Gets the DispatcherQueue for the CompositionObject.</summary>
      <returns>The DispatcherQueue for the CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.ImplicitAnimations">
      <summary>The collection of implicit animations attached to this object.</summary>
      <returns>The collection of implicit animations attached to this object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Properties">
      <summary>The collection of properties associated with the CompositionObject.</summary>
      <returns>The collection of properties associated with the CompositionObject.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPath">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPath.#ctor(Windows.Graphics.IGeometrySource2D)">
      <summary>Initializes a new instance of the CompositionPath class.</summary>
      <param name="source">The source of the path data.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPathGeometry">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionPathGeometry.Path">
      <summary>Gets or sets the data that defines the lines and curves of the path.</summary>
      <returns>The data that defines the lines and curves of the path.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadow">
      <summary>Represents a scene-based shadow calculated using the relationship between the light, the visual that casts the shadow,and the visual that receives the shadow, such that the shadow is drawn differently on each receiver.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.BlurRadiusMultiplier">
      <summary>Gets or sets the multiplier for the shadow's blur radius.</summary>
      <returns>The multiplier for the shadow's blur radius.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Casters">
      <summary>Gets the collection of objects that cast a shadow on the receivers.</summary>
      <returns>The collection of objects that cast a shadow on the receivers.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.LightSource">
      <summary>Gets or sets the composition light that determines the direction the shadow is cast.</summary>
      <returns>The composition light that determines the direction the shadow is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MaxBlurRadius">
      <summary>Gets or sets the maximum blur radius of the shadow.</summary>
      <returns>The maximum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MinBlurRadius">
      <summary>Gets or sets the minimum blur radius of the shadow.</summary>
      <returns>The minimum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Receivers">
      <summary>Gets the collection of objects that the shadow is cast on.</summary>
      <returns>The collection of objects that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCaster">
      <summary>Represents an object that casts a projected shadow.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.Brush">
      <summary>Gets or sets the brush used to draw the shadow.</summary>
      <returns>The brush used to draw the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.CastingVisual">
      <summary>Gets or sets the Visual that casts the shadow.</summary>
      <returns>The Visual that casts the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection">
      <summary>Represents a collection of CompositionProjectedShadowCaster objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAbove(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection above the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtBottom(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the bottom of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtTop(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the top of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertBelow(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection below the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Removes the specified CompositionProjectedShadowCaster from the collection.</summary>
      <param name="caster">The CompositionProjectedShadowCaster to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.MaxRespectedCasters">
      <summary>Gets the maximum number of shadow casters that will be respected.</summary>
      <returns>The maximum number of shadow casters that will be respected.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiver">
      <summary>Represents an object that can have a projected shadow cast on it.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiver.ReceivingVisual">
      <summary>Gets or sets the Visual that the shadow is cast on.</summary>
      <returns>The Visual that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection">
      <summary>Represents an unordered collection of CompositionProjectedShadowReceiver objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Add(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Adds the specified CompositionProjectedShadowReceiver to the collection.</summary>
      <param name="value">The item to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Removes the specified CompositionProjectedShadowReceiver from the collection.</summary>
      <param name="value">The CompositionProjectedShadowReceiver to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPropertySet">
      <summary>Stores values as key-value pairs.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertBoolean(System.String,System.Boolean)">
      <summary>Inserts a boolean key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertColor(System.String,Windows.UI.Color)">
      <summary>Inserts a Color key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Inserts a Matrix3x2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Inserts a Matrix4x4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertQuaternion(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a quaternion key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertScalar(System.String,System.Single)">
      <summary>Inserts a Single key-value pair.</summary>
      <param name="propertyName">The name of the property to insert.</param>
      <param name="value">The value of the property to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector2(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a Vector2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector3(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a Vector3 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector4(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a Vector4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetBoolean(System.String,System.Boolean@)">
      <summary>Retrieves the specified boolean property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified boolean property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetColor(System.String,Windows.UI.Color@)">
      <summary>Retrieves the specified Color property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Color property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2@)">
      <summary>Retrieves the specified Matrix3x2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix3x2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4@)">
      <summary>Retrieves the specified Matrix4x4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix4x4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetQuaternion(System.String,Windows.Foundation.Numerics.Quaternion@)">
      <summary>Retrieves the specified quaternion property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified quaternion property value when the method returns.</param>
      <returns>Returns an enumeration value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetScalar(System.String,System.Single@)">
      <summary>Retrieves the specified Single property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Single property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector2(System.String,Windows.Foundation.Numerics.Vector2@)">
      <summary>Retrieves the specified Vector2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector3(System.String,Windows.Foundation.Numerics.Vector3@)">
      <summary>Retrieves the specified Vector3 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector3 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector4(System.String,Windows.Foundation.Numerics.Vector4@)">
      <summary>Retrieves the specified Vector4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRadialGradientBrush">
      <summary>Represents a brush that paints an area with a radial gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseCenter">
      <summary>Gets or sets the two-dimensional coordinates of the center of the ellipse that contains the gradient.</summary>
      <returns>The two-dimensional coordinates of the center of the ellipse the gradient is housed in. The default is a Vector2 with values (0.5, 0.5).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseRadius">
      <summary>Gets or sets the radii of the ellipse that contains the gradient.</summary>
      <returns>The radii of the ellipse that contains the gradient. The default is a Vector2 with values (0.5, 0.5).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.GradientOriginOffset">
      <summary>Gets or sets the two-dimensional coordinates of the origin of the gradient.</summary>
      <returns>The two-dimensional coordinates of the origin of the gradient. The default is a Vector2 with values (0, 0).</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size with rounded corners.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.CornerRadius">
      <summary>Gets or sets the degree to which the corners are rounded.</summary>
      <returns>The degree to which the corners are rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionScopedBatch">
      <summary>An explicitly created group of active animations or effects.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionScopedBatch.Completed">
      <summary>Event triggered once all animations and effects in the CompositionScopedBatch have completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.End">
      <summary>Closes the CompositionScopedBatch. Once the CompositionScopedBatch has been closed it cannot be suspended or resumed again.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Resume">
      <summary>Resumes aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Suspend">
      <summary>Suspends aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsActive">
      <summary>Indicates whether the CompositionScopedBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsEnded">
      <summary>Indicates whether the CompositionScopedBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShadow">
      <summary>Base class for shadows that can be applied to a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShape">
      <summary>Represents the base shape class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.CenterPoint">
      <summary>The point about which the shape is rotated and scaled.</summary>
      <returns>The point about which the shape is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Offset">
      <summary>Gets or sets the offset of the shape relative to its ShapeVisual.</summary>
      <returns>The offset of the shape relative to its ShapeVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngle">
      <summary>Gets or sets the rotation angle of the shape in radians.</summary>
      <returns>The rotation angle of the shape in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the shape in degrees.</summary>
      <returns>The rotation angle of the shape in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Scale">
      <summary>Gets or sets the scale to apply to the shape.</summary>
      <returns>The scale to apply to the shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.TransformMatrix">
      <summary>Gets or sets the transform matrix to apply to the shape.</summary>
      <returns>The transform matrix to apply to the shape.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShapeCollection">
      <summary>Represents a collection of CompositionShape objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Append(Microsoft.UI.Composition.CompositionShape)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionShape value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionShape[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.IndexOf(Microsoft.UI.Composition.CompositionShape,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>true if an item with the specified value was found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.ReplaceAll(Microsoft.UI.Composition.CompositionShape[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Sets the value at the specified index to the CompositionShape value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShapeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSpriteShape">
      <summary>A CompositionShape that draws Stroked and Filled CompositionGeometry.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.FillBrush">
      <summary>Gets or sets the brush that paints the interior area of the shape.</summary>
      <returns>A brush that paints/fills the shape interior.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.Geometry">
      <summary>Gets or sets the geometry that defines this shape.</summary>
      <returns>The geometry that defines this shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.IsStrokeNonScaling">
      <summary>Gets or sets a value that specifies whether the shape's outline scales.</summary>
      <returns>true if the shape's outline does not scale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeBrush">
      <summary>Gets or sets the brush that paints the outline of the shape.</summary>
      <returns>A brush that paints the shape outline.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashArray">
      <summary>Gets the collection of values that indicates the pattern of dashes and gaps used to outline shapes.</summary>
      <returns>The collection of values that indicates the pattern of dashes and gaps used to outline shapes.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the ends of a dash are drawn.</summary>
      <returns>An enumeration value that specifies how the ends of a dash are drawn. The default is Flat.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashOffset">
      <summary>Gets or sets a value that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A value that represents the distance within the dash pattern where a dash begins. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeEndCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the end of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the end of a line is drawn. The default is Flat.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeLineJoin">
      <summary>Gets or sets a CompositionStrokeLineJoin enumeration value that specifies the type of join used at the vertices of a shape.</summary>
      <returns>An enumeration value that specifies  the type of join used at the vertices of a shape. The default is Miter.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a shape element.</summary>
      <returns>The limit on the ratio of the miter length to the StrokeThickness of a shape element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeStartCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the start of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the start of a line is drawn. The default is Flat.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeThickness">
      <summary>Gets or sets the width of the shape outline.</summary>
      <returns>The width of the shape outline, in pixels. The default value is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStretch">
      <summary>Specifies how content is scaled when mapped from its source to a destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Fill">
      <summary>Scale content such that its size is equal to the size of the destination. The aspect ratio of the content is not preserved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.None">
      <summary>No Scaling. If the size of the content is greater than size of destination, the content is clipped to the bounds of the destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Uniform">
      <summary>Scale content such that its aspect ratio is preserved and it fits entirely within the bounds of the destination space. If the content’s aspect ratio does not match that of the destination, the content will not cover some of the area bound by the destination space. This is the default value for CompositionSurfaceBrush.Stretch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.UniformToFill">
      <summary>Scale content such that its aspect ratio is preserved and it fills the entirety of the destination’s bounds. If the content’s aspect ratio does not match that of the destination, the content will be clipped to the bounds of the destination.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeCap">
      <summary>Defines constants that specify the shape at the end of a line or segment.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Flat">
      <summary>A cap that does not extend past the last point of the line.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Square">
      <summary>Half of a square that has a length equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Triangle">
      <summary>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeDashArray">
      <summary>Represents a collection of values that indicates the pattern of dashes and gaps that is used to outline shapes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Append(System.Single)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetAt(System.UInt32)">
      <summary>Returns the value located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetMany(System.UInt32,System.Single[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.IndexOf(System.Single,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>true if an item with the specified value was found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.InsertAt(System.UInt32,System.Single)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.ReplaceAll(System.Single[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.SetAt(System.UInt32,System.Single)">
      <summary>Sets the value at the specified index to the value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionStrokeDashArray.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeLineJoin">
      <summary>Defines constants that specify the shape used to join two lines or segments.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Bevel">
      <summary>Line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Miter">
      <summary>Line joins use regular angular vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.MiterOrBevel">
      <summary>Line joins use regular angular vertices unless the join would extend beyond the miter limit; otherwise, line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Round">
      <summary>Line joins use rounded vertices.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSurfaceBrush">
      <summary>Paints a SpriteVisual with pixels from an ICompositionSurface.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.AnchorPoint">
      <summary>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</summary>
      <returns>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.BitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</summary>
      <returns>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.CenterPoint">
      <summary>The point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.HorizontalAlignmentRatio">
      <summary>Controls the positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual.</summary>
      <returns>The default value is 0.5f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Offset">
      <summary>The offset of the brush relative to its SpriteVisual.</summary>
      <returns>The offset of the brush relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngle">
      <summary>The rotation angle, in radians, of the brush.</summary>
      <returns>The rotation angle, in radians, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngleInDegrees">
      <summary>The rotation angle, in degrees, of the brush.</summary>
      <returns>The rotation angle, in degrees, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Scale">
      <summary>The scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.SnapToPixels">
      <summary>Gets or sets a value that indicates whether the surface brush aligns with pixels.</summary>
      <returns>true if the surface brush aligns with pixels; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Stretch">
      <summary>Controls the scaling that is applied to the contents the ICompositionSurface with respect to the size of the SpriteVisual that is being painted.</summary>
      <returns>Controls how the brush's content is scaled with respect to the size of the SpriteVisual it is painted onto.

If a CompositionSurfaceBrush is input as the Source to a CompositionNineGridBrush, the CompositionSurfaceBrush.Stretch property specifies how the center of the Nine-Grid is stretched with respect to the size of the SpriteVisual associated with the CompositionNineGridBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Surface">
      <summary>The ICompositionSurface associated with the CompositionSurfaceBrush.</summary>
      <returns>The composition surface associated with the CompositionSurfaceBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.TransformMatrix">
      <summary>The transformation matrix to apply to the brush.</summary>
      <returns>The transformation matrix to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.VerticalAlignmentRatio">
      <summary>Controls the positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge of the SpriteVisual. The default value is 0.5f.</summary>
      <returns>The positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionTransform">
      <summary>Provides generalized transformation support for composition objects.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionViewBox">
      <summary>Represents a container that maps shape visual tree coordinates onto the visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.HorizontalAlignmentRatio">
      <summary>Gets or sets the horizontal alignment ratio of the view box.</summary>
      <returns>The horizontal alignment ratio of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Offset">
      <summary>Gets or sets the offset of the view box.</summary>
      <returns>The offset of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Size">
      <summary>Gets or sets the height and width of the view box.</summary>
      <returns>The height and width of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Stretch">
      <summary>Gets or sets a value that specifies how content fits into the available space.</summary>
      <returns>An enumeration value that specifies how content fits into the available space. The default is Uniform.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.VerticalAlignmentRatio">
      <summary>Gets or sets the vertical alignment ratio of the view box.</summary>
      <returns>The vertical alignment ratio of the view box.

The default value is set to 0.5.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVirtualDrawingSurface">
      <summary>Represents sparsely allocated bitmaps that can be associated with visuals for composition in a visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionVirtualDrawingSurface.Trim(Windows.Graphics.RectInt32[])">
      <summary>Clears portions of a virtual drawing surface that were previously defined. Areas that are cleared will be treated as empty once again, and video memory that was previously backing them will be reclaimed.</summary>
      <param name="rects">The region of the drawing surface to trim.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVisualSurface">
      <summary>Represents a visual tree as an ICompositionSurface that can be used to paint a Visual using a CompositionBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceOffset">
      <summary>Gets or sets the coordinates of the top-left corner of the part of the visual surface used for rendering.</summary>
      <returns>The coordinates of the top-left corner of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceSize">
      <summary>Gets or sets the the height and width of the part of the visual surface used for rendering.</summary>
      <returns>The height and width of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceVisual">
      <summary>Gets or sets the root of the visual tree that is the target of the visual surface.</summary>
      <returns>The root of the visual tree that is the target of the visual surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Compositor">
      <summary>Manages the session between an application and the system compositor process.

The Compositor class creates an instance of the Compositor for the application that can be used as a factory for a variety of types in the Windows.UI.Composition namespace spanning the visual layer, effects system and animation system. The Compositor class also manages the lifetime of objects created from the factory.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.#ctor">
      <summary>Creates an instance of Compositor.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.Close">
      <summary>Closes the Compositor object and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAmbientLight">
      <summary>Creates an instance of AmbientLight.</summary>
      <returns>Returns the created AmbientLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAnimationGroup">
      <summary>Creates an instance of CompositionAnimationGroup.</summary>
      <returns>Returns the created CompositionAnimationGroup object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAnimationPropertyInfo">
      <summary>Creates an instance of AnimationPropertyInfo.</summary>
      <returns>The created AnimationPropertyInfo object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBackdropBrush">
      <summary>Creates an instance of CompositionBackdropBrush.</summary>
      <returns>Returns the created CompositionBackdropBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBooleanKeyFrameAnimation">
      <summary>Creates an instance of BooleanKeyFrameAnimation.</summary>
      <returns>Returns the created BooleanKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceScalarAnimation">
      <summary>Creates an instance of BounceScalarNaturalMotionAnimation.</summary>
      <returns>The created BounceScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector2Animation">
      <summary>Creates an instance of BounceVector2NaturalMotionAnimation.</summary>
      <returns>The created BounceVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector3Animation">
      <summary>Creates an instance of BounceVector3NaturalMotionAnimation.</summary>
      <returns>The created BounceVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush">
      <summary>Creates an instance of CompositionColorBrush.</summary>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush(Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorBrush using the specified color.</summary>
      <param name="color">The color for the brush to use.</param>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop">
      <summary>Creates an instance of CompositionColorGradientStop.</summary>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop(System.Single,Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorGradientStop with the specified offset and color.</summary>
      <param name="offset">The location of the gradient stop within the gradient vector.</param>
      <param name="color">The color of the gradient stop.</param>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorKeyFrameAnimation">
      <summary>Creates an instance of ColorKeyFrameAnimation.</summary>
      <returns>Returns the created ColorKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerShape">
      <summary>Creates an instance of CompositionContainerShape.</summary>
      <returns>Returns the created CompositionContainerShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerVisual">
      <summary>Creates an instance of ContainerVisual.</summary>
      <returns>Returns the created ContainerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateCubicBezierEasingFunction(Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2)">
      <summary>Creates an instance of CubicBezierEasingFunction.</summary>
      <param name="controlPoint1">The first control point for the easing function.</param>
      <param name="controlPoint2">The second control point for the easing function.</param>
      <returns>The created CubicBezierEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDistantLight">
      <summary>Creates an instance of DistantLight.</summary>
      <returns>Returns the created DistantLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDropShadow">
      <summary>Creates an instance of DropShadow.</summary>
      <returns>Returns the created DropShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect)">
      <summary>Creates an instance of CompositionEffectFactory.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect,Windows.Foundation.Collections.IIterable{System.String})">
      <summary>Creates an instance of CompositionEffectFactory specifying effect parameters that should be animatable.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <param name="animatableProperties">The list of properties that should be animatable. Properties are specified using strings of the form 'EffectName.PropertyName', where 'EffectName' identifies a graphics effect object by its IGraphicsEffect.Name property and 'PropertyName' identifies a property of that object.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEllipseGeometry">
      <summary>Creates an instance of CompositionEllipseGeometry.</summary>
      <returns>Returns the created CompositionEllipseGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation(System.String)">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <param name="expression">The expression describing how the ExpressionAnimation should calculate its current value.</param>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip">
      <summary>Creates an instance of CompositionGeometricClip.</summary>
      <returns># Microsoft.UI.Composition.Compositor.CreateGeometricClip</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionGeometricClip using the specified geometry.</summary>
      <param name="geometry">The geometry that defines the shape of the clip.</param>
      <returns>The created CompositionGeometricClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateImplicitAnimationCollection">
      <summary>Creates an instance of ImplicitAnimationCollection.</summary>
      <returns>Returns the created ImplicitAnimationCollection object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip">
      <summary>Creates an instance of InsetClip.</summary>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates an instance of InsetClip.</summary>
      <param name="leftInset">Inset from the left of the visual.</param>
      <param name="topInset">Inset from the top of the visual.</param>
      <param name="rightInset">Inset from the right of the visual.</param>
      <param name="bottomInset">Inset from the bottom of the visual.</param>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLayerVisual">
      <summary>Creates an instance of LayerVisual.</summary>
      <returns>Returns the created LayerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearEasingFunction">
      <summary>Creates an instance of LinearEasingFunction.</summary>
      <returns>Returns the created LinearEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearGradientBrush">
      <summary>Creates an instance of CompositionLinearGradientBrush.</summary>
      <returns>The created CompositionLinearGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLineGeometry">
      <summary>Creates an instance of CompositionLineGeometry.</summary>
      <returns>Returns the created CompositionLineGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateMaskBrush">
      <summary>Creates an instance of CompositionMaskBrush.</summary>
      <returns>Returns the created CompositionMaskBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateNineGridBrush">
      <summary>Creates an instance of CompositionNineGridBrush.</summary>
      <returns>Returns the created CompositionNineGridBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry">
      <summary>Creates an instance of CompositionPathGeometry.</summary>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry(Microsoft.UI.Composition.CompositionPath)">
      <summary>Creates an instance of CompositionPathGeometry using the specified path.</summary>
      <param name="path">The path data.</param>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathKeyFrameAnimation">
      <summary>Creates an instance of PathKeyFrameAnimation.</summary>
      <returns>Returns the created PathKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePointLight">
      <summary>Creates an instance of PointLight.</summary>
      <returns>Returns the created PointLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadow">
      <summary>Creates an instance of CompositionProjectedShadow.</summary>
      <returns>Returns the created CompositionProjectedShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowCaster">
      <summary>Creates an instance of CompositionProjectedShadowCaster.</summary>
      <returns>Returns the created CompositionProjectedShadowCaster object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowReceiver">
      <summary>Creates an instance of CompositionProjectedShadowReceiver.</summary>
      <returns>Returns the created CompositionProjectedShadowReceiver object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePropertySet">
      <summary>Creates an instance of CompositionPropertySet.</summary>
      <returns>Returns the created CompositionPropertySet object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateQuaternionKeyFrameAnimation">
      <summary>Creates an instance of QuaternionKeyFrameAnimation.</summary>
      <returns>Returns the created QuaternionKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRadialGradientBrush">
      <summary>Creates an instance of CompositionRadialGradientBrush.</summary>
      <returns>Returns the created CompositionRadialGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleClip">
      <summary>Creates an instance of RectangleClip with default values.</summary>
      <returns>The created instance of RectangleClip.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleClip(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates an instance of RectangleClip with the specified edge values.</summary>
      <param name="top">The offset of the top edge from the top of the visual, in pixels.</param>
      <param name="right">The offset of the right edge from the right of the visual, in pixels.</param>
      <param name="bottom">The offset of the left bottom from the bottom of the visual, in pixels.</param>
      <returns>The created instance of RectangleClip.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleClip(System.Single,System.Single,System.Single,System.Single,Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2)">
      <summary>Creates an instance of RectangleClip with the specified edge and corner radius values.</summary>
      <param name="left">The offset of the left edge from the left of the visual, in pixels.</param>
      <param name="top">The offset of the top edge from the top of the visual, in pixels.</param>
      <param name="right">The offset of the right edge from the right of the visual, in pixels.</param>
      <param name="bottom">The offset of the left bottom from the bottom of the visual, in pixels.</param>
      <param name="topLeftRadius">The amount by which the top left corner of the rectangle is rounded, in pixels.</param>
      <param name="topRightRadius">The amount by which the top right corner of the rectangle is rounded, in pixels.</param>
      <param name="bottomRightRadius">The amount by which the bottom right corner of the rectangle is rounded, in pixels.</param>
      <param name="bottomLeftRadius">The amount by which the bottom left corner of the rectangle is rounded, in pixels.</param>
      <returns>The created instance of RectangleClip.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleGeometry">
      <summary>Creates an instance of CompositionRectangleGeometry.</summary>
      <returns>Returns the created CompositionRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual">
      <summary>Creates an instance of RedirectVisual.</summary>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of RedirectVisual using the specified source.</summary>
      <param name="source"></param>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRoundedRectangleGeometry">
      <summary>Creates an instance of CompositionRoundedRectangleGeometry.</summary>
      <returns>Returns the created CompositionRoundedRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScalarKeyFrameAnimation">
      <summary>Creates an instance of ScalarKeyFrameAnimation.</summary>
      <returns>Returns the created ScalarKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScopedBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Creates an instance of CompositionScopedBatch.</summary>
      <param name="batchType">The type of composition batch to create.</param>
      <returns>Returns the created CompositionScopedBatch object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateShapeVisual">
      <summary>Creates an instance of ShapeVisual.</summary>
      <returns>Returns the created ShapeVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpotLight">
      <summary>Creates an instance of SpotLight.</summary>
      <returns>Returns the created SpotLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringScalarAnimation">
      <summary>Creates an instance of SpringScalarNaturalMotionAnimation.</summary>
      <returns>The created SpringScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector2Animation">
      <summary>Creates an instance of SpringVector2NaturalMotionAnimation.</summary>
      <returns>The created SpringVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector3Animation">
      <summary>Creates an instance of SpringVector3NaturalMotionAnimation.</summary>
      <returns>The created SpringVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape">
      <summary>Creates an instance of CompositionSpriteShape.</summary>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionSpriteShape using the specified geometry.</summary>
      <param name="geometry">The geometry of the shape to create.</param>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteVisual">
      <summary>Creates an instance of SpriteVisual.</summary>
      <returns>Returns the created SpriteVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction">
      <summary>Creates an instance of StepEasingFunction.</summary>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction(System.Int32)">
      <summary>Creates an instance of StepEasingFunction with the specified step count.</summary>
      <param name="stepCount">The step count for the StepEasingFunction.</param>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush">
      <summary>Creates an instance of CompositionSurfaceBrush.</summary>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush(Microsoft.UI.Composition.ICompositionSurface)">
      <summary>Creates an instance of CompositionSurfaceBrush using the specified composition surface.</summary>
      <param name="surface">The composition surface to associate with the CompositionSurfaceBrush.</param>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector2KeyFrameAnimation">
      <summary>Creates an instance of Vector2KeyFrameAnimation.</summary>
      <returns>Returns the created Vector2KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector3KeyFrameAnimation">
      <summary>Creates an instance of Vector3KeyFrameAnimation.</summary>
      <returns>Returns the created Vector3KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector4KeyFrameAnimation">
      <summary>Creates an instance of Vector4KeyFrameAnimation.</summary>
      <returns>Returns the created Vector4KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateViewBox">
      <summary>Creates an instance of CompositionViewBox.</summary>
      <returns>Returns the created CompositionViewBox object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVisualSurface">
      <summary>Creates an instance of CompositionVisualSurface.</summary>
      <returns>Returns the created CompositionVisualSurface object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.GetCommitBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Retrieves a commit batch for the current commit cycle.</summary>
      <param name="batchType">The batch type.</param>
      <returns>Returns a CompositionCommitBatch representing the retrieved commit batch.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.RequestCommitAsync">
      <summary>Attempts to initiate a commit cycle ansynchronously.</summary>
      <returns>An ansynchronous action.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.Comment">
      <summary>Gets or sets a string to associate with the Compositor.</summary>
      <returns>A string to associate with the Compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.DispatcherQueue">
      <summary>Gets the dispatcher queue for this compositor.</summary>
      <returns>The dispatcher queue for this compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.GlobalPlaybackRate">
      <summary>Gets or sets the rate at which animation plays for all KeyFrame animations created by this compositor.</summary>
      <returns>The rate at which animation plays for all animations created by this compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MaxGlobalPlaybackRate">
      <summary>Gets the maximum allowed playback rate for all KeyFrame animations created by this compositor..</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MinGlobalPlaybackRate">
      <summary>Gets the minimum allowed playback rate for all KeyFrame animations created by this compositor.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ContainerVisual">
      <summary>A node in the visual tree that can have children.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ContainerVisual.Children">
      <summary>The children of the ContainerVisual.</summary>
      <returns>The children of the ContainerVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Core.CompositorController">
      <summary>Represents a compositor on which intended composition changes must be explicitly committed.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.Core.CompositorController.CommitNeeded">
      <summary>Occurs when the framework needs to call Commit in order for changes to Composition objects to be reflected onscreen.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.#ctor">
      <summary>Initializes a new instance of the CompositorController class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Close">
      <summary>Releases system resources that are used by the CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Commit">
      <summary>Calls commit on the compositor associated with this CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.EnsurePreviousCommitCompletedAsync">
      <summary>Ensures the previous commit was completed.</summary>
      <returns>An asynchronous action.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Core.CompositorController.Compositor">
      <summary>Gets the compositor associated with this composition controller.</summary>
      <returns>The compositor associated with this composition controller.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CubicBezierEasingFunction">
      <summary>Represents a cubic-bezier function for interpolating between animation key frames.

The cubic-bezier function is one of the more common easing functions used with KeyFrameAnimation s and are used frequently to describe smooth curves that can be scaled. Cubic-bezier functions are defined by two “control points” of type Vector2 that define the shape of the curve. When used, the animating property will change in between two keyframes based on the defined curve.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint1">
      <summary>The first control point for the cubic-bezier interpolation function.</summary>
      <returns>The first control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint2">
      <summary>The second control point for the cubic-bezier interpolation function.</summary>
      <returns>The second control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps">
      <summary>Represents heatmaps that show overdrawn areas of a composition UI.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.Hide(Microsoft.UI.Composition.Visual)">
      <summary>Hides the heatmap for the specified subtree.</summary>
      <param name="subtree">The part of the visual tree for which to hide the heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowMemoryUsage(Microsoft.UI.Composition.Visual)">
      <summary>Shows a graphical representation of the GPU memory used by the app.</summary>
      <param name="subtree">The part of the visual tree for which to show texture memory usage.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowOverdraw(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds)">
      <summary>Highlights pixels affected by multiple visuals at the same time.</summary>
      <param name="subtree">The part of the visual tree for which to show overdraw regions.</param>
      <param name="contentKinds">An enumeration value that specifies what type of content is shown on the overdraw heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowRedraw(Microsoft.UI.Composition.Visual)">
      <summary>Highlights areas of the app UI that are producing updates.</summary>
      <param name="subtree">The part of the visual tree for which to show redraw.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds">
      <summary>Defines constants that specify what kinds of content are shown on an overdraw heatmap.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.All">
      <summary>All content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Colors">
      <summary>Colors are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Effects">
      <summary>Effects are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Lights">
      <summary>Lights are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.None">
      <summary>No content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.OffscreenRendered">
      <summary>Elements rendered offscreen are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Shadows">
      <summary>Shadows are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Surfaces">
      <summary>Surfaces are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.SwapChains">
      <summary>SwapChains are shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings">
      <summary>Hosts diagnostic and debugging features such as heatmaps.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.TryGetSettings(Microsoft.UI.Composition.Compositor)">
      <summary>Attempts to get an instance of CompositionDebugSettings for the specified compositor.</summary>
      <param name="compositor">The compositor to get debug settings for.</param>
      <returns>An instance of composition debug settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.HeatMaps">
      <summary>Gets the heatmaps for this debug settings instance.</summary>
      <returns>The heatmaps for this debug settings instance.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DistantLight">
      <summary>An infinitely large distant light source that emits light in a single direction. For example, a distant light could be used to represent sunlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Color">
      <summary>Color of the emitted DistantLight.</summary>
      <returns>Color of the emitted DistantLight.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.CoordinateSpace">
      <summary>The Visual used to determine the light’s direction. The light's 
    Direction
   property is relative to this Visual’s coordinate space.


    CoordinateSpace
   is a required property. If 
    CoordinateSpace
   is not set, the DistantLight will not render.</summary>
      <returns>The Visual used to determine the light’s direction. The light's 
    Direction
   property is relative to this Visual’s coordinate space.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DropShadow">
      <summary>A drop shadow cast by a SpriteVisual or LayerVisual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.BlurRadius">
      <summary>The radius of the Gaussian blur used to generate the shadow. Animatable.</summary>
      <returns>The radius of the Gaussian blur used to generate the shadow. Defaults to 9.0f. Specifying a value of 0 will result in no blur occurring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Color">
      <summary>The color of the shadow. Animatable.</summary>
      <returns>The color of the shadow. Default color is Colors.Black.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Mask">
      <summary>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush. Animatable.</summary>
      <returns>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Offset">
      <summary>Offset of the shadow relative to its SpriteVisual. Animatable.</summary>
      <returns>Offset of the shadow relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Opacity">
      <summary>The opacity of the shadow. Animatable.</summary>
      <returns>The opacity of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.SourcePolicy">
      <summary>Used to define the shadow masking policy to be used for the shadow.</summary>
      <returns>The masking policy to apply to the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffect">
      <summary>Controls the reflective properties of a SpriteVisual. A SceneLightingEffect will overwrite CompositionLight defaults. It is used to control the reflective properties of a SpriteVisual. A NormalMap can be used as an input source but is not required.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Effects.SceneLightingEffect.#ctor">
      <summary>Creates an instance of SceneLightingEffect.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.AmbientAmount">
      <summary>The proportion of predefined AmbientLight used by the effect.</summary>
      <returns>The proportion of predefined AmbientLight used by the effect. Values must be set between 0.0 and 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.DiffuseAmount">
      <summary>Intensity of the diffuse light.</summary>
      <returns>Intensity of the diffuse light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.Name">
      <summary>Name of the light.</summary>
      <returns>Name of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.NormalMapSource">
      <summary>The normal map for the effect.</summary>
      <returns>The normal map for the effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.ReflectanceModel">
      <summary>Gets or sets a value that indicates how the reflectance of a SceneLightingEffect is modeled.</summary>
      <returns>A value that indicates how the reflectance of a SceneLightingEffect is modeled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularAmount">
      <summary>Intensity of the specular light.</summary>
      <returns>Intensity of the specular light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularShine">
      <summary>Specular power for the Blinn-Phong lighting model.</summary>
      <returns>Specular power for the Blinn-Phong lighting model. Value must be set between 1.0 and 128. The default value is 16.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel">
      <summary>Defines constants that specify how the reflectance of a SceneLightingEffect is modeled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.BlinnPhong">
      <summary>The BlinnPhong model is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.PhysicallyBasedBlinnPhong">
      <summary>The PhysicallyBasedBlinnPhong model is used.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ElasticEasingFunction">
      <summary>Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ElasticEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ElasticEasingFunction.Oscillations">
      <summary>Gets or sets the number of times the target slides back and forth over the animation destination.</summary>
      <returns>The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ElasticEasingFunction.Springiness">
      <summary>Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</summary>
      <returns>A positive number that specifies the stiffness of the spring. The default is 3.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ExponentialEasingFunction">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ExponentialEasingFunction.Exponent">
      <summary>Gets or sets the exponent used to determine the interpolation of the animation.</summary>
      <returns>The exponent used to determine the interpolation of the animation. The default is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ExponentialEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ExpressionAnimation">
      <summary>A Composition Animation that uses a mathematical equation to calculate the value for an animating property every frame.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ExpressionAnimation.Expression">
      <summary>The mathematical equation specifying how the animated value is calculated each frame. The Expression is the core of an ExpressionAnimation and represents the equation the system will use to calculate the value of the animation property each frame. The equation is set on this property in the form of a string. Although expressions can be defined by simple mathematical equations such as “2+2”, the real power lies in creating mathematical relationships where the input values can change frame over frame.</summary>
      <returns>The mathematical equation specifying how the animated value is calculated each frame.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.IAnimationObject">
      <summary>Represents an object that has properties that can be referenced by an animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.IAnimationObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionAnimationBase">
      <summary>Base class for composition animations.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionSurface">
      <summary>Represents the content of a surface that can be used to paint the bounds of a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionSurfaceFacade">
      <summary>Represents a placeholder for a composition surface that can be used like a real composition surface.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ICompositionSurfaceFacade.GetRealSurface">
      <summary>Retrieves the ICompositionSurface object represented by this façade.</summary>
      <returns>The ICompositionSurface object represented by this façade.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ImplicitAnimationCollection">
      <summary>A collection of animations triggered when a condition is met.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Clear">
      <summary>Removes all animations from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.First">
      <summary>Retrieves the first animation in the collection.</summary>
      <returns>Retrieves the first animation in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.GetView">
      <summary>Returns a map view of the collection.</summary>
      <returns>Returns a map view of the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.HasKey(System.String)">
      <summary>Returns a boolean indicating whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>Returns true if the key is in the collection; otherwise returns false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Insert(System.String,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Inserts an animation into the collection.</summary>
      <param name="key">The property the animation affects.</param>
      <param name="value">The animation to insert.</param>
      <returns>Boolean value indicating whether the animation was successfully inserted.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Lookup(System.String)">
      <summary>Retrieves the animation associated with the specified property.</summary>
      <param name="key">The property to lookup.</param>
      <returns>The value, if an item with the specified key exists. Use the HasKey method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Remove(System.String)">
      <summary>Removes the specified animation from the collection.</summary>
      <param name="key">The property the animation is assigned to.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.ImplicitAnimationCollection.Size">
      <summary>The size of the collection.</summary>
      <returns>The size of the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.InitialValueExpressionCollection">
      <summary>A collection of values that specify where an animation will start.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.First">
      <summary>Retrieves the first item in the collection.</summary>
      <returns>The first item in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.HasKey(System.String)">
      <summary>Returns a value that indicates whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>true if the key is in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Insert(System.String,System.String)">
      <summary>Inserts an item into the collection.</summary>
      <param name="key">The key to identify the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>true if animation was successfully inserted; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Lookup(System.String)">
      <summary>Retrieves the item associated with the specified key.</summary>
      <param name="key">The key that identifies the item to retrieve.</param>
      <returns>The value, if an item with the specified key exists. Use the HasKey method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Remove(System.String)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="key">The key that identifies the item to remove.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.InitialValueExpressionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.InsetClip">
      <summary>Represents a rectangle that clips a portion of a visual. The portion of the visual inside the rectangle is visible; the portion of the visual outside the rectangle is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.BottomInset">
      <summary>Gets or sets the offset from the bottom of the visual. The portion of the visual below the BottomInset will be clipped. Animatable.</summary>
      <returns>The offset from the bottom of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.LeftInset">
      <summary>Gets or sets the offset from the left of the visual. The portion of the visual to the left of the LeftInset will be clipped. Animatable.</summary>
      <returns>The offset from the left of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.RightInset">
      <summary>Gets or sets the offset from the right of the visual. The portion of the visual to the right of the RightInset will be clipped. Animatable.</summary>
      <returns>The offset from the right of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.TopInset">
      <summary>Gets or sets the offset from the top of the visual. The portion of the visual above the TopInset will be clipped. Animatable.</summary>
      <returns>The offset from the top of the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionConditionalValue">
      <summary>Allows conditional modification of the position and scale of a visual interaction source.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of CompositionConditionalValue.</summary>
      <param name="compositor"></param>
      <returns>Returns the created CompositionConditionalValue.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Condition">
      <summary>The condition expression that determines when to apply modifiers to the visual interaction source.</summary>
      <returns>The condition expression that determines when to apply modifiers to the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Value">
      <summary>The modified input expression to be applied when the condition is true.</summary>
      <returns>The modified input expression to be applied when the condition is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection">
      <summary>A collection of interaction sources.

This is the collection of interaction sources that are associated with a given InteractionTracker. The only valid member of this collection is a VisualInteractionSource. Each VisualInteractionSource needs to have a unique hit-test (source) visual. Each VisualInteractionSource will be configured individually for the desired input to be sent to the InteractionTracker.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Add(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Adds an interaction source to the collection.</summary>
      <param name="value">The interaction source to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.First">
      <summary>Returns an iterator pointing to the first object in the collection.</summary>
      <returns>Returns an iterator pointing to the first object in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Remove(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Removes the specified interaction source from the collection.</summary>
      <param name="value">The interaction source to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.RemoveAll">
      <summary>Removes all interaction sources from the collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Count">
      <summary>The number of interaction sources in the collection.</summary>
      <returns>The number of interaction sources in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.ICompositionInteractionSource">
      <summary>An object that is being tracked for interactions in the compositor.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner">
      <summary>Contains callbacks that will be triggered by InteractionTracker events.

Implementing this interface enables receiving callbacks regarding the state and values of the InteractionTracker, as well as whether requested updates to the InteractionTracker ’s properties are honored.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.CustomAnimationStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the custom animation state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.IdleStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the idle state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InertiaStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the inertia state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InteractingStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs)">
      <summary>Callback that is triggered when an InteractionTracker enters the interaction state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.RequestIgnored(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs)">
      <summary>Callback that is triggered when the InteractionTracker has ignored a request.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.ValuesChanged(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs)">
      <summary>Callback that is triggered when the InteractionTracker 's output values have changed.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The new values for the InteractionTracker.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes">
      <summary>Defines constants that specify which axis is bound between two interaction trackers.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.None">
      <summary>The binding does not affect any axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionX">
      <summary>The binding affects the X axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionY">
      <summary>The binding affects the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.Scale">
      <summary>The binding affects scale.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionChainingMode">
      <summary>Defines the chaining behavior for a VisualInteractionSource. There are three options: Always chain, never chain or auto chain (let the system choose). If chaining is enabled, when an InteractionTracker reaches its minimum or maximum bounds, it will instead send the input to the next ancestor VisualInteractionSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Always">
      <summary>Always continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Auto">
      <summary>Automatically determine whether to continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Never">
      <summary>Never continue the manipulation.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration">
      <summary>Represents the configuration of a VisualInteractionSource input.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionXSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the X axis.</summary>
      <returns>The source mode for the X axis. By default, it takes the value of VisualInteractionTracker.PositionXSourceMode".</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionYSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the Y axis.</summary>
      <returns>The source mode for the Y axis. By default, it takes the value of VisualInteractionTracker.PositionYSourceMode".</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.ScaleSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the scale axis.</summary>
      <returns>The source mode for the scale axis. By default, it takes the value of VisualInteractionTracker.ScaleSourceMode".</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceMode">
      <summary>Provides the various definitions for how a VisualInteractionSource will process interactions. Options available for the enumeration are 
    Disabled
  , 
    EnabledWithInertia
   and 
    EnabledWithoutInertia
  . The InteractionSourceMode can be used to define the behavior for the X, Y and Scale Axis of a VisualInteractionSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.Disabled">
      <summary>Interaction is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithInertia">
      <summary>Interaction is enabled with inertia.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithoutInertia">
      <summary>Interaction is enabled without inertia.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode">
      <summary>Defines constants that specify whether an input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Disabled">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Enabled">
      <summary>Input is redirected to the InteractionTracker.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTracker">
      <summary>Handles the logic of input that can be used as targets in ExpressionAnimations—typically to drive the motion of visuals based on input.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionXIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position x coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position x coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position x coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionYIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position y coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position y coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position y coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the x inertia of an InteractionTracker.

The ConfigurePositionXInertiaModifiers method applies an individual or a collection of InteractionTrackerInertiaModifier s to the x component of InteractionTracker. The system will evaluate each of X modifier's condition property in the order they were added to InteractionTracker. Thus, the order that the InteractionTrackerInertiaModifier have in the collection will be the same order that the system will evaluate with.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the x inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the y inertia of an InteractionTracker.

The ConfigurePositionYInertiaModifiers method applies an individual or a collection of InteractionTrackerInertiaModifier s to the y component of InteractionTracker. The system will evaluate each of Y modifier’s condition property in the order they were added to InteractionTracker. Thus, the order that the InteractionTrackerInertiaModifier have in the collection will be the same order that the system will evaluate with.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the y inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureScaleInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the scale of an InteractionTracker.

The ConfigureScaleInertiaModifiers method applies an individual or a collection of InteractionTrackerInertiaModifier s to the scale component of InteractionTracker. The system will evaluate each of Scale modifier’s condition property in the order they were added to InteractionTracker. Thus, the order that the InteractionTrackerInertiaModifier have in the collection will be the same order that the system will evaluate with.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the scale of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureVector2PositionInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the position of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the position of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTracker.

This Create method will instantiate an InteractionTracker. After creating the InteractionTracker setting the properties, attaching a VisualInteractionSource, and referencing position or scale in an ExpressionAnimation, active input can drive the ExpressionAnimation.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.CreateWithOwner(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner)">
      <summary>Creates an instance of InteractionTracker with the specified owner.

This Create method will instantiate an InteractionTracker with an owner for registering for callbacks. After creating the InteractionTracker setting the properties, attaching a VisualInteractionSource, and referencing position or scale in an ExpressionAnimation, active input can drive the ExpressionAnimation. Creating the InteractionTracker with an owner is only required if the application needs to receive callbacks regarding state and values of the InteractionTracker.</summary>
      <param name="compositor">The compositor to use to create the instance of InteractionTracker.</param>
      <param name="owner">The InteractionTracker owner to associate with the created InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.GetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker)">
      <summary>Retrieves the binding axis mode between two interaction trackers.</summary>
      <param name="boundTracker1">The first interaction tracker in the binding.</param>
      <param name="boundTracker2">The second interaction tracker in the binding.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.SetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes)">
      <summary>Sets the binding axis mode between two interaction trackers.</summary>
      <param name="boundTracker1">The first interaction tracker in the binding.</param>
      <param name="boundTracker2">The second interaction tracker in the binding.</param>
      <param name="axisMode">The axis that is being bound.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position.

The TryUpdatePosition method updates the location of InteractionTracker to the Vector3 position specified as a parameter. TryUpdatePosition is used to declaratively define the position of InteractionTracker at any point in time (either at start, from some state-entered event, etc.). TryUpdatePosition can be called from either the Idle, CustomAnimation or Inertia state – doing so will move the position of InteractionTracker to the defined position and enter the idle state.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to update the position of the InteractionTracker using the specified clamping option.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption,Microsoft.UI.Composition.Interactions.InteractionTrackerPositionUpdateOption)">
      <summary>Tries to update the position of the InteractionTracker using the specified clamping option.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <param name="posUpdateOption">A value that specifies whether an already running custom scale animation should be allowed to continue running.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to adjust the InteractionTracker 's position by the specified amount.

The TryUpdatePositionBy method updates the current location of InteractionTracker by the Vector3 delta specified as a parameter. Similarly to TryUpdatePosition, TryUpdatePositionBy is used to declaratively move InteractionTracker by a defined delta without the need of an animation or Inertia. TryUpdatePositionBy can be called from either the Idle, CustomAnimation or Inertia state – doing so will move the position of InteractionTracker by the defined delta and enter the idle state.</summary>
      <param name="amount">The value to add to the current position.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to adjust the position of the InteractionTracker by the specified amount using the specified clamping option.</summary>
      <param name="amount">The value to add to the current position.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAdditionalVelocity(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position by adding velocity.

The TryUpdatePositionWithAdditionalVelocity method adds the input Vector3 representing additional velocity to the current velocity of InteractionTracker. As a result, because the velocity of InteractionTracker has now changed, the targeted rest position for InteractionTracker now changes. TryUpdatePositionWithAdditionalVelocity can be called from either Idle, Inertia or CustomAnimation states – doing so will either add or update the velocity of InteractionTracker and enter the Inertia state.</summary>
      <param name="velocityInPixelsPerSecond">The velocity to add in pixels per second.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAnimation(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Tries to update the InteractionTracker 's position by applying an animation.

The TryUpdatePositionWithAnimation method updates the position of InteractionTracker based on the CompositionAnimation input as a parameter. This method is used in situations in which the motion of InteractionTracker needs to be defined by a specific animation, instead of the traditional Inertia experience. TryUpdatePositionWithAnimation can be called from the Idle or Inertia state – doing so, InteractionTracker ’s position will be driven by the defined animation and enter the CustomAnimation state.</summary>
      <param name="animation">The animation to apply to the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScale(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale to the specified value.

The TryUpdateScale method updates the scale location of InteractionTracker to the Scale position and centerpoint specified as a parameter. TryUpdateScale is used to declaratively define the scale of InteractionTracker at any point in time (either at start, from some state-entered event, etc.). TryUpdateScale can be called from either the Idle, CustomAnimation or Inertia state – doing so will move the scale position of InteractionTracker to the defined position and enter the idle state.</summary>
      <param name="value">The new value for scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAdditionalVelocity(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale by adding the specified velocity.

The TryUpdateScaleWithAdditionalVelocity method adds the inputted scalar representing additional velocity to the current velocity of InteractionTracker as well as shifts the centerpoint to the inputted Vector3. As a result, because the velocity of InteractionTracker has now changed, the targeted rest scale position for InteractionTracker now changes. TryUpdateScaleWithAdditionalVelocity can be called from either Idle, Inertia or CustomAnimation states – doing so will either add or update the velocity of InteractionTracker and enter the Inertia state.</summary>
      <param name="velocityInPercentPerSecond">The velocity to add to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAnimation(Microsoft.UI.Composition.CompositionAnimation,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale with the specified animation.

The TryUpdateScaleWithAnimation method updates the scale position of InteractionTracker based on the CompositionAnimation inputted as a parameter. This method is used in situations in which the motion of InteractionTracker needs to be defined by a specific animation, instead of the traditional Inertia experience. TryUpdateScaleWithAnimation can be called from the Idle or Inertia state – doing so, InteractionTracker ’s position will be driven by the defined animation and enter the CustomAnimation state.</summary>
      <param name="animation">The animation to apply to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.InteractionSources">
      <summary>A collection of objects that generate interactions.</summary>
      <returns>A collection of objects that generate interactions.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>true if the inertia is the result of an impulse; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsPositionRoundingSuggested">
      <summary>Boolean value indicating whether position rounding is currently suggested.</summary>
      <returns>Boolean value indicating whether position rounding is currently suggested.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxPosition">
      <summary>The maximum position allowed for the InteractionTracker.</summary>
      <returns>The maximum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxScale">
      <summary>The maximum scale for the InteractionTracker.</summary>
      <returns>The maximum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinPosition">
      <summary>The minimum position allowed for the InteractionTracker.</summary>
      <returns>The minimum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinScale">
      <summary>The minimum scale for the InteractionTracker.</summary>
      <returns>The minimum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingPosition">
      <summary>Natural resting position for the InteractionTracker.

The NaturalRestingPosition property is the calculated position that InteractionTracker will come to a stop at without accounting for boundaries or inertia modifiers. This property is often useful for actions like virtualization in a scrolling experience, where it is important to know the location of where InteractionTracker will stop. There are two main use cases for using the NaturalRestingPosition property: Retrieving its current value in the InertiaStateEntered event args or referencing this property in an ExpressionAnimation when creating things like inertia modifiers.</summary>
      <returns>Natural resting position for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingScale">
      <summary>Natural resting scale for the InteractionTracker.

The NaturalRestingScale property is the calculated scale position that InteractionTracker will come to a stop at without accounting for boundaries or inertia modifiers. This property is often useful for actions like virtualization in a scrolling experience, where it is important to know the location of where InteractionTracker will stop. There are two main use cases for using the NaturalRestingScale property: Retrieving its current value in the InertiaStateEntered event args or referencing this property in an ExpressionAnimation when creating things like inertia modifiers.</summary>
      <returns>Natural resting scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Owner">
      <summary>The IInteractionTrackerOwner associated with the InteractionTracker.</summary>
      <returns>The IInteractionTrackerOwner associated with the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Position">
      <summary>The output position calculated by the InteractionTracker. The current position is a relative value. During the Idle and CustomAnimation states, it will always be between the values specified in the MinPosition and MaxPosition properties. The InteractionTracker’s position property can go outside this range during the Interacting and Inertia states in order to show a bounce or resistance at the boundary.

The position property of the InteractionTracker is a Vector3 representing position in the X, Y, and Z axis. The X and Y channels are the only components that will be updated by the InteractionTracker at this point. The channels of this Vector3 will not fluctuate outside of 0 (the default value) if the MinPosition and MaxPosition are not set.</summary>
      <returns>The output position calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionInertiaDecayRate">
      <summary>Inertia decay rate for position. Range is from 0 to 1.

The PositionInertiaDecayRate property defines the rate at which InteractionTracker will slow to a stop when it has entered Inertia and position is changing. The closer to 1, the faster InteractionTracker will slow to a stop and vice versa. Defined as a Vector3, each component represents the inertia decay rate for x, y, z accordingly.</summary>
      <returns>Inertia decay rate for position. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionVelocityInPixelsPerSecond">
      <summary>The velocity currently applied to position.

The PositionVelocityInPixelsPerSecond property represents the current position velocity of InteractionTracker while in Inertia. There are two main use cases for this property: Retrieving the position velocity of InteractionTracker right after an interaction has occurred or reference the most current velocity of InteractionTracker in an ExpressionAnimation.</summary>
      <returns>The velocity currently applied to position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Scale">
      <summary>The output scale calculated by the InteractionTracker. The current scale is a relative value that depends on the values specified in the MinScale and MaxScale properties.

The scale property of the InteractionTracker is a float representing the scale in the InteractionTracker ’s coordinate space. This value will start at 1 and will increase or decrease based on active input or direct calls to update or animate the property. The scale property when the InteractionTracker is in the Idle or CustomAnimation states will not change from 1 unless the MinScale and MaxScale properties, which both default to 1, are updated. InteractionTracker ’s scale can go slightly outside this range during the Interacting and Inertia states in order to show a bounce or resistance at the boundary.</summary>
      <returns>The output scale calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleInertiaDecayRate">
      <summary>Inertia decay rate, for scale. Range is from 0 to 1.

The ScaleInertiaDecayRate property defines the rate at which InteractionTracker will slow to a stop when it has entered Inertia and scale is changing. The closer to 1, the faster InteractionTracker will slow to a stop and vice versa. Unlike the PositionInertiaDecayRate which is defined as a Vector3, ScaleInertiaDecayRate is defined as a single float.</summary>
      <returns>Inertia decay rate for scale. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleVelocityInPercentPerSecond">
      <summary>The rate of change for scale.

The ScaleVelocityInPercentPerSecond property represents the current scale velocity of InteractionTracker while in Inertia. Grabbing the position velocity of InteractionTracker right after an Interaction has occurred or reference the most current velocity of InteractionTracker in an ExpressionAnimation.</summary>
      <returns>The rate of change for scale.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption">
      <summary>Defines constants that specify how values are clamped when the InteractionTracker position is updated.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Auto">
      <summary>If the input value is greater (or less) than the max (or min) value, it is immediately clamped.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Disabled">
      <summary>If the input value is greater (or less) than the max (or min) value, it is not immediately clamped. Instead, the max/min is enforced to the newly input value of Position (and potentially clamped) the next time InteractionTracker enters the Inertia state.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.CustomAnimationStateEntered" callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.IsFromBinding">
      <summary>Gets a value that indicates whether this state was entered through interaction with a tracker that this one is bound to.</summary>
      <returns>true if this state was entered through interaction with a tracker that this one is bound to; false if the state was entered through interaction directly with this tracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.IdleStateEntered" callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.IsFromBinding">
      <summary>Gets a value that indicates whether this state was entered through interaction with a tracker that this one is bound to.</summary>
      <returns>true if this state was entered through interaction with a tracker that this one is bound to; false if the state was entered through interaction directly with this tracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier">
      <summary>Base class for inertia modifiers.

The InteractionTrackerInertiaModifier represents the base class for inertia modifiers. inertia modifiers can be thought of as ways to change the behavior for where and how InteractionTracker reaches its final resting position. Changing this behavior of InteractionTracker is commonly used when more custom motion experiences are needed such as snap points. There are two variations to how you can modify the behavior of InteractionTracker using inertia modifiers: modify its final resting position after interaction with the InteractionTrackerInertiaRestingValue class or define the equation used to calculate the actual motion and final resting position during Inertia with the InteractionTrackerInertiaMotion class. These modifiers are applied to either X Position, Y Position or Scale of InteractionTracker.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion">
      <summary>An ExpressionAnimation that defines motion of InteractionTracker during its inertia state.

The InteractionTrackerMotion class contains two ExpressionAnimation s representing a second derivative equation of position InteractionTracker will use to define the motion from the start to end of inertia when a particular condition is met. The InteractionTrackerMotion class is defined as two parts: The conditional statement to define when the motion will take place and the equation that describes the motion for how InteractionTracker will reach its final resting position. Utilize the InteractionTrackerInertiaMotion class when you need to define a customized motion (such as a spring motion) for InteractionTracker to use when in its inertia state.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaMotion object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.

The Condition property is an ExpressionAnimation that defines when the specified motion equation is utilized by InteractionTracker during Inertia. This expression gets evaluated once after the interaction occurs and must resolve to a type Bool, otherwise an error will be thrown when the condition is evaluated. See the ExpressionAnimation class page for more details on building expressions.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Motion">
      <summary>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.

The Motion property is an ExpressionAnimation that describes the motion InteractionTracker will utilize during Inertia when the corresponding condition is met. The expression will be evaluated every frame while InteractionTracker is in Inertia and must resolve to a type Float, otherwise an error will be thrown when the equation is evaluated. See the ExpressionAnimation class page for more details on building expressions.</summary>
      <returns>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion">
      <summary>A ScalarNaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>A ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue">
      <summary>An ExpressionAnimation that defines the rest position after an interaction.

The InteractionTrackerInertiaRestingValue class defines two ExpressionAnimation s that calculate an explicit resting position for InteractionTracker when a particular condition is met. The InteractionTrackerInertiaRestingValue is defined as two parts: The conditional statement in which the InteractionTracker ’s specific resting location needs to be explicitly defined if true and the equation that describes a mathematical relationship that outputs the location. Utilize the InteractionTrackerInertiaRestingValue class when needing to ensure InteractionTracker lands on a specific location after an interaction occurs.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaRestingValue.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaRestingValue object.</param>
      <returns>Returns the created InteractionTrackerInertiaRestingValue object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.

The Condition property is an ExpressionAnimation that defines when the InteractionTracker should have a specific resting position. This expression gets run once after the interaction occurs and must resolve to a type Bool, otherwise an error will be thrown when the condition is evaluated. See the ExpressionAnimation class page for more details on building expressions.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.RestingValue">
      <summary>An ExpressionAnimation to define the resting value of InteractionTracker if the expression in the Condition property is true.

The Resting property is an ExpressionAnimation that describes where InteractionTracker will move to after an interaction if it’s corresponding condition is met. This expression will be run every frame while InteractionTracker is in Inertia and must resolve to a type Float, otherwise an error will be thrown when the equation is evaluated. See the ExpressionAnimation class page for more details on building expressions.</summary>
      <returns>An ExpressionAnimation to define the resting value if the expression in the Condition property is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InertiaStateEntered" callback.

The InteractionTrackerOwner.InertiaStateEntered" class defines the accessible and up-to-date property values when InteractionTracker enters the inertia state. If registered for the InertiaStateEntered event, values of this object's properties represent the results calculated by the system at the beginning of the inertia state. Using the modified and natural resting positions helps enables scenarios such as scrolling virtualization.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsFromBinding">
      <summary>Gets a value that indicates whether this state was entered through interaction with a tracker that this one is bound to.</summary>
      <returns>true if this state was entered through interaction with a tracker that this one is bound to; false if the state was entered through interaction directly with this tracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>true if the inertia is the result of an impulse; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.

The ModifiedRestingPosition property represents the systems calculation of where the final resting position of InteractionTracker will be based on an interaction. Unlike the NaturalRestingPosition, ModifiedRestingPosition will be calculated based on other factors that affect the motion of InteractionTracker such as InertiaModifiers and Min/Max boundaries.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.

The ModifiedRestingScale property represents the systems calculation of where the final resting scale position of InteractionTracker will be based on an interaction. Unlike the NaturalRestingScale, ModifiedRestingScale will be calculated based on other factors that affect the motion of InteractionTracker such as InertiaModifiers and Min/Max boundaries.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.

The NaturalRestingPosition property represents the system’s calculation of InteractionTracker ’s final natural resting position based on an interaction. Unlike the ModifiedRestingPosition, NaturalRestingPosition will be calculated without any other factors that impact InteractionTracker ’s motion such as InertiaModifiers and Min/Max boundaries.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.

The NaturalRestingScale property represents the system’s calculation of InteractionTracker ’s final natural resting scale position based on an interaction. Unlike the ModifiedRestingScale, NaturalRestingScale will be calculated without any other factors that impact InteractionTracker ’s motion such as InteractionTrackerInertiaModifier s and Min/Max boundaries.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.PositionVelocityInPixelsPerSecond">
      <summary>The velocity of InteractionTracker 's position.

The PositionVelocityInPixelsPerSecond property represents the position velocity of InteractionTracker when it has entered the Inertia state.</summary>
      <returns>The velocity of InteractionTracker 's position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback. Represents the ID of the request that caused InteractionTracker to enter the Inertia State (the InertiaStateEntered callback was triggered). Note that the RequestID property will be incremented each time a request tries to change the state of InteractionTracker.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ScaleVelocityInPercentPerSecond">
      <summary>The velocity of InteractionTracker 's scale.

The ScaleVelocityInPercentPerSecond property represents the scale velocity of InteractionTracker when it has entered the Inertia state.</summary>
      <returns>The velocity of InteractionTracker 's scale.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InteractingStateEntered" callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.IsFromBinding">
      <summary>Gets a value that indicates whether this state was entered through interaction with a tracker that this one is bound to.</summary>
      <returns>true if this state was entered through interaction with a tracker that this one is bound to; false if the state was entered through interaction directly with this tracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerPositionUpdateOption">
      <summary>Defines constants that indicate whether an already running custom scale animation should be allowed to continue running.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerPositionUpdateOption.AllowActiveCustomScaleAnimation">
      <summary>An active scale animation will continue.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerPositionUpdateOption.Default">
      <summary>An active scale animation will stop.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.RequestIgnored" callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs">
      <summary>Arguments for the IInteractionTrackerOwner.ValuesChanged" callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Position">
      <summary>The current position of the InteractionTracker.</summary>
      <returns>The current position of the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Scale">
      <summary>The current scale of the InteractionTracker.</summary>
      <returns>The current scale of the InteractionTracker.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier">
      <summary>Base class for InteractionTrackerVector2InertiaNaturalMotion.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion">
      <summary>A Vector2NaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerVector2InertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>A Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSource">
      <summary>Object for configuring input to the InteractionTracker relative to a visual.

The VisualInteractionSource is designed to be used only with InteractionTracker and defines which input will be sent to the InteractionTracker to drive its state and properties. This class contains both the visual to be used for hit-testing, as well as a variety of configuration properties for which gestures and types of input will be sent to the InteractionTracker.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionX is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionY is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaScaleModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaScale value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaScale is not replaced that frame.</summary>
      <param name="conditionalValues"></param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Create(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of VisualInteractionSource.</summary>
      <param name="source">The visual to use as the source of the interaction.</param>
      <returns>Returns the created VisualInteractionSource object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.CreateFromIVisualElement(Microsoft.UI.Composition.IVisualElement)">
      <summary>Creates an instance of VisualInteractionSource from an element that implements IVisualElement.</summary>
      <param name="source">The element to use as the source of the interaction, typically a XAML UIElement.</param>
      <returns>Returns the created VisualInteractionSource object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.TryRedirectForManipulation(Microsoft.UI.Input.PointerPoint)">
      <param name="pointerPoint" />
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaPosition">
      <summary>The amount of position change to be applied during the upcoming frame. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The change in position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaScale">
      <summary>The amount of scale change to be applied during the upcoming frame. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The change in scale of the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionXRailsEnabled">
      <summary>Indicates whether panning on the x-axis is railed.

The IsPositionXRailsEnabled property defines the railing configuration for when X-axis panning gets sent to the corresponding InteractionTracker. When enabled, if the initial part of the pan is angled within a particular range relative to the X-axis, the Y component of the pan is ignored and considered a perfect horizontal pan. This property is often enabled in situations where both an X and Y scrolling experience is enabled, but also requires reliable, perfect horizontal panning.</summary>
      <returns>Boolean value indicating whether panning on the x-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionYRailsEnabled">
      <summary>Indicates whether panning on the y-axis is railed.

The IsPositionYRailsEnabled property defines the railing configuration for when Y-axis panning gets sent to the corresponding InteractionTracker. When enabled, if the initial part of the pan is angled within a particular range relative to the Y-axis, the X component of the pan is ignored and considered a perfect vertical pan. This property is often enabled in situations where both an X and Y scrolling experience is enabled, but also requires reliable, perfect vertical panning.</summary>
      <returns>Boolean value indicating whether panning on the y-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ManipulationRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
      <returns>Indicates what input should be redirected to the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PointerWheelConfig">
      <summary>Gets the configuration for pointer wheel input.</summary>
      <returns>The configuration for pointer wheel input.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Position">
      <summary>The total amount of position change since the start of the interaction. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionVelocity">
      <summary>The instantaneous rate of change of position in the interaction, in pixels per second. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The position velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXChainingMode">
      <summary>The PositionXChainingMode property defines the chaining behavior for an InteractionSource in the X direction. There are three InteractionChainingMode types:

- Auto
- Always
- Never

When chaining in the X direction is enabled, input will flow to the nearest ancestor's VisualInteractionSource whenever the interaction (such as panning) would otherwise take InteractionTracker ’s position past its minimum or maximum X position.</summary>
      <returns>Chaining mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXSourceMode">
      <summary>Source mode for the X-axis.

The PositionXSourceMode property defines how interactions are processed for a VisualInteractionSource on the X-axis. There are three InteractionSourceMode  types to choose from:

- Interactions are Disabled
- EnabledWithInertia
- EnabledWithoutInertia

This property must be enabled to allow the VisualInteractionSource to send X-axis data to InteractionTracker.</summary>
      <returns>Source mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYChainingMode">
      <summary>The PositionYChainingMode property defines the chaining behavior for an InteractionSource in the Y direction. There are three types of InteractionChainingMode s: 
    Auto
  , 
    Always
  , 
    Never
  . When chaining in the Y direction is enabled, input will flow to the nearest ancestor’s VisualInteractionSource whenever the interaction (such as panning) would otherwise take InteractionTracker ’s position past its minimum or maximum Y position.</summary>
      <returns>Chaining mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYSourceMode">
      <summary>Source mode for the Y-axis.

The PositionYSourceMode property defines how interactions are processed for a VisualInteractionSource on the Y-axis. There are three InteractionSourceMode  types to choose from:

- Interactions are Disabled
- EnabledWithInertia
- EnabledWithoutInertia

This property must be enabled to allow the VisualInteractionSource to send Y-axis data to InteractionTracker.</summary>
      <returns>Source mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Scale">
      <summary>The total percentage-difference in scale since the start of the interaction. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The scale of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleChainingMode">
      <summary>The ScaleChainingMode property defines the chaining behavior for an InteractionSource in the Scale direction. There are three types of InteractionChainingMode s: Auto, Always, Never. When Scale chaining is enabled, input will flow to the nearest ancestor’s VisualInteractionSource whenever the interaction (such as panning) would otherwise take InteractionTracker ’s position past it’s minimum or maximum Scale position.</summary>
      <returns>Chaining mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleSourceMode">
      <summary>Defines how interactions are processed for an VisualInteractionSource on the scale axis. There are three InteractionSourceMode types to choose from:

- Disabled
- EnabledWithInertia
- EnabledWithoutInertia

This property must be enabled to allow the VisualInteractionSource to send scale data to InteractionTracker.</summary>
      <returns>Source mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleVelocity">
      <summary>The instantaneous rate of change of scale in the interaction, in percent per second. Additive. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The scale velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Source">
      <summary>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</summary>
      <returns>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadAndPointerWheel">
      <summary>Pointer input goes to the UI thread, Precision Touchpad and mouse wheel input goes to the compositor.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadOnly">
      <summary>Pointer input goes to the UI thread, Precision Touchpad input goes to the compositor.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.Off">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.PointerWheelOnly">
      <summary>Pointer input goes to the UI thread, mouse wheel input goes to the compositor.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.IVisualElement">
      <summary>Marks an object to indicate to the system that it can resolve to a CompositionVisual</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.IVisualElement2">
      <summary>Provides a method that retrieves an object's underlying Visual.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.IVisualElement2.GetVisualInternal">
      <summary>Retrieves the Visual that the element resolves to.</summary>
      <returns>The Visual that the element resolves to.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.KeyFrameAnimation">
      <summary>A time-based animation with one or more key frames. These frames are markers, allowing developers to specify values at specific times for the animating property. KeyFrame animations can be further customized by specifying how the animation interpolates between keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String)">
      <summary>Inserts an expression key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts an expression keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayBehavior">
      <summary>The delay behavior of the key frame animation.</summary>
      <returns>The delay behavior of the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation" is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation" is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Direction">
      <summary>The direction the animation is playing.

The 
    Direction
   property allows you to drive your animation from start to end or end to start or alternate between start and end or end to start if animation has an IterationCount greater than one. This gives an easy way for customizing animation definitions.</summary>
      <returns>The direction the animation is playing.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Duration">
      <summary>The duration of the animation.</summary>
      <returns>The duration of the animation. Minimum allowed value is 1ms and maximum allowed value is 24 days.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationBehavior">
      <summary>The iteration behavior for the key frame animation.</summary>
      <returns>The iteration behavior for the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationCount">
      <summary>The number of times to repeat the key frame animation.</summary>
      <returns>The number of times to repeat the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.KeyFrameCount">
      <summary>The number of key frames in the KeyFrameAnimation.</summary>
      <returns>The number of key frames in the KeyFrameAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.LayerVisual">
      <summary>A ContainerVisual whose children are flattened into a single layer.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Effect">
      <summary>The effect to be applied to the flattened representation of the children of a LayerVisual.</summary>
      <returns>The effect to be applied to the flattened representation of the children of a LayerVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Shadow">
      <summary>The shadow to be applied to the flattened representation of the children of a LayerVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.LinearEasingFunction">
      <summary>Represents a linear function for interpolating between animation key frames.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.NaturalMotionAnimation">
      <summary>Represents a physics-based animation that uses forces to dynamically move content.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayBehavior">
      <summary>The delay behavior of the NaturalMotionAnimation.</summary>
      <returns>The delay behavior of the NaturalMotionAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation" is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation" is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.PathKeyFrameAnimation">
      <summary>Represents a time-based animation with one or more key frames where each key frame value is represented by a
CompositionPath. The easing specifies the interopolation between paths.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.PointLight">
      <summary>A point source of light that emanates light in all directions.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Color">
      <summary>Color of the light.</summary>
      <returns>Color of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.CoordinateSpace">
      <summary>The Visual used to determine the light's offset. The light's offset property is relative to this Visual's coordinate space.
    PointLight.CoordinateSpace
   is a required property. If 
    PointLight.CoordinateSpace
   is not set, the PointLight will not render.</summary>
      <returns>The Visual used to determine the light's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Offset">
      <summary>Offset of the light source relative to its coordinate space Visual.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance.</summary>
      <returns>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.PowerEasingFunction">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula _f_(_t_) = _t_&lt;sup&gt;p&lt;/sup&gt; where _p_ is equal to the Power property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.PowerEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PowerEasingFunction.Power">
      <summary>Gets or sets the exponential power of the animation interpolation.</summary>
      <returns>The exponential power of the animation interpolation. This value must be greater or equal to 0. The default is 2.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.QuaternionKeyFrameAnimation">
      <summary>A time-based animation that targets the Orientation property with one or more key frames.

The QuaternionKeyFrameAnimation class is one of the supported types of KeyFrameAnimation s that is used to animate the Orientation property on a Visual. Quaternions are a useful and sometimes simpler way to think about rotations – Quaternions take the shortest path between angles and avoid issues like Gimbal Lock that rotation angle/axis and rotation matrices run into. A Quaternion is made up of two components: a scalar and vector part.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.RectangleClip">
      <summary>Represents a rectangle with optional rounded corners that clips a portion of a visual. The portion of the visual inside the rectangle is visible; the portion of the visual outside the rectangle is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.Bottom">
      <summary>Gets or sets the offset from the bottom of the visual. The portion of the visual below the edge defined by Bottom will be clipped. Animatable.</summary>
      <returns>The offset from the bottom of the visual, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.BottomLeftRadius">
      <summary>Gets or sets the amount by which the bottom left corner of the rectangle is rounded.</summary>
      <returns>The the amount by which the bottom left corner of the rectangle is rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.BottomRightRadius">
      <summary>Gets or sets the amount by which the bottom right corner of the rectangle is rounded.</summary>
      <returns>The the amount by which the bottom right corner of the rectangle is rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.Left">
      <summary>Gets or sets the offset from the left of the visual. The portion of the visual to the left of the edge defined by Left will be clipped. Animatable.</summary>
      <returns>The offset from the left of the visual, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.Right">
      <summary>Gets or sets the offset from the right of the visual. The portion of the visual to the right the edge defined by Right will be clipped. Animatable.</summary>
      <returns>The offset from the right of the visual, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.Top">
      <summary>Gets or sets the offset from the top of the visual. The portion of the visual above the edge defined by Top will be clipped. Animatable.</summary>
      <returns>The offset from the top of the visual, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.TopLeftRadius">
      <summary>Gets or sets the amount by which the top left corner of the rectangle is rounded.</summary>
      <returns>The the amount by which the top left corner of the rectangle is rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.RectangleClip.TopRightRadius">
      <summary>Gets or sets the amount by which the top right corner of the rectangle is rounded.</summary>
      <returns>The the amount by which the top right corner of the rectangle is rounded.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.RedirectVisual">
      <summary>Represents a visual that gets its content from another visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RedirectVisual.Source">
      <summary>Gets or sets the Visual that this RedirectVisual gets its content from.</summary>
      <returns>The Visual that this RedirectVisual gets its content from. The default is null.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs">
      <summary>Arguments for the RenderingDeviceReplaced event.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs.GraphicsDevice">
      <summary>The new graphics device.</summary>
      <returns>The new graphics device.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarKeyFrameAnimation">
      <summary>A time-based animation that targets any Scalar-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarNaturalMotionAnimation">
      <summary>The base Scalar NaturalMotionAnimation used to target a Scalar property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is null. If left null, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is null. If left null, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAlphaMode">
      <summary>Defines constants that specify the alpha mode for a scene.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.AlphaTest">
      <summary>Alpha mode is AlphaTest.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Blend">
      <summary>Alpha mode is Blend.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Opaque">
      <summary>Alpha mode is Opaque.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic">
      <summary>Defines constants that specify scene attribute semantics.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Color">
      <summary>Color</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Index">
      <summary>Index</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Normal">
      <summary>Normal</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Tangent">
      <summary>Tangent</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord0">
      <summary>Texture Coordinate 0</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord1">
      <summary>Texture Coordinate 1</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Vertex">
      <summary>Vertex</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneBoundingBox">
      <summary>Represents a box that encloses a 3D scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Center">
      <summary>Gets the center of the bounding box.</summary>
      <returns>The center of the bounding box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Extents">
      <summary>Gets the extents of the bounding box.</summary>
      <returns>The extents of the bounding box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Max">
      <summary>Gets the maximum coordinates of the bounding box.</summary>
      <returns>The maximum coordinates of the bounding box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Min">
      <summary>Gets the minimum coordinates of the bounding box.</summary>
      <returns>The minimum coordinates of the bounding box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Size">
      <summary>Gets the size of the bounding box.</summary>
      <returns>The size of the bounding box.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponent">
      <summary>Represents a functional part of a scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponent.ComponentType">
      <summary>Gets a value that indicates what kind of component this is.</summary>
      <returns>A value of the enumeration that indicates what kind of component this is.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentCollection">
      <summary>Represents a collection of SceneComponent objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Append(Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneComponent value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneComponent,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>true if an item with the specified value was found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Sets the value at the specified index to the specified SceneComponent value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentType">
      <summary>Defines constants that specify what kind a scene component is.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneComponentType.MeshRendererComponent">
      <summary>The component is a mesh renderer.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterial">
      <summary>Represents an asset that describes how a surface is rendered.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterialInput">
      <summary>Represents an input that influences a material.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMesh">
      <summary>Represents a mesh (the list of vertices that describe the polygons that make up a scene).</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneMesh.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneMesh object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.FillMeshAttribute(Microsoft.UI.Composition.Scenes.SceneAttributeSemantic,Microsoft.Graphics.DirectX.DirectXPixelFormat,Windows.Foundation.MemoryBuffer)">
      <summary>Creates a copy of information about the mesh for use by this SceneMesh.</summary>
      <param name="semantic">The attribute semantic.</param>
      <param name="format">The pixel format.</param>
      <param name="memory">The memory buffer.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.Bounds">
      <summary>Gets the bounds of the mesh.</summary>
      <returns>The bounds of the mesh.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.PrimitiveTopology">
      <summary>Gets or sets a value that indicates how the vertex data is interpreted by the graphics pipeline and rendered on screen.</summary>
      <returns>A value of the enumeration that indicates how the vertex data is interpreted.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap">
      <summary>Represents a collection of material attributes for a scene mesh as key/value pairs.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Clear">
      <summary>Removes all items from the map.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.GetView">
      <summary>Returns an immutable view of the map.</summary>
      <returns>The view of the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.HasKey(System.String)">
      <summary>Determines whether the map contains the specified key.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>true if the key is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Insert(System.String,Microsoft.UI.Composition.Scenes.SceneAttributeSemantic)">
      <summary>Inserts or replaces an item in the map.</summary>
      <param name="key">The key associated with the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>true if an item with the specified key is an existing item that was replaced; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Lookup(System.String)">
      <summary>Returns the item at the specified key in the map.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>The value, if an item with the specified key exists. Use the HasKey method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Remove(System.String)">
      <summary>Removes an item from the map.</summary>
      <param name="key">The key associated with the item to remove.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Size">
      <summary>Gets the number of items in the map.</summary>
      <returns>The number of items in the map.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent">
      <summary>Represents a component that renders a SceneMesh.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneMeshRendererComponent.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneMeshRendererComponent object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Material">
      <summary>Gets or sets the material that describes how the mesh surface is rendered.</summary>
      <returns>The material that describes how the mesh surface is rendered.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Mesh">
      <summary>Gets or sets the SceneMesh to be rendered.</summary>
      <returns>The SceneMesh to be rendered.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.UVMappings">
      <summary>Gets the UV mappings for the material to the mesh.</summary>
      <returns>The UV mappings for the material to the mesh.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial">
      <summary>Represents a material that has that has the appearance of metal.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneMetallicRoughnessMaterial.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneMetallicRoughnessMaterial object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorFactor">
      <summary>Gets or sets a value that indicates the base color.</summary>
      <returns>A value that indicates the base color.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorInput">
      <summary>Gets or sets the input for material's base color.</summary>
      <returns>The input for for material's base color.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicFactor">
      <summary>Gets or sets a value that indicates how metallic the material appears.</summary>
      <returns>A value that indicates how metallic the material appears.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicRoughnessInput">
      <summary>Gets or sets the input for how rough or smooth the material is.</summary>
      <returns>The input for how rough or smooth the material is.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.RoughnessFactor">
      <summary>Gets or sets a value that indicates how rough or smooth the material appears.</summary>
      <returns>A value that indicates how rough or smooth the material appears.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneModelTransform">
      <summary>Represents a group of 3-D transforms on a node, including rotation, scale, and translation.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Orientation">
      <summary>Gets or sets the orientation of the node.</summary>
      <returns>The orientation of the node.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngle">
      <summary>Gets or sets the rotation angle applied to the node, in radians.</summary>
      <returns>The rotation angle applied to the node, in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle applied to the node, in degrees.</summary>
      <returns>The rotation angle applied to the node, in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAxis">
      <summary>Gets or sets the axes around which the node is rotated.</summary>
      <returns>The axes around which the node is rotated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Scale">
      <summary>Gets or sets the relative size of the node on the x, y, and z axes.</summary>
      <returns>A vector that describes the relative size of the node on the x, y, and z axes.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Translation">
      <summary>Gets or sets the position of the node on the x, y, and z axes.</summary>
      <returns>A vector that describes the position of the node on the x, y, and z axes.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNode">
      <summary>Represents an element in the scene's visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneNode.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneNode object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.FindFirstComponentOfType(Microsoft.UI.Composition.Scenes.SceneComponentType)">
      <summary>Retrieves the first component of the specified kind.</summary>
      <param name="value">The kind of component to find.</param>
      <returns>The first component of the specified kind, if one is found.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Children">
      <summary>Gets the collection of children of this node.</summary>
      <returns>The collection of children of this node.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Components">
      <summary>Gets the collection of components for this node.</summary>
      <returns>The collection of components for this node.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Parent">
      <summary>Gets the node that this node is a child of.</summary>
      <returns>The node that this node is a child of.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Transform">
      <summary>Gets the transform that describes the position, rotation, and scale of this node.</summary>
      <returns>The transform that describes the position, rotation, and scale of this node.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNodeCollection">
      <summary>Represents a collection of SceneNode objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Append(Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneNode value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneNode,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>true if an item with the specified value was found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Sets the value at the specified index to the specified SceneNode value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneObject">
      <summary>The base class for objects that make up a 3D scene.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.ScenePbrMaterial">
      <summary>Represents a material that uses Physically Based Rendering (PBR).</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaCutoff">
      <summary>Gets or sets the alpha cutoff for the material.</summary>
      <returns>The alpha cutoff for the material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaMode">
      <summary>Gets or sets the alpha mode for the material.</summary>
      <returns>The alpha mode for the material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveFactor">
      <summary>Gets or sets the material's emissive value.</summary>
      <returns>The material's emissive value.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveInput">
      <summary>Gets or sets the input for the material's emissive value.</summary>
      <returns>The input for the material's emissive value.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.IsDoubleSided">
      <summary>Gets or sets a value that indicates whether the material has two sides.</summary>
      <returns>true if the material has two sides, false if the material has one side.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalInput">
      <summary>Gets or sets the input for material's normal.</summary>
      <returns>The input for for material's base normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalScale">
      <summary>Gets or sets the normal scale for the material.</summary>
      <returns>The normal scale for the material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionInput">
      <summary>Gets or sets the input for the material's occlusion.</summary>
      <returns>The input for the material's occlusion.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionStrength">
      <summary>Gets or sets the occlusion strength.</summary>
      <returns>The occlusion strength.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneRendererComponent">
      <summary>Represents the base class for scene rendering components.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput">
      <summary>Represents an input to a composition surface.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneSurfaceMaterialInput.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneSurfaceMaterialInput object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.BitmapInterpolationMode">
      <summary>Gets or sets the bitmap interpolation mode.</summary>
      <returns>The bitmap interpolation mode.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Surface">
      <summary>Gets or sets the composition surface.</summary>
      <returns>The composition surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingUMode">
      <summary>Gets or sets a value that indicates how wrapping occurs on the U axis.</summary>
      <returns>A value that indicates how wrapping occurs on the U axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingVMode">
      <summary>Gets or sets a value that indicates how wrapping occurs on the V axis.</summary>
      <returns>A value that indicates how wrapping occurs on the V axis.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneVisual">
      <summary>Represents a container visual for the nodes of a 3D scene.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneVisual.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneVisual.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneVisual object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneVisual.Root">
      <summary>Gets or sets the root node for scene.</summary>
      <returns>The root node for scene.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneWrappingMode">
      <summary>Defines constants that specify how wrapping occurs for a scene.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.ClampToEdge">
      <summary>Clamp to edge.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.MirroredRepeat">
      <summary>Mirrored repeat.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.Repeat">
      <summary>Repeat.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ShapeVisual">
      <summary>Represents a visual tree node that is the root of a CompositionShape.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.Shapes">
      <summary>Gets the collection of CompositionShapes that this shape visual tree is composed of.</summary>
      <returns>The collection of CompositionShapes that this shape visual tree is composed of.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.ViewBox">
      <summary>Gets or sets the CompositionViewBox that maps shape visual tree coordinates onto the visual.</summary>
      <returns>The CompositionViewBox that maps shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SineEasingFunction">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a sine formula.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SineEasingFunction.Mode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is EaseOut.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpotLight">
      <summary>A light source that casts inner and outer cones of light. For example, a flashlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity. Animatable.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.CoordinateSpace">
      <summary>The Visual used to determine the light's direction and offset. The light's offset and direction properties are relative to this Visual's coordinate space.
    SpotLight.CoordinateSpace
   is a required property. If 
    SpotLight.CoordinateSpace
   is not set, the SpotLight will not render.</summary>
      <returns>The visual the light's offset is relative to.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is pointing, specified relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngle">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngleInDegrees">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeColor">
      <summary>Color of the spotlight's inner cone. Animatable.</summary>
      <returns>Color of the spotlight's inner cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's inner cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Offset">
      <summary>Offset of the light source relative to its CoordinateSpace Visual. Animatable.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngle">
      <summary>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. The value must be between 0 and pi.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngleInDegrees">
      <summary>The semi-vertical angle, in degrees, of the SpotLight's outer cone. Animatable.</summary>
      <returns>The semi-vertical angle, in degrees, of the SpotLight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeColor">
      <summary>The color of the spotlight's outer cone. Animatable.</summary>
      <returns>The color of the spotlight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's outer cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The quadratic coefficient in the light's attenuation equation. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpriteVisual">
      <summary>Hosts 2D boxed content of type CompositionBrush. Any part of the visual not covered by pixels from the brush are rendered as transparent pixels. CompositionBrush can be either a CompositionBackdropBrush, CompositionColorBrush, a CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Brush">
      <summary>A CompositionBrush describing how the SpriteVisual is painted.</summary>
      <returns>A CompositionBrush describing how the SpriteVisual is painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Shadow">
      <summary>The shadow for the SpriteVisual.</summary>
      <returns>The shadow for the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.StepEasingFunction">
      <summary>A step function for interpolating between animation key frames.

Advances animations in increments like steps which can be can be defined. Behaviors for initial and final steps can be customized.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.FinalStep">
      <summary>The step to end at.</summary>
      <returns>The step to end at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.InitialStep">
      <summary>The step to start at.</summary>
      <returns>The step to start at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsFinalStepSingleFrame">
      <summary>Indicates whether the final step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the final step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsInitialStepSingleFrame">
      <summary>Indicates whether the initial step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the initial step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.StepCount">
      <summary>The number of steps between the starting value and the end value.</summary>
      <returns>The number of steps between the starting value and the end value.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController">
      <summary>Manages rendering and system policy for the background acrylic material.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.#ctor">
      <summary>Initializes a new instance of the DesktopAcrylicController class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.Close">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.IsSupported">
      <summary>Determines whether the acrylic material is supported on the current operating system.</summary>
      <returns>true if the acrylic material is supported on the current operating system; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects this system backdrop controller to an HWND or AppWindow with the specified _WindowId_.</summary>
      <param name="windowId">The identifier for the HWND or AppWindow to connect to.</param>
      <param name="desktopWindowTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects this system backdrop controller to the specified CoreWindow.</summary>
      <param name="coreWindow">The CoreWindow to connect to.</param>
      <param name="compositionTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.FallbackColor">
      <summary>Gets or sets the solid color to use when system conditions prevent rendering the acrylic material.</summary>
      <returns>The solid color to use when system conditions prevent rendering the acrylic material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.LuminosityOpacity">
      <summary>Gets or sets the degree of opacity of the color's luminosity.</summary>
      <returns>The degree of opacity of the color's luminosity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.TintColor">
      <summary>Gets or sets the color tint for the background acrylic material.</summary>
      <returns>The color tint for the background acrylic material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.TintOpacity">
      <summary>Gets or sets the degree of opacity of the color tint.</summary>
      <returns>The degree of opacity of the color tint.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController">
      <summary>Provides methods to connect a system backdrop controller to a window.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects a system backdrop controller to an HWND or AppWindow with the specified _WindowId_.</summary>
      <param name="windowId">The identifier for the HWND or AppWindow to connect to.</param>
      <param name="desktopWindowTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects a system backdrop controller to the specified CoreWindow.</summary>
      <param name="coreWindow">The CoreWindow to connect to.</param>
      <param name="compositionTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SystemBackdrops.MicaController">
      <summary>Manages rendering and system policy for the mica material.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.#ctor">
      <summary>Initializes a new instance of the MicaController class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.Close">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.IsSupported">
      <summary>Determines whether the mica material is supported on the current operating system.</summary>
      <returns>true if the mica material is supported on the current operating system; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects this system backdrop controller to an HWND or AppWindow with the specified _WindowId_.</summary>
      <param name="windowId">The identifier for the HWND or AppWindow to connect to.</param>
      <param name="desktopWindowTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.SystemBackdrops.MicaController.SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)">
      <summary>Connects this system backdrop controller to the specified CoreWindow.</summary>
      <param name="coreWindow">The CoreWindow to connect to.</param>
      <param name="compositionTarget">The composition target to connect to.</param>
      <returns>true if the controller was able to set up the material as a system backdrop; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.MicaController.FallbackColor">
      <summary>Gets or sets the solid color to use when system conditions prevent rendering the mica material.</summary>
      <returns>The solid color to use when system conditions prevent rendering the mica material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.MicaController.LuminosityOpacity">
      <summary>Gets or sets the degree of opacity of the color's luminosity.</summary>
      <returns>The degree of opacity of the color's luminosity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.MicaController.TintColor">
      <summary>Gets or sets the color tint for the mica material.</summary>
      <returns>The color tint for the mica material.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SystemBackdrops.MicaController.TintOpacity">
      <summary>Gets or sets the degree of opacity of the color tint.</summary>
      <returns>The degree of opacity of the color tint.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector2-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2NaturalMotionAnimation">
      <summary>The base Vector2 NaturalMotionAnimation used to target a Vector2 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is null. If left null, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is null. If left null, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector3-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3NaturalMotionAnimation">
      <summary>The base Vector3 NaturalMotionAnimation used to target a Vector3 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is null. If left null, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is null. If left null, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector4KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector4-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Visual">
      <summary>The base visual object in the visual hierarchy.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.AnchorPoint">
      <summary>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual. Animatable.</summary>
      <returns>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BackfaceVisibility">
      <summary>Specifies whether the back face of the visual should be visible during a 3D transform.</summary>
      <returns>Whether the back face of the visual should be visible during a 3D transform.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BorderMode">
      <summary>Specifies how to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual. Setting BorderMode at a parent Visual will affect all children visuals in the subtree and can be selectively turned off at each child visual.</summary>
      <returns>How to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CenterPoint">
      <summary>The point about which rotation or scaling occurs. Animatable</summary>
      <returns>The point about which rotation or scaling occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Clip">
      <summary>Specifies the clipping region for the visual. When a visual is rendered, only the portion of the visual that falls inside the clipping region is displayed, while any content that extends outside the clipping region is clipped (that is, not displayed).</summary>
      <returns>Specifies the clipping region for the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CompositeMode">
      <summary>Specifies how a visual's bitmap is blended with the screen.</summary>
      <returns>How a visual's bitmap is blended with the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.IsHitTestVisible">
      <summary>Gets or sets a value that indicates whether the visual sub-tree rooted at this visual participates in hit testing.</summary>
      <returns>true if the visual sub-tree rooted at this visual participates in hit testing; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.IsPixelSnappingEnabled">
      <summary>Gets or sets a value that indicates whether the composition engine aligns the rendered visual with a pixel boundary.</summary>
      <returns>true if the composition engine aligns the rendered visual with a pixel boundary; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.IsVisible">
      <summary>Indicates whether the visual and its entire subtree of child visuals is visible.</summary>
      <returns>Indicates whether the visual and its entire subtree of child visuals is visible.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Offset">
      <summary>The offset of the visual relative to its parent or for a root visual the offset relative to the upper-left corner of the windows that hosts the visual. Animatable.</summary>
      <returns>Offset of the visual relative to its parent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Opacity">
      <summary>The opacity of the visual. Animatable.

The opacity property determines the transparency, if any, of the Visual and is a value from 0 to 1. 0 is fully transparent and 1 is full opaque. A Visual with an Opacity property of 0 is still present in the tree. Like other properties on the Visual, Opacity can be animated using the Windows,UI.Composition animation system.</summary>
      <returns>The opacity of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Orientation">
      <summary>A quaternion describing an orientation and rotation in 3D space that will be applied to the visual. Animatable.</summary>
      <returns>A Quaternion describing an orientation and rotation in 3D space that will be applied to the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Parent">
      <summary>The parent of the visual.</summary>
      <returns>The parent of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.ParentForTransform">
      <summary>Visual specifying the coordinate system in which this visual is composed.</summary>
      <returns>Visual specifying the coordinate system in which this visual is composed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeOffsetAdjustment">
      <summary>Specifies the offset of the visual with respect to the size of its parent visual.</summary>
      <returns>The offset of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeSizeAdjustment">
      <summary>Gets or sets the size of the visual with respect to the size of its parent visual.</summary>
      <returns>The size of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngle">
      <summary>The rotation angle in radians of the visual. Animatable.</summary>
      <returns>The rotation angle in radians of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngleInDegrees">
      <summary>The rotation angle of the visual in degrees. Animatable.</summary>
      <returns>The rotation angle of the visual in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAxis">
      <summary>The axis to rotate the visual around. Animatable.</summary>
      <returns>The axis to rotate the visual around. For example, a value of Vector3(1,0,0) indicates rotation along the x-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Scale">
      <summary>The scale to apply to the visual.</summary>
      <returns>The scale to apply to the visual. A value of Vector3 (1.0,1.0,1.0) is equivalent to 100%.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Size">
      <summary>The width and height of the visual. Animatable.</summary>
      <returns>The width and height of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.TransformMatrix">
      <summary>The transformation matrix to apply to the visual. Animatable.</summary>
      <returns>The transformation matrix to apply to the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualCollection">
      <summary>Represents a collection of visual instances.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.First">
      <summary>Retrieves an iterator with the first object at the bottom of the collection.</summary>
      <returns>Returns an iterator with the first object at the bottom of the collection. VisualCollections are ordered from bottom to top.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAbove(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Inserts a visual above the specified sibling visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling to insert the visual above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtBottom(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the bottom of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtTop(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the top of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertBelow(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Insert a new visual below the specified visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling visual to insert the new visual below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes the specified visual instance from the collection.</summary>
      <param name="child">The specified visual instance from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.RemoveAll">
      <summary>Removes all of the visual instances from the collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualCollection.Count">
      <summary>Gets the number of visual instances in the collection.</summary>
      <returns>The number of visual instances in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualUnorderedCollection">
      <summary>An unordered collection of visuals.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Add(Microsoft.UI.Composition.Visual)">
      <summary>Adds a visual to the collection.</summary>
      <param name="newVisual">The visual to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.First">
      <summary>Retrieves the first visual in the collection.</summary>
      <returns>The first visual in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes a visual from the collection.</summary>
      <param name="visual">Removes a visual from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.RemoveAll">
      <summary>Removes all visuals from the collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualUnorderedCollection.Count">
      <summary>The number of visuals in the collection.</summary>
      <returns>The nubmer of visuals in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueue">
      <summary>Manages a prioritized queue on which tasks execute in a serial fashion on a thread.</summary>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownCompleted">
      <summary>Occurs after the DispatcherQueue event loop stops, which is the last step in the DispatcherQueue shutdown process.</summary>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownStarting">
      <summary>Occurs before the DispatcherQueue initiates an exit from its event loop.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.CreateTimer">
      <summary>Creates a DispatcherQueueTimer on the DispatcherQueue to execute a task periodically after a time interval has elapsed.</summary>
      <returns>An DispatcherQueueTimer that can queue tasks on a timed basis to the current DispatcherQueue.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.GetForCurrentThread">
      <summary>Gets the DispatcherQueue associated with the current thread.</summary>
      <returns>A DispatcherQueue instance that will execute tasks serially on the current thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the DispatcherQueue that will be executed on the thread associated with the DispatcherQueue.</summary>
      <param name="callback">A delegate to the task to execute.</param>
      <returns>True if the task was added to the queue. Otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueuePriority,Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the DispatcherQueue that will be executed on the thread associated with the DispatcherQueue with the specified priority.</summary>
      <param name="priority">The priority of the task (such as Low, Normal, or High).</param>
      <param name="callback">A delegate to the task to execute.</param>
      <returns>True if the task was added to the queue. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueue.HasThreadAccess">
      <summary>Gets a value indicating whether the DispatcherQueue has access to the current thread.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueController">
      <summary>Manages the lifetime of a DispatcherQueue.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.CreateOnCurrentThread">
      <summary>Creates a DispatcherQueue on the calling thread which will interop with a USER32 message loop.</summary>
      <returns>The DispatcherQueue on the calling thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.CreateOnDedicatedThread">
      <summary>Creates a DispatcherQueue that you can use to run tasks on a dedicated thread.</summary>
      <returns>The DispatcherQueue that you can use to run tasks on a dedicated thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.ShutdownQueueAsync">
      <summary>Stops the DispatcherQueue associated with this DispatcherQueueController. Shuts down the thread if the DispatcherQueueController was created by CreateOnDedicatedThread.</summary>
      <returns>An asynchronous operation which will complete after the queue has dispatched all of its remaining work.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueController.DispatcherQueue">
      <summary>Gets the DispatcherQueue associated with this DispatcherQueueController.</summary>
      <returns>The DispatcherQueue instance that you use to queue tasks that run on a thread.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueHandler">
      <summary>A callback that will be executed on the DispatcherQueue thread.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueuePriority">
      <summary>Defines the priority levels that can be given to work assigned to a DispatcherQueue.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.High">
      <summary>Work scheduled at High priority will be dispatched first, along with other High priority System tasks, before processing Normal or Low priority work.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Low">
      <summary>Work will be dispatched once all High priority tasks are dispatched. If a new High priority work is scheduled, all new High priority tasks are processed before resuming Normal tasks. This is the default priority.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Normal" />
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs">
      <summary>Provides the arguments for the ShutdownStarting event.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs.GetDeferral">
      <summary>Gets a deferral object so that you can use to continue to post work to the DispatcherQueue until you mark the deferral complete.</summary>
      <returns>The deferral object.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueTimer">
      <summary>Executes a task in a DispatcherQueue periodically after a time interval has elapsed.</summary>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueueTimer.Tick">
      <summary>Event that fires when the DispatcherQueue timer Interval elapses.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Start">
      <summary>Starts the DispatcherQueue timer.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Stop">
      <summary>Stops the DispatcherQueue timer.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.Interval">
      <summary>Gets and sets the interval for the timer.</summary>
      <returns>The amount of time before the timer ticks.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRepeating">
      <summary>Gets or sets whether the timer is repeating.</summary>
      <returns>True indicates that the timer fires every DispatcherQueueTimer.Interval.

False indicates that the timer fires once, after DispatcherQueueTimer.Interval elapses.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRunning">
      <summary>Indicates whether the timer is currently running.</summary>
      <returns>True if the timer is running. Otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.DisplayId">
      <summary>Defines an identifier for a display monitor.</summary>
    </member>
    <member name="F:Microsoft.UI.DisplayId.Value">
      <summary>The identifier for a display monitor.</summary>
    </member>
    <member name="T:Microsoft.UI.IconId">
      <summary>Defines an identifier for an icon.</summary>
    </member>
    <member name="F:Microsoft.UI.IconId.Value">
      <summary>The identifier for an icon.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.CrossSlideThresholds">
      <summary>Contains the distance thresholds for a CrossSliding interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlideThresholds.RearrangeStart">
      <summary>The distance, in device-independent pixel (DIP), from the initial point of contact until the rearrange action is initiated.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlideThresholds.SelectionStart">
      <summary>The distance, in device-independent pixel (DIP), from the initial point of contact until the selection action is initiated.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlideThresholds.SpeedBumpEnd">
      <summary>The distance, in device-independent pixel (DIP), from the initial point of contact until the end of the speed bump.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlideThresholds.SpeedBumpStart">
      <summary>The distance, in device-independent pixel (DIP), from the initial point of contact until the speed bump is initiated.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.CrossSlidingEventArgs">
      <summary>Contains event data for the CrossSliding event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.CrossSlidingEventArgs.CrossSlidingState">
      <summary>Gets the state of the CrossSliding event.</summary>
      <returns>State of the CrossSliding event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.CrossSlidingEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.CrossSlidingEventArgs.Position">
      <summary>Gets the location of the touch contact.</summary>
      <returns>The screen coordinates, in device-independent pixel (DIP).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.CrossSlidingState">
      <summary>Specifies the possible states of the CrossSliding event.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.Completed">
      <summary>The swipe or slide gesture has stopped, the CrossSliding interaction has been completed, and the touch contact lifted.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.Dragging">
      <summary>A CrossSliding interaction has started but the swipe or slide gesture has not crossed the minimum distance threshold for a selection action.

&gt; [!NOTE]
&gt; There is no correlation between Dragging in CrossSlidingState (touch) and DraggingState (mouse or pen/stylus).</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.Rearranging">
      <summary>The swipe or slide gesture has crossed the minimum distance threshold of the rearrange action. This state is valid only when RearrangeStart is enabled in a GestureRecognizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.Selecting">
      <summary>The swipe or slide gesture has crossed the minimum distance threshold for a selection action but has not crossed the minimum distance threshold of the rearrange action. This state is valid only when SpeedBumpStart is disabled in a GestureRecognizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.SelectSpeedBumping">
      <summary>The swipe or slide gesture has crossed the minimum distance threshold for a selection action (and the selection speed bump) but has not crossed the maximum distance threshold of the selection speed bump. This state is valid only when both SpeedBumpStart and SelectionStart are enabled in a GestureRecognizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.SpeedBumping">
      <summary>The swipe or slide gesture has crossed the minimum distance threshold for a selection action (and the selection speed bump) but has not crossed the maximum distance threshold of the selection speed bump. This state is valid only when SpeedBumpStart is enabled and SelectionStart is disabled in a GestureRecognizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.CrossSlidingState.Started">
      <summary>A CrossSliding interaction has been detected.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.DraggingEventArgs">
      <summary>Contains event data for the Dragging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.DraggingEventArgs.DraggingState">
      <summary>Gets the state of the Dragging event.</summary>
      <returns>State of the Dragging event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.DraggingEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.DraggingEventArgs.Position">
      <summary>Gets the location of the mouse or pen/stylus contact.</summary>
      <returns>The screen coordinates, in device-independent pixel (DIP).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.DraggingState">
      <summary>Specifies the possible states of the Dragging event.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.DraggingState.Completed">
      <summary>The mouse or pen/stylus contact is lifted and inertia has concluded.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.DraggingState.Continuing">
      <summary>The dragging interaction is in progress.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.DraggingState.Started">
      <summary>A dragging interaction has been detected.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.GestureRecognizer">
      <summary>Provides gesture and manipulation recognition, event listeners, and settings.

For more details on this API, please see the the UWP WinRT GestureRecognizer topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.CrossSliding">
      <summary>Occurs when a user performs a slide or swipe gesture (through a single touch contact) within a content area that supports panning along a single axis only. The gesture must occur in a direction that is perpendicular to this panning axis.

For more details on this API, please see the the UWP WinRT CrossSliding topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.Dragging">
      <summary>Occurs when a user performs a slide or swipe gesture with a mouse or pen/stylus (single contact).

For more details on this API, please see the the UWP WinRT Dragging topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.Holding">
      <summary>Occurs when a user performs a press and hold gesture (with a single touch, mouse, touchpad, or pen/stylus contact).

For more details on this API, please see the the UWP WinRT Holding topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.ManipulationCompleted">
      <summary>Occurs when the input points are lifted and all subsequent motion (translation, expansion, or rotation) through inertia has ended.

For more details on this API, please see the the UWP WinRT ManipulationCompleted topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.ManipulationInertiaStarting">
      <summary>Occurs when all contact points are lifted during a manipulation and the velocity of the manipulation is significant enough to initiate inertia behavior (translation, expansion, or rotation continue after the input pointers are lifted).

For more details on this API, please see the the UWP WinRT ManipulationInertiaStarting topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.ManipulationStarted">
      <summary>Occurs when one or more input points have been initiated and subsequent motion (translation, expansion, or rotation) has begun.

For more details on this API, please see the the UWP WinRT ManipulationStarted topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.ManipulationUpdated">
      <summary>Occurs after one or more input points have been initiated and subsequent motion (translation, expansion, or rotation) is under way.

For more details on this API, please see the the UWP WinRT ManipulationUpdated topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.RightTapped">
      <summary>Occurs when the pointer input is interpreted as a right-tap gesture, regardless of input device.

Examples include:

- Right mouse or touchpad button click
- Pen barrel button click
- Touch or pen press and hold

For more details on this API, please see the the UWP WinRT RightTapped topic.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.GestureRecognizer.Tapped">
      <summary>Occurs when the pointer input is interpreted as a tap gesture.

For more details on this API, please see the the UWP WinRT Tapped topic.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.#ctor">
      <summary>Initializes a new instance of a GestureRecognizer object.

For more details on this API, please see the the UWP WinRT GestureRecognizer topic.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.CanBeDoubleTap(Microsoft.UI.Input.PointerPoint)">
      <summary>Identifies whether a tap can still be interpreted as the second tap of a double tap gesture.

For more details on this API, please see the the UWP WinRT CanBeDoubleTap topic.</summary>
      <param name="value">The last input pointer.</param>
      <returns>True, if a UI element supports the double tap gesture and the time threshold to complete the gesture has not been crossed. Otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.CompleteGesture">
      <summary>Causes the gesture recognizer to finalize an interaction.

For more details on this API, please see the the UWP WinRT CompleteGesture topic.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.ProcessDownEvent(Microsoft.UI.Input.PointerPoint)">
      <summary>Processes pointer input and raises the GestureRecognizer events appropriate to a pointer down action (for the gestures and manipulations specified by the GestureSettings property).

For more details on this API, please see the the UWP WinRT ProcessDownEvent topic.</summary>
      <param name="value">The input point.</param>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.ProcessInertia">
      <summary>Performs inertia calculations and raises the various inertia events.

For more details on this API, please see the the UWP WinRT ProcessInertia topic.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.ProcessMouseWheelEvent(Microsoft.UI.Input.PointerPoint,System.Boolean,System.Boolean)">
      <summary>Processes pointer input and raises the GestureRecognizer events appropriate to a mouse wheel action (for the gestures and manipulations specified by the GestureSettings property).

For more details on this API, please see the the UWP WinRT ProcessMouseWheelEvent topic.</summary>
      <param name="value">The input point.</param>
      <param name="isShiftKeyDown">True, if the Shift key is pressed. Otherwise, false.</param>
      <param name="isControlKeyDown">True, if the Ctrl key is pressed. Otherwise, false.</param>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.ProcessMoveEvents(Windows.Foundation.Collections.IVector{Microsoft.UI.Input.PointerPoint})">
      <summary>Processes pointer input and raises the GestureRecognizer events appropriate to a pointer move action (for the gestures and manipulations specified by the GestureSettings property).

For more details on this API, please see the the UWP WinRT ProcessMoveEvents topic.</summary>
      <param name="value">The pointer location history based on the PointerPoint.PointerId". If no history is available then the value is the current location of the input pointer.</param>
    </member>
    <member name="M:Microsoft.UI.Input.GestureRecognizer.ProcessUpEvent(Microsoft.UI.Input.PointerPoint)">
      <summary>Processes pointer input and raises the GestureRecognizer events appropriate to a pointer up action (for the gestures and manipulations specified by the GestureSettings property).

For more details on this API, please see the the UWP WinRT ProcessUpEvent topic.</summary>
      <param name="value">The input point.</param>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.AutoProcessInertia">
      <summary>Gets or sets a value that indicates whether manipulations during inertia are generated automatically.

For more details on this API, please see the the UWP WinRT AutoProcessInertia topic.</summary>
      <returns>True, if manipulations are generated automatically. Otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.CrossSlideExact">
      <summary>Gets or sets a value that indicates whether the exact distance from initial contact to end of the cross-slide interaction is reported.

For more details on this API, please see the the UWP WinRT CrossSlideExact topic.</summary>
      <returns>A value that indicates whether the exact distance from initial contact to end of the cross-slide interaction is reported.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.CrossSlideHorizontally">
      <summary>Gets or sets a value that indicates whether the cross-slide axis is horizontal.

For more details on this API, please see the the UWP WinRT CrossSlideHorizontally topic.</summary>
      <returns>True, if the cross-slide axis is horizontal. Otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.CrossSlideThresholds">
      <summary>Gets or sets values that indicate the distance thresholds for a CrossSliding interaction.

For more details on this API, please see the the UWP WinRT CrossSlideThresholds topic.</summary>
      <returns>By default, every value in CrossSlideThresholds is set to 0.0 (cross-sliding functionality is disabled).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.GestureSettings">
      <summary>Gets or sets a value that indicates the gesture and manipulation settings supported by an application.

For more details on this API, please see the the UWP WinRT GestureSettings topic.</summary>
      <returns>A bitwise combination of gesture and manipulation settings supported by an application.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaExpansion">
      <summary>Gets or sets a value that indicates the relative change in size of an object from the start of inertia to the end of inertia (when resizing, or scaling, is complete).

For more details on this API, please see the the UWP WinRT InertiaExpansion topic.</summary>
      <returns>The relative change in size, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaExpansionDeceleration">
      <summary>Gets or sets a value that indicates the rate of deceleration from the start of inertia to the end of inertia (when the resizing, or expansion, manipulation is complete).

For more details on this API, please see the the UWP WinRT InertiaExpansionDeceleration topic.</summary>
      <returns>The rate of deceleration, in device-independent pixels (DIP)/ms&lt;sup&gt;2&lt;/sup&gt;.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaRotationAngle">
      <summary>Gets or sets a value that indicates the final angle of rotation of an object at the end of inertia (when the rotation manipulation is complete).

For more details on this API, please see the the UWP WinRT InertiaRotationAngle topic.</summary>
      <returns>The relative change in angle of rotation, in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaRotationDeceleration">
      <summary>Gets or sets a value that indicates the rate of deceleration from the start of inertia to the end of inertia (when the rotation manipulation is complete).

For more details on this API, please see the the UWP WinRT InertiaRotationDeceleration topic.</summary>
      <returns>The rate of deceleration, in degrees/ms&lt;sup&gt;2&lt;/sup&gt;.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaTranslationDeceleration">
      <summary>Gets or sets a value that indicates the rate of deceleration from the start of inertia to the end of inertia (when the translation manipulation is complete).

For more details on this API, please see the the UWP WinRT InertiaTranslationDeceleration topic.</summary>
      <returns>The rate of deceleration, in device-independent pixels (DIP)/ms&lt;sup&gt;2&lt;/sup&gt;.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.InertiaTranslationDisplacement">
      <summary>Gets or sets a value that indicates the relative change in the screen location of an object from the start of inertia to the end of inertia (when the translation manipulation is complete).

For more details on this API, please see the the UWP WinRT InertiaTranslationDisplacement topic.</summary>
      <returns>The relative change in screen location, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.IsActive">
      <summary>Gets a value that indicates whether an interaction is being processed.

For more details on this API, please see the the UWP WinRT IsActive topic.</summary>
      <returns>True, if the interaction (including inertia) is still being processed. Otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.IsInertial">
      <summary>Gets a value that indicates whether a manipulation is still being processed during inertia (no input points are active).

For more details on this API, please see the the UWP WinRT IsInertial topic.</summary>
      <returns>True, if the manipulation is still being processed during inertia. Otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.ManipulationExact">
      <summary>Gets or sets a value that indicates whether the exact distance from initial contact to end of the interaction is reported.

For more details on this API, please see the the UWP WinRT ManipulationExact topic.</summary>
      <returns>True, if the distance threshold is subtracted. Otherwise false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.MouseWheelParameters">
      <summary>Gets a set of properties that are associated with the wheel button of a mouse device.

For more details on this API, please see the the UWP WinRT MouseWheelParameters topic.</summary>
      <returns>The collection of wheel button properties. The system defaults should be checked to ensure the best user experience for your app.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.PivotCenter">
      <summary>Gets or sets the center point for a rotation interaction when single pointer input is detected.

For more details on this API, please see the the UWP WinRT PivotCenter topic.</summary>
      <returns>The screen location for the center of rotation, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.PivotRadius">
      <summary>Gets or sets the radius, from the PivotCenter to the pointer input, for a rotation interaction when single pointer input is detected.

For more details on this API, please see the the UWP WinRT PivotRadius topic.</summary>
      <returns>The offset between the PivotCenter point and the single pointer input, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.GestureRecognizer.ShowGestureFeedback">
      <summary>Gets or sets a value that indicates whether visual feedback is displayed during an interaction.

For more details on this API, please see the the UWP WinRT ShowGestureFeedback topic.</summary>
      <returns>True, if feedback is displayed. Otherwise, false. The default is true.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.GestureSettings">
      <summary>Specifies the interactions that are supported by an application.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.CrossSlide">
      <summary>Enable support for the CrossSliding interaction when using the slide or swipe gesture through a single touch contact.This gesture can be used for selecting or rearranging objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.DoubleTap">
      <summary>Enable support for the double-tap gesture.

- Touch: double tap
- Mouse: left button double click
- Pen/stylus: double tap
This gesture can be used to select a word or open a file or folder.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.Drag">
      <summary>Enable support for the slide or swipe gesture with a mouse or pen/stylus (single contact). The Dragging event is raised when either gesture is detected.This gesture can be used for text selection, selecting or rearranging objects, or scrolling and panning.

&gt; [!NOTE]
&gt; Mouse and pen/stylus input does not raise manipulation events (ManipulationStarted, ManipulationUpdated, and ManipulationCompleted ) during the course of this interaction.

Specifying support for Drag and one or more of the manipulation settings enables a single device to perform multiple actions. For example, the slide or swipe gesture can be performed with the left mouse button to select text while the wheel button can be rolled to scroll content.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.Hold">
      <summary>Enable support for the press and hold gesture (from a single touch or pen/stylus contact). The Holding event is raised if a time threshold is crossed before the contact is lifted, an additional contact is detected, or a gesture is started.

- Touch: press and hold
- Pen/stylus: press and hold
This gesture can be used to display a context menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.HoldWithMouse">
      <summary>Enable support for the press and hold gesture through the left button on a mouse. The Holding event is raised if a time threshold is crossed before the left button is released or a gesture is started.This gesture can be used to display a context menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationMultipleFingerPanning">
      <summary>Enable panning and disable zoom when two or more touch contacts are detected.Prevents unintentional zoom interactions when panning with multiple fingers.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationRotate">
      <summary>Enable support for the rotation gesture through pointer input. The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationRotateInertia">
      <summary>Enable support for rotation inertia after the rotate gesture (through pointer input) is complete. The ManipulationInertiaStarting event is raised if inertia is enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationScale">
      <summary>Enable support for the pinch or stretch gesture through pointer input.These gestures can be used for optical or semantic zoom and resizing an object. The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationScaleInertia">
      <summary>Enable support for scaling inertia after the pinch or stretch gesture (through pointer input) is complete. The ManipulationInertiaStarting event is raised if inertia is enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationTranslateInertia">
      <summary>Enable support for translation inertia after the slide gesture (through pointer input) is complete. The ManipulationInertiaStarting event is raised if inertia is enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationTranslateRailsX">
      <summary>Enable support for the slide gesture through pointer input, on the horizontal axis using rails (guides). The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.This gesture can be used for rearranging objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationTranslateRailsY">
      <summary>Enable support for the slide gesture through pointer input, on the vertical axis using rails (guides). The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.This gesture can be used for rearranging objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationTranslateX">
      <summary>Enable support for the slide gesture through pointer input, on the horizontal axis. The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.This gesture can be used for rearranging objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.ManipulationTranslateY">
      <summary>Enable support for the slide gesture through pointer input, on the vertical axis. The ManipulationStarted, ManipulationUpdated, and ManipulationCompleted events are all raised during the course of this interaction.This gesture can be used for rearranging objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.None">
      <summary>Disable support for gestures and manipulations.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.RightTap">
      <summary>Enable support for a right-tap interaction. The RightTapped event is raised when the contact is lifted or the mouse button released.

- Touch: press and hold
- Mouse: press and hold, right button click
- Pen/stylus: press and hold, tap with barrel button pressed
This gesture can be used to display a context menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.GestureSettings.Tap">
      <summary>Enable support for the tap gesture.

- Touch: tap
- Mouse: left button click
- Pen/stylus: tap</summary>
    </member>
    <member name="T:Microsoft.UI.Input.HoldingEventArgs">
      <summary>Contains event data for the Holding event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.HoldingEventArgs.HoldingState">
      <summary>Gets the state of the Holding event.</summary>
      <returns>State of the Holding event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.HoldingEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.HoldingEventArgs.Position">
      <summary>Gets the location of the touch, mouse, or pen/stylus contact.</summary>
      <returns>The screen coordinates, in device-independent pixel (DIP).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.HoldingState">
      <summary>Specifies the state of the Holding event.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.HoldingState.Canceled">
      <summary>An additional contact is detected, a subsequent gesture (such as a slide) is detected, or the CompleteGesture method is called.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.HoldingState.Completed">
      <summary>The single contact is lifted.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.HoldingState.Started">
      <summary>A single contact has been detected and a time threshold is crossed without the contact being lifted, another contact detected, or another gesture started.

&gt; [!NOTE]
&gt; The press and hold time threshold can be set in the Hardware and Sound control panel.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.InputCursor">
      <summary>Base class for a visual pointer object that can be applied to an InputPointerSource.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputCursor.Close">
      <summary>Closes the InputCursor and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputCursor.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.InputDesktopResourceCursor">
      <summary>Represents a visual pointer object that uses an application resource instead of a predefined system cursor.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputDesktopResourceCursor.Create(System.UInt32)">
      <summary>Creates an InputDesktopResourceCursor instance using the specified resource.</summary>
      <param name="resourceId">The resource identifier.</param>
      <returns>A visual pointer object.</returns>
    </member>
    <member name="M:Microsoft.UI.Input.InputDesktopResourceCursor.CreateFromModule(System.String,System.UInt32)">
      <summary>Creates an InputDesktopResourceCursor instance using the specified resource and the module from which to load the resource.</summary>
      <param name="moduleName">The module from which to load the resource.</param>
      <param name="resourceId">The resource identifier.</param>
      <returns>A visual pointer object.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.InputDesktopResourceCursor.ModuleName">
      <summary>Gets the name of the module that contains the cursor resource.</summary>
      <returns>The name of the module that contains the cursor resource.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.InputDesktopResourceCursor.ResourceId">
      <summary>Gets the resource identifier of the cursor resource.</summary>
      <returns>The resource identifier of the cursor resource.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputKeyboardSource">
      <summary>Enables handling of keyboard input for the current thread.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputKeyboardSource.GetKeyStateForCurrentThread(Windows.System.VirtualKey)">
      <summary>Retrieves the state of a virtual key.</summary>
      <param name="virtualKey"></param>
      <returns>The flags indicating the current state of the supplied virtual key when the input event fired.

&gt; [!NOTE]
&gt; All keys support the Locked state (not just the standard Caps Lock and Num Lock keys).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputLightDismissAction">
      <summary>Enables dismissal of the current window based on the detection of interaction events anywhere outside of the current window or from specific keyboard input.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputLightDismissAction.Dismissed">
      <summary>Occurs when the user taps or clicks outside of the associated window.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputLightDismissAction.GetForWindowId(Microsoft.UI.WindowId)">
      <summary>Retrieves the InputLightDismissAction object for the specified window.</summary>
      <param name="windowId">The window identifier.</param>
      <returns>The InputLightDismissAction object for the specified window. Otherwise, null.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputLightDismissEventArgs">
      <summary>Provides data for the Dismissed event.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.InputObject">
      <summary>Base class for all input objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.InputObject.DispatcherQueue">
      <summary>Gets the DispatcherQueue for the InputObject.</summary>
      <returns>The DispatcherQueue for the InputObject.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputPointerSource">
      <summary>Represents an object that is registered to report pointer input and provides pointer cursor and input event handling.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerCaptureLost">
      <summary>Occurs when an pointer in contact with this InputPointerSource moves to another input target.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerEntered">
      <summary>Occurs when a pointer moves into the bounds of this InputPointerSource.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerExited">
      <summary>Occurs when a pointer moves out of the bounds of this InputPointerSource.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerMoved">
      <summary>Occurs when a pointer moves while within the bounds of this InputPointerSource.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerPressed">
      <summary>Occurs when a mouse button is pressed, or a finger or pen initiate contact with the digitizer surface, while within the bounds of this InputPointerSource.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerReleased">
      <summary>Occurs when a pointer device that previously initiated a Press action is released (a mouse button is released, or a touch or pen contact is lifted from the digitizer surface), while within the bounds of this InputPointerSource.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerRoutedAway">
      <summary>Occurs when a pointer is redirected to another InputPointerSource (possibly in a separate process).</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerRoutedReleased">
      <summary>Occurs when s pointer that was routed to a different InputPointerSource is released on that other input target.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerRoutedTo">
      <summary>Occurs when a pointer is routed to this InputPointerSource from a different input target.</summary>
    </member>
    <member name="E:Microsoft.UI.Input.InputPointerSource.PointerWheelChanged">
      <summary>Occurs when the mouse wheel is rotated (the wheel delta value changes).</summary>
    </member>
    <member name="P:Microsoft.UI.Input.InputPointerSource.Cursor">
      <summary>Gets or sets the cursor displayed when a mouse or pen pointer is over the input target, a Visual or WindowId (HWND), of this InputPointerSource.</summary>
      <returns>The cursor displayed when a mouse or pen pointer is over the input target.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.InputPointerSource.DeviceKinds">
      <summary>Gets the device types supported by this InputPointerSource.</summary>
      <returns>The device types supported by this InputPointerSource.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputPointerSourceDeviceKinds">
      <summary>Specifies the pointer input device types that can be used with an InputPointerSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputPointerSourceDeviceKinds.Mouse">
      <summary>Mouse device.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputPointerSourceDeviceKinds.None">
      <summary>Not supported.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputPointerSourceDeviceKinds.Pen">
      <summary>Pen device.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputPointerSourceDeviceKinds.Touch">
      <summary>Touch-enabled device.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.InputSystemCursor">
      <summary>Represents a visual pointer object that uses predefined system cursors such as Hand, IBeam, and Arrow.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.InputSystemCursor.Create(Microsoft.UI.Input.InputSystemCursorShape)">
      <summary>Creates an InputSystemCursor instance using the specified cursor.</summary>
      <param name="type">A standard system visual pointer type.</param>
      <returns>A visual pointer object.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.InputSystemCursor.CursorShape">
      <summary>Gets the standard system visual pointer type supported by the InputSystemCursor object.</summary>
      <returns>The standard system visual pointer type.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.InputSystemCursorShape">
      <summary>Specifies the standard system visual pointer types supported by an InputSystemCursor object.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.AppStarting">
      <summary>The cursor that appears when an app starts, typically used to indicate something is loading but the UI can handle input.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Arrow">
      <summary>A standard arrow pointing left-upward (northwest).</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Cross">
      <summary>A crosshair.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Hand">
      <summary>A hand.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Help">
      <summary>An arrow pointing left-upward (northwest) with a question mark.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.IBeam">
      <summary>An "I"-shape, typically used for text insertion and selection.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Person">
      <summary>A hand with a person symbol.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Pin">
      <summary>A hand with a pin symbol.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.SizeAll">
      <summary>Crossed arrows pointing north, south, east, and west, typically used for resizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.SizeNortheastSouthwest">
      <summary>A dual arrow pointing right-upward and left-downward, typically used for element sizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.SizeNorthSouth">
      <summary>A dual arrow pointing upward and downward, typically used for vertical sizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.SizeNorthwestSoutheast">
      <summary>A dual arrow pointing left-upward and right-downward, typically used for element sizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.SizeWestEast">
      <summary>A dual arrow pointing left and right, typically used for horizontal sizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.UniversalNo">
      <summary>A red circle with 45-degree diagonal line from upper left to lower right, typically used to indicate an action that cannot be performed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.UpArrow">
      <summary>An arrow pointing up.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.InputSystemCursorShape.Wait">
      <summary>An animated, cycling cursor, typically used to indicate that an element or behavior is busy and cannot respond.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.Interop.PenDeviceInterop">
      <summary>Supports the ability to identify and track an active system PenDevice object through interop.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.Interop.PenDeviceInterop.FromPointerPoint(Microsoft.UI.Input.PointerPoint)">
      <summary>Retrieves a reference to a pen device associated with the specified pointer.</summary>
      <param name="pointerPoint">The pointer associated with the pen device.</param>
      <returns>A reference to a pen device.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.IPointerPointTransform">
      <summary>Provides generalized transformation functions.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.IPointerPointTransform.TryTransform(Windows.Foundation.Point,Windows.Foundation.Point@)">
      <summary>Attempts to perform the transformation on the specified input point.</summary>
      <param name="inPoint">The original input point.</param>
      <param name="outPoint">The transformed input point.</param>
      <returns>True if inPoint was transformed successfully. Otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Input.IPointerPointTransform.TryTransformBounds(Windows.Foundation.Rect,Windows.Foundation.Rect@)">
      <summary>Transforms the specified bounding rectangle.</summary>
      <param name="inRect">The bounding rectangle to transform.</param>
      <param name="outRect">The smallest, axis-aligned bounding box that encloses rect after the transformation. (An axis-aligned bounding box is one which has all sides parallel to the coordinate axes.)</param>
      <returns>True, if transform was successful. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.IPointerPointTransform.Inverse">
      <summary>Gets the inverse of the specified transformation.</summary>
      <returns>The inverse of the pointer transformation.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationCompletedEventArgs">
      <summary>Contains event data for the ManipulationCompleted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationCompletedEventArgs.Cumulative">
      <summary>Gets values that indicate the accumulated transformation deltas (translation, rotation, scale) of a completed manipulation (from the start of the manipulation to the end of inertia).</summary>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationCompletedEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationCompletedEventArgs.Position">
      <summary>Gets the location of the pointer associated with the manipulation for the last manipulation event.</summary>
      <returns>The screen coordinates, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationCompletedEventArgs.Velocities">
      <summary>Gets values that indicate the velocities of the transformation deltas (translation, rotation, scale) for a manipulation at the ManipulationCompleted event.</summary>
      <returns>The velocities of the accumulated transformations since a ManipulationStarted event.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationDelta">
      <summary>Contains the accumulated transformations for the current manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.ManipulationDelta.Expansion">
      <summary>The change in x-y screen coordinates, in device-independent pixels (DIP).</summary>
    </member>
    <member name="F:Microsoft.UI.Input.ManipulationDelta.Rotation">
      <summary>The change in angle of rotation, in degrees.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.ManipulationDelta.Scale">
      <summary>The change in distance between touch contacts, as a percentage. For example, if the distance between two contacts changes from 100 device-independent pixel (DIP) to 200 device-independent pixel (DIP) during a manipulation, the value of Scale would be 2.0.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.ManipulationDelta.Translation">
      <summary>The change in x-y screen coordinates, in device-independent pixels (DIP).</summary>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs">
      <summary>Contains event data for the GestureRecognizer.ManipulationInertiaStartingEvent".</summary>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs.Cumulative">
      <summary>Gets values that indicate the accumulated transformation deltas (translation, rotation, scale) for a manipulation before inertia begins.</summary>
      <returns>The accumulated transformation values up to the ManipulationInertiaStarting event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs.Delta">
      <summary>Gets values that indicate the changes in the transformation deltas (translation, rotation, scale) of a manipulation since the last manipulation event.</summary>
      <returns>The changes in transformation values since the last event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs.Position">
      <summary>Gets the location of the pointer associated with the manipulation for the last manipulation event.</summary>
      <returns>The screen coordinates, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationInertiaStartingEventArgs.Velocities">
      <summary>Gets values that indicate the velocities of the transformation deltas (translation, rotation, scale) for a manipulation at the ManipulationInertiaStarting event.</summary>
      <returns>The velocities of the transformations before inertia begins.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationStartedEventArgs">
      <summary>Contains event data for the ManipulationStarted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationStartedEventArgs.Cumulative">
      <summary>Gets values that indicate the accumulated transformation deltas (translation, rotation, scale) for a manipulation before the ManipulationStarted event.</summary>
      <returns>The accumulated transformation values up to the ManipulationStarted event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationStartedEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationStartedEventArgs.Position">
      <summary>Gets the location of the pointer associated with the manipulation for the last manipulation event.</summary>
      <returns>The screen coordinates, in device-independent pixels (DIP).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationUpdatedEventArgs">
      <summary>Contains event data for the ManipulationUpdated event.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationUpdatedEventArgs.Cumulative">
      <summary>Gets values that indicate the accumulated transformation deltas (translation, rotation, scale) for a manipulation from the beginning of the interaction to the ManipulationUpdated event.</summary>
      <returns>The accumulated transformation values up to the ManipulationUpdated event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationUpdatedEventArgs.Delta">
      <summary>Gets values that indicate the changes in the transformation deltas (translation, rotation, scale) of a manipulation since the last manipulation event.</summary>
      <returns>The changes in transformation values since the last event.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationUpdatedEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationUpdatedEventArgs.Position">
      <summary>Gets the location of the pointer associated with the manipulation for the last manipulation event.</summary>
      <returns>The screen coordinates, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.ManipulationUpdatedEventArgs.Velocities">
      <summary>Gets values that indicate the velocities of the transformation deltas (translation, rotation, scale) for a manipulation at the ManipulationUpdated event.</summary>
      <returns>The velocities of the accumulated transformations since a ManipulationStarted event.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.ManipulationVelocities" />
    <member name="F:Microsoft.UI.Input.ManipulationVelocities.Angular" />
    <member name="F:Microsoft.UI.Input.ManipulationVelocities.Expansion" />
    <member name="F:Microsoft.UI.Input.ManipulationVelocities.Linear" />
    <member name="T:Microsoft.UI.Input.MouseWheelParameters">
      <summary>Provides properties associated with the button wheel of a mouse device.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.MouseWheelParameters.CharTranslation">
      <summary>Gets or sets the conversion factors for both character width and line height units, in device-independent pixels (DIP).</summary>
      <returns>The conversion factors for the character width (x) and line height (y).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.MouseWheelParameters.DeltaRotationAngle">
      <summary>Gets or sets a value that indicates the change in the angle of rotation associated with input from the wheel button of a mouse.</summary>
      <returns>A value between 0.0 and 359.0 in degrees of rotation. The default value is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.MouseWheelParameters.DeltaScale">
      <summary>Gets or sets a value that indicates the change in scale associated with input from the wheel button of a mouse.</summary>
      <returns>The relative change in scale, in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.MouseWheelParameters.PageTranslation">
      <summary>Gets or sets the conversion factors for both page width and height units, in device-independent pixel (DIP).</summary>
      <returns>The conversion factors for the page width (x) and height (y).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.PointerDeviceType">
      <summary>Specifies the pointer-based input device types recognized by Windows.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerDeviceType.Mouse">
      <summary>Mouse pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerDeviceType.Pen">
      <summary>Pen pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerDeviceType.Touch">
      <summary>Touch pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerDeviceType.Touchpad">
      <summary>Touchpad pointer.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.PointerEventArgs">
      <summary>Contains the arguments returned by the last pointer event.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.PointerEventArgs.GetIntermediatePoints">
      <summary>Retrieves the pointer data for up to the last 64 pointer locations since the last pointer event.</summary>
      <returns>The data for each pointer.</returns>
    </member>
    <member name="M:Microsoft.UI.Input.PointerEventArgs.GetIntermediateTransformedPoints(Microsoft.UI.Input.IPointerPointTransform)">
      <summary>Retrieves the pointer data for up to the last 64 pointer locations since the last pointer event, transformed by the application-defined transform.</summary>
      <param name="transform">The application-defined transform.</param>
      <returns>The collection of transformed pointer data or an empty collection, if the application-defined transform fails.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerEventArgs.CurrentPoint">
      <summary>Gets the pointer data of the last pointer event.</summary>
      <returns>Information about the state and screen position of the pointer.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerEventArgs.Handled">
      <summary>Gets or sets whether the pointer event was handled.</summary>
      <returns>True, if the pointer event has been handled by the appropriate delegate. False if it has not been handled.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerEventArgs.KeyModifiers">
      <summary>Gets the keyboard key or keys used to modify the pointer input, such as the "Ctrl" key when pressed in conjunction with another key, as in Ctrl+C.</summary>
      <returns>The active key modifiers.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.PointerPoint">
      <summary>Provides basic properties for the input pointer associated with a single mouse, pen/stylus, or touch contact.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.PointerPoint.GetTransformedPoint(Microsoft.UI.Input.IPointerPointTransform)">
      <param name="transform" />
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.FrameId">
      <summary>Gets the ID of an input frame.</summary>
      <returns>The frame ID.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.IsInContact">
      <summary>Gets a value that indicates whether the input device (touch, pen/stylus) is pressing down on (touching) the digitizer surface, or a mouse button is pressed down.</summary>
      <returns>True if pressed down. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.PointerDeviceType">
      <summary>Gets the input device type associated with the input pointer.</summary>
      <returns>The input device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.PointerId">
      <summary>Gets a unique identifier for the input pointer.</summary>
      <returns>A unique value that identifies the input pointer.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.Position">
      <summary>Gets the location of the input pointer.</summary>
      <returns>The coordinates, in device-independent pixels (DIPs).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.Properties">
      <summary>Gets extended information about the input pointer.</summary>
      <returns>The extended properties exposed by the input device.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPoint.Timestamp">
      <summary>Gets the time when the input occurred.</summary>
      <returns>The time, relative to the system boot time, in microseconds.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.PointerPointProperties">
      <summary>Provides extended properties for a PointerPoint object.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.ContactRect">
      <summary>Gets the bounding rectangle of the contact area (typically from touch input).</summary>
      <returns>The bounding rectangle of the contact area, using client window coordinates in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsBarrelButtonPressed">
      <summary>Gets a value that indicates whether the barrel button of the pen/stylus device is pressed.</summary>
      <returns>True if the barrel button is pressed. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsCanceled">
      <summary>Gets a value that indicates whether the input was canceled by the pointer device.</summary>
      <returns>True if the input was canceled. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsEraser">
      <summary>Gets a value that indicates whether the input is from a pen eraser.</summary>
      <returns>True if the input is from a pen eraser. Oherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsHorizontalMouseWheel">
      <summary>Gets a value that indicates whether the input is from a mouse tilt wheel.</summary>
      <returns>True if the input is from a mouse tilt wheel. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsInRange">
      <summary>Gets a value that indicates whether the pointer device is within detection range of a sensor or digitizer (the pointer continues to exist).</summary>
      <returns>True if touch or pen is within detection range or mouse is over. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsInverted">
      <summary>Gets a value that indicates whether the digitizer pen is inverted.</summary>
      <returns>True if inverted. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsLeftButtonPressed">
      <summary>Gets a value that indicates whether the pointer input was triggered by the primary action mode of an input device.</summary>
      <returns>True if the primary action mode. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsMiddleButtonPressed">
      <summary>Gets a value that indicates whether the pointer input was triggered by the tertiary action mode of an input device (such as the mouse wheel button).</summary>
      <returns>True if the pointer input was triggered by the tertiary action mode. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsPrimary">
      <summary>Gets a value that indicates whether the input is from the primary pointer when multiple pointers are registered.</summary>
      <returns>True if the input is from the primary pointer. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsRightButtonPressed">
      <summary>Gets a value that indicates whether the pointer input was triggered by the secondary action mode (if supported) of an input device.</summary>
      <returns>True if the secondary action mode. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsXButton1Pressed">
      <summary>Gets a value that indicates whether the pointer input was triggered by the first extended mouse button (XButton1).</summary>
      <returns>True if the first extended mouse button is pressed. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.IsXButton2Pressed">
      <summary>Gets a value that indicates whether the pointer input was triggered by the second extended mouse button (XButton2).</summary>
      <returns>True if the second extended mouse button is pressed. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.MouseWheelDelta">
      <summary>Gets a value (the raw value reported by the device) that indicates the change in wheel button input from the last pointer event.</summary>
      <returns>The number of notches or distance thresholds crossed since the last pointer event. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.Orientation">
      <summary>Gets the counter-clockwise angle of rotation around the major axis of the pointer device (the z-axis, perpendicular to the surface of the digitizer). A value of 0.0 degrees indicates the device is oriented towards the top of the digitizer.</summary>
      <returns>A value between 0.0 and 359.0 in degrees of rotation. The default value is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.PointerUpdateKind">
      <summary>Gets the type of pointer state change.</summary>
      <returns>The type of pointer state change.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.Pressure">
      <summary>Gets a value that indicates the force that the pointer device (typically a pen/stylus) exerts on the surface of the digitizer.</summary>
      <returns>A value from 0 to 1.0. The default value is 0.5.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.TouchConfidence">
      <summary>Gets a value that indicates whether the pointer device rejected the touch contact.</summary>
      <returns>True if the touch contact was accepted. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.Twist">
      <summary>Gets the clockwise rotation in degrees of a pen device around its own major axis (such as when the user spins the pen in their fingers).</summary>
      <returns>A value between 0.0 and 359.0 in degrees of rotation. The default value is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.XTilt">
      <summary>Gets the plane angle between the Y-Z plane and the plane that contains the Y axis and the axis of the input device (typically a pen/stylus).</summary>
      <returns>The value is 0.0 when the finger or pen is perpendicular to the digitizer surface, between 0.0 and 90.0 when tilted to the right of perpendicular, and between 0.0 and -90.0 when tilted to the left of perpendicular. The default value is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPointProperties.YTilt">
      <summary>Gets the plane angle between the X-Z plane and the plane that contains the X axis and the axis of the input device (typically a pen/stylus).</summary>
      <returns>The value is 0.0 when the finger or pen is perpendicular to the digitizer surface, between 0.0 and 90.0 when tilted towards the user, and between 0.0 and -90.0 when tilted away from the user. The default value is 0.0.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.PointerPredictor">
      <summary>Provides support for generating a collection of PointerPoint objects that predict the most likely path of the current input Pointer.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.PointerPredictor.Close">
      <summary>Closes the PointerPredictor and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.PointerPredictor.CreateForInputPointerSource(Microsoft.UI.Input.InputPointerSource)">
      <summary>Creates an instance of a PointerPredictor for the specified InputPointerSource.</summary>
      <param name="inputPointerSource">The source of the input Pointer.</param>
      <returns>A pointer predictor instance.</returns>
    </member>
    <member name="M:Microsoft.UI.Input.PointerPredictor.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.PointerPredictor.GetPredictedPoints(Microsoft.UI.Input.PointerPoint)">
      <summary>Retrieves a collection of predicted points for the specified PointerPoint.</summary>
      <param name="point">The current point from which to base the predicted points.</param>
      <returns>A collection of predicted points and associated properties.

The prediction engine must process at least 10 input points before returning a collection of predicted input points. Otherwise it returns an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.PointerPredictor.PredictionTime">
      <summary>Gets or sets how far into the future from the current time the PointerPredictor object should attempt to predict pointer input.</summary>
      <returns>How far into the future from the current time the PointerPredictor object should attempt to predict pointer input. The default is 15 milliseconds.</returns>
    </member>
    <member name="T:Microsoft.UI.Input.PointerUpdateKind">
      <summary>Specifies the types of pointer updates that are supported by an application.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.LeftButtonPressed">
      <summary>Left button pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.LeftButtonReleased">
      <summary>Left button released.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.MiddleButtonPressed">
      <summary>Middle button pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.MiddleButtonReleased">
      <summary>Middle button released.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.Other">
      <summary>Pointer updates not identified by other PointerUpdateKind values.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.RightButtonPressed">
      <summary>Right button pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.RightButtonReleased">
      <summary>Right button released.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.XButton1Pressed">
      <summary>XBUTTON1 pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.XButton1Released">
      <summary>XBUTTON1 released.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.XButton2Pressed">
      <summary>XBUTTON2 pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Input.PointerUpdateKind.XButton2Released">
      <summary>XBUTTON2 released.</summary>
    </member>
    <member name="T:Microsoft.UI.Input.RightTappedEventArgs">
      <summary>Contains event data for the GestureRecognizer.RightTapped" event.

For more details on this API, please see the the UWP WinRT RightTappedEventArgs topic.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.RightTappedEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.RightTappedEventArgs.Position">
      <summary>Gets the location of the touch, mouse, or pen/stylus contact.</summary>
      <returns>The screen coordinates, in device-independent pixel (DIP).</returns>
    </member>
    <member name="T:Microsoft.UI.Input.TappedEventArgs">
      <summary>Contains event data for the Tapped event.

For more details on this API, please see the the UWP WinRT TappedEventArgs topic.</summary>
    </member>
    <member name="P:Microsoft.UI.Input.TappedEventArgs.PointerDeviceType">
      <summary>Gets the device type of the input source.</summary>
      <returns>The device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Input.TappedEventArgs.Position">
      <summary>Gets the location of the touch, mouse, or pen/stylus contact.</summary>
      <returns>The screen coordinates, in device-independent pixels (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Input.TappedEventArgs.TapCount">
      <summary>Gets the number of times the tap interaction was detected.</summary>
      <returns>The total number of detected taps.</returns>
    </member>
    <member name="T:Microsoft.UI.WindowId">
      <summary>Defines an identifier for a top-level window.</summary>
    </member>
    <member name="F:Microsoft.UI.WindowId.Value">
      <summary>The identifier for a top-level window.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindow">
      <summary>Represents a system-managed container for the content of an app.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.AppWindow.Changed">
      <summary>Occurs when a property of the window has changed, and the system is in a "steady state" for the time being.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.AppWindow.Closing">
      <summary>Occurs when a window is being closed through a system affordance.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.AppWindow.Destroying">
      <summary>Occurs when a window is being destroyed.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Create">
      <summary>Creates an app window with the styles and properties set to that of the default OverlappedPresenter.</summary>
      <returns>A new app window with the default configuration.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Create(Microsoft.UI.Windowing.AppWindowPresenter)">
      <summary>Creates a window with styles and properties as defined in the specified AppWindowPresenter.</summary>
      <param name="appWindowPresenter">An AppWindowPresenter object that specifies property values to apply to the window.</param>
      <returns>A new app window with the specified configuration.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Create(Microsoft.UI.Windowing.AppWindowPresenter,Microsoft.UI.WindowId)">
      <summary>Creates a window with styles and properties as defined in the specified AppWindowPresenter and parented to the specified window.</summary>
      <param name="appWindowPresenter">An AppWindowPresenter object that specifies property values to apply to the window.</param>
      <param name="ownerWindowId">The ID of the parent window for the new window.</param>
      <returns>A new app window with the specified configuration.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Destroy">
      <summary>Attempts to destroy the app window.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.GetFromWindowId(Microsoft.UI.WindowId)">
      <summary>Returns the AppWindow with the specified WindowId, if available. Returns null if the WindowId cannot be matched to a valid window.</summary>
      <param name="windowId">The identifier for the AppWindow.</param>
      <returns>The AppWindow with the specified WindowId, if available; null if the WindowId cannot be matched to a valid window.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Hide">
      <summary>Hides the window from all UX representations in the system but keeps the object alive.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Move(Windows.Graphics.PointInt32)">
      <summary>Moves the window to the specified point in screen coordinates.</summary>
      <param name="position">The point to move the window to in screen coordinates.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.MoveAndResize(Windows.Graphics.RectInt32)">
      <summary>Moves the window to the specified point in screen coordinates and sets it to the specified size.</summary>
      <param name="rect">A rectangle that specifies the position and size of the window.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.MoveAndResize(Windows.Graphics.RectInt32,Microsoft.UI.Windowing.DisplayArea)">
      <summary>Moves the window to the specified point within the given display area and sets it to the specified size.</summary>
      <param name="rect">A rectangle that specifies the position and size of the window.</param>
      <param name="displayarea">The display area where the window is to be positioned.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Resize(Windows.Graphics.SizeInt32)">
      <summary>Resizes the window to the specified size.</summary>
      <param name="size">The height and width of the window in screen coordinates.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.SetIcon(Microsoft.UI.IconId)">
      <summary>Sets the icon for the window, using the specified icon ID.</summary>
      <param name="iconId">The ID of the icon.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.SetIcon(System.String)">
      <summary>Sets the icon for the window, using the specified icon path.</summary>
      <param name="iconPath">The path of the icon.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.SetPresenter(Microsoft.UI.Windowing.AppWindowPresenter)">
      <summary>Applies the specified presenter to the window.</summary>
      <param name="appWindowPresenter">The presenter to apply to the window.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.SetPresenter(Microsoft.UI.Windowing.AppWindowPresenterKind)">
      <summary>Applies the specified presenter kind to the window.</summary>
      <param name="appWindowPresenterKind">The presenter kind to apply to the window.</param>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Show">
      <summary>Shows the window and activates it.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindow.Show(System.Boolean)">
      <summary>Shows the window with an option to activate it or not.</summary>
      <param name="activateWindow">true to activate the window; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.Id">
      <summary>Gets the identifier for the app window.</summary>
      <returns>The identifier for the app window.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.IsShownInSwitchers">
      <summary>Gets or sets a value that indicates whether this window will appear in various system representations, such as ALT+TAB and taskbar.</summary>
      <returns>true if this window will appear in various system representations, such as ALT+TAB and taskbar; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.IsVisible">
      <summary>Gets a value that indicates whether the window is shown.</summary>
      <returns>true if the window is shown; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.OwnerWindowId">
      <summary>Gets the identifier of the owner of this window; or 0 if not owned.</summary>
      <returns>The identifier of the owner of this window; 0 if not owned.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.Position">
      <summary>Gets the current position of the window in screen coordinates.</summary>
      <returns>The current position of the window in screen coordinates.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.Presenter">
      <summary>Gets the currently applied presenter for the app window.</summary>
      <returns>The currently applied presenter for the app window. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.Size">
      <summary>Gets the current size of the window in screen coordinates.</summary>
      <returns>The current size of the window in screen coordinates.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.Title">
      <summary>Gets or sets the displayed title of the app window.</summary>
      <returns>The displayed title of the app window. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindow.TitleBar">
      <summary>Gets the title bar of the app window.</summary>
      <returns>The title bar of the app window.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindowChangedEventArgs">
      <summary>Provides data for the AppWindow.Changed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowChangedEventArgs.DidPositionChange">
      <summary>Gets a value that indicates whether the AppWindow.Position property changed.</summary>
      <returns>true if the position of the window changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowChangedEventArgs.DidPresenterChange">
      <summary>Gets a value that indicates whether the AppWindow.Presenter property changed.</summary>
      <returns>true if the window's presenter changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowChangedEventArgs.DidSizeChange">
      <summary>Gets a value that indicates whether the AppWindow.Size property changed.</summary>
      <returns>true if the size of the window changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowChangedEventArgs.DidVisibilityChange">
      <summary>Gets a value that indicates whether the AppWindow.IsVisible property changed.</summary>
      <returns>true if the Visibility of the window changed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindowClosingEventArgs">
      <summary>Provides data for the AppWindow.Closing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>true if the event should be canceled; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindowPresenter">
      <summary>Displays an app window using a pre-defined configuration appropriate for the type of window.</summary>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowPresenter.Kind">
      <summary>Gets a value that indicates the kind of presenter the app window is using.</summary>
      <returns>A value of the enumeration that indicates the kind of presenter the app window is using.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindowPresenterKind">
      <summary>Defines constants that specify the kind of presenter the app window uses.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.AppWindowPresenterKind.CompactOverlay">
      <summary>The app window uses a compact overlay (picture-in-picture) presenter.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.AppWindowPresenterKind.Default">
      <summary>The app window uses the system default presenter.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.AppWindowPresenterKind.FullScreen">
      <summary>The app window uses a full screen presenter.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.AppWindowPresenterKind.Overlapped">
      <summary>The app window uses an overlapped presenter.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.AppWindowTitleBar">
      <summary>Represents the title bar of an app window.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindowTitleBar.IsCustomizationSupported">
      <summary>Gets a value that indicates whether the title bar can be customized.</summary>
      <returns>true if the title bar can be customized; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindowTitleBar.ResetToDefault">
      <summary>Resets the current title bar back to the default settings for the window.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.AppWindowTitleBar.SetDragRectangles(Windows.Graphics.RectInt32[])">
      <summary>Sets the drag regions for the window.</summary>
      <param name="value">An array of RectInt32, where each rectangle must be within the client area of the window to which the title bar belongs.</param>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.BackgroundColor">
      <summary>Gets or sets the color of the title bar background.</summary>
      <returns>The color of the title bar background.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonBackgroundColor">
      <summary>Gets or sets the background color of the title bar buttons.</summary>
      <returns>The background color of the title bar buttons.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonForegroundColor">
      <summary>Gets or sets the foreground color of the title bar buttons.</summary>
      <returns>The foreground color of the title bar buttons.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonHoverBackgroundColor">
      <summary>Gets or sets the background color of a title bar button when the pointer is over it.</summary>
      <returns>The background color of a title bar button when the pointer is over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonHoverForegroundColor">
      <summary>Gets or sets the foreground color of a title bar button when the pointer is over it.</summary>
      <returns>The foreground color of a title bar button when the pointer is over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonInactiveBackgroundColor">
      <summary>Gets or sets the background color of a title bar button when it's inactive.</summary>
      <returns>The background color of a title bar button when it's inactive.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonInactiveForegroundColor">
      <summary>Gets or sets the foreground color of a title bar button when it's inactive.</summary>
      <returns>The foreground color of a title bar button when it's inactive.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonPressedBackgroundColor">
      <summary>Gets or sets the background color of a title bar button when it's pressed.</summary>
      <returns>The background color of a title bar button when it's pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ButtonPressedForegroundColor">
      <summary>Gets or sets the foreground color of a title bar button when it's pressed.</summary>
      <returns>The foreground color of a title bar button when it's pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ExtendsContentIntoTitleBar">
      <summary>Gets or sets a value that specifies whether app content extends into the title bar area.</summary>
      <returns>true to extend app content into the title bar area; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.ForegroundColor">
      <summary>Gets or sets the color of the title bar foreground.</summary>
      <returns>The color of the title bar foreground.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.Height">
      <summary>Gets the height of the title bar in client coordinates.</summary>
      <returns>The height of the title bar in client coordinates.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.IconShowOptions">
      <summary>Gets or sets a value that specifies how the window icon is displayed in the title bar.</summary>
      <returns>A value that specifies how the window icon is displayed in the title bar.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.InactiveBackgroundColor">
      <summary>Gets or sets the color of the title bar background when it's inactive.</summary>
      <returns>The color of the title bar background when it's inactive.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.InactiveForegroundColor">
      <summary>Gets or sets the color of the title bar foreground when it's inactive.</summary>
      <returns>The color of the title bar foreground when it's inactive.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.LeftInset">
      <summary>Gets the width of the system-reserved region of the upper-left corner of the app window.</summary>
      <returns>The width of the system-reserved region of the upper-left corner of the app window.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.AppWindowTitleBar.RightInset">
      <summary>Gets the width of the system-reserved region of the upper-right corner of the app window.</summary>
      <returns>The width of the system-reserved region of the upper-right corner of the app window.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.CompactOverlayPresenter">
      <summary>Displays an app window using a CompactOverlay (picture-in-picture) configuration.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.CompactOverlayPresenter.Create">
      <summary>Creates a new instance of CompactOverlayPresenter.</summary>
      <returns>A new instance of CompactOverlayPresenter.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.CompactOverlayPresenter.InitialSize">
      <summary>Sets the initial size for the window when presented in CompactOverlay mode.</summary>
      <returns>The initial size for the window when presented in CompactOverlay mode.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.CompactOverlaySize">
      <summary>Defines constants that specify the size of a window in CompactOverlay mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.CompactOverlaySize.Large">
      <summary>Window size is approximately 25% of the display's work area.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.CompactOverlaySize.Medium">
      <summary>Window size is approximately 15% of the display's work area.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.CompactOverlaySize.Small">
      <summary>Window size is approximately 5% of the display's work area.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.DisplayArea">
      <summary>Represents the area of a display in which a view is able to be shown to a user.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayArea.CreateWatcher">
      <summary>Creates a DisplayAreaWatcher that notifies when a DisplayArea or the collection of display areas has changed.</summary>
      <returns>A new instance of DisplayAreaWatcher.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayArea.FindAll">
      <summary>Retrieves a list of all display areas currently present in the system.</summary>
      <returns>A list of all display areas currently present in the system.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayArea.GetFromPoint(Windows.Graphics.PointInt32,Microsoft.UI.Windowing.DisplayAreaFallback)">
      <summary>Gets the DisplayArea where the specified Point is present.</summary>
      <param name="point">The point for which to get the DisplayArea.</param>
      <param name="displayAreaFallback">The DisplayArea to use if no DisplayArea is found with the given parameter.</param>
      <returns>The DisplayArea where the specified point is present, or the display area indicated by _displayAreaFallback_ if no match is found.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayArea.GetFromRect(Windows.Graphics.RectInt32,Microsoft.UI.Windowing.DisplayAreaFallback)">
      <summary>Gets the DisplayArea where the specified rectangle is present.</summary>
      <param name="rect">The rectangle for which to get the DisplayArea.</param>
      <param name="displayAreaFallback">The DisplayArea to use if no DisplayArea is found with the given parameter.</param>
      <returns>The DisplayArea where the specified rectangle is present, or the display area indicated by _displayAreaFallback_ if no match is found.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayArea.GetFromWindowId(Microsoft.UI.WindowId,Microsoft.UI.Windowing.DisplayAreaFallback)">
      <summary>Gets the DisplayArea for the specified WindowId.</summary>
      <param name="windowId">The identifer of the window for which to get the DisplayArea.</param>
      <param name="displayAreaFallback">The DisplayArea to use if no DisplayArea is found with the given parameter.</param>
      <returns>The DisplayArea for the specified WindowId, or the display area indicated by _displayAreaFallback_ if no match is found.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayArea.DisplayId">
      <summary>Gets the identifier for the display associated with the DisplayArea.</summary>
      <returns>The identifier for the display associated with the DisplayArea.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayArea.IsPrimary">
      <summary>Gets a value that indicates whether the DisplayArea is located on the primary monitor.</summary>
      <returns>true if the DisplayArea is located on the primary monitor; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayArea.OuterBounds">
      <summary>Gets a rectangle that describes the bounds of the DisplayArea, where the X,Y offset is within the screen coordinate space.</summary>
      <returns>A rectangle that describes the bounds of the DisplayArea, where the X,Y offset is within the screen coordinate space.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayArea.Primary">
      <summary>Gets the primary DisplayArea for the desktop.</summary>
      <returns>The primary DisplayArea for the desktop.</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayArea.WorkArea">
      <summary>Gets the rectangle of the work area of the DisplayArea, where the X,Y offset is within the display area's bounds.</summary>
      <returns>The rectangle of the work area of the DisplayArea.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.DisplayAreaFallback">
      <summary>Defines constants that specify which DisplayArea to use if no DisplayArea intersects with the given parameter.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaFallback.Nearest">
      <summary>Use the nearest DisplayArea.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaFallback.None">
      <summary>Do not use any DisplayArea; return nullptr.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaFallback.Primary">
      <summary>Use the primary DisplayArea.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.DisplayAreaWatcher">
      <summary>Enumerates display areas and raises events when the collection of display areas or the configuration of an individual DisplayArea changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.DisplayAreaWatcher.Added">
      <summary>Occurs when a DisplayArea is added to the collection of display areas returned by DisplayArea.FindAll.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.DisplayAreaWatcher.EnumerationCompleted">
      <summary>Occurs when the initial pass of watcher events has been processed and the collection of display areas is complete.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.DisplayAreaWatcher.Removed">
      <summary>Occurs when a DisplayArea is removed from the collection returned by DisplayArea.FindAll.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.DisplayAreaWatcher.Stopped">
      <summary>Occurs when the DisplayAreaWatcher has stopped.</summary>
    </member>
    <member name="E:Microsoft.UI.Windowing.DisplayAreaWatcher.Updated">
      <summary>Occurs when the configuration of a DisplayArea has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayAreaWatcher.Start">
      <summary>Starts the DisplayAreaWatcher.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.DisplayAreaWatcher.Stop">
      <summary>Stops the DisplayAreaWatcher.</summary>
    </member>
    <member name="P:Microsoft.UI.Windowing.DisplayAreaWatcher.Status">
      <summary>Gets the status of the DisplayAreaWatcher.</summary>
      <returns>A value of the enumeration that indicates the status of the DisplayAreaWatcher.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.DisplayAreaWatcherStatus">
      <summary>Defines constants that specify the status of a DisplayAreaWatcher.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.Aborted">
      <summary>The watcher has stopped before completing enumeration of display areas.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.Created">
      <summary>The watcher has been created.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.EnumerationCompleted">
      <summary>The watcher has finished enumerating the display areas.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.Started">
      <summary>The watcher has started.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.Stopped">
      <summary>The watcher has stopped.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.DisplayAreaWatcherStatus.Stopping">
      <summary>The watcher is stopping.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.FullScreenPresenter">
      <summary>Displays an app window using a full-screen configuration.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.FullScreenPresenter.Create">
      <summary>Creates a new instance of FullScreenPresenter.</summary>
      <returns>A new instance of FullScreenPresenter.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.IconShowOptions">
      <summary>Defines constants that specify options for showing the window icon in the title bar.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.IconShowOptions.HideIconAndSystemMenu">
      <summary>Hide the icon and system menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.IconShowOptions.ShowIconAndSystemMenu">
      <summary>Show the icon and the system menu.</summary>
    </member>
    <member name="T:Microsoft.UI.Windowing.OverlappedPresenter">
      <summary>Displays an app window using an overlapped configuration.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.Create">
      <summary>Creates a new instance of OverlappedPresenter.</summary>
      <returns>A new instance of OverlappedPresenter.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.CreateForContextMenu">
      <summary>Creates an OverlappedPresenter object pre-populated with the values for a context menu.</summary>
      <returns>An OverlappedPresenter object pre-populated with the values for a context menu.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.CreateForDialog">
      <summary>Creates an OverlappedPresenter object pre-populated with the values for a dialog.</summary>
      <returns>An OverlappedPresenter object pre-populated with the values for a dialog.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.CreateForToolWindow">
      <summary>Creates an OverlappedPresenter object pre-populated with the values for a tool window.</summary>
      <returns>An OverlappedPresenter object pre-populated with the values for a tool window.</returns>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.Maximize">
      <summary>Maximizes the window that the presenter is applied to.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.Minimize">
      <summary>Minimizes the window that the presenter is applied to.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.Restore">
      <summary>Restores the window to the size and position it had before it was minimized or maximized.</summary>
    </member>
    <member name="M:Microsoft.UI.Windowing.OverlappedPresenter.SetBorderAndTitleBar(System.Boolean,System.Boolean)">
      <summary>Sets the border and title bar properties of the window.</summary>
      <param name="hasBorder">true if this window has a border; otherwise, false;</param>
      <param name="hasTitleBar">true if this window has a title bar; otherwise, false;</param>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.HasBorder">
      <summary>Gets a value that indicates whether this window has a border.</summary>
      <returns>true if this window has a border; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.HasTitleBar">
      <summary>Gets a value that indicates whether this window has a title bar.</summary>
      <returns>true if this window has a title bar; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.IsAlwaysOnTop">
      <summary>Gets or sets a value that indicates whether this window will be kept on top of other windows.</summary>
      <returns>true if this window will be kept on top of other windows; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.IsMaximizable">
      <summary>Gets or sets a value that indicates whether this window can be maximized.</summary>
      <returns>true if this window can be maximized; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.IsMinimizable">
      <summary>Gets or sets a value that indicates whether this window can be minimized.</summary>
      <returns>true if this window can be minimized; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.IsModal">
      <summary>Gets or sets a value that indicates whether this window is modal.</summary>
      <returns>true if this window is modal; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.IsResizable">
      <summary>Gets or sets a value that indicates whether this window can be resized.</summary>
      <returns>true if this window can be resized; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.UI.Windowing.OverlappedPresenter.State">
      <summary>Gets the state of the presenter.</summary>
      <returns>The state of the presenter. The default is Restored.</returns>
    </member>
    <member name="T:Microsoft.UI.Windowing.OverlappedPresenterState">
      <summary>Defines constants that specify the state of a window in overlapped mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.OverlappedPresenterState.Maximized">
      <summary>The window is maximized.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.OverlappedPresenterState.Minimized">
      <summary>The window is minimized.</summary>
    </member>
    <member name="F:Microsoft.UI.Windowing.OverlappedPresenterState.Restored">
      <summary>The window is restored to the size and position it had before it was minimized or maximized.</summary>
    </member>
  </members>
</doc>