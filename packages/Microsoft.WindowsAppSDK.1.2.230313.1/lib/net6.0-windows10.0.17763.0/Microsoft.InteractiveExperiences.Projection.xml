<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.InteractiveExperiences.Projection</name>
  </assembly>
  <members>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueue">
      <summary>Manages a prioritized queue on which tasks execute in a serial fashion on a thread.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueue.HasThreadAccess">
      <summary>Gets a value indicating whether the DispatcherQueue has access to the current thread.</summary>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownCompleted">
      <summary>Fires after the **DispatcherQueue** event loop stops which is the last step in the **DispatcherQueue** shutdown process.</summary>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownStarting">
      <summary>Fires before the dispatcher queue initiates an exit from its event loop.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.CreateTimer">
      <summary>Creates a **DispatcherQueueTimer** on the **DispatcherQueue** to execute a task periodically after a time interval has elapsed.</summary>
      <returns>An **DispatcherQueueTimer** that can queue tasks on a timed basis to the current **DispatcherQueue**.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.GetForCurrentThread">
      <summary>Gets the **DispatcherQueue** associated with the current thread.</summary>
      <returns>A **DispatcherQueue** instance that will execute tasks serially on the current thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the **DispatcherQueue** which will be executed on the thread  associated with the **DispatcherQueue**.</summary>
      <param name="callback">The task to execute.</param>
      <returns>**True** indicates that the task was added to the queue; **false**, otherwise.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueuePriority,Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the **DispatcherQueue** which will be executed on the thread associated with the **DispatcherQueue**.</summary>
      <param name="priority">The priority of the task such as Low, Normal, or High.</param>
      <param name="callback">A delegate to the task to execute.</param>
      <returns>**True** indicates that the task was added to the queue; **false**, otherwise.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueController">
      <summary>Manages the lifetime of a DispatcherQueue. Provides methods to create and shutdown the **DispatcherQueue**.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueController.DispatcherQueue">
      <summary>Gets the **DispatcherQueue** associated with this **DispatcherQueueController**.</summary>
      <returns>The **DispatcherQueue** instance that you use to queue tasks that run on a thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.CreateOnDedicatedThread">
      <summary>Creates a DispatcherQueue that you can use to run tasks on a dedicated thread.</summary>
      <returns>The created **DispatcherQueueController**.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.ShutdownQueueAsync">
      <summary>Stops the **DispatcherQueue** associated with this **DispatcherQueueController**. Shuts down the thread if the **DispatcherQueueController** was created by **CreateOnDedicatedThread**.</summary>
      <returns>An asynchronous operation which will complete after the queue has dispatched all of its remaining work.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueHandler">
      <summary>A callback that will be executed on the **DispatcherQueue** thread.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueuePriority">
      <summary>Defines the priority levels that can be given to work assigned to a DispatcherQueue.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.High">
      <summary>Work scheduled at **High** priority will be dispatched first, along with other **High** priority System tasks, before processing **Normal** or **Low** priority work.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Low">
      <summary>**Low** priority work will be scheduled when there isn't any other work to process. Work at **Low** priority can be preempted by new incoming **High** and **Normal** priority tasks.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Normal">
      <summary>Work will be dispatched once all **High** priority tasks are dispatched. If a new **High** priority work is scheduled, all new **High** priority tasks are processed before resuming **Normal** tasks. This is the default priority.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs">
      <summary>Provides the arguments for the ShutdownStarting event.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs.GetDeferral">
      <summary>Gets a deferral object so that you can use to continue to post work to the **DispatcherQueue** until you mark the deferral complete.</summary>
      <returns>The deferral object.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueTimer">
      <summary>Executes a task in a **DispatcherQueue** periodically after a time interval has elapsed.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.Interval">
      <summary>Gets and sets the interval for the timer.</summary>
      <returns>The amount of time before the timer ticks.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRepeating">
      <summary>Indicates whether the timer is repeating.</summary>
      <returns>**True** indicates that the timer fires every **DispatcherQueueTimer.Interval**; **false** means that it fires once, after **DispatcherQueueTimer.Interval** elapses.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRunning">
      <summary>Indicates whether the timer is currently running.</summary>
      <returns>**True** indicates that the timer is running; otherwise **false**</returns>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueueTimer.Tick">
      <summary>Event that fires when the timer **Interval** elapses.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Start">
      <summary>Starts the timer.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Stop">
      <summary>Stops the timer.</summary>
    </member>
    <member name="T:Microsoft.UI.ColorHelper">
      <summary>Provides static helper methods for processing Color values.</summary>
    </member>
    <member name="M:Microsoft.UI.ColorHelper.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Generates a Color structure, based on discrete **Byte** values for **ARGB** components.</summary>
      <param name="a">The **A** (transparency) component of the desired color. Range is 0-255.</param>
      <param name="r">The **R** component of the desired color. Range is 0-255.</param>
      <param name="g">The **G** component of the desired color. Range is 0-255.</param>
      <param name="b">The **B** component of the desired color. Range is 0-255.</param>
      <returns>The generated Color value.</returns>
    </member>
    <member name="T:Microsoft.UI.Colors">
      <summary>Implements a set of predefined colors. See Color for usage information.</summary>
    </member>
    <member name="P:Microsoft.UI.Colors.AliceBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.AntiqueWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAEBD7.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAEBD7.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aqua">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFFD4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFFD4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Azure">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Beige">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Bisque">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4C4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4C4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Black">
      <summary>Gets the system-defined color that has the ARGB value of #FF000000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF000000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlanchedAlmond">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEBCD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEBCD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Blue">
      <summary>Gets the system-defined color that has the ARGB value of #FF0000FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FF0000FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlueViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF8A2BE2.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8A2BE2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Brown">
      <summary>Gets the system-defined color that has the ARGB value of #FFA52A2A.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA52A2A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BurlyWood">
      <summary>Gets the system-defined color that has an ARGB value of #FFDEB887.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDEB887.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CadetBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF5F9EA0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF5F9EA0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chartreuse">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chocolate">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2691E.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2691E.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Coral">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF7F50.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF7F50.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CornflowerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6495ED.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6495ED.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cornsilk">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF8DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF8DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Crimson">
      <summary>Gets the system-defined color that has an ARGB value of #FFDC143C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDC143C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cyan">
      <summary>Gets the system-defined color that has the ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has the ARGB value of ##FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FF008B8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008B8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFB8860B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB8860B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFA9A9A9.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA9A9A9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF006400.</summary>
      <returns>The system-defined color that has an ARGB value of #FF006400.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkKhaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFBDB76B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBDB76B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkMagenta">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOliveGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF556B2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF556B2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrange">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF8C00.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF8C00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FF9932CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9932CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkRed">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B0000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFE9967A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE9967A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF8FBC8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8FBC8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF483D8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF483D8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF2F4F4F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2F4F4F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF00CED1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00CED1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF9400D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9400D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF1493.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF1493.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00BFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00BFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DimGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF696969.</summary>
      <returns>The system-defined color that has an ARGB value of #FF696969.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DodgerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF1E90FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF1E90FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Firebrick">
      <summary>Gets the system-defined color that has an ARGB value of #FFB22222.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB22222.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.FloralWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.ForestGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF228B22.</summary>
      <returns>The system-defined color that has an ARGB value of #FF228B22.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Fuchsia">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gainsboro">
      <summary>Gets the system-defined color that has an ARGB value of #FFDCDCDC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDCDCDC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GhostWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFF8F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF8F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gold">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFD700.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFD700.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Goldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFDAA520.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDAA520.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gray">
      <summary>Gets the system-defined color that has the ARGB value of #FF808080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF808080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Green">
      <summary>Gets the system-defined color that has the ARGB value of #FF008000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF008000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GreenYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFADFF2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADFF2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Honeydew">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.HotPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF69B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF69B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.IndianRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD5C5C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD5C5C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Indigo">
      <summary>Gets the system-defined color that has an ARGB value of #FF4B0082.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4B0082.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Ivory">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Khaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0E68C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0E68C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lavender">
      <summary>Gets the system-defined color that has an ARGB value of #FFE6E6FA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE6E6FA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LavenderBlush">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF0F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF0F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LawnGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF7CFC00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7CFC00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LemonChiffon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFADD8E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADD8E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCoral">
      <summary>Gets the system-defined color that has an ARGB value of #FFF08080.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF08080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FFE0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGoldenrodYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAFAD2.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAFAD2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFD3D3D3.</summary>
      <returns>The system-defined color that has the ARGB value of #FFD3D3D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF90EE90.</summary>
      <returns>The system-defined color that has an ARGB value of #FF90EE90.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFB6C1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFB6C1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFA07A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFA07A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF20B2AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF20B2AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF778899.</summary>
      <returns>The system-defined color that has an ARGB value of #FF778899.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0C4DE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0C4DE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFE0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFE0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lime">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LimeGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF32CD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF32CD32.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Linen">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAF0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAF0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Magenta">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Maroon">
      <summary>Gets the system-defined color that has an ARGB value of #FF800000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF800000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumAquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF66CDAA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF66CDAA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF0000CD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF0000CD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFBA55D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBA55D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumPurple">
      <summary>Gets the system-defined color that has an ARGB value of #FF9370DB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9370DB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF3CB371.</summary>
      <returns>The system-defined color that has an ARGB value of #FF3CB371.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF7B68EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7B68EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FA9A.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FA9A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF48D1CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF48D1CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFC71585.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC71585.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MidnightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF191970.</summary>
      <returns>The system-defined color that has an ARGB value of #FF191970.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MintCream">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5FFFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5FFFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MistyRose">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Moccasin">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4B5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4B5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.NavajoWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDEAD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDEAD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Navy">
      <summary>Gets the system-defined color that has an ARGB value of #FF000080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF000080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OldLace">
      <summary>Gets the system-defined color that has an ARGB value of #FFFDF5E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFDF5E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Olive">
      <summary>Gets the system-defined color that has an ARGB value of #FF808000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF808000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OliveDrab">
      <summary>Gets the system-defined color that has an ARGB value of #FF6B8E23.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6B8E23.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orange">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFA500.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFA500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OrangeRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF4500.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF4500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFDA70D6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDA70D6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFEEE8AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEEE8AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF98FB98.</summary>
      <returns>The system-defined color that has an ARGB value of #FF98FB98.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FFAFEEEE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFAFEEEE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFDB7093.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDB7093.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PapayaWhip">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEFD5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEFD5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PeachPuff">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDAB9.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDAB9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Peru">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD853F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD853F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Pink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFC0CB.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFC0CB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Plum">
      <summary>Gets the system-defined color that has an ARGB value of #FFDDA0DD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDDA0DD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PowderBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0E0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0E0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Purple">
      <summary>Gets the system-defined color that has the ARGB value of #FF800080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF800080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Red">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF0000.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RosyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFBC8F8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBC8F8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RoyalBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4169E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4169E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SaddleBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B4513.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B4513.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Salmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFA8072.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFA8072.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SandyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFF4A460.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF4A460.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF2E8B57.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2E8B57.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaShell">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF5EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF5EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Sienna">
      <summary>Gets the system-defined color that has an ARGB value of #FFA0522D.</summary>
      <returns>The system-defined color that has an ARGB value of #FFA0522D.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Silver">
      <summary>Gets the system-defined color that has an ARGB value of #FFC0C0C0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC0C0C0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEEB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEEB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6A5ACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6A5ACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF708090.</summary>
      <returns>The system-defined color that has an ARGB value of #FF708090.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Snow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF7F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF7F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4682B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4682B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tan">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2B48C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2B48C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Teal">
      <summary>Gets the system-defined color that has an ARGB value of #FF008080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Thistle">
      <summary>Gets the system-defined color that has an ARGB value of #FFD8BFD8.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD8BFD8.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tomato">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF6347.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF6347.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Transparent">
      <summary>Gets the system-defined color that has the ARGB value of #00FFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #00FFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Turquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF40E0D0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF40E0D0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Violet">
      <summary>Gets the system-defined color that has an ARGB value of #FFEE82EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEE82EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Wheat">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5DEB3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5DEB3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.White">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.WhiteSmoke">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Yellow">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFF00.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.YellowGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF9ACD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9ACD32.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AmbientLight">
      <summary>A light that illuminates every targeted Visual equally.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Color">
      <summary>Color of the light. Animatable.</summary>
      <returns>The color of the ambient light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationController">
      <summary>Provides playback controls for a KeyFrameAnimation.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MaxPlaybackRate">
      <summary>Gets the maximum allowed playback rate.</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MinPlaybackRate">
      <summary>Gets the minimum allowed playback rate.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.PlaybackRate">
      <summary>Gets or sets the rate at which the animation plays.</summary>
      <returns>The rate at which the animation plays. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.Progress">
      <summary>Gets or sets a value that indicates the current playback position of the animation.</summary>
      <returns>The current playback position of the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.ProgressBehavior">
      <summary>Gets or sets a value that indicates how progress is determined.</summary>
      <returns>A value of the enumeration that indicates how progress is determined. The default is **Default**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Pause">
      <summary>Pauses playback of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Resume">
      <summary>Starts playback of an animation that was previously paused.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationControllerProgressBehavior">
      <summary>Defines constants that specify how the AnimationController.Progress value is determined.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.Default">
      <summary>The progress value does not include delay time.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.IncludesDelayTime">
      <summary>The progress value includes delay time.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDelayBehavior">
      <summary>Specifies the animation delay behavior.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueAfterDelay">
      <summary>Does not compute anything in animation nor holds the value of composition object property. If a DelayTime is specified, it delays starting the animation according to delay time and after delay has expired it applies animation to the object property.�</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueBeforeDelay">
      <summary>Applies the initial value of the animation (i.e. the value at Keyframe 0) to the object before the delay time is elapsed (when there is a DelayTime specified), it then delays starting the animation according to the DelayTime.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDirection">
      <summary>Specifies the play direction of an animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Alternate">
      <summary>Alternate between normal and reverse playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.AlternateReverse">
      <summary>Alternate between reverse and normal playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Normal">
      <summary>Play the animation from start to end.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Reverse">
      <summary>Play the animation in reverse from end to start.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationIterationBehavior">
      <summary>Specifies if the animation should loop.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Count">
      <summary>The animation should loop the specified number of times.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Forever">
      <summary>The animation should loop forever.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyAccessMode">
      <summary>Defines constants that specify how an animated property can be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.None">
      <summary>The property cannot be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadOnly">
      <summary>The property can only be read.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadWrite">
      <summary>The property can be read or written to.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.WriteOnly">
      <summary>The property can only be written to.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyInfo">
      <summary>Represents information about a property that can be animated.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationPropertyInfo.AccessMode">
      <summary>Gets or sets a value that specifies how an animated property can be accessed.</summary>
      <returns>A value of the enumeration that specifies how an animated property can be accessed.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationStopBehavior">
      <summary>Specifies the behavior of an animation when it stops.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.LeaveCurrentValue">
      <summary>Leave the animation at its current value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToFinalValue">
      <summary>Set the animation to its final value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToInitialValue">
      <summary>Reset the animation to its initial value.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.BooleanKeyFrameAnimation">
      <summary>A time-based animation that targets a Boolean property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.BooleanKeyFrameAnimation.InsertKeyFrame(System.Single,System.Boolean)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ColorKeyFrameAnimation">
      <summary>A time-based animation that targets the Color property with one or more color key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ColorKeyFrameAnimation.InterpolationColorSpace">
      <summary>The color space the color interpolation should run through.</summary>
      <returns>The color space the color interpolation should run through.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimation">
      <summary>Represents the base animation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.InitialValueExpressions">
      <summary>Gets the initial values for the animation.</summary>
      <returns>The initial values for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.Target">
      <summary>The target of the animation.</summary>
      <returns>The target of the animation.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearAllParameters">
      <summary>Clears all of the parameters of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearParameter(System.String)">
      <summary>Clears a parameter from the animation.</summary>
      <param name="key">The parameter to clear.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetBooleanParameter(System.String,System.Boolean)">
      <summary>Sets a boolean value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The boolean value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetColorParameter(System.String,Windows.UI.Color)">
      <summary>Sets a Color value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Color value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetExpressionReferenceParameter(System.String,Microsoft.UI.Composition.IAnimationObject)">
      <summary>Sets an IAnimationObject value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="parameterName">The name of the parameter to set.</param>
      <param name="source">The source object.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix3x2Parameter(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Sets a Matrix3x2 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix3x2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix4x4Parameter(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Sets a Matrix4x4 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix4x4 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetQuaternionParameter(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Sets a Quaternion value for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The quaternion value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetReferenceParameter(System.String,Microsoft.UI.Composition.CompositionObject)">
      <summary>Sets a reference to a Composition object for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set. The name can be used to reference the parameter in the ExpressionAnimation.</param>
      <param name="compositionObject">The CompositionObject value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetScalarParameter(System.String,System.Single)">
      <summary>Sets a Scalar value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Single value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector2Parameter(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Sets a Vector2 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector3Parameter(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Sets a Vector3 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector3 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector4Parameter(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Sets a Vector4 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter.</param>
      <param name="value">The Vector4 value.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimationGroup">
      <summary>Defines a group of animations.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimationGroup.Count">
      <summary>The number of animations in the group.</summary>
      <returns>The number of animations in the group.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Add(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Adds an animation to the animation group.</summary>
      <param name="value">The animation to add to the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.First">
      <summary>Retrieves the first animation in the group.</summary>
      <returns>Returns the first animation in the group.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Remove(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Removes an animation from the animation group.</summary>
      <param name="value">The animation to remove from the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.RemoveAll">
      <summary>Removes all animations from the group.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackdropBrush">
      <summary>A brush that applies an effect (or a chain of effects) to the region behind a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackfaceVisibility">
      <summary>Specifies whether the back face of a visual is visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Hidden">
      <summary>The back face should not be visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Inherit">
      <summary>Inherit the back face visibility value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Visible">
      <summary>The back face should be visible during a 3D transform.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchCompletedEventArgs">
      <summary>Arguments for the CompositionCommitBatch.Completed or CompositionScopedBatch.Completed events.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchTypes">
      <summary>Batch types for CompositionCommitBatch and CompositionScopedBatch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.AllAnimations">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Animation">
      <summary>The batch contains animations.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Effect">
      <summary>The batch contains effects.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.InfiniteAnimation">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.None">
      <summary>None.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on screen.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.Linear">
      <summary>Interpolate a color from the four bitmap pixels that are the nearest to the current rendering pixel.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.NearestNeighbor">
      <summary>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBorderMode">
      <summary>Controls the aliasing behavior on the edges of visual borders.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Hard">
      <summary>Bitmap and clip edges are aliased.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Inherit">
      <summary>Inherit from parent.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Soft">
      <summary>Bitmap and clip edges are antialiased.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBrush">
      <summary>Base class for brushes used to paint a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCapabilities">
      <summary>Provides the ability to check system hardware capabilities so that Visual Layer Effects may be scaled accordingly. This allows you to ensure that your application's use of rendering-intensive operations is tailored to match the device's capabilities, providing optimum performance and pleasant visual results.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCapabilities.Changed">
      <summary>Event triggered when the supported composition capabilities changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsFast">
      <summary>Indicates whether fast effects are supported.</summary>
      <returns>Returns a boolean indicating whether fast effects are supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsSupported">
      <summary>Indicates whether effects are supported.</summary>
      <returns>Returns a boolean indicating whether effects are supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.GetForCurrentView">
      <summary>Gets the supported composition capabilities for the current view.</summary>
      <returns>Returns the supported composition capabilities for the current view.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionClip">
      <summary>Base class for clipping objects such as InsetClip.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.AnchorPoint">
      <summary>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip.</summary>
      <returns>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip. An AnchorPoint value of (0, 0) refers to the top-left corner of the untransformed clip and a value of (1, 1) refers to the bottom-right corner. Negative values and values greater than one are accepted but will result in an AnchorPoint that is outside the boundaries of the original, untransformed clip.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.CenterPoint">
      <summary>The point about which rotation or scaling occurs.</summary>
      <returns>The point about which rotation or scaling occurs. Value is in pixels within the local coordinate space of the visual on which the clip is applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Offset">
      <summary>The offset of the clip relative to the visual on which the clip is applied.</summary>
      <returns>The offset of the clip relative to the visual on which the clip is applied. By default, the Offset value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngle">
      <summary>The angle of rotation applied to the clip, in radians.</summary>
      <returns>The angle of rotation applied to the clip, in radians. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngle values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in degrees, use CompositionClip.RotationAngleInDegrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngleInDegrees">
      <summary>The angle of rotation applied to the clip, in degrees.</summary>
      <returns>The angle of rotation applied to the clip, in degrees. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngleInDegrees values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in radians, use CompositionClip.RotationAngle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Scale">
      <summary>The scale to apply to the clip.</summary>
      <returns>The scale to apply to the clip. The scale value is a multiplier of the clip's size. By default, the Scale value on a clip is (1, 1).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.TransformMatrix">
      <summary>The 3x2 transformation matrix to apply to the clip.</summary>
      <returns>The transformation matrix to apply to the clip. By default, the TransformMatrix is set to:</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorBrush">
      <summary>Paints a SpriteVisual with a solid color.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorBrush.Color">
      <summary>The color used to fill a SpriteVisual. Animatable.</summary>
      <returns>The color used to fill a SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStop">
      <summary>Describes the location and color of a transition point in a gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Color">
      <summary>Gets or sets the color of the gradient stop.</summary>
      <returns>The color of the gradient stop. The default is Transparent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Offset">
      <summary>Gets or sets the location of the gradient stop within the gradient vector.</summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStopCollection">
      <summary>Represents a collection of CompositionColorGradientStop objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Append(Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionColorGradientStop value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.IndexOf(Microsoft.UI.Composition.CompositionColorGradientStop,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.ReplaceAll(Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Sets the value at the specified index to the CompositionColorGradientStop value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorSpace">
      <summary>Specifies the color space for interpolating color values in ColorKeyFrameAnimation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Auto">
      <summary>Use the default color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Hsl">
      <summary>Use the HSL color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.HslLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Rgb">
      <summary>Use the ARGB color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.RgbLinear">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCommitBatch">
      <summary>A group of active animations or effects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsActive">
      <summary>Indicates whether the CompositionCommitBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsEnded">
      <summary>Indicates whether the CompositionCommitBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCommitBatch.Completed">
      <summary>Event that is triggered when all objects in a CompositionCommitBatch have completed.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCompositeMode">
      <summary>Determines how a non-opaque visual's content is blended with the background content behind the visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.DestinationInvert">
      <summary>The visual content's colors are inverted.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.Inherit">
      <summary>Inherits mode from parent visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.MinBlend">
      <summary>Visual content's colors subtract for color channels in the background.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.SourceOver">
      <summary>The standard Composite Mode. Colors are blended with per-pixel transparency.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionContainerShape">
      <summary>Represents a container for CompositionShapes, used to group items that share 2D transforms.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionContainerShape.Shapes">
      <summary>Gets the collection of CompostionShapes in this container.</summary>
      <returns>The collection of CompostionShapes in this container.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDrawingSurface">
      <summary>A drawing surface for interoperation with Direct2D or Direct3D.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.AlphaMode">
      <summary>The alpha mode of the drawing surface.</summary>
      <returns>The alpha mode of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.PixelFormat">
      <summary>The pixel format of the drawing surface.</summary>
      <returns>The pixel format of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.Size">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.SizeInt32">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Resize(Windows.Graphics.SizeInt32)">
      <summary>Resizes the drawing surface to the specified size.</summary>
      <param name="sizePixels">The new size in pixels for the drawing surface.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface using the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface with the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy">
      <summary>Specifies the masking policy for a shadow.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.Default">
      <summary>Shadow defaults to rectangular shape or the mask provided.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.InheritFromVisualContent">
      <summary>Shadow uses a mask using the alpha value of the visual's brush.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEasingFunction">
      <summary>Base class for interpolator functions to use with KeyFrameAnimations.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectBrush">
      <summary>Paints a SpriteVisual with the output of a filter effect. The filter effect description is defined using the  CompositionEffectFactory class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.GetSourceParameter(System.String)">
      <summary>Retrieves a CompositionBrush associated with a given CompositionEffectSourceParameter name.</summary>
      <param name="name">The name of the input.</param>
      <returns>Returns the specified input.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.SetSourceParameter(System.String,Microsoft.UI.Composition.CompositionBrush)">
      <summary>Associates a name declared using CompositionEffectSourceParameter to an effect source.</summary>
      <param name="name">The name of the source parameter.</param>
      <param name="source">The source to pass to the effect.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactory">
      <summary>Creates a composition object that contains a Win2D effect description format in the Microsoft.Graphics.Canvas.Effects namespace.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.ExtendedError">
      <summary>An extended error code for the result of a call to CreateBrush.</summary>
      <returns>An extended error code for the result of a call to CreateBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.LoadStatus">
      <summary>The load status of a CreateBrush call.</summary>
      <returns>The load status of a CreateBrush call.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectFactory.CreateBrush">
      <summary>Creates an instance of CompositionEffectBrush with the effect definition and animatable properties contained in the CompositionEffectFactory object.</summary>
      <returns>Returns the created CompositionEffectBrush object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus">
      <summary>The status of the asynchronous compilation of a shader for an effect description.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.EffectTooComplex">
      <summary>The effect was too complex.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Other">
      <summary>Other error.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Pending">
      <summary>The operation is still pending.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Success">
      <summary>The operation was successful.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectSourceParameter">
      <summary>Used to declare an arbitrary name (a String) to be associated with a CompositionBrush (the “effect source”). The association of the given name and the effect source occurs when the SetSourceParameter method of a CompositionEffectBrush is called.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectSourceParameter.#ctor(System.String)">
      <summary>Creates an instance of CompositionEffectSourceParameter.</summary>
      <param name="name">The name for the CompositionEffectSourceParameter instance.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectSourceParameter.Name">
      <summary>The name associated with the effect source.</summary>
      <returns>The name associated with the effect source.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEllipseGeometry">
      <summary>Represents an ellipse with the specified center and radius.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Center">
      <summary>Gets or sets the center point of the ellipse.</summary>
      <returns>The center point of the ellipse.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Radius">
      <summary>Gets or sets the radius of the ellipse.</summary>
      <returns>The radius of the ellipse.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometricClip">
      <summary>Clips a portion of a visual. The visible portion of the visual is a shape defined by a CompositionGeometry. The portion of the visual outside the geometry is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.Geometry">
      <summary>Gets or sets CompositionGeometry that defines the shape of the clip.</summary>
      <returns>A CompositionGeometry that defines the shape of the clip. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.ViewBox">
      <summary>Gets or sets a CompositionViewBox that maps the shape visual tree coordinates onto the visual.</summary>
      <returns>A CompositionViewBox that maps the shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometry">
      <summary>Represents the base class for composition geometries.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimEnd">
      <summary>Gets or sets the amount to trim the end of the geometry path.</summary>
      <returns>The amount to trim the end of the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimOffset">
      <summary>Gets or sets the amount to offset trimming the geometry path.</summary>
      <returns>The amount to offset trimming the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimStart">
      <summary>Gets or sets the amount to trim the start of the geometry path.</summary>
      <returns>The amount to trim the start of the geometry path. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGetValueStatus">
      <summary>Indicates the outcome of an attempt to retrieve the value of a key-value pair.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.NotFound">
      <summary>The key-value pair does not exist.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.Succeeded">
      <summary>The value successfully retrieved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.TypeMismatch">
      <summary>The value type of the key-value pair is different than the value type requested.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientBrush">
      <summary>Represents a brush that describes a gradient, composed of gradient stops.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.AnchorPoint">
      <summary>Gets or sets the point on the brush to be positioned at the brush's offset.</summary>
      <returns>The point on the brush to be positioned at the brush's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.CenterPoint">
      <summary>Gets or sets the point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ColorStops">
      <summary>Gets the brush's gradient stops.</summary>
      <returns>A collection of the CompositionColorGradientStop objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty CompositionColorGradientStopCollection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ExtendMode">
      <summary>Gets or sets a value that specifies how to draw the gradient outside the brush's gradient vector or space.</summary>
      <returns>The mode used to paint the gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.InterpolationSpace">
      <summary>Gets or sets a value that specifies how the gradient's colors are interpolated.</summary>
      <returns>A value of the enumeration that specifies how the gradient's colors are interpolated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.MappingMode">
      <summary>Gets or sets a value that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
      <returns>A value of the enumeration that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Offset">
      <summary>Gets or sets the offset of the brush relative to the object being painted.</summary>
      <returns>The offset of the brush relative to the object being painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngle">
      <summary>Gets or sets the rotation angle of the brush in radians.</summary>
      <returns>The rotation angle of the brush in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the brush in degrees.</summary>
      <returns>The rotation angle of the brush in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Scale">
      <summary>Gets or sets the scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.TransformMatrix">
      <summary>Gets or sets the matrix of transforms to apply to the brush.</summary>
      <returns>The matrix of transforms to apply to the brush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientExtendMode">
      <summary>Defines constants that specify how to draw the gradient outside the brush's gradient vector or space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Clamp">
      <summary>The gradient is not extended.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Mirror">
      <summary>The gradient is repeated in the reverse direction..</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Wrap">
      <summary>The gradient is wrapped.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGraphicsDevice">
      <summary>Used to create all hardware bound resources for a given DirectX device on a compositor session. CompositionGraphicsDevice contains a DirectX device that is used to perform the GPU operations. Developers can obtain a Graphics device from the compositor top level object.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionGraphicsDevice.RenderingDeviceReplaced">
      <summary>Event triggered when the rendering device has been replaced.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface(Windows.Foundation.Size,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the surface.</param>
      <param name="pixelFormat">The pixel format of the surface.</param>
      <param name="alphaMode">How the alpha channel should be handled.</param>
      <returns>The created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface2(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size of the drawing surface in pixels.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateMipmapSurface(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>
      </summary>
      <param name="sizePixels">
      </param>
      <param name="pixelFormat">
      </param>
      <param name="alphaMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateVirtualDrawingSurface(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionVirtualDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the drawing surface.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionVirtualDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.Trim">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLight">
      <summary>Base class for a light source that can target a UI scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.ExclusionsFromTargets">
      <summary>Gets a collection of Visuals that are not targeted by the light.</summary>
      <returns>The collection of Visuals that are not targeted by the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.IsEnabled">
      <summary>Gets or sets a value that determines whether the composition light is on.</summary>
      <returns>**true** if the light is on; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.Targets">
      <summary>The collection of Visuals targeted by the light.</summary>
      <returns>The collection of Visuals targeted by the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLinearGradientBrush">
      <summary>Represents a brush that paints an area with a linear gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient.</summary>
      <returns>The ending two-dimensional coordinates of the linear gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient.</summary>
      <returns>The starting two-dimensional coordinates for the linear gradient.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLineGeometry">
      <summary>Represents a straight line between two points.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.End">
      <summary>Gets or sets the end point of the line.</summary>
      <returns>The end point of the line.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.Start">
      <summary>Gets or sets the starting point of the line.</summary>
      <returns>The starting point of the line.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMappingMode">
      <summary>Defines constants that specify whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Absolute">
      <summary>Positioning coordinates (StartPoint, EndPoint) are absolute.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Relative">
      <summary>Positioning coordinates (StartPoint, EndPoint) are relative to the output area.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMaskBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush with an opacity mask applied to it. The source of the opacity mask can be any CompositionBrush of type CompositionColorBrush, CompositionLinearGradientBrush, CompositionSurfaceBrush, CompositionEffectBrush or a CompositionNineGridBrush. The opacity mask must be specified as a CompositionSurfaceBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Mask">
      <summary>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</summary>
      <returns>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Source">
      <summary>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</summary>
      <returns>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMipmapSurface">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.AlphaMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.LevelCount">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.PixelFormat">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.SizeInt32">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionMipmapSurface.GetDrawingSurfaceForLevel(System.UInt32)">
      <summary>
      </summary>
      <param name="level">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionNineGridBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush after applying Nine-Grid Stretching to the contents of the Source brush. The source of the nine-grid stretch can by any CompositionBrush of type CompositionColorBrush, CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInset">
      <summary>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</summary>
      <returns>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInsetScale">
      <summary>Scale to be applied to BottomInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to BottomInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.IsCenterHollow">
      <summary>Indicates whether the center of the Nine-Grid is drawn.</summary>
      <returns>Indicates whether the center of the Nine-Grid is drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInset">
      <summary>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</summary>
      <returns>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInsetScale">
      <summary>Scale to be applied to LeftInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to LeftInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInset">
      <summary>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</summary>
      <returns>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInsetScale">
      <summary>Scale to be applied to RightInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to RightInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.Source">
      <summary>The brush whose content is to be Nine-Grid stretched. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</summary>
      <returns>The brush whose content is to be scaled using Nine-Grid Scaling. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInset">
      <summary>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</summary>
      <returns>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInsetScale">
      <summary>Scale to be applied to TopInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to TopInset. Defaults to 1.0f.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the same value for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="inset">The inset value to use for the top, bottom, left, and right.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the specified values for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="left">The inset from the left of the image.</param>
      <param name="top">The inset from the top of the image.</param>
      <param name="right">The inset from the right of the image.</param>
      <param name="bottom">The inset from the bottom of the image.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single)">
      <summary>Sets the (same) scale to be applied to the left, top, right, and bottom insets. Defaults to 1.0f.</summary>
      <param name="scale">The scale for all of the insets.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the scale to be applied to the left, top, right, and bottom insets respectively. Defaults to 1.0f.</summary>
      <param name="left">The scale of the left inset.</param>
      <param name="top">The scale of the top inset.</param>
      <param name="right">The scale of the right inset.</param>
      <param name="bottom">The scale of the bottom inset.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionObject">
      <summary>Base class of the composition API representing a node in the visual tree structure.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Comment">
      <summary>A string to associate with the CompositionObject.</summary>
      <returns>A string to associate with the CompositionObject. Note that for Visual Studio's Live Visual Tree debugging tool, the name displayed for a particular visual will be pulled from its Comment property</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Compositor">
      <summary>The Compositor used to create this CompositionObject.</summary>
      <returns>The Compositor used to create this CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Dispatcher">
      <summary>The dispatcher for the CompositionObject.</summary>
      <returns>The dispatcher for the CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.DispatcherQueue">
      <summary>Gets the DispatcherQueue for the CompostionObject.</summary>
      <returns>The DispatcherQueue for the CompostionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.ImplicitAnimations">
      <summary>The collection of implicit animations attached to this object.</summary>
      <returns>The collection of implicit animations attached to this object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Properties">
      <summary>The collection of properties associated with the CompositionObject.</summary>
      <returns>The collection of properties associated with the CompositionObject.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.Close">
      <summary>Closes the CompositionObject and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimation(System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the object and starts the animation.</summary>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group.</summary>
      <param name="value">The animation group to start.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroupWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group on the specified target.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the target object and starts the animation.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimation(System.String)">
      <summary>Disconnects an animation from the specified property and stops the animation.</summary>
      <param name="propertyName">The name of the property to disconnect the animation from.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Stops an animation group.</summary>
      <param name="value">The animation group to stop.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.TryGetAnimationController(System.String)">
      <summary>Returns an AnimationController for the animation running on the specified property.</summary>
      <param name="propertyName">The property being animated.</param>
      <returns>An instance of AnimationController for the specified animation, or **null** if the animation is not found.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPath">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPath.#ctor(Windows.Graphics.IGeometrySource2D)">
      <summary>Initializes a new instance of the CompositionPath class.</summary>
      <param name="source">The source of the path data.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPathGeometry">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionPathGeometry.Path">
      <summary>Gets or sets the data that defines the lines and curves of the path.</summary>
      <returns>The data that defines the lines and curves of the path.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadow">
      <summary>Represents a scene-based shadow calculated using the relationship between the light, the visual that casts the shadow,and the visual that receives the shadow, such that the shadow is drawn differently on each receiver.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.BlurRadiusMultiplier">
      <summary>Gets or sets the multiplier for the shadow's blur radius.</summary>
      <returns>The multiplier for the shadow's blur radius.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Casters">
      <summary>Gets the collection of objects that cast a shadow on the receivers.</summary>
      <returns>The collection of objects that cast a shadow on the receivers.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.LightSource">
      <summary>Gets or sets the composition light that determines the direction the shadow is cast.</summary>
      <returns>The composition light that determines the direction the shadow is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MaxBlurRadius">
      <summary>Gets or sets the maximum blur radius of the shadow.</summary>
      <returns>The maximum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MinBlurRadius">
      <summary>Gets or sets the minimum blur radius of the shadow.</summary>
      <returns>The minimum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Receivers">
      <summary>Gets the collection of objects that the shadow is cast on.</summary>
      <returns>The collection of objects that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCaster">
      <summary>Represents an object that casts a projected shadow.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.Brush">
      <summary>Gets or sets the brush used to draw the shadow.</summary>
      <returns>The brush used to draw the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.CastingVisual">
      <summary>Gets or sets the Visual that casts the shadow.</summary>
      <returns>The Visual that casts the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection">
      <summary>Represents a collection of CompositionProjectedShadowCaster objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.MaxRespectedCasters">
      <summary>Gets the maximum number of shadow casters that will be respected.</summary>
      <returns>The maximum number of shadow casters that will be respected.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAbove(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection above the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtBottom(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the bottom of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtTop(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the top of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertBelow(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection below the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Removes the specified CompositionProjectedShadowCaster from the collection.</summary>
      <param name="caster">The CompositionProjectedShadowCaster to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiver">
      <summary>Represents an object that can have a projected shadow cast on it.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiver.ReceivingVisual">
      <summary>Gets or sets the Visual that the shadow is cast on.</summary>
      <returns>The Visual that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection">
      <summary>Represents an unordered collection of CompositionProjectedShadowReceiver objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Add(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Adds the specified CompositionProjectedShadowReceiver to the collection.</summary>
      <param name="value">The item to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Removes the specified CompositionProjectedShadowReceiver from the collection.</summary>
      <param name="value">The CompositionProjectedShadowReceiver to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPropertySet">
      <summary>Stores values as key-value pairs.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertBoolean(System.String,System.Boolean)">
      <summary>Inserts a boolean key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertColor(System.String,Windows.UI.Color)">
      <summary>Inserts a Color key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Inserts a Matrix3x2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Inserts a Matrix4x4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertQuaternion(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a quaternion key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertScalar(System.String,System.Single)">
      <summary>Inserts a Single key-value pair.</summary>
      <param name="propertyName">The name of the property to insert.</param>
      <param name="value">The value of the property to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector2(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a Vector2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector3(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a Vector3 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector4(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a Vector4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetBoolean(System.String,System.Boolean@)">
      <summary>Retrieves the specified boolean property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified boolean property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetColor(System.String,Windows.UI.Color@)">
      <summary>Retrieves the specified Color property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Color property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2@)">
      <summary>Retrieves the specified Matrix3x2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix3x2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4@)">
      <summary>Retrieves the specified Matrix4x4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix4x4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetQuaternion(System.String,Windows.Foundation.Numerics.Quaternion@)">
      <summary>Retrieves the specified quaternion property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified quaternion property value when the method returns.</param>
      <returns>Returns an enumeration value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetScalar(System.String,System.Single@)">
      <summary>Retrieves the specified Single property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Single property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector2(System.String,Windows.Foundation.Numerics.Vector2@)">
      <summary>Retrieves the specified Vector2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector3(System.String,Windows.Foundation.Numerics.Vector3@)">
      <summary>Retrieves the specified Vector3 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector3 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector4(System.String,Windows.Foundation.Numerics.Vector4@)">
      <summary>Retrieves the specified Vector4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRadialGradientBrush">
      <summary>Represents a brush that paints an area with a radial gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseCenter">
      <summary>Gets or sets the two-dimensional coordinates of the center of the ellipse that contains the gradient.</summary>
      <returns>The two-dimensional coordinates of the center of the ellipse the gradient is housed in. The default is a Vector2 with values (0.5, 0.5).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseRadius">
      <summary>Gets or sets the radii of the ellipse that contains the gradient.</summary>
      <returns>The radii of the ellipse that contains the gradient. The default is a Vector2 with values (1,1).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.GradientOriginOffset">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size with rounded corners.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.CornerRadius">
      <summary>Gets or sets the degree to which the corners are rounded.</summary>
      <returns>The degree to which the corners are rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionScopedBatch">
      <summary>An explicitly created group of active animations or effects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsActive">
      <summary>Indicates whether the CompositionScopedBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsEnded">
      <summary>Indicates whether the CompositionScopedBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionScopedBatch.Completed">
      <summary>Event triggered once all animations and effects in the CompositionScopedBatch have completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.End">
      <summary>Closes the CompositionScopedBatch. Once the CompositionScopedBatch has been closed it cannot be suspended or resumed again.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Resume">
      <summary>Resumes aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Suspend">
      <summary>Suspends aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShadow">
      <summary>Base class for shadows that can be applied to a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShape">
      <summary>Represents the base shape class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.CenterPoint">
      <summary>The point about which the shape is rotated and scaled.</summary>
      <returns>The point about which the shape is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Offset">
      <summary>Gets or sets the offset of the shape relative to its ShapeVisual.</summary>
      <returns>The offset of the shape relative to its ShapeVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngle">
      <summary>Gets or sets the rotation angle of the shape in radians.</summary>
      <returns>The rotation angle of the shape in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the shape in degrees.</summary>
      <returns>The rotation angle of the shape in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Scale">
      <summary>Gets or sets the scale to apply to the shape.</summary>
      <returns>The scale to apply to the shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.TransformMatrix">
      <summary>Gets or sets the transform matrix to apply to the shape.</summary>
      <returns>The transform matrix to apply to the shape.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShapeCollection">
      <summary>Represents a collection of CompositionShape objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShapeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Append(Microsoft.UI.Composition.CompositionShape)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionShape value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionShape[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.IndexOf(Microsoft.UI.Composition.CompositionShape,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.ReplaceAll(Microsoft.UI.Composition.CompositionShape[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Sets the value at the specified index to the CompositionShape value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSpriteShape">
      <summary>A CompositionShape that draws Stroked and Filled CompositionGeometry.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.FillBrush">
      <summary>Gets or sets the brush that paints the interior area of the shape.</summary>
      <returns>A brush that paints/fills the shape interior.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.Geometry">
      <summary>Gets or sets the geometry that defines this shape.</summary>
      <returns>The geometry that defines this shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.IsStrokeNonScaling">
      <summary>Gets or sets a value that specifies whether the shape's outline scales.</summary>
      <returns>**true** if the shape's outline does not scale; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeBrush">
      <summary>Gets or sets the brush that paints the outline of the shape.</summary>
      <returns>A brush that paints the shape outline.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashArray">
      <summary>Gets the collection of values that indicates the pattern of dashes and gaps used to outline shapes.</summary>
      <returns>The collection of values that indicates the pattern of dashes and gaps used to outline shapes.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the ends of a dash are drawn.</summary>
      <returns>An enumeration value that specifies how the ends of a dash are drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashOffset">
      <summary>Gets or sets a value that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A value that represents the distance within the dash pattern where a dash begins. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeEndCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the end of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the end of a line is drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeLineJoin">
      <summary>Gets or sets a CompositionStrokeLineJoin enumeration value that specifies the type of join used at the vertices of a shape.</summary>
      <returns>An enumeration value that specifies  the type of join used at the vertices of a shape. The default is **Miter**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a shape element.</summary>
      <returns>The limit on the ratio of the miter length to the StrokeThickness of a shape element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeStartCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the start of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the start of a line is drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeThickness">
      <summary>Gets or sets the width of the shape outline.</summary>
      <returns>The width of the shape outline, in pixels. The default value is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStretch">
      <summary>Specifies how content is scaled when mapped from its source to a destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Fill">
      <summary>Scale content such that its size is equal to the size of the destination. The aspect ratio of the content is not preserved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.None">
      <summary>No Scaling. If the size of the content is greater than size of destination, the content is clipped to the bounds of the destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Uniform">
      <summary>Scale content such that its aspect ratio is preserved and it fits entirely within the bounds of the destination space. If the content’s aspect ratio does not match that of the destination, the content will not cover some of the area bound by the destination space. This is the default value for CompositionSurfaceBrush.Stretch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.UniformToFill">
      <summary>Scale content such that its aspect ratio is preserved and it fills the entirety of the destination’s bounds. If the content’s aspect ratio does not match that of the destination, the content will be clipped to the bounds of the destination.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeCap">
      <summary>Defines constants that specify the shape at the end of a line or segment.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Flat">
      <summary>A cap that does not extend past the last point of the line.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Square">
      <summary>Half of a square that has a length equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Triangle">
      <summary>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeDashArray">
      <summary>Represents a collection of values that indicates the pattern of dashes and gaps that is used to outline shapes.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionStrokeDashArray.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Append(System.Single)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetAt(System.UInt32)">
      <summary>Returns the value located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetMany(System.UInt32,System.Single[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.IndexOf(System.Single,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.InsertAt(System.UInt32,System.Single)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.ReplaceAll(System.Single[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.SetAt(System.UInt32,System.Single)">
      <summary>Sets the value at the specified index to the value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeLineJoin">
      <summary>Defines constants that specify the shape used to join two lines or segments.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Bevel">
      <summary>Line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Miter">
      <summary>Line joins use regular angular vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.MiterOrBevel">
      <summary>Line joins use regular angular vertices unless the join would extend beyond the miter limit; otherwise, line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Round">
      <summary>Line joins use rounded vertices.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSurfaceBrush">
      <summary>Paints a SpriteVisual with pixels from an ICompositionSurface.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.AnchorPoint">
      <summary>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</summary>
      <returns>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.BitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</summary>
      <returns>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.CenterPoint">
      <summary>The point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.HorizontalAlignmentRatio">
      <summary>Controls the positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. By default this is set to 0.0f.</summary>
      <returns>The positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. The default value is 0.5f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Offset">
      <summary>The offset of the brush relative to its SpriteVisual.</summary>
      <returns>The offset of the brush relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngle">
      <summary>The rotation angle, in radians, of the brush.</summary>
      <returns>The rotation angle, in radians, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngleInDegrees">
      <summary>The rotation angle, in degrees, of the brush.</summary>
      <returns>The rotation angle, in degrees, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Scale">
      <summary>The scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.SnapToPixels">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Stretch">
      <summary>Controls the scaling that is applied to the contents the ICompositionSurface with respect to the size of the SpriteVisual that is being painted.</summary>
      <returns>Controls how the brush's content is scaled with respect to the size of the SpriteVisual it is painted onto.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Surface">
      <summary>The ICompositionSurface associated with the CompositionSurfaceBrush.</summary>
      <returns>The composition surface associated with the CompositionSurfaceBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.TransformMatrix">
      <summary>The transformation matrix to apply to the brush.</summary>
      <returns>The transformation matrix to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.VerticalAlignmentRatio">
      <summary>Controls the positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge of the SpriteVisual. The default value is 0.5f.</summary>
      <returns>The positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionTarget">
      <summary>Represents the window on which to display the composition tree.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionTarget.Root">
      <summary>The root of the composition tree to display.</summary>
      <returns>The root of the composition tree to display.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionTransform">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionViewBox">
      <summary>Represents a container that maps shape visual tree coordinates onto the visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.HorizontalAlignmentRatio">
      <summary>Gets or sets the horizontal alignment ratio of the view box.</summary>
      <returns>The horizontal alignment ratio of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Offset">
      <summary>Gets or sets the offset of the view box.</summary>
      <returns>The offset of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Size">
      <summary>Gets or sets the height and width of the view box.</summary>
      <returns>The height and width of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Stretch">
      <summary>Gets or sets a value that specifies how content fits into the available space.</summary>
      <returns>An enumeration value that specifies how content fits into the available space. The default is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.VerticalAlignmentRatio">
      <summary>Gets or sets the vertical alignment ratio of the view box.</summary>
      <returns>The vertical alignment ratio of the view box.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVirtualDrawingSurface">
      <summary>Represents sparsely allocated bitmaps that can be associated with visuals for composition in a visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionVirtualDrawingSurface.Trim(Windows.Graphics.RectInt32[])">
      <summary>Clears portions of a virtual drawing surface that were previously defined. Areas that are cleared will be treated as empty once again, and video memory that was previously backing them will be reclaimed.</summary>
      <param name="rects">The region of the drawing surface to trim.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVisualSurface">
      <summary>Represents a visual tree as an ICompositionSurface that can be used to paint a Visual using a CompositionBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceOffset">
      <summary>Gets or sets the coordinates of the top-left corner of the part of the visual surface used for rendering.</summary>
      <returns>The coordinates of the top-left corner of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceSize">
      <summary>Gets or sets the the height and width of the part of the visual surface used for rendering.</summary>
      <returns>The height and width of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceVisual">
      <summary>Gets or sets the root of the visual tree that is the target of the visual surface.</summary>
      <returns>The root of the visual tree that is the target of the visual surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Compositor">
      <summary>Manages the session between an application and the system compositor process.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.#ctor">
      <summary>Creates an instance of Compositor.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.Comment">
      <summary>Gets or sets a string to associate with the Compositor.</summary>
      <returns>A string to associate with the Compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.GlobalPlaybackRate">
      <summary>Gets or sets the rate at which animation plays for all KeyFrame animations created by this compositor.</summary>
      <returns>The rate at which animation plays for all animations created by this compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MaxGlobalPlaybackRate">
      <summary>Gets the maximum allowed playback rate for all KeyFrame animations created by this compositor..</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MinGlobalPlaybackRate">
      <summary>Gets the minimum allowed playback rate for all KeyFrame animations created by this compositor.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.Close">
      <summary>Closes the Compositor object and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAmbientLight">
      <summary>Creates an instance of AmbientLight.</summary>
      <returns>Returns the created AmbientLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAnimationGroup">
      <summary>Creates an instance of CompositionAnimationGroup.</summary>
      <returns>Returns the created CompositionAnimationGroup object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBackdropBrush">
      <summary>Creates an instance of CompositionBackdropBrush.</summary>
      <returns>Returns the created CompositionBackdropBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBooleanKeyFrameAnimation">
      <summary>Creates an instance of BooleanKeyFrameAnimation.</summary>
      <returns>Returns the created BooleanKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceScalarAnimation">
      <summary>Creates an instance of BounceScalarNaturalMotionAnimation.</summary>
      <returns>The created BounceScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector2Animation">
      <summary>Creates an instance of BounceVector2NaturalMotionAnimation.</summary>
      <returns>The created BounceVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector3Animation">
      <summary>Creates an instance of BounceVector3NaturalMotionAnimation.</summary>
      <returns>The created BounceVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush">
      <summary>Creates an instance of CompositionColorBrush.</summary>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush(Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorBrush using the specified color.</summary>
      <param name="color">The color for the brush to use.</param>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop">
      <summary>Creates an instance of CompositionColorGradientStop.</summary>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop(System.Single,Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorGradientStop with the specified offset and color.</summary>
      <param name="offset">The location of the gradient stop within the gradient vector.</param>
      <param name="color">The color of the gradient stop.</param>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorKeyFrameAnimation">
      <summary>Creates an instance of ColorKeyFrameAnimation.</summary>
      <returns>Returns the created ColorKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerShape">
      <summary>Creates an instance of CompositionContainerShape.</summary>
      <returns>Returns the created CompositionContainerShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerVisual">
      <summary>Creates an instance of ContainerVisual.</summary>
      <returns>Returns the created ContainerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateCubicBezierEasingFunction(Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2)">
      <summary>Creates an instance of CubicBezierEasingFunction.</summary>
      <param name="controlPoint1">The first control point for the easing function.</param>
      <param name="controlPoint2">The second control point for the easing function.</param>
      <returns>The created CubicBezierEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDistantLight">
      <summary>Creates an instance of DistantLight.</summary>
      <returns>Returns the created DistantLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDropShadow">
      <summary>Creates an instance of DropShadow.</summary>
      <returns>Returns the created DropShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect)">
      <summary>Creates an instance of CompositionEffectFactory.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect,Windows.Foundation.Collections.IIterable{System.String})">
      <summary>Creates an instance of CompositionEffectFactory specifying effect parameters that should be animatable.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <param name="animatableProperties">The list of properties that should be animatable. Properties are specified using strings of the form 'EffectName.PropertyName', where 'EffectName' identifies a graphics effect object by its IGraphicsEffect.Name property and 'PropertyName' identifies a property of that object.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEllipseGeometry">
      <summary>Creates an instance of CompositionEllipseGeometry.</summary>
      <returns>Returns the created CompositionEllipseGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation(System.String)">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <param name="expression">The expression describing how the ExpressionAnimation should calculate its current value.</param>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip">
      <summary>Creates an instance of CompositionGeometricClip.</summary>
      <returns># Microsoft.UI.Composition.Compositor.CreateGeometricClip</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionGeometricClip using the specified geometry.</summary>
      <param name="geometry">The geometry that defines the shape of the clip.</param>
      <returns>The created CompositionGeometricClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateImplicitAnimationCollection">
      <summary>Creates an instance of ImplicitAnimationCollection.</summary>
      <returns>Returns the created ImplicitAnimationCollection object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip">
      <summary>Creates an instance of InsetClip.</summary>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates an instance of InsetClip.</summary>
      <param name="leftInset">Inset from the left of the visual.</param>
      <param name="topInset">Inset from the top of the visual.</param>
      <param name="rightInset">Inset from the right of the visual.</param>
      <param name="bottomInset">Inset from the bottom of the visual.</param>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLayerVisual">
      <summary>Creates an instance of LayerVisual.</summary>
      <returns>Returns the created LayerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearEasingFunction">
      <summary>Creates an instance of LinearEasingFunction.</summary>
      <returns>Returns the created LinearEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearGradientBrush">
      <summary>Creates an instance of CompositionLinearGradientBrush.</summary>
      <returns>The created CompositionLinearGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLineGeometry">
      <summary>Creates an instance of CompositionLineGeometry.</summary>
      <returns>Returns the created CompositionLineGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateMaskBrush">
      <summary>Creates an instance of CompositionMaskBrush.</summary>
      <returns>Returns the created CompositionMaskBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateNineGridBrush">
      <summary>Creates an instance of CompositionNineGridBrush.</summary>
      <returns>Returns the created CompositionNineGridBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry">
      <summary>Creates an instance of CompositionPathGeometry.</summary>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry(Microsoft.UI.Composition.CompositionPath)">
      <summary>Creates an instance of CompositionPathGeometry using the specified path.</summary>
      <param name="path">The path data.</param>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathKeyFrameAnimation">
      <summary>Creates an instance of PathKeyFrameAnimation.</summary>
      <returns>Returns the created PathKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePointLight">
      <summary>Creates an instance of PointLight.</summary>
      <returns>Returns the created PointLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadow">
      <summary>Creates an instance of CompositionProjectedShadow.</summary>
      <returns>Returns the created CompositionProjectedShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowCaster">
      <summary>Creates an instance of CompositionProjectedShadowCaster.</summary>
      <returns>Returns the created CompositionProjectedShadowCaster object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowReceiver">
      <summary>Creates an instance of CompositionProjectedShadowReceiver.</summary>
      <returns>Returns the created CompositionProjectedShadowReceiver object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePropertySet">
      <summary>Creates an instance of CompositionPropertySet.</summary>
      <returns>Returns the created CompositionPropertySet object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateQuaternionKeyFrameAnimation">
      <summary>Creates an instance of QuaternionKeyFrameAnimation.</summary>
      <returns>Returns the created QuaternionKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRadialGradientBrush">
      <summary>Creates an instance of CompositionRadialGradientBrush.</summary>
      <returns>Returns the created CompositionRadialGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleGeometry">
      <summary>Creates an instance of CompositionRectangleGeometry.</summary>
      <returns>Returns the created CompositionRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual">
      <summary>Creates an instance of RedirectVisual.</summary>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of RedirectVisual using the specified source.</summary>
      <param name="source">
      </param>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRoundedRectangleGeometry">
      <summary>Creates an instance of CompositionRoundedRectangleGeometry.</summary>
      <returns>Returns the created CompositionRoundedRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScalarKeyFrameAnimation">
      <summary>Creates an instance of ScalarKeyFrameAnimation.</summary>
      <returns>Returns the created ScalarKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScopedBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Creates an instance of CompositionScopedBatch.</summary>
      <param name="batchType">The type of composition batch to create.</param>
      <returns>Returns the created CompositionScopedBatch object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateShapeVisual">
      <summary>Creates an instance of ShapeVisual.</summary>
      <returns>Returns the created ShapeVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpotLight">
      <summary>Creates an instance of SpotLight.</summary>
      <returns>Returns the created SpotLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringScalarAnimation">
      <summary>Creates an instance of SpringScalarNaturalMotionAnimation.</summary>
      <returns>The created SpringScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector2Animation">
      <summary>Creates an instance of SpringVector2NaturalMotionAnimation.</summary>
      <returns>The created SpringVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector3Animation">
      <summary>Creates an instance of SpringVector3NaturalMotionAnimation.</summary>
      <returns>The created SpringVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape">
      <summary>Creates an instance of CompositionSpriteShape.</summary>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionSpriteShape using the specified geometry.</summary>
      <param name="geometry">The geometry of the shape to create.</param>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteVisual">
      <summary>Creates an instance of SpriteVisual.</summary>
      <returns>Returns the created SpriteVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction">
      <summary>Creates an instance of StepEasingFunction.</summary>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction(System.Int32)">
      <summary>Creates an instance of StepEasingFunction with the specified step count.</summary>
      <param name="stepCount">The step count for the StepEasingFunction.</param>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush">
      <summary>Creates an instance of CompositionSurfaceBrush.</summary>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush(Microsoft.UI.Composition.ICompositionSurface)">
      <summary>Creates an instance of CompositionSurfaceBrush using the specified composition surface.</summary>
      <param name="surface">The composition surface to associate with the CompositionSurfaceBrush.</param>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateTargetForCurrentView">
      <summary>Creates a CompositionTarget for the current view.</summary>
      <returns>Returns the created CompositionTarget object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector2KeyFrameAnimation">
      <summary>Creates an instance of Vector2KeyFrameAnimation.</summary>
      <returns>Returns the created Vector2KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector3KeyFrameAnimation">
      <summary>Creates an instance of Vector3KeyFrameAnimation.</summary>
      <returns>Returns the created Vector3KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector4KeyFrameAnimation">
      <summary>Creates an instance of Vector4KeyFrameAnimation.</summary>
      <returns>Returns the created Vector4KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateViewBox">
      <summary>Creates an instance of CompositionViewBox.</summary>
      <returns>Returns the created CompositionViewBox object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVisualSurface">
      <summary>Creates an instance of CompositionVisualSurface.</summary>
      <returns>Returns the created CompositionVisualSurface object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.GetCommitBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Retrieves a commit batch for the current commit cycle.</summary>
      <param name="batchType">The batch type.</param>
      <returns>Returns a CompositionCommitBatch representing the retrieved commit batch.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.RequestCommitAsync">
      <summary>Attempts to initiate a commit cycle ansynchronously.</summary>
      <returns>An ansynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ContainerVisual">
      <summary>A node in the visual tree that can have children.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ContainerVisual.Children">
      <summary>The children of the ContainerVisual.</summary>
      <returns>The children of the ContainerVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CubicBezierEasingFunction">
      <summary>Represents a cubic-bezier function for interpolating between animation key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint1">
      <summary>The first control point for the cubic-bezier interpolation function.</summary>
      <returns>The first control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint2">
      <summary>The second control point for the cubic-bezier interpolation function.</summary>
      <returns>The second control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DistantLight">
      <summary>An infinitely large distant light source that emits light in a single direction. For example, a distant light could be used to represent sunlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Color">
      <summary>Color of the emitted DistantLight.</summary>
      <returns>Color of the emitted DistantLight.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.CoordinateSpace">
      <summary>The Visual used to determine the light’s direction. The light's </summary>
      <returns>The Visual used to determine the light’s direction. The light's </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DropShadow">
      <summary>A drop shadow cast by a SpriteVisual or LayerVisual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.BlurRadius">
      <summary>The radius of the Gaussian blur used to generate the shadow. Animatable.</summary>
      <returns>The radius of the Gaussian blur used to generate the shadow. Defaults to 9.0f. Specifying a value of 0 will result in no blur occurring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Color">
      <summary>The color of the shadow. Animatable.</summary>
      <returns>The color of the shadow. Default color is Colors.Black.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Mask">
      <summary>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush. Animatable.</summary>
      <returns>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Offset">
      <summary>Offset of the shadow relative to its SpriteVisual. Animatable.</summary>
      <returns>Offset of the shadow relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Opacity">
      <summary>The opacity of the shadow. Animatable.</summary>
      <returns>The opacity of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.SourcePolicy">
      <summary>Used to define the shadow masking policy to be used for the shadow.</summary>
      <returns>The masking policy to apply to the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ExpressionAnimation">
      <summary>A Composition Animation that uses a mathematical equation to calculate the value for an animating property every frame.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ExpressionAnimation.Expression">
      <summary>The mathematical equation specifying how the animated value is calculated each frame. The Expression is the core of an ExpressionAnimation and represents the equation the system will use to calculate the value of the animation property each frame. The equation is set on this property in the form of a string.</summary>
      <returns>The mathematical equation specifying how the animated value is calculated each frame.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.IAnimationObject">
      <summary>Represents an object that has properties that can be referenced by an animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.IAnimationObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionAnimationBase">
      <summary>Base class for composition animations.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionSurface">
      <summary>Represents the content of a surface that can be used to paint the bounds of a SpriteVisual. All surface types that can be used to paint a SpriteVisual must implement this interface. The following classes implement this interface and can be set as content of a SpriteVisual (using a CompositionSurfaceBrush):</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ImplicitAnimationCollection">
      <summary>A collection of animations triggered when a condition is met.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ImplicitAnimationCollection.Size">
      <summary>The size of the collection.</summary>
      <returns>The size of the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Clear">
      <summary>Removes all animations from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.First">
      <summary>Retrieves the first animation in the collection.</summary>
      <returns>Retrieves the first animation in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.GetView">
      <summary>Returns a map view of the collection.</summary>
      <returns>Returns a map view of the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.HasKey(System.String)">
      <summary>Returns a boolean indicating whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>Returns true if the key is in the collection; otherwise returns false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Insert(System.String,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Inserts an animation into the collection.</summary>
      <param name="key">The property the animation affects.</param>
      <param name="value">The animation to insert.</param>
      <returns>Boolean value indicating whether the animation was successfully inserted.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Lookup(System.String)">
      <summary>Retrieves the animation associated with the specified property.</summary>
      <param name="key">The property to lookup.</param>
      <returns>The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Remove(System.String)">
      <summary>Removes the specified animation from the collection.</summary>
      <param name="key">The property the animation is assigned to.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.InitialValueExpressionCollection">
      <summary>A collection of values that specify where an animation will start.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.InitialValueExpressionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.First">
      <summary>Retrieves the first item in the collection.</summary>
      <returns>The first item in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.HasKey(System.String)">
      <summary>Returns a value that indicates whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>**true** if the key is in the collection; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Insert(System.String,System.String)">
      <summary>Inserts an item into the collection.</summary>
      <param name="key">The key to identify the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>**true** if animation was successfully inserted; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Lookup(System.String)">
      <summary>Retrieves the item associated with the specified key.</summary>
      <param name="key">The key that identifies the item to retrieve.</param>
      <returns>The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Remove(System.String)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="key">The key that identifies the item to remove.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.InsetClip">
      <summary>Clips a portion of a visual. The visible portion of the visual is a rectangle defined as inset values from the edges of the visual. The portion of the visual outside the rectangle is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.BottomInset">
      <summary>The offset from the bottom of the visual. The portion of the visual below the BottomtInset will be clipped. Animatable.</summary>
      <returns>The offset from the bottom of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.LeftInset">
      <summary>The offset from the left of the visual. The portion of the visual to the left of the LeftInset will be clipped. Animatable.</summary>
      <returns>The offset from the left of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.RightInset">
      <summary>The offset from the right of the visual. The portion of the visual to the right of the RightInset will be clipped. Animatable.</summary>
      <returns>The offset from the right of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.TopInset">
      <summary>The offset from the top of the visual. The portion of the visual above the TopInset will be clipped. Animatable.</summary>
      <returns>The offset from the top of the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.IVisualElement">
      <summary>Marks an object to indicate to the system that it can resolve to a CompositionVisual</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.KeyFrameAnimation">
      <summary>A time-based animation with one or more key frames. These frames are markers, allowing developers to specify values at specific times for the animating property. KeyFrame animations can be further customized by specifying how the animation interpolates between keyframes.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayBehavior">
      <summary>The delay behavior of the key frame animation.</summary>
      <returns>The delay behavior of the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Direction">
      <summary>The direction the animation is playing.</summary>
      <returns>The direction the animation is playing.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Duration">
      <summary>The duration of the animation.</summary>
      <returns>The duration of the animation. Minimum allowed value is 1ms and maximum allowed value is 24 days.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationBehavior">
      <summary>The iteration behavior for the key frame animation.</summary>
      <returns>The iteration behavior for the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationCount">
      <summary>The number of times to repeat the key frame animation.</summary>
      <returns>The number of times to repeat the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.KeyFrameCount">
      <summary>The number of key frames in the KeyFrameAnimation.</summary>
      <returns>The number of key frames in the KeyFrameAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String)">
      <summary>Inserts an expression key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts an expression keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.LayerVisual">
      <summary>A ContainerVisual whose children are flattened into a single layer.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Effect">
      <summary>The effect to be applied to the flattened representation of the children of a LayerVisual.</summary>
      <returns>The effect to be applied to the flattened representation of the children of a LayerVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Shadow">
      <summary>The shadow to be applied to the flattened representation of the children of a LayerVisual.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.LinearEasingFunction">
      <summary>Represents a linear function for interpolating between animation key frames.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.NaturalMotionAnimation">
      <summary>Represents a physics-based animation that uses forces to dynamically move content.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayBehavior">
      <summary>The delay behavior of the NaturalMotionAnimation.</summary>
      <returns>The delay behavior of the NaturalMotionAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.PathKeyFrameAnimation">
      <summary>Represents a time-based animation with one or more key frames where each key frame value is represented by a</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.PointLight">
      <summary>A point source of light that emanates light in all directions.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Color">
      <summary>Color of the light.</summary>
      <returns>Color of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.CoordinateSpace">
      <summary>The Visual used to determine the light's offset. The light's offset property is relative to this Visual's coordinate space.</summary>
      <returns>The Visual used to determine the light's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Offset">
      <summary>Offset of the light source relative to its coordinate space Visual.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance.</summary>
      <returns>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.QuaternionKeyFrameAnimation">
      <summary>A time-based animation that targets the Orientation property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.RedirectVisual">
      <summary>Represents a visual that gets its content from another visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RedirectVisual.Source">
      <summary>Gets or sets the Visual that this RedirectVisual gets its content from.</summary>
      <returns>The Visual that this RedirectVisual gets its content from. The default is **null**.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs">
      <summary>Arguments for the RenderingDeviceReplaced event.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs.GraphicsDevice">
      <summary>The new graphics device.</summary>
      <returns>The new graphics device.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarKeyFrameAnimation">
      <summary>A time-based animation that targets any Scalar-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarNaturalMotionAnimation">
      <summary>The base Scalar NaturalMotionAnimation used to target a Scalar property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ShapeVisual">
      <summary>Represents a visual tree node that is the root of a CompositionShape.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.Shapes">
      <summary>Gets the collection of CompositionShapes that this shape visual tree is composed of.</summary>
      <returns>The collection of CompositionShapes that this shape visual tree is composed of.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.ViewBox">
      <summary>Gets or sets the CompositionViewBox that maps shape visual tree coordinates onto the visual.</summary>
      <returns>The CompositionViewBox that maps shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpotLight">
      <summary>A light source that casts inner and outer cones of light. For example, a flashlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity. Animatable.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.CoordinateSpace">
      <summary>The Visual used to determine the light's direction and offset. The light's offset and direction properties are relative to this Visual's coordinate space.</summary>
      <returns>The visual the light's offset is relative to.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is pointing, specified relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngle">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngleInDegrees">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeColor">
      <summary>Color of the spotlight's inner cone. Animatable.</summary>
      <returns>Color of the spotlight's inner cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's inner cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Offset">
      <summary>Offset of the light source relative to its CoordinateSpace Visual. Animatable.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngle">
      <summary>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. The value must be between 0 and pi.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngleInDegrees">
      <summary>The semi-vertical angle, in degrees, of the SpotLight's outer cone. Animatable.</summary>
      <returns>The semi-vertical angle, in degrees, of the SpotLight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeColor">
      <summary>The color of the spotlight's outer cone. Animatable.</summary>
      <returns>The color of the spotlight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's outer cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The quadratic coefficient in the light's attenuation equation. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpriteVisual">
      <summary>Hosts 2D boxed content of type CompositionBrush. Any part of the visual not covered by pixels from the brush are rendered as transparent pixels. CompositionBrush can be either a CompositionBackdropBrush, CompositionColorBrush, a CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Brush">
      <summary>A CompositionBrush describing how the SpriteVisual is painted.</summary>
      <returns>A CompositionBrush describing how the SpriteVisual is painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Shadow">
      <summary>The shadow for the SpriteVisual.</summary>
      <returns>The shadow for the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.StepEasingFunction">
      <summary>A step function for interpolating between animation key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.FinalStep">
      <summary>The step to end at.</summary>
      <returns>The step to end at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.InitialStep">
      <summary>The step to start at.</summary>
      <returns>The step to start at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsFinalStepSingleFrame">
      <summary>Indicates whether the final step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the final step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsInitialStepSingleFrame">
      <summary>Indicates whether the initial step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the initial step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.StepCount">
      <summary>The number of steps between the starting value and the end value.</summary>
      <returns>The number of steps between the starting value and the end value.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector2-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2NaturalMotionAnimation">
      <summary>The base Vector2 NaturalMotionAnimation used to target a Vector2 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector3-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3NaturalMotionAnimation">
      <summary>The base Vector3 NaturalMotionAnimation used to target a Vector3 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector4KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector4-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Visual">
      <summary>The base visual object in the visual hierarchy.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.AnchorPoint">
      <summary>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual. Animatable.</summary>
      <returns>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BackfaceVisibility">
      <summary>Specifies whether the back face of the visual should be visible during a 3D transform.</summary>
      <returns>Whether the back face of the visual should be visible during a 3D transform.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BorderMode">
      <summary>Specifies how to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual. Setting BorderMode at a parent Visual will affect all children visuals in the subtree and can be selectively turned off at each child visual.</summary>
      <returns>How to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CenterPoint">
      <summary>The point about which rotation or scaling occurs. Animatable</summary>
      <returns>The point about which rotation or scaling occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Clip">
      <summary>Specifies the clipping region for the visual. When a visual is rendered, only the portion of the visual that falls inside the clipping region is displayed, while any content that extends outside the clipping region is clipped (that is, not displayed).</summary>
      <returns>Specifies the clipping region for the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CompositeMode">
      <summary>Specifies how a visual's bitmap is blended with the screen.</summary>
      <returns>How a visual's bitmap is blended with the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.IsVisible">
      <summary>Indicates whether the visual and its entire subtree of child visuals is visible.</summary>
      <returns>Indicates whether the visual and its entire subtree of child visuals is visible.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Offset">
      <summary>The offset of the visual relative to its parent or for a root visual the offset relative to the upper-left corner of the windows that hosts the visual. Animatable.</summary>
      <returns>Offset of the visual relative to its parent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Opacity">
      <summary>The opacity of the visual. Animatable.</summary>
      <returns>The opacity of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Orientation">
      <summary>A quaternion describing an orientation and rotation in 3D space that will be applied to the visual. Animatable.</summary>
      <returns>A Quaternion describing an orientation and rotation in 3D space that will be applied to the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Parent">
      <summary>The parent of the visual.</summary>
      <returns>The parent of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.ParentForTransform">
      <summary>Visual specifying the coordinate system in which this visual is composed.</summary>
      <returns>Visual specifying the coordinate system in which this visual is composed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeOffsetAdjustment">
      <summary>Specifies the offset of the visual with respect to the size of its parent visual.</summary>
      <returns>The offset of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeSizeAdjustment">
      <summary>The size of the visual with respect to the size of its parent visual.</summary>
      <returns>The size of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngle">
      <summary>The rotation angle in radians of the visual. Animatable.</summary>
      <returns>The rotation angle in radians of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngleInDegrees">
      <summary>The rotation angle of the visual in degrees. Animatable.</summary>
      <returns>The rotation angle of the visual in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAxis">
      <summary>The axis to rotate the visual around. Animatable.</summary>
      <returns>The axis to rotate the visual around. For example, a value of Vector3(1,0,0) indicates rotation along the x-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Scale">
      <summary>The scale to apply to the visual.</summary>
      <returns>The scale to apply to the visual. A value of Vector3 (1.0,1.0,1.0) is equivalent to 100%.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Size">
      <summary>The width and height of the visual. Animatable.</summary>
      <returns>The width and height of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.TransformMatrix">
      <summary>The transformation matrix to apply to the visual. Animatable.</summary>
      <returns>The transformation matrix to apply to the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualCollection">
      <summary>Represents a collection of visual instances.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualCollection.Count">
      <summary>Gets the number of visual instances in the collection.</summary>
      <returns>The number of visual instances in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.First">
      <summary>Retrieves an iterator with the first object at the bottom of the collection.</summary>
      <returns>Returns an iterator with the first object at the bottom of the collection. VisualCollections are ordered from bottom to top.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAbove(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Inserts a visual above the specified sibling visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling to insert the visual above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtBottom(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the bottom of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtTop(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the top of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertBelow(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Insert a new visual below the specified visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling visual to insert the new visual below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes the specified visual instance from the collection.</summary>
      <param name="child">The specified visual instance from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.RemoveAll">
      <summary>Removes all of the visual instances from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualUnorderedCollection">
      <summary>An unordered collection of visuals.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualUnorderedCollection.Count">
      <summary>The number of visuals in the collection.</summary>
      <returns>The nubmer of visuals in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Add(Microsoft.UI.Composition.Visual)">
      <summary>Adds a visual to the collection.</summary>
      <param name="newVisual">The visual to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.First">
      <summary>Retrieves the first visual in the collection.</summary>
      <returns>The first visual in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes a visual from the collection.</summary>
      <param name="visual">Removes a visual from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.RemoveAll">
      <summary>Removes all visuals from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Core.CompositorController">
      <summary>Represents a compositor on which intended composition changes must be explicitly committed.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.#ctor">
      <summary>Initializes a new instance of the CompositorController class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Core.CompositorController.Compositor">
      <summary>Gets the compositor associated with this composition controller.</summary>
      <returns>The compositor associated with this composition controller.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.Core.CompositorController.CommitNeeded">
      <summary>Occurs when the framework needs to call Commit in order for changes to Composition objects to be reflected onscreen.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Close">
      <summary>Releases system resources that are used by the CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Commit">
      <summary>Calls commit on the compositor associated with this CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.EnsurePreviousCommitCompletedAsync">
      <summary>Ensures the previous commit was completed.</summary>
      <returns>An asynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Desktop.DesktopWindowTarget">
      <summary>Represents a window that is the target of a composition.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Desktop.DesktopWindowTarget.IsTopmost">
      <summary>Gets a value that indicates whether the window is rendered on top of all other windows.</summary>
      <returns>**true** if the window is rendered on top of all other windows; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps">
      <summary>Represents heatmaps that show overdrawn areas of a composition UI.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.Hide(Microsoft.UI.Composition.Visual)">
      <summary>Hides the heatmap for the specified subtree.</summary>
      <param name="subtree">The part of the visual tree for which to hide the heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowMemoryUsage(Microsoft.UI.Composition.Visual)">
      <summary>Shows a graphical representation of the GPU memory used by the app.</summary>
      <param name="subtree">The part of the visual tree for which to show texture memory usage.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowOverdraw(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds)">
      <summary>Highlights pixels affected by multiple visuals at the same time.</summary>
      <param name="subtree">The part of the visual tree for which to show overdraw regions.</param>
      <param name="contentKinds">An enumeration value that specifies what type of content is shown on the overdraw heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowRedraw(Microsoft.UI.Composition.Visual)">
      <summary>Highlights areas of the app UI that are producing updates.</summary>
      <param name="subtree">The part of the visual tree for which to show redraw.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds">
      <summary>Defines constants that specify what kinds of content are shown on an overdraw heatmap.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.All">
      <summary>All content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Colors">
      <summary>Colors are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Effects">
      <summary>Effects are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Lights">
      <summary>Lights are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.None">
      <summary>No content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.OffscreenRendered">
      <summary>Elements rendered offscreen are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Shadows">
      <summary>Shadows are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Surfaces">
      <summary>Surfaces are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.SwapChains">
      <summary>SwapChains are shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings">
      <summary>Hosts diagnostic and debugging features such as heatmaps.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.HeatMaps">
      <summary>Gets the heatmaps for this debug settings instance.</summary>
      <returns>The heatmaps for this debug settings instance.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.TryGetSettings(Microsoft.UI.Composition.Compositor)">
      <summary>Attempts to get an instance of CompositionDebugSettings for the specified compositor.</summary>
      <param name="compositor">The compositor to get debug settings for.</param>
      <returns>An instance of composition debug settings.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffect">
      <summary>Controls the reflective properties of a SpriteVisual. A SceneLightingEffect will overwrite CompositionLight defaults. It is used to control the reflective properties of a SpriteVisual. A NormalMap can be used as an input source but is not required.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Effects.SceneLightingEffect.#ctor">
      <summary>Creates an instance of SceneLightingEffect.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.AmbientAmount">
      <summary>The proportion of predefined AmbientLight used by the effect.</summary>
      <returns>The proportion of predefined AmbientLight used by the effect. Values must be set between 0.0 and 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.DiffuseAmount">
      <summary>Intensity of the diffuse light.</summary>
      <returns>Intensity of the diffuse light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.Name">
      <summary>Name of the light.</summary>
      <returns>Name of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.NormalMapSource">
      <summary>The normal map for the effect.</summary>
      <returns>The normal map for the effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.ReflectanceModel">
      <summary>Gets or sets a value that indicates how the reflectance of a SceneLightingEffect is modeled.</summary>
      <returns>A value that indicates how the reflectance of a SceneLightingEffect is modeled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularAmount">
      <summary>Intensity of the specular light.</summary>
      <returns>Intensity of the specular light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularShine">
      <summary>Specular power for the Blinn-Phong lighting model.</summary>
      <returns>Specular power for the Blinn-Phong lighting model. Value must be set between 1.0 and 128. The default value is 16.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel">
      <summary>Defines constants that specify how the reflectance of a SceneLightingEffect is modeled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.BlinnPhong">
      <summary>The BlinnPhong model is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.PhysicallyBasedBlinnPhong">
      <summary>The PhysicallyBasedBlinnPhong model is used.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionConditionalValue">
      <summary>Allows conditional modification of the position and scale of a visual interaction source.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Condition">
      <summary>The condition expression that determines when to apply modifiers to the visual interaction source.</summary>
      <returns>The condition expression that determines when to apply modifiers to the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Value">
      <summary>The modified input expression to be applied when the condition is true.</summary>
      <returns>The modified input expression to be applied when the condition is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of CompositionConditionalValue.</summary>
      <param name="compositor">
      </param>
      <returns>Returns the created CompositionConditionalValue.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection">
      <summary>A collection of interaction sources.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Count">
      <summary>The number of interaction sources in the collection.</summary>
      <returns>The number of interaction sources in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Add(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Adds an interaction source to the collection.</summary>
      <param name="value">The interaction source to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.First">
      <summary>Returns an iterator pointing to the first object in the collection.</summary>
      <returns>Returns an iterator pointing to the first object in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Remove(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Removes the specified interaction source from the collection.</summary>
      <param name="value">The interaction source to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.RemoveAll">
      <summary>Removes all interaction sources from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.ICompositionInteractionSource">
      <summary>An object that is being tracked for interactions in the compositor.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner">
      <summary>Contains callbacks that will be triggered by InteractionTracker events.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.CustomAnimationStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the custom animation state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.IdleStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the idle state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InertiaStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the inertia state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InteractingStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs)">
      <summary>Callback that is triggered when an InteractionTracker enters the interaction state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.RequestIgnored(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs)">
      <summary>Callback that is triggered when the InteractionTracker has ignored a request.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The arguemtns for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.ValuesChanged(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs)">
      <summary>Callback that is triggered when the InteractionTracker 's output values have changed.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The new values for the InteractionTracker.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.None">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionX">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionY">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.Scale">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionChainingMode">
      <summary>Defines the chaining behavior for a VisualInteractionSource. There are three options: Always chain, never chain or auto chain (let the system choose). If chaining is enabled, when an InteractionTracker reaches its minimum or maximum bounds, it will instead send the input to the next ancestor VisualInteractionSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Always">
      <summary>Always continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Auto">
      <summary>Automatically determine whether to continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Never">
      <summary>Never continue the manipulation.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration">
      <summary>Represents the configuration of a VisualInteractionSource input.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionXSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the X axis.</summary>
      <returns>The source mode for the X axis. By default, it takes the value of VisualInteractionTracker.PositionXSourceMode.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionYSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the Y axis.</summary>
      <returns>The source mode for the Y axis. By default, it takes the value of VisualInteractionTracker.PositionYSourceMode.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.ScaleSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the scale axis.</summary>
      <returns>The source mode for the scale axis. By default, it takes the value of VisualInteractionTracker.ScaleSourceMode.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceMode">
      <summary>Provides the various definitions for how a VisualInteractionSource will process interactions. Options available for the enumeration are </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.Disabled">
      <summary>Interaction is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithInertia">
      <summary>Interaction is enabled with inertia.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithoutInertia">
      <summary>Interaction is enabled without inertia.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode">
      <summary>Defines constants that specify whether an input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Disabled">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Enabled">
      <summary>Input is redirected to the InteractionTracker.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTracker">
      <summary>Handles the logic of input that can be used as targets in ExpressionAnimations—typically to drive the motion of visuals based on input.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.InteractionSources">
      <summary>A collection of objects that generate interactions.</summary>
      <returns>A collection of objects that generate interactions.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>**true** if the inertia is the result of an impulse; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsPositionRoundingSuggested">
      <summary>Boolean value indicating whether position rounding is currently suggested.</summary>
      <returns>Boolean value indicating whether position rounding is currently suggested.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxPosition">
      <summary>The maximum position allowed for the InteractionTracker.</summary>
      <returns>The maximum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxScale">
      <summary>The maximum scale for the InteractionTracker.</summary>
      <returns>The maximum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinPosition">
      <summary>The minimum position allowed for the InteractionTracker.</summary>
      <returns>The minimum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinScale">
      <summary>The minimum scale for the InteractionTracker.</summary>
      <returns>The minimum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingPosition">
      <summary>Natural resting position for the InteractionTracker.</summary>
      <returns>Natural resting position for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingScale">
      <summary>Natural resting scale for the InteractionTracker.</summary>
      <returns>Natural resting scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Owner">
      <summary>The IInteractionTrackerOwner associated with the InteractionTracker.</summary>
      <returns>The IInteractionTrackerOwner associated with the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Position">
      <summary>The output position calculated by the InteractionTracker. The current position is a relative value. During the Idle and CustomAnimation states, it will always be between the values specified in the MinPosition and MaxPosition properties. The InteractionTracker’s position property can go outside this range during the Interacting and Inertia states in order to show a bounce or resistance at the boundary.</summary>
      <returns>The output position calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionInertiaDecayRate">
      <summary>Inertia decay rate for position. Range is from 0 to 1.</summary>
      <returns>Inertia decay rate for position. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionVelocityInPixelsPerSecond">
      <summary>The velocity currently applied to position.</summary>
      <returns>The velocity currently applied to position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Scale">
      <summary>The output scale calculated by the InteractionTracker. The current scale is a relative value that depends on the values specified in the MinScale and MaxScale properties.</summary>
      <returns>The output scale calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleInertiaDecayRate">
      <summary>Inertia decay rate, for scale. Range is from 0 to 1.</summary>
      <returns>Inertia decay rate for scale. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleVelocityInPercentPerSecond">
      <summary>The rate of change for scale.</summary>
      <returns>The rate of change for scale.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionXIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position x coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position x coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position x coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionYIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position y coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position y coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position y coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the x inertia of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the x inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the y inertia of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the y inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureScaleInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the scale of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the scale of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureVector2PositionInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the position of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the position of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTracker.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.CreateWithOwner(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner)">
      <summary>Creates an instance of InteractionTracker with the specified owner.</summary>
      <param name="compositor">The compositor to use to create the instance of InteractionTracker.</param>
      <param name="owner">The InteractionTracker owner to associate with the created InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.GetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker)">
      <summary>
      </summary>
      <param name="boundTracker1">
      </param>
      <param name="boundTracker2">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.SetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes)">
      <summary>
      </summary>
      <param name="boundTracker1">
      </param>
      <param name="boundTracker2">
      </param>
      <param name="axisMode">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to update the position of the InteractionTracker using the specified clamping option.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to adjust the InteractionTracker 's position by the specified amount.</summary>
      <param name="amount">The value to add to the current position.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to adjust the position of the InteractionTracker by the specified amount using the specified clamping option.</summary>
      <param name="amount">The value to add to the current position.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAdditionalVelocity(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position by adding velocity.</summary>
      <param name="velocityInPixelsPerSecond">The velocity to add in pixels per second.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAnimation(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Tries to update the InteractionTracker 's position by applying an animation.</summary>
      <param name="animation">The animation to apply to the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScale(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale to the specified value.</summary>
      <param name="value">The new value for scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAdditionalVelocity(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale by adding the specified velocity.</summary>
      <param name="velocityInPercentPerSecond">The velocity to add to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAnimation(Microsoft.UI.Composition.CompositionAnimation,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale with the specified animation.</summary>
      <param name="animation">The animation to apply to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption">
      <summary>Defines constants that specify how values are clamped when the InteractionTracker position is updated.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Auto">
      <summary>If the input value is greater (or less) than the max (or min) value, it is immediately clamped.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Disabled">
      <summary>If the input value is greater (or less) than the max (or min) value, it is not immediately clamped. Instead, the max/min is enforced to the newly input value of Position (and potentially clamped) the next time InteractionTracker enters the Inertia state.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.CustomAnimationStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.IdleStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier">
      <summary>Base class for inertia modifiers.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion">
      <summary>An ExpressionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Motion">
      <summary>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion">
      <summary>A ScalarNaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</summary>
      <returns>A ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue">
      <summary>An ExpressionAnimation that defines the rest position after an interaction.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.RestingValue">
      <summary>An ExpressionAnimation to define the resting value of InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>An ExpressionAnimation to define the resting value if the expression in the Condition property is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaRestingValue.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaRestingValue object.</param>
      <returns>Returns the created InteractionTrackerInertiaRestingValue object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InertiaStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>**true** if the inertia is the result of an impulse; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.PositionVelocityInPixelsPerSecond">
      <summary>The velocity of InteractionTracker 's position.</summary>
      <returns>The velocity of InteractionTracker 's position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback. Represents the ID of the request that caused InteractionTracker to enter the Inertia State (the InertiaStateEntered callback was triggered). Note that the RequestID property will be incremented each time a request tries to change the state of InteractionTracker.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ScaleVelocityInPercentPerSecond">
      <summary>The velocity of InteractionTracker 's scale.</summary>
      <returns>The velocity of InteractionTracker 's scale.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InteractingStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.RequestIgnored callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs">
      <summary>Arguments for the IInteractionTrackerOwner.ValuesChanged callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Position">
      <summary>The current position of the InteractionTracker.</summary>
      <returns>The current position of the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Scale">
      <summary>The current scale of the InteractionTracker.</summary>
      <returns>The current scale of the InteractionTracker.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier">
      <summary>Base class for InteractionTrackerVector2InertiaNaturalMotion.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion">
      <summary>A Vector2NaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</summary>
      <returns>A Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerVector2InertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSource">
      <summary>Object for configuring input to the InteractionTracker relative to a visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaPosition">
      <summary>The amount of position change to be applied during the upcoming frame. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The change in position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaScale">
      <summary>The amount of scale change to be applied during the upcoming frame. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The change in scale of the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionXRailsEnabled">
      <summary>Indicates whether panning on the x-axis is railed.</summary>
      <returns>Boolean value indicating whether panning on the x-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionYRailsEnabled">
      <summary>Indicates whether panning on the y-axis is railed.</summary>
      <returns>Boolean value indicating whether panning on the y-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ManipulationRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
      <returns>Indicates what input should be redirected to the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PointerWheelConfig">
      <summary>Gets the configuration for pointer wheel input.</summary>
      <returns>The configuration for pointer wheel input.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Position">
      <summary>The total amount of position change since the start of the interaction. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionVelocity">
      <summary>The instantaneous rate of change of position in the interaction, in pixels per second. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The position velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXChainingMode">
      <summary>The PositionXChainingMode property defines the chaining behavior for an InteractionSource in the X direction. There are three types of InteractionChainingMode s: </summary>
      <returns>Chaining mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXSourceMode">
      <summary>Source mode for the X-axis.</summary>
      <returns>Source mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYChainingMode">
      <summary>The PositionYChainingMode property defines the chaining behavior for an InteractionSource in the Y direction. There are three types of InteractionChainingMode s: </summary>
      <returns>Chaining mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYSourceMode">
      <summary>Source mode for the Y-axis.</summary>
      <returns>Source mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Scale">
      <summary>The total percentage-difference in scale since the start of the interaction. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The scale of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleChainingMode">
      <summary>The ScaleChainingMode property defines the chaining behavior for an InteractionSource in the Scale direction. There are three types of InteractionChainingMode s: Auto, Always, Never. When Scale chaining is enabled, input will flow to the nearest ancestor’s VisualInteractionSource whenever the interaction (such as panning) would otherwise take InteractionTracker ’s position past it’s minimum or maximum Scale position.</summary>
      <returns>Chaining mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleSourceMode">
      <summary>Defines how interactions are processed for an VisualInteractionSource on the scale axis. There are 3 types of InteractionSourceMode s to choose from: Interactions are </summary>
      <returns>Source mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleVelocity">
      <summary>The instantaneous rate of change of scale in the interaction, in percent per second. Additive. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The scale velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Source">
      <summary>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</summary>
      <returns>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaScaleModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaScale value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaScale is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Create(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of VisualInteractionSource.</summary>
      <param name="source">The visual to use as the source of the interaction.</param>
      <returns>Returns the created VisualInteractionSource object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.CreateFromIVisualElement(Microsoft.UI.Composition.IVisualElement)">
      <summary>
      </summary>
      <param name="source">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.TryRedirectForManipulation(Microsoft.UI.Input.PointerPoint)">
      <summary>Indicates that configured manipulations for the given pointer stream should be sent to the InteractionTracker, not the app's UI thread, starting at the given PointerPoint.</summary>
      <param name="pointerPoint">Indicates that configured manipulations for the given pointer stream should be sent to the InteractionTracker, not the app's UI thread, starting at the given PointerPoint.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadAndPointerWheel">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadOnly">
      <summary>Pointer input goes to the UI thread, Precision Touchpad input goes to the compositor.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.Off">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.PointerWheelOnly">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAlphaMode">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.AlphaTest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Blend">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Opaque">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Color">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Index">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Tangent">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord0">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord1">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Vertex">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneBoundingBox">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Center">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Extents">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Max">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Min">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Size">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponent">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponent.ComponentType">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentCollection">
      <summary>Represents a collection of SceneComponent objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Append(Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneComponent value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneComponent,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Sets the value at the specified index to the specified SceneComponent value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentType">
      <summary>Defines constants that specify what kind a scene component is.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneComponentType.MeshRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterial">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterialInput">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMesh">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.Bounds">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.PrimitiveTopology">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneMesh.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneMesh object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.FillMeshAttribute(Microsoft.UI.Composition.Scenes.SceneAttributeSemantic,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Foundation.MemoryBuffer)">
      <summary>
      </summary>
      <param name="semantic">
      </param>
      <param name="format">
      </param>
      <param name="memory">
      </param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap">
      <summary>Represents a collection of material attributes for a scene mesh as key/value pairs.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Size">
      <summary>Gets the number of items in the map.</summary>
      <returns>The number of items in the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Clear">
      <summary>Removes all items from the map.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.GetView">
      <summary>Returns an immutable view of the map.</summary>
      <returns>The view of the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.HasKey(System.String)">
      <summary>Determines whether the map contains the specified key.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>**true** if the key is found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Insert(System.String,Microsoft.UI.Composition.Scenes.SceneAttributeSemantic)">
      <summary>Inserts or replaces an item in the map.</summary>
      <param name="key">The key associated with the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>**true** if an item with the specified key is an existing item that was replaced; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Lookup(System.String)">
      <summary>Returns the item at the specified key in the map.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>The value, if an item with the specified key exists. Use the HasKey method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Remove(System.String)">
      <summary>Removes an item from the map.</summary>
      <param name="key">The key associated with the item to remove.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Material">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Mesh">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.UVMappings">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicRoughnessInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.RoughnessFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneModelTransform">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Orientation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngle">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngleInDegrees">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAxis">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Scale">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Translation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNode">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Children">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Components">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Parent">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Transform">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneNode.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneNode object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.FindFirstComponentOfType(Microsoft.UI.Composition.Scenes.SceneComponentType)">
      <summary>
      </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNodeCollection">
      <summary>Represents a collection of SceneNode objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Append(Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneNode value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneNode,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Sets the value at the specified index to the specified SceneNode value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneObject">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.ScenePbrMaterial">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaCutoff">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.IsDoubleSided">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalScale">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionStrength">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.BitmapInterpolationMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Surface">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingUMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingVMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneVisual">
      <summary>Represents a container visual for the nodes of a 3D scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneVisual.Root">
      <summary>Gets or sets the root node for scene.</summary>
      <returns>The root node for scene.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneVisual.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneVisual.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneVisual object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneWrappingMode">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.ClampToEdge">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.MirroredRepeat">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.Repeat">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Input.AttachableInputObject">
      <summary>Base class for an InputActivationListener object associated with a window, view, or other visual element.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.AttachableInputObject.Close">
      <summary>Terminates the AttachableInputObject instance.</summary>
    </member>
  </members>
</doc>

