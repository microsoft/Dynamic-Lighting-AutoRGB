<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.WinUI</name>
  </assembly>
  <members>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueue">
      <summary>Manages a prioritized queue on which tasks execute in a serial fashion on a thread.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueue.HasThreadAccess">
      <summary>Gets a value indicating whether the DispatcherQueue has access to the current thread.</summary>
      <returns>
      </returns>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownCompleted">
      <summary>Fires after the **DispatcherQueue** event loop stops which is the last step in the **DispatcherQueue** shutdown process.</summary>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueue.ShutdownStarting">
      <summary>Fires before the dispatcher queue initiates an exit from its event loop.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.CreateTimer">
      <summary>Creates a **DispatcherQueueTimer** on the **DispatcherQueue** to execute a task periodically after a time interval has elapsed.</summary>
      <returns>An **DispatcherQueueTimer** that can queue tasks on a timed basis to the current **DispatcherQueue**.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.GetForCurrentThread">
      <summary>Gets the **DispatcherQueue** associated with the current thread.</summary>
      <returns>A **DispatcherQueue** instance that will execute tasks serially on the current thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the **DispatcherQueue** which will be executed on the thread  associated with the **DispatcherQueue**.</summary>
      <param name="callback">The task to execute.</param>
      <returns>**True** indicates that the task was added to the queue; **false**, otherwise.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueue.TryEnqueue(Microsoft.UI.Dispatching.DispatcherQueuePriority,Microsoft.UI.Dispatching.DispatcherQueueHandler)">
      <summary>Adds a task to the **DispatcherQueue** which will be executed on the thread associated with the **DispatcherQueue**.</summary>
      <param name="priority">The priority of the task such as Low, Normal, or High.</param>
      <param name="callback">A delegate to the task to execute.</param>
      <returns>**True** indicates that the task was added to the queue; **false**, otherwise.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueController">
      <summary>Manages the lifetime of a DispatcherQueue. Provides methods to create and shutdown the **DispatcherQueue**.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueController.DispatcherQueue">
      <summary>Gets the **DispatcherQueue** associated with this **DispatcherQueueController**.</summary>
      <returns>The **DispatcherQueue** instance that you use to queue tasks that run on a thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.CreateOnDedicatedThread">
      <summary>Creates a DispatcherQueue that you can use to run tasks on a dedicated thread.</summary>
      <returns>The created **DispatcherQueueController**.</returns>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueController.ShutdownQueueAsync">
      <summary>Stops the **DispatcherQueue** associated with this **DispatcherQueueController**. Shuts down the thread if the **DispatcherQueueController** was created by **CreateOnDedicatedThread**.</summary>
      <returns>An asynchronous operation which will complete after the queue has dispatched all of its remaining work.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueHandler">
      <summary>A callback that will be executed on the **DispatcherQueue** thread.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueuePriority">
      <summary>Defines the priority levels that can be given to work assigned to a DispatcherQueue.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.High">
      <summary>Work scheduled at **High** priority will be dispatched first, along with other **High** priority System tasks, before processing **Normal** or **Low** priority work.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Low">
      <summary>**Low** priority work will be scheduled when there isn't any other work to process. Work at **Low** priority can be preempted by new incoming **High** and **Normal** priority tasks.</summary>
    </member>
    <member name="F:Microsoft.UI.Dispatching.DispatcherQueuePriority.Normal">
      <summary>Work will be dispatched once all **High** priority tasks are dispatched. If a new **High** priority work is scheduled, all new **High** priority tasks are processed before resuming **Normal** tasks. This is the default priority.</summary>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs">
      <summary>Provides the arguments for the ShutdownStarting event.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs.GetDeferral">
      <summary>Gets a deferral object so that you can use to continue to post work to the **DisbpatcherQueue** until you mark the deferral complete.</summary>
      <returns>The deferral object.</returns>
    </member>
    <member name="T:Microsoft.UI.Dispatching.DispatcherQueueTimer">
      <summary>Executes a task in a **DispatcherQueue** periodically after a time interval has elapsed.</summary>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.Interval">
      <summary>Gets and sets the interval for the timer.</summary>
      <returns>The amount of time before the timer ticks.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRepeating">
      <summary>Indicates whether the timer is repeating.</summary>
      <returns>**True** indicates that the timer fires every **DispatcherQueueTimer.Interval**; **false** means that it fires once, after **DispatcherQueueTimer.Interval** elapses.</returns>
    </member>
    <member name="P:Microsoft.UI.Dispatching.DispatcherQueueTimer.IsRunning">
      <summary>Indicates whether the timer is currently running.</summary>
      <returns>**True** indicates that the timer is running; otherwise **false**</returns>
    </member>
    <member name="E:Microsoft.UI.Dispatching.DispatcherQueueTimer.Tick">
      <summary>Event that fires when the timer **Interval** elapses.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Start">
      <summary>Starts the timer.</summary>
    </member>
    <member name="M:Microsoft.UI.Dispatching.DispatcherQueueTimer.Stop">
      <summary>Stops the timer.</summary>
    </member>
    <member name="T:Microsoft.UI.ColorHelper">
      <summary>Provides static helper methods for processing Color values.</summary>
    </member>
    <member name="M:Microsoft.UI.ColorHelper.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Generates a Color structure, based on discrete **Byte** values for **ARGB** components.</summary>
      <param name="a">The **A** (transparency) component of the desired color. Range is 0-255.</param>
      <param name="r">The **R** component of the desired color. Range is 0-255.</param>
      <param name="g">The **G** component of the desired color. Range is 0-255.</param>
      <param name="b">The **B** component of the desired color. Range is 0-255.</param>
      <returns>The generated Color value.</returns>
    </member>
    <member name="T:Microsoft.UI.Colors">
      <summary>Implements a set of predefined colors. See Color for usage information.</summary>
    </member>
    <member name="P:Microsoft.UI.Colors.AliceBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.AntiqueWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAEBD7.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAEBD7.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aqua">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Aquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFFD4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFFD4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Azure">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Beige">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Bisque">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4C4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4C4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Black">
      <summary>Gets the system-defined color that has the ARGB value of #FF000000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF000000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlanchedAlmond">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEBCD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEBCD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Blue">
      <summary>Gets the system-defined color that has the ARGB value of #FF0000FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FF0000FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BlueViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF8A2BE2.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8A2BE2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Brown">
      <summary>Gets the system-defined color that has the ARGB value of #FFA52A2A.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA52A2A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.BurlyWood">
      <summary>Gets the system-defined color that has an ARGB value of #FFDEB887.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDEB887.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CadetBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF5F9EA0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF5F9EA0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chartreuse">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7FFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Chocolate">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2691E.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2691E.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Coral">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF7F50.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF7F50.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.CornflowerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6495ED.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6495ED.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cornsilk">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF8DC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF8DC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Crimson">
      <summary>Gets the system-defined color that has an ARGB value of #FFDC143C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDC143C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Cyan">
      <summary>Gets the system-defined color that has the ARGB value of #FF00FFFF.</summary>
      <returns>The system-defined color that has the ARGB value of ##FF00FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FF008B8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008B8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFB8860B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB8860B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFA9A9A9.</summary>
      <returns>The system-defined color that has the ARGB value of #FFA9A9A9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF006400.</summary>
      <returns>The system-defined color that has an ARGB value of #FF006400.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkKhaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFBDB76B.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBDB76B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkMagenta">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B008B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B008B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOliveGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF556B2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF556B2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrange">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF8C00.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF8C00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FF9932CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9932CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkRed">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B0000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFE9967A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE9967A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF8FBC8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8FBC8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF483D8B.</summary>
      <returns>The system-defined color that has an ARGB value of #FF483D8B.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF2F4F4F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2F4F4F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF00CED1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00CED1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DarkViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF9400D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9400D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF1493.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF1493.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DeepSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00BFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00BFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DimGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF696969.</summary>
      <returns>The system-defined color that has an ARGB value of #FF696969.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.DodgerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF1E90FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FF1E90FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Firebrick">
      <summary>Gets the system-defined color that has an ARGB value of #FFB22222.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB22222.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.FloralWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.ForestGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF228B22.</summary>
      <returns>The system-defined color that has an ARGB value of #FF228B22.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Fuchsia">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gainsboro">
      <summary>Gets the system-defined color that has an ARGB value of #FFDCDCDC.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDCDCDC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GhostWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFF8F8FF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF8F8FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gold">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFD700.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFD700.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Goldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFDAA520.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDAA520.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Gray">
      <summary>Gets the system-defined color that has the ARGB value of #FF808080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF808080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Green">
      <summary>Gets the system-defined color that has the ARGB value of #FF008000.</summary>
      <returns>The system-defined color that has the ARGB value of #FF008000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.GreenYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFADFF2F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADFF2F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Honeydew">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0FFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.HotPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF69B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF69B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.IndianRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD5C5C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD5C5C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Indigo">
      <summary>Gets the system-defined color that has an ARGB value of #FF4B0082.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4B0082.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Ivory">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFF0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFF0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Khaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0E68C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF0E68C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lavender">
      <summary>Gets the system-defined color that has an ARGB value of #FFE6E6FA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE6E6FA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LavenderBlush">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF0F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF0F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LawnGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF7CFC00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7CFC00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LemonChiffon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFADD8E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFADD8E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCoral">
      <summary>Gets the system-defined color that has an ARGB value of #FFF08080.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF08080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FFE0FFFF.</summary>
      <returns>The system-defined color that has an ARGB value of #FFE0FFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGoldenrodYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAFAD2.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAFAD2.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGray">
      <summary>Gets the system-defined color that has the ARGB value of #FFD3D3D3.</summary>
      <returns>The system-defined color that has the ARGB value of #FFD3D3D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF90EE90.</summary>
      <returns>The system-defined color that has an ARGB value of #FF90EE90.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFB6C1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFB6C1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFA07A.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFA07A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF20B2AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF20B2AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF778899.</summary>
      <returns>The system-defined color that has an ARGB value of #FF778899.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightSteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0C4DE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0C4DE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LightYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFE0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFFE0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Lime">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF00.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.LimeGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF32CD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF32CD32.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Linen">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAF0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFAF0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Magenta">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF00FF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF00FF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Maroon">
      <summary>Gets the system-defined color that has an ARGB value of #FF800000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF800000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumAquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF66CDAA.</summary>
      <returns>The system-defined color that has an ARGB value of #FF66CDAA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF0000CD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF0000CD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFBA55D3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBA55D3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumPurple">
      <summary>Gets the system-defined color that has an ARGB value of #FF9370DB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9370DB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF3CB371.</summary>
      <returns>The system-defined color that has an ARGB value of #FF3CB371.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF7B68EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FF7B68EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumSpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FA9A.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FA9A.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF48D1CC.</summary>
      <returns>The system-defined color that has an ARGB value of #FF48D1CC.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MediumVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFC71585.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC71585.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MidnightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF191970.</summary>
      <returns>The system-defined color that has an ARGB value of #FF191970.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MintCream">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5FFFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5FFFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.MistyRose">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Moccasin">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4B5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFE4B5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.NavajoWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDEAD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDEAD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Navy">
      <summary>Gets the system-defined color that has an ARGB value of #FF000080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF000080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OldLace">
      <summary>Gets the system-defined color that has an ARGB value of #FFFDF5E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFDF5E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Olive">
      <summary>Gets the system-defined color that has an ARGB value of #FF808000.</summary>
      <returns>The system-defined color that has an ARGB value of #FF808000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OliveDrab">
      <summary>Gets the system-defined color that has an ARGB value of #FF6B8E23.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6B8E23.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orange">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFA500.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFA500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.OrangeRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF4500.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF4500.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Orchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFDA70D6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDA70D6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFEEE8AA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEEE8AA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF98FB98.</summary>
      <returns>The system-defined color that has an ARGB value of #FF98FB98.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FFAFEEEE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFAFEEEE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PaleVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFDB7093.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDB7093.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PapayaWhip">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEFD5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFEFD5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PeachPuff">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDAB9.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFDAB9.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Peru">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD853F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFCD853F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Pink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFC0CB.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFC0CB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Plum">
      <summary>Gets the system-defined color that has an ARGB value of #FFDDA0DD.</summary>
      <returns>The system-defined color that has an ARGB value of #FFDDA0DD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.PowderBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0E0E6.</summary>
      <returns>The system-defined color that has an ARGB value of #FFB0E0E6.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Purple">
      <summary>Gets the system-defined color that has the ARGB value of #FF800080.</summary>
      <returns>The system-defined color that has the ARGB value of #FF800080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Red">
      <summary>Gets the system-defined color that has the ARGB value of #FFFF0000.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFF0000.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RosyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFBC8F8F.</summary>
      <returns>The system-defined color that has an ARGB value of #FFBC8F8F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.RoyalBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4169E1.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4169E1.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SaddleBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B4513.</summary>
      <returns>The system-defined color that has an ARGB value of #FF8B4513.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Salmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFA8072.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFA8072.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SandyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFF4A460.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF4A460.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF2E8B57.</summary>
      <returns>The system-defined color that has an ARGB value of #FF2E8B57.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SeaShell">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF5EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFF5EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Sienna">
      <summary>Gets the system-defined color that has an ARGB value of #FFA0522D.</summary>
      <returns>The system-defined color that has an ARGB value of #FFA0522D.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Silver">
      <summary>Gets the system-defined color that has an ARGB value of #FFC0C0C0.</summary>
      <returns>The system-defined color that has an ARGB value of #FFC0C0C0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEEB.</summary>
      <returns>The system-defined color that has an ARGB value of #FF87CEEB.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6A5ACD.</summary>
      <returns>The system-defined color that has an ARGB value of #FF6A5ACD.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF708090.</summary>
      <returns>The system-defined color that has an ARGB value of #FF708090.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Snow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAFA.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFFFAFA.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF7F.</summary>
      <returns>The system-defined color that has an ARGB value of #FF00FF7F.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.SteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4682B4.</summary>
      <returns>The system-defined color that has an ARGB value of #FF4682B4.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tan">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2B48C.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD2B48C.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Teal">
      <summary>Gets the system-defined color that has an ARGB value of #FF008080.</summary>
      <returns>The system-defined color that has an ARGB value of #FF008080.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Thistle">
      <summary>Gets the system-defined color that has an ARGB value of #FFD8BFD8.</summary>
      <returns>The system-defined color that has an ARGB value of #FFD8BFD8.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Tomato">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF6347.</summary>
      <returns>The system-defined color that has an ARGB value of #FFFF6347.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Transparent">
      <summary>Gets the system-defined color that has the ARGB value of #00FFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #00FFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Turquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF40E0D0.</summary>
      <returns>The system-defined color that has an ARGB value of #FF40E0D0.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Violet">
      <summary>Gets the system-defined color that has an ARGB value of #FFEE82EE.</summary>
      <returns>The system-defined color that has an ARGB value of #FFEE82EE.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Wheat">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5DEB3.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5DEB3.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.White">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFFFF.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFFFF.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.WhiteSmoke">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5F5.</summary>
      <returns>The system-defined color that has an ARGB value of #FFF5F5F5.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.Yellow">
      <summary>Gets the system-defined color that has the ARGB value of #FFFFFF00.</summary>
      <returns>The system-defined color that has the ARGB value of #FFFFFF00.</returns>
    </member>
    <member name="P:Microsoft.UI.Colors.YellowGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF9ACD32.</summary>
      <returns>The system-defined color that has an ARGB value of #FF9ACD32.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AmbientLight">
      <summary>A light that illuminates every targeted Visual equally.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Color">
      <summary>Color of the light. Animatable.</summary>
      <returns>The color of the ambient light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AmbientLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationController">
      <summary>Provides playback controls for a KeyFrameAnimation.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MaxPlaybackRate">
      <summary>Gets the maximum allowed playback rate.</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.MinPlaybackRate">
      <summary>Gets the minimum allowed playback rate.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.PlaybackRate">
      <summary>Gets or sets the rate at which the animation plays.</summary>
      <returns>The rate at which the animation plays. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.Progress">
      <summary>Gets or sets a value that indicates the current playback position of the animation.</summary>
      <returns>The current playback position of the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationController.ProgressBehavior">
      <summary>Gets or sets a value that indicates how progress is determined.</summary>
      <returns>A value of the enumeration that indicates how progress is determined. The default is **Default**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Pause">
      <summary>Pauses playback of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.AnimationController.Resume">
      <summary>Starts playback of an animation that was previously paused.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationControllerProgressBehavior">
      <summary>Defines constants that specify how the AnimationController.Progress value is determined.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.Default">
      <summary>The progress value does not include delay time.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationControllerProgressBehavior.IncludesDelayTime">
      <summary>The progress value includes delay time.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDelayBehavior">
      <summary>Specifies the animation delay behavior.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueAfterDelay">
      <summary>Does not compute anything in animation nor holds the value of composition object property. If a DelayTime is specified, it delays starting the animation according to delay time and after delay has expired it applies animation to the object property.�</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueBeforeDelay">
      <summary>Applies the initial value of the animation (i.e. the value at Keyframe 0) to the object before the delay time is elapsed (when there is a DelayTime specified), it then delays starting the animation according to the DelayTime.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationDirection">
      <summary>Specifies the play direction of an animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Alternate">
      <summary>Alternate between normal and reverse playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.AlternateReverse">
      <summary>Alternate between reverse and normal playback.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Normal">
      <summary>Play the animation from start to end.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationDirection.Reverse">
      <summary>Play the animation in reverse from end to start.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationIterationBehavior">
      <summary>Specifies if the animation should loop.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Count">
      <summary>The animation should loop the specified number of times.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationIterationBehavior.Forever">
      <summary>The animation should loop forever.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyAccessMode">
      <summary>Defines constants that specify how an animated property can be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.None">
      <summary>The property cannot be accessed.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadOnly">
      <summary>The property can only be read.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.ReadWrite">
      <summary>The property can be read or written to.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationPropertyAccessMode.WriteOnly">
      <summary>The property can only be written to.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationPropertyInfo">
      <summary>Represents information about a property that can be animated.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.AnimationPropertyInfo.AccessMode">
      <summary>Gets or sets a value that specifies how an animated property can be accessed.</summary>
      <returns>A value of the enumeration that specifies how an animated property can be accessed.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.AnimationStopBehavior">
      <summary>Specifies the behavior of an animation when it stops.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.LeaveCurrentValue">
      <summary>Leave the animation at its current value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToFinalValue">
      <summary>Set the animation to its final value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.AnimationStopBehavior.SetToInitialValue">
      <summary>Reset the animation to its initial value.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.BooleanKeyFrameAnimation">
      <summary>A time-based animation that targets a Boolean property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.BooleanKeyFrameAnimation.InsertKeyFrame(System.Single,System.Boolean)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation">
      <summary>A bounce physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Acceleration">
      <summary>Gets or sets the rate at which the velocity increases.</summary>
      <returns>The rate at which the velocity increases.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.Restitution">
      <summary>Gets or sets the amount that an object rebounds after collision.</summary>
      <returns>The amount that an object rebounds after collision.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ColorKeyFrameAnimation">
      <summary>A time-based animation that targets the Color property with one or more color key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ColorKeyFrameAnimation.InterpolationColorSpace">
      <summary>The color space the color interpolation should run through.</summary>
      <returns>The color space the color interpolation should run through.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ColorKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.UI.Color,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimation">
      <summary>Represents the base animation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.InitialValueExpressions">
      <summary>Gets the initial values for the animation.</summary>
      <returns>The initial values for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimation.Target">
      <summary>The target of the animation.</summary>
      <returns>The target of the animation.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearAllParameters">
      <summary>Clears all of the parameters of the animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.ClearParameter(System.String)">
      <summary>Clears a parameter from the animation.</summary>
      <param name="key">The parameter to clear.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetBooleanParameter(System.String,System.Boolean)">
      <summary>Sets a boolean value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The boolean value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetColorParameter(System.String,Windows.UI.Color)">
      <summary>Sets a Color value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Color value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetExpressionReferenceParameter(System.String,Microsoft.UI.Composition.IAnimationObject)">
      <summary>Sets an IAnimationObject value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="parameterName">The name of the parameter to set.</param>
      <param name="source">The source object.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix3x2Parameter(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Sets a Matrix3x2 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix3x2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetMatrix4x4Parameter(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Sets a Matrix4x4 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Matrix4x4 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetQuaternionParameter(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Sets a Quaternion value for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The quaternion value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetReferenceParameter(System.String,Microsoft.UI.Composition.CompositionObject)">
      <summary>Sets a reference to a Composition object for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set. The name can be used to reference the parameter in the ExpressionAnimation.</param>
      <param name="compositionObject">The CompositionObject value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetScalarParameter(System.String,System.Single)">
      <summary>Sets a Scalar value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Single value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector2Parameter(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Sets a Vector2 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector2 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector3Parameter(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Sets a Vector3 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter to set.</param>
      <param name="value">The Vector3 value.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimation.SetVector4Parameter(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Sets a Vector4 value parameter for use with an ExpressionAnimation or an expression keyframe.</summary>
      <param name="key">The name of the parameter.</param>
      <param name="value">The Vector4 value.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionAnimationGroup">
      <summary>Defines a group of animations.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionAnimationGroup.Count">
      <summary>The number of animations in the group.</summary>
      <returns>The number of animations in the group.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Add(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Adds an animation to the animation group.</summary>
      <param name="value">The animation to add to the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.First">
      <summary>Retrieves the first animation in the group.</summary>
      <returns>Returns the first animation in the group.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.Remove(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Removes an animation from the animation group.</summary>
      <param name="value">The animation to remove from the group.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionAnimationGroup.RemoveAll">
      <summary>Removes all animations from the group.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackdropBrush">
      <summary>A brush that applies an effect (or a chain of effects) to the region behind a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBackfaceVisibility">
      <summary>Specifies whether the back face of a visual is visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Hidden">
      <summary>The back face should not be visible during a 3D transform.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Inherit">
      <summary>Inherit the back face visibility value.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBackfaceVisibility.Visible">
      <summary>The back face should be visible during a 3D transform.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchCompletedEventArgs">
      <summary>Arguments for the CompositionCommitBatch.Completed or CompositionScopedBatch.Completed events.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBatchTypes">
      <summary>Batch types for CompositionCommitBatch and CompositionScopedBatch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.AllAnimations">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Animation">
      <summary>The batch contains animations.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.Effect">
      <summary>The batch contains effects.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.InfiniteAnimation">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBatchTypes.None">
      <summary>None.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on screen.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.Linear">
      <summary>Interpolate a color from the four bitmap pixels that are the nearest to the current rendering pixel.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinLinearMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagLinearMinNearestMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinLinearMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.MagNearestMinNearestMipNearest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBitmapInterpolationMode.NearestNeighbor">
      <summary>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBorderMode">
      <summary>Controls the aliasing behavior on the edges of visual borders.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Hard">
      <summary>Bitmap and clip edges are aliased.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Inherit">
      <summary>Inherit from parent.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionBorderMode.Soft">
      <summary>Bitmap and clip edges are antialiased.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionBrush">
      <summary>Base class for brushes used to paint a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCapabilities">
      <summary>Provides the ability to check system hardware capabilities so that Visual Layer Effects may be scaled accordingly. This allows you to ensure that your application's use of rendering-intensive operations is tailored to match the device's capabilities, providing optimum performance and pleasant visual results.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCapabilities.Changed">
      <summary>Event triggered when the supported composition capabilities changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsFast">
      <summary>Indicates whether fast effects are supported.</summary>
      <returns>Returns a boolean indicating whether fast effects are supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.AreEffectsSupported">
      <summary>Indicates whether effects are supported.</summary>
      <returns>Returns a boolean indicating whether effects are supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionCapabilities.GetForCurrentView">
      <summary>Gets the supported composition capabilities for the current view.</summary>
      <returns>Returns the supported composition capabilities for the current view.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionClip">
      <summary>Base class for clipping objects such as InsetClip.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.AnchorPoint">
      <summary>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip.</summary>
      <returns>The point on the clip to be positioned at the clip's offset. Value is normalized with respect to the size of the clip. An AnchorPoint value of (0, 0) refers to the top-left corner of the untransformed clip and a value of (1, 1) refers to the bottom-right corner. Negative values and values greater than one are accepted but will result in an AnchorPoint that is outside the boundaries of the original, untransformed clip.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.CenterPoint">
      <summary>The point about which rotation or scaling occurs.</summary>
      <returns>The point about which rotation or scaling occurs. Value is in pixels within the local coordinate space of the visual on which the clip is applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Offset">
      <summary>The offset of the clip relative to the visual on which the clip is applied.</summary>
      <returns>The offset of the clip relative to the visual on which the clip is applied. By default, the Offset value on a clip is (0, 0).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngle">
      <summary>The angle of rotation applied to the clip, in radians.</summary>
      <returns>The angle of rotation applied to the clip, in radians. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngle values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in degrees, use CompositionClip.RotationAngleInDegrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.RotationAngleInDegrees">
      <summary>The angle of rotation applied to the clip, in degrees.</summary>
      <returns>The angle of rotation applied to the clip, in degrees. For a CompositionClip, the axis of rotation is always about the z-axis, with positive RotationAngleInDegrees values resulting in a clockwise rotation and negative values resulting in a counter-clockwise rotation. For specifying RotationAngle in radians, use CompositionClip.RotationAngle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.Scale">
      <summary>The scale to apply to the clip.</summary>
      <returns>The scale to apply to the clip. The scale value is a multiplier of the clip's size. By default, the Scale value on a clip is (1, 1).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionClip.TransformMatrix">
      <summary>The 3x2 transformation matrix to apply to the clip.</summary>
      <returns>The transformation matrix to apply to the clip. By default, the TransformMatrix is set to:</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorBrush">
      <summary>Paints a SpriteVisual with a solid color.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorBrush.Color">
      <summary>The color used to fill a SpriteVisual. Animatable.</summary>
      <returns>The color used to fill a SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStop">
      <summary>Describes the location and color of a transition point in a gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Color">
      <summary>Gets or sets the color of the gradient stop.</summary>
      <returns>The color of the gradient stop. The default is Transparent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStop.Offset">
      <summary>Gets or sets the location of the gradient stop within the gradient vector.</summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorGradientStopCollection">
      <summary>Represents a collection of CompositionColorGradientStop objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Append(Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionColorGradientStop value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.IndexOf(Microsoft.UI.Composition.CompositionColorGradientStop,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.ReplaceAll(Microsoft.UI.Composition.CompositionColorGradientStop[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionColorGradientStopCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionColorGradientStop)">
      <summary>Sets the value at the specified index to the CompositionColorGradientStop value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionColorSpace">
      <summary>Specifies the color space for interpolating color values in ColorKeyFrameAnimation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Auto">
      <summary>Use the default color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Hsl">
      <summary>Use the HSL color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.HslLinear">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.Rgb">
      <summary>Use the ARGB color space for interpolation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionColorSpace.RgbLinear">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCommitBatch">
      <summary>A group of active animations or effects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsActive">
      <summary>Indicates whether the CompositionCommitBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionCommitBatch.IsEnded">
      <summary>Indicates whether the CompositionCommitBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionCommitBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionCommitBatch.Completed">
      <summary>Event that is triggered when all objects in a CompositionCommitBatch have completed.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionCompositeMode">
      <summary>Determines how a non-opaque visual's content is blended with the background content behind the visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.DestinationInvert">
      <summary>The visual content's colors are inverted.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.Inherit">
      <summary>Inherits mode from parent visual.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.MinBlend">
      <summary>Visual content's colors subtract for color channels in the background.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionCompositeMode.SourceOver">
      <summary>The standard Composite Mode. Colors are blended with per-pixel transparency.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionContainerShape">
      <summary>Represents a container for CompositionShapes, used to group items that share 2D transforms.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionContainerShape.Shapes">
      <summary>Gets the collection of CompostionShapes in this container.</summary>
      <returns>The collection of CompostionShapes in this container.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDrawingSurface">
      <summary>A drawing surface for interoperation with Direct2D or Direct3D.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.AlphaMode">
      <summary>The alpha mode of the drawing surface.</summary>
      <returns>The alpha mode of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.PixelFormat">
      <summary>The pixel format of the drawing surface.</summary>
      <returns>The pixel format of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.Size">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionDrawingSurface.SizeInt32">
      <summary>The size of the drawing surface.</summary>
      <returns>The size of the drawing surface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Resize(Windows.Graphics.SizeInt32)">
      <summary>Resizes the drawing surface to the specified size.</summary>
      <param name="sizePixels">The new size in pixels for the drawing surface.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.Scroll(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface using the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionDrawingSurface.ScrollWithClip(Windows.Graphics.PointInt32,Windows.Graphics.RectInt32,Windows.Graphics.RectInt32)">
      <summary>Scrolls the drawing surface with the specified clip rectangle.</summary>
      <param name="offset">The scrolling offset.</param>
      <param name="clipRect">The clipping rectangle to apply.</param>
      <param name="scrollRect">The scrolling rectangle.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy">
      <summary>Specifies the masking policy for a shadow.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.Default">
      <summary>Shadow defaults to rectangular shape or the mask provided.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionDropShadowSourcePolicy.InheritFromVisualContent">
      <summary>Shadow uses a mask using the alpha value of the visual's brush.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEasingFunction">
      <summary>Base class for interpolator functions to use with KeyFrameAnimations.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectBrush">
      <summary>Paints a SpriteVisual with the output of a filter effect. The filter effect description is defined using the  CompositionEffectFactory class.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.GetSourceParameter(System.String)">
      <summary>Retrieves a CompositionBrush associated with a given CompositionEffectSourceParameter name.</summary>
      <param name="name">The name of the input.</param>
      <returns>Returns the specified input.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectBrush.SetSourceParameter(System.String,Microsoft.UI.Composition.CompositionBrush)">
      <summary>Associates a name declared using CompositionEffectSourceParameter to an effect source.</summary>
      <param name="name">The name of the source parameter.</param>
      <param name="source">The source to pass to the effect.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactory">
      <summary>Creates a composition object that contains a Win2D effect description format in the Microsoft.Graphics.Canvas.Effects namespace.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.ExtendedError">
      <summary>An extended error code for the result of a call to CreateBrush.</summary>
      <returns>An extended error code for the result of a call to CreateBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectFactory.LoadStatus">
      <summary>The load status of a CreateBrush call.</summary>
      <returns>The load status of a CreateBrush call.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectFactory.CreateBrush">
      <summary>Creates an instance of CompositionEffectBrush with the effect definition and animatable properties contained in the CompositionEffectFactory object.</summary>
      <returns>Returns the created CompositionEffectBrush object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus">
      <summary>The status of the asynchronous compilation of a shader for an effect description.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.EffectTooComplex">
      <summary>The effect was too complex.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Other">
      <summary>Other error.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Pending">
      <summary>The operation is still pending.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus.Success">
      <summary>The operation was successful.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEffectSourceParameter">
      <summary>Used to declare an arbitrary name (a String) to be associated with a CompositionBrush (the “effect source”). The association of the given name and the effect source occurs when the SetSourceParameter method of a CompositionEffectBrush is called.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionEffectSourceParameter.#ctor(System.String)">
      <summary>Creates an instance of CompositionEffectSourceParameter.</summary>
      <param name="name">The name for the CompositionEffectSourceParameter instance.</param>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEffectSourceParameter.Name">
      <summary>The name associated with the effect source.</summary>
      <returns>The name associated with the effect source.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionEllipseGeometry">
      <summary>Represents an ellipse with the specified center and radius.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Center">
      <summary>Gets or sets the center point of the ellipse.</summary>
      <returns>The center point of the ellipse.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionEllipseGeometry.Radius">
      <summary>Gets or sets the radius of the ellipse.</summary>
      <returns>The radius of the ellipse.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometricClip">
      <summary>Clips a portion of a visual. The visible portion of the visual is a shape defined by a CompositionGeometry. The portion of the visual outside the geometry is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.Geometry">
      <summary>Gets or sets CompositionGeometry that defines the shape of the clip.</summary>
      <returns>A CompositionGeometry that defines the shape of the clip. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometricClip.ViewBox">
      <summary>Gets or sets a CompositionViewBox that maps the shape visual tree coordinates onto the visual.</summary>
      <returns>A CompositionViewBox that maps the shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGeometry">
      <summary>Represents the base class for composition geometries.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimEnd">
      <summary>Gets or sets the amount to trim the end of the geometry path.</summary>
      <returns>The amount to trim the end of the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimOffset">
      <summary>Gets or sets the amount to offset trimming the geometry path.</summary>
      <returns>The amount to offset trimming the geometry path. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGeometry.TrimStart">
      <summary>Gets or sets the amount to trim the start of the geometry path.</summary>
      <returns>The amount to trim the start of the geometry path. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGetValueStatus">
      <summary>Indicates the outcome of an attempt to retrieve the value of a key-value pair.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.NotFound">
      <summary>The key-value pair does not exist.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.Succeeded">
      <summary>The value successfully retrieved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGetValueStatus.TypeMismatch">
      <summary>The value type of the key-value pair is different than the value type requested.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientBrush">
      <summary>Represents a brush that describes a gradient, composed of gradient stops.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.AnchorPoint">
      <summary>Gets or sets the point on the brush to be positioned at the brush's offset.</summary>
      <returns>The point on the brush to be positioned at the brush's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.CenterPoint">
      <summary>Gets or sets the point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ColorStops">
      <summary>Gets the brush's gradient stops.</summary>
      <returns>A collection of the CompositionColorGradientStop objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty CompositionColorGradientStopCollection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.ExtendMode">
      <summary>Gets or sets a value that specifies how to draw the gradient outside the brush's gradient vector or space.</summary>
      <returns>The mode used to paint the gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.InterpolationSpace">
      <summary>Gets or sets a value that specifies how the gradient's colors are interpolated.</summary>
      <returns>A value of the enumeration that specifies how the gradient's colors are interpolated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.MappingMode">
      <summary>Gets or sets a value that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
      <returns>A value of the enumeration that indicates whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Offset">
      <summary>Gets or sets the offset of the brush relative to the object being painted.</summary>
      <returns>The offset of the brush relative to the object being painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngle">
      <summary>Gets or sets the rotation angle of the brush in radians.</summary>
      <returns>The rotation angle of the brush in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the brush in degrees.</summary>
      <returns>The rotation angle of the brush in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.Scale">
      <summary>Gets or sets the scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionGradientBrush.TransformMatrix">
      <summary>Gets or sets the matrix of transforms to apply to the brush.</summary>
      <returns>The matrix of transforms to apply to the brush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGradientExtendMode">
      <summary>Defines constants that specify how to draw the gradient outside the brush's gradient vector or space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Clamp">
      <summary>The gradient is not extended.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Mirror">
      <summary>The gradient is repeated in the reverse direction..</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionGradientExtendMode.Wrap">
      <summary>The gradient is wrapped.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionGraphicsDevice">
      <summary>Used to create all hardware bound resources for a given DirectX device on a compositor session. CompositionGraphicsDevice contains a DirectX device that is used to perform the GPU operations. Developers can obtain a Graphics device from the compositor top level object.</summary>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionGraphicsDevice.RenderingDeviceReplaced">
      <summary>Event triggered when the rendering device has been replaced.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface(Windows.Foundation.Size,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the surface.</param>
      <param name="pixelFormat">The pixel format of the surface.</param>
      <param name="alphaMode">How the alpha channel should be handled.</param>
      <returns>The created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateDrawingSurface2(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionDrawingSurface.</summary>
      <param name="sizePixels">The size of the drawing surface in pixels.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateMipmapSurface(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>
      </summary>
      <param name="sizePixels">
      </param>
      <param name="pixelFormat">
      </param>
      <param name="alphaMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.CreateVirtualDrawingSurface(Windows.Graphics.SizeInt32,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Graphics.DirectX.DirectXAlphaMode)">
      <summary>Creates an instance of CompositionVirtualDrawingSurface.</summary>
      <param name="sizePixels">The size in pixels of the drawing surface.</param>
      <param name="pixelFormat">The pixel format of the drawing surface.</param>
      <param name="alphaMode">The alpha mode of the drawing surface.</param>
      <returns>Returns the created CompositionVirtualDrawingSurface.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionGraphicsDevice.Trim">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLight">
      <summary>Base class for a light source that can target a UI scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.ExclusionsFromTargets">
      <summary>Gets a collection of Visuals that are not targeted by the light.</summary>
      <returns>The collection of Visuals that are not targeted by the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.IsEnabled">
      <summary>Gets or sets a value that determines whether the composition light is on.</summary>
      <returns>**true** if the light is on; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLight.Targets">
      <summary>The collection of Visuals targeted by the light.</summary>
      <returns>The collection of Visuals targeted by the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLinearGradientBrush">
      <summary>Represents a brush that paints an area with a linear gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient.</summary>
      <returns>The ending two-dimensional coordinates of the linear gradient.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient.</summary>
      <returns>The starting two-dimensional coordinates for the linear gradient.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionLineGeometry">
      <summary>Represents a straight line between two points.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.End">
      <summary>Gets or sets the end point of the line.</summary>
      <returns>The end point of the line.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionLineGeometry.Start">
      <summary>Gets or sets the starting point of the line.</summary>
      <returns>The starting point of the line.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMappingMode">
      <summary>Defines constants that specify whether the gradient brush's positioning coordinates (StartPoint, EndPoint) are absolute or relative to the output area.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Absolute">
      <summary>Positioning coordinates (StartPoint, EndPoint) are absolute.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionMappingMode.Relative">
      <summary>Positioning coordinates (StartPoint, EndPoint) are relative to the output area.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMaskBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush with an opacity mask applied to it. The source of the opacity mask can be any CompositionBrush of type CompositionColorBrush, CompositionLinearGradientBrush, CompositionSurfaceBrush, CompositionEffectBrush or a CompositionNineGridBrush. The opacity mask must be specified as a CompositionSurfaceBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Mask">
      <summary>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</summary>
      <returns>A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMaskBrush.Source">
      <summary>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</summary>
      <returns>A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionMipmapSurface">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.AlphaMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.LevelCount">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.PixelFormat">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionMipmapSurface.SizeInt32">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionMipmapSurface.GetDrawingSurfaceForLevel(System.UInt32)">
      <summary>
      </summary>
      <param name="level">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionNineGridBrush">
      <summary>Paints a SpriteVisual with a CompositionBrush after applying Nine-Grid Stretching to the contents of the Source brush. The source of the nine-grid stretch can by any CompositionBrush of type CompositionColorBrush, CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInset">
      <summary>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</summary>
      <returns>Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.BottomInsetScale">
      <summary>Scale to be applied to BottomInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to BottomInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.IsCenterHollow">
      <summary>Indicates whether the center of the Nine-Grid is drawn.</summary>
      <returns>Indicates whether the center of the Nine-Grid is drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInset">
      <summary>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</summary>
      <returns>Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.LeftInsetScale">
      <summary>Scale to be applied to LeftInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to LeftInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInset">
      <summary>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</summary>
      <returns>Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.RightInsetScale">
      <summary>Scale to be applied to RightInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to RightInset. Defaults to 1.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.Source">
      <summary>The brush whose content is to be Nine-Grid stretched. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</summary>
      <returns>The brush whose content is to be scaled using Nine-Grid Scaling. Can be of type CompositionSurfaceBrush or CompositionColorBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInset">
      <summary>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</summary>
      <returns>Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionNineGridBrush.TopInsetScale">
      <summary>Scale to be applied to TopInset. Defaults to 1.0f.</summary>
      <returns>Scale to be applied to TopInset. Defaults to 1.0f.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the same value for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="inset">The inset value to use for the top, bottom, left, and right.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsets(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the insets of a CompositionNineGridBrush using the specified values for the top, bottom, left, and right. Defaults to 0.0f.</summary>
      <param name="left">The inset from the left of the image.</param>
      <param name="top">The inset from the top of the image.</param>
      <param name="right">The inset from the right of the image.</param>
      <param name="bottom">The inset from the bottom of the image.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single)">
      <summary>Sets the (same) scale to be applied to the left, top, right, and bottom insets. Defaults to 1.0f.</summary>
      <param name="scale">The scale for all of the insets.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionNineGridBrush.SetInsetScales(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the scale to be applied to the left, top, right, and bottom insets respectively. Defaults to 1.0f.</summary>
      <param name="left">The scale of the left inset.</param>
      <param name="top">The scale of the top inset.</param>
      <param name="right">The scale of the right inset.</param>
      <param name="bottom">The scale of the bottom inset.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionObject">
      <summary>Base class of the composition API representing a node in the visual tree structure.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Comment">
      <summary>A string to associate with the CompositionObject.</summary>
      <returns>A string to associate with the CompositionObject. Note that for Visual Studio's Live Visual Tree debugging tool, the name displayed for a particular visual will be pulled from its Comment property</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Compositor">
      <summary>The Compositor used to create this CompositionObject.</summary>
      <returns>The Compositor used to create this CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Dispatcher">
      <summary>The dispatcher for the CompositionObject.</summary>
      <returns>The dispatcher for the CompositionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.DispatcherQueue">
      <summary>Gets the DispatcherQueue for the CompostionObject.</summary>
      <returns>The DispatcherQueue for the CompostionObject.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.ImplicitAnimations">
      <summary>The collection of implicit animations attached to this object.</summary>
      <returns>The collection of implicit animations attached to this object.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionObject.Properties">
      <summary>The collection of properties associated with the CompositionObject.</summary>
      <returns>The collection of properties associated with the CompositionObject.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.Close">
      <summary>Closes the CompositionObject and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimation(System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the object and starts the animation.</summary>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group.</summary>
      <param name="value">The animation group to start.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationGroupWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Starts an animation group on the specified target.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StartAnimationWithIAnimationObject(Microsoft.UI.Composition.IAnimationObject,System.String,Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Connects an animation with the specified property of the target object and starts the animation.</summary>
      <param name="target">The object that defines the property to be animated.</param>
      <param name="propertyName">The property to associate the animation with.</param>
      <param name="animation">The animation to associate with the specified property.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimation(System.String)">
      <summary>Disconnects an animation from the specified property and stops the animation.</summary>
      <param name="propertyName">The name of the property to disconnect the animation from.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.StopAnimationGroup(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Stops an animation group.</summary>
      <param name="value">The animation group to stop.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionObject.TryGetAnimationController(System.String)">
      <summary>Returns an AnimationController for the animation running on the specified property.</summary>
      <param name="propertyName">The property being animated.</param>
      <returns>An instance of AnimationController for the specified animation, or **null** if the animation is not found.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPath">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPath.#ctor(Windows.Graphics.IGeometrySource2D)">
      <summary>Initializes a new instance of the CompositionPath class.</summary>
      <param name="source">The source of the path data.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPathGeometry">
      <summary>Represents a series of connected lines and curves.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionPathGeometry.Path">
      <summary>Gets or sets the data that defines the lines and curves of the path.</summary>
      <returns>The data that defines the lines and curves of the path.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadow">
      <summary>Represents a scene-based shadow calculated using the relationship between the light, the visual that casts the shadow,and the visual that receives the shadow, such that the shadow is drawn differently on each receiver.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.BlurRadiusMultiplier">
      <summary>Gets or sets the multiplier for the shadow's blur radius.</summary>
      <returns>The multiplier for the shadow's blur radius.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Casters">
      <summary>Gets the collection of objects that cast a shadow on the receivers.</summary>
      <returns>The collection of objects that cast a shadow on the receivers.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.LightSource">
      <summary>Gets or sets the composition light that determines the direction the shadow is cast.</summary>
      <returns>The composition light that determines the direction the shadow is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MaxBlurRadius">
      <summary>Gets or sets the maximum blur radius of the shadow.</summary>
      <returns>The maximum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.MinBlurRadius">
      <summary>Gets or sets the minimum blur radius of the shadow.</summary>
      <returns>The minimum blur radius of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadow.Receivers">
      <summary>Gets the collection of objects that the shadow is cast on.</summary>
      <returns>The collection of objects that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCaster">
      <summary>Represents an object that casts a projected shadow.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.Brush">
      <summary>Gets or sets the brush used to draw the shadow.</summary>
      <returns>The brush used to draw the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCaster.CastingVisual">
      <summary>Gets or sets the Visual that casts the shadow.</summary>
      <returns>The Visual that casts the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection">
      <summary>Represents a collection of CompositionProjectedShadowCaster objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.MaxRespectedCasters">
      <summary>Gets the maximum number of shadow casters that will be respected.</summary>
      <returns>The maximum number of shadow casters that will be respected.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAbove(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection above the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtBottom(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the bottom of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertAtTop(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the top of the collection.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.InsertBelow(Microsoft.UI.Composition.CompositionProjectedShadowCaster,Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Adds a CompositionProjectedShadowCaster to the collection below the specified item.</summary>
      <param name="newCaster">The CompositionProjectedShadowCaster to add to the collection.</param>
      <param name="reference">The item to add _newCaster_ below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowCaster)">
      <summary>Removes the specified CompositionProjectedShadowCaster from the collection.</summary>
      <param name="caster">The CompositionProjectedShadowCaster to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiver">
      <summary>Represents an object that can have a projected shadow cast on it.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiver.ReceivingVisual">
      <summary>Gets or sets the Visual that the shadow is cast on.</summary>
      <returns>The Visual that the shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection">
      <summary>Represents an unordered collection of CompositionProjectedShadowReceiver objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Count">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Add(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Adds the specified CompositionProjectedShadowReceiver to the collection.</summary>
      <param name="value">The item to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.Remove(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)">
      <summary>Removes the specified CompositionProjectedShadowReceiver from the collection.</summary>
      <param name="value">The CompositionProjectedShadowReceiver to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.RemoveAll">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionPropertySet">
      <summary>Stores values as key-value pairs.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertBoolean(System.String,System.Boolean)">
      <summary>Inserts a boolean key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertColor(System.String,Windows.UI.Color)">
      <summary>Inserts a Color key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2)">
      <summary>Inserts a Matrix3x2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4)">
      <summary>Inserts a Matrix4x4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertQuaternion(System.String,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a quaternion key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertScalar(System.String,System.Single)">
      <summary>Inserts a Single key-value pair.</summary>
      <param name="propertyName">The name of the property to insert.</param>
      <param name="value">The value of the property to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector2(System.String,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a Vector2 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector3(System.String,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a Vector3 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.InsertVector4(System.String,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a Vector4 key-value pair.</summary>
      <param name="propertyName">The key associated with the value. This key can be used to retrieve the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetBoolean(System.String,System.Boolean@)">
      <summary>Retrieves the specified boolean property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified boolean property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetColor(System.String,Windows.UI.Color@)">
      <summary>Retrieves the specified Color property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Color property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix3x2(System.String,Windows.Foundation.Numerics.Matrix3x2@)">
      <summary>Retrieves the specified Matrix3x2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix3x2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetMatrix4x4(System.String,Windows.Foundation.Numerics.Matrix4x4@)">
      <summary>Retrieves the specified Matrix4x4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Matrix4x4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetQuaternion(System.String,Windows.Foundation.Numerics.Quaternion@)">
      <summary>Retrieves the specified quaternion property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified quaternion property value when the method returns.</param>
      <returns>Returns an enumeration value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetScalar(System.String,System.Single@)">
      <summary>Retrieves the specified Single property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Single property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector2(System.String,Windows.Foundation.Numerics.Vector2@)">
      <summary>Retrieves the specified Vector2 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector2 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector3(System.String,Windows.Foundation.Numerics.Vector3@)">
      <summary>Retrieves the specified Vector3 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector3 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionPropertySet.TryGetVector4(System.String,Windows.Foundation.Numerics.Vector4@)">
      <summary>Retrieves the specified Vector4 property value.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <param name="value">If the operation is successful, this parameter will contain the specified Vector4 property value when the method returns.</param>
      <returns>Returns a CompositionGetValueStatus value indicating the outcome of retrieving the key-value pair.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRadialGradientBrush">
      <summary>Represents a brush that paints an area with a radial gradient.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseCenter">
      <summary>Gets or sets the two-dimensional coordinates of the center of the ellipse that contains the gradient.</summary>
      <returns>The two-dimensional coordinates of the center of the ellipse the gradient is housed in. The default is a Vector2 with values (0.5, 0.5).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.EllipseRadius">
      <summary>Gets or sets the radii of the ellipse that contains the gradient.</summary>
      <returns>The radii of the ellipse that contains the gradient. The default is a Vector2 with values (1,1).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRadialGradientBrush.GradientOriginOffset">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry">
      <summary>Represents a rectangle shape of the specified size with rounded corners.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.CornerRadius">
      <summary>Gets or sets the degree to which the corners are rounded.</summary>
      <returns>The degree to which the corners are rounded.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Offset">
      <summary>Gets or sets the offset of the rectangle.</summary>
      <returns>The offset of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.Size">
      <summary>Gets or sets the height and width of the rectangle.</summary>
      <returns>The height and width of the rectangle.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionScopedBatch">
      <summary>An explicitly created group of active animations or effects.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsActive">
      <summary>Indicates whether the CompositionScopedBatch is currently opened for objects to be aggregated.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch is currently opened for objects to be aggregated.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionScopedBatch.IsEnded">
      <summary>Indicates whether the CompositionScopedBatch has been closed and can no longer accept changes.</summary>
      <returns>Boolean indicating whether the CompositionScopedBatch has been closed and can no longer accept changes.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.CompositionScopedBatch.Completed">
      <summary>Event triggered once all animations and effects in the CompositionScopedBatch have completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.End">
      <summary>Closes the CompositionScopedBatch. Once the CompositionScopedBatch has been closed it cannot be suspended or resumed again.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Resume">
      <summary>Resumes aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionScopedBatch.Suspend">
      <summary>Suspends aggregating objects in the CompositionScopedBatch.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShadow">
      <summary>Base class for shadows that can be applied to a SpriteVisual.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShape">
      <summary>Represents the base shape class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.CenterPoint">
      <summary>The point about which the shape is rotated and scaled.</summary>
      <returns>The point about which the shape is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Offset">
      <summary>Gets or sets the offset of the shape relative to its ShapeVisual.</summary>
      <returns>The offset of the shape relative to its ShapeVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngle">
      <summary>Gets or sets the rotation angle of the shape in radians.</summary>
      <returns>The rotation angle of the shape in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.RotationAngleInDegrees">
      <summary>Gets or sets the rotation angle of the shape in degrees.</summary>
      <returns>The rotation angle of the shape in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.Scale">
      <summary>Gets or sets the scale to apply to the shape.</summary>
      <returns>The scale to apply to the shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShape.TransformMatrix">
      <summary>Gets or sets the transform matrix to apply to the shape.</summary>
      <returns>The transform matrix to apply to the shape.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionShapeCollection">
      <summary>Represents a collection of CompositionShape objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionShapeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Append(Microsoft.UI.Composition.CompositionShape)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The CompositionShape value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.CompositionShape[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.IndexOf(Microsoft.UI.Composition.CompositionShape,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.ReplaceAll(Microsoft.UI.Composition.CompositionShape[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionShapeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.CompositionShape)">
      <summary>Sets the value at the specified index to the CompositionShape value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSpriteShape">
      <summary>A CompositionShape that draws Stroked and Filled CompositionGeometry.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.FillBrush">
      <summary>Gets or sets the brush that paints the interior area of the shape.</summary>
      <returns>A brush that paints/fills the shape interior.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.Geometry">
      <summary>Gets or sets the geometry that defines this shape.</summary>
      <returns>The geometry that defines this shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.IsStrokeNonScaling">
      <summary>Gets or sets a value that specifies whether the shape's outline scales.</summary>
      <returns>**true** if the shape's outline does not scale; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeBrush">
      <summary>Gets or sets the brush that paints the outline of the shape.</summary>
      <returns>A brush that paints the shape outline.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashArray">
      <summary>Gets the collection of values that indicates the pattern of dashes and gaps used to outline shapes.</summary>
      <returns>The collection of values that indicates the pattern of dashes and gaps used to outline shapes.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the ends of a dash are drawn.</summary>
      <returns>An enumeration value that specifies how the ends of a dash are drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeDashOffset">
      <summary>Gets or sets a value that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A value that represents the distance within the dash pattern where a dash begins. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeEndCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the end of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the end of a line is drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeLineJoin">
      <summary>Gets or sets a CompositionStrokeLineJoin enumeration value that specifies the type of join used at the vertices of a shape.</summary>
      <returns>An enumeration value that specifies  the type of join used at the vertices of a shape. The default is **Miter**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a shape element.</summary>
      <returns>The limit on the ratio of the miter length to the StrokeThickness of a shape element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeStartCap">
      <summary>Gets or sets a CompositionStrokeCap enumeration value that specifies how the start of a line is drawn.</summary>
      <returns>An enumeration value that specifies how the start of a line is drawn. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSpriteShape.StrokeThickness">
      <summary>Gets or sets the width of the shape outline.</summary>
      <returns>The width of the shape outline, in pixels. The default value is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStretch">
      <summary>Specifies how content is scaled when mapped from its source to a destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Fill">
      <summary>Scale content such that its size is equal to the size of the destination. The aspect ratio of the content is not preserved.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.None">
      <summary>No Scaling. If the size of the content is greater than size of destination, the content is clipped to the bounds of the destination space.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.Uniform">
      <summary>Scale content such that its aspect ratio is preserved and it fits entirely within the bounds of the destination space. If the content’s aspect ratio does not match that of the destination, the content will not cover some of the area bound by the destination space. This is the default value for CompositionSurfaceBrush.Stretch.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStretch.UniformToFill">
      <summary>Scale content such that its aspect ratio is preserved and it fills the entirety of the destination’s bounds. If the content’s aspect ratio does not match that of the destination, the content will be clipped to the bounds of the destination.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeCap">
      <summary>Defines constants that specify the shape at the end of a line or segment.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Flat">
      <summary>A cap that does not extend past the last point of the line.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Square">
      <summary>Half of a square that has a length equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeCap.Triangle">
      <summary>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeDashArray">
      <summary>Represents a collection of values that indicates the pattern of dashes and gaps that is used to outline shapes.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionStrokeDashArray.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Append(System.Single)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetAt(System.UInt32)">
      <summary>Returns the value located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetMany(System.UInt32,System.Single[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.IndexOf(System.Single,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.InsertAt(System.UInt32,System.Single)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.ReplaceAll(System.Single[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionStrokeDashArray.SetAt(System.UInt32,System.Single)">
      <summary>Sets the value at the specified index to the value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionStrokeLineJoin">
      <summary>Defines constants that specify the shape used to join two lines or segments.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Bevel">
      <summary>Line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Miter">
      <summary>Line joins use regular angular vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.MiterOrBevel">
      <summary>Line joins use regular angular vertices unless the join would extend beyond the miter limit; otherwise, line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.CompositionStrokeLineJoin.Round">
      <summary>Line joins use rounded vertices.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionSurfaceBrush">
      <summary>Paints a SpriteVisual with pixels from an ICompositionSurface.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.AnchorPoint">
      <summary>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</summary>
      <returns>The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.BitmapInterpolationMode">
      <summary>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</summary>
      <returns>Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.CenterPoint">
      <summary>The point about which the brush is rotated and scaled.</summary>
      <returns>The point about which the brush is rotated and scaled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.HorizontalAlignmentRatio">
      <summary>Controls the positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. By default this is set to 0.0f.</summary>
      <returns>The positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. The default value is 0.5f.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Offset">
      <summary>The offset of the brush relative to its SpriteVisual.</summary>
      <returns>The offset of the brush relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngle">
      <summary>The rotation angle, in radians, of the brush.</summary>
      <returns>The rotation angle, in radians, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.RotationAngleInDegrees">
      <summary>The rotation angle, in degrees, of the brush.</summary>
      <returns>The rotation angle, in degrees, of the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Scale">
      <summary>The scale to apply to the brush.</summary>
      <returns>The scale to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.SnapToPixels">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Stretch">
      <summary>Controls the scaling that is applied to the contents the ICompositionSurface with respect to the size of the SpriteVisual that is being painted.</summary>
      <returns>Controls how the brush's content is scaled with respect to the size of the SpriteVisual it is painted onto.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.Surface">
      <summary>The ICompositionSurface associated with the CompositionSurfaceBrush.</summary>
      <returns>The composition surface associated with the CompositionSurfaceBrush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.TransformMatrix">
      <summary>The transformation matrix to apply to the brush.</summary>
      <returns>The transformation matrix to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionSurfaceBrush.VerticalAlignmentRatio">
      <summary>Controls the positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge of the SpriteVisual. The default value is 0.5f.</summary>
      <returns>The positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionTarget">
      <summary>Represents the window on which to display the composition tree.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionTarget.Root">
      <summary>The root of the composition tree to display.</summary>
      <returns>The root of the composition tree to display.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionTransform">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionViewBox">
      <summary>Represents a container that maps shape visual tree coordinates onto the visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.HorizontalAlignmentRatio">
      <summary>Gets or sets the horizontal alignment ratio of the view box.</summary>
      <returns>The horizontal alignment ratio of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Offset">
      <summary>Gets or sets the offset of the view box.</summary>
      <returns>The offset of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Size">
      <summary>Gets or sets the height and width of the view box.</summary>
      <returns>The height and width of the view box.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.Stretch">
      <summary>Gets or sets a value that specifies how content fits into the available space.</summary>
      <returns>An enumeration value that specifies how content fits into the available space. The default is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionViewBox.VerticalAlignmentRatio">
      <summary>Gets or sets the vertical alignment ratio of the view box.</summary>
      <returns>The vertical alignment ratio of the view box.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVirtualDrawingSurface">
      <summary>Represents sparsely allocated bitmaps that can be associated with visuals for composition in a visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.CompositionVirtualDrawingSurface.Trim(Windows.Graphics.RectInt32[])">
      <summary>Clears portions of a virtual drawing surface that were previously defined. Areas that are cleared will be treated as empty once again, and video memory that was previously backing them will be reclaimed.</summary>
      <param name="rects">The region of the drawing surface to trim.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.CompositionVisualSurface">
      <summary>Represents a visual tree as an ICompositionSurface that can be used to paint a Visual using a CompositionBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceOffset">
      <summary>Gets or sets the coordinates of the top-left corner of the part of the visual surface used for rendering.</summary>
      <returns>The coordinates of the top-left corner of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceSize">
      <summary>Gets or sets the the height and width of the part of the visual surface used for rendering.</summary>
      <returns>The height and width of the part of the visual surface used for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CompositionVisualSurface.SourceVisual">
      <summary>Gets or sets the root of the visual tree that is the target of the visual surface.</summary>
      <returns>The root of the visual tree that is the target of the visual surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Compositor">
      <summary>Manages the session between an application and the system compositor process.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.#ctor">
      <summary>Creates an instance of Compositor.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.Comment">
      <summary>Gets or sets a string to associate with the Compositor.</summary>
      <returns>A string to associate with the Compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.GlobalPlaybackRate">
      <summary>Gets or sets the rate at which animation plays for all KeyFrame animations created by this compositor.</summary>
      <returns>The rate at which animation plays for all animations created by this compositor.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MaxGlobalPlaybackRate">
      <summary>Gets the maximum allowed playback rate for all KeyFrame animations created by this compositor..</summary>
      <returns>The maximum allowed playback rate.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Compositor.MinGlobalPlaybackRate">
      <summary>Gets the minimum allowed playback rate for all KeyFrame animations created by this compositor.</summary>
      <returns>The minimum allowed playback rate.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.Close">
      <summary>Closes the Compositor object and releases system resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAmbientLight">
      <summary>Creates an instance of AmbientLight.</summary>
      <returns>Returns the created AmbientLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateAnimationGroup">
      <summary>Creates an instance of CompositionAnimationGroup.</summary>
      <returns>Returns the created CompositionAnimationGroup object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBackdropBrush">
      <summary>Creates an instance of CompositionBackdropBrush.</summary>
      <returns>Returns the created CompositionBackdropBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBooleanKeyFrameAnimation">
      <summary>Creates an instance of BooleanKeyFrameAnimation.</summary>
      <returns>Returns the created BooleanKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceScalarAnimation">
      <summary>Creates an instance of BounceScalarNaturalMotionAnimation.</summary>
      <returns>The created BounceScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector2Animation">
      <summary>Creates an instance of BounceVector2NaturalMotionAnimation.</summary>
      <returns>The created BounceVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateBounceVector3Animation">
      <summary>Creates an instance of BounceVector3NaturalMotionAnimation.</summary>
      <returns>The created BounceVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush">
      <summary>Creates an instance of CompositionColorBrush.</summary>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorBrush(Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorBrush using the specified color.</summary>
      <param name="color">The color for the brush to use.</param>
      <returns>Returns the created CompositionColorBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop">
      <summary>Creates an instance of CompositionColorGradientStop.</summary>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorGradientStop(System.Single,Windows.UI.Color)">
      <summary>Creates an instance of CompositionColorGradientStop with the specified offset and color.</summary>
      <param name="offset">The location of the gradient stop within the gradient vector.</param>
      <param name="color">The color of the gradient stop.</param>
      <returns>The created CompositionColorGradientStop object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateColorKeyFrameAnimation">
      <summary>Creates an instance of ColorKeyFrameAnimation.</summary>
      <returns>Returns the created ColorKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerShape">
      <summary>Creates an instance of CompositionContainerShape.</summary>
      <returns>Returns the created CompositionContainerShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateContainerVisual">
      <summary>Creates an instance of ContainerVisual.</summary>
      <returns>Returns the created ContainerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateCubicBezierEasingFunction(Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2)">
      <summary>Creates an instance of CubicBezierEasingFunction.</summary>
      <param name="controlPoint1">The first control point for the easing function.</param>
      <param name="controlPoint2">The second control point for the easing function.</param>
      <returns>The created CubicBezierEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDistantLight">
      <summary>Creates an instance of DistantLight.</summary>
      <returns>Returns the created DistantLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateDropShadow">
      <summary>Creates an instance of DropShadow.</summary>
      <returns>Returns the created DropShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect)">
      <summary>Creates an instance of CompositionEffectFactory.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEffectFactory(Windows.Graphics.Effects.IGraphicsEffect,Windows.Foundation.Collections.IIterable{System.String})">
      <summary>Creates an instance of CompositionEffectFactory specifying effect parameters that should be animatable.</summary>
      <param name="graphicsEffect">The type of effect to create.</param>
      <param name="animatableProperties">The list of properties that should be animatable. Properties are specified using strings of the form 'EffectName.PropertyName', where 'EffectName' identifies a graphics effect object by its IGraphicsEffect.Name property and 'PropertyName' identifies a property of that object.</param>
      <returns>Returns the created CompositionEffectFactory object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateEllipseGeometry">
      <summary>Creates an instance of CompositionEllipseGeometry.</summary>
      <returns>Returns the created CompositionEllipseGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateExpressionAnimation(System.String)">
      <summary>Creates an instance of ExpressionAnimation.</summary>
      <param name="expression">The expression describing how the ExpressionAnimation should calculate its current value.</param>
      <returns>Returns the created ExpressionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip">
      <summary>Creates an instance of CompositionGeometricClip.</summary>
      <returns># Microsoft.UI.Composition.Compositor.CreateGeometricClip</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateGeometricClip(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionGeometricClip using the specified geometry.</summary>
      <param name="geometry">The geometry that defines the shape of the clip.</param>
      <returns>The created CompositionGeometricClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateImplicitAnimationCollection">
      <summary>Creates an instance of ImplicitAnimationCollection.</summary>
      <returns>Returns the created ImplicitAnimationCollection object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip">
      <summary>Creates an instance of InsetClip.</summary>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateInsetClip(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates an instance of InsetClip.</summary>
      <param name="leftInset">Inset from the left of the visual.</param>
      <param name="topInset">Inset from the top of the visual.</param>
      <param name="rightInset">Inset from the right of the visual.</param>
      <param name="bottomInset">Inset from the bottom of the visual.</param>
      <returns>Returns the created InsetClip object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLayerVisual">
      <summary>Creates an instance of LayerVisual.</summary>
      <returns>Returns the created LayerVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearEasingFunction">
      <summary>Creates an instance of LinearEasingFunction.</summary>
      <returns>Returns the created LinearEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLinearGradientBrush">
      <summary>Creates an instance of CompositionLinearGradientBrush.</summary>
      <returns>The created CompositionLinearGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateLineGeometry">
      <summary>Creates an instance of CompositionLineGeometry.</summary>
      <returns>Returns the created CompositionLineGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateMaskBrush">
      <summary>Creates an instance of CompositionMaskBrush.</summary>
      <returns>Returns the created CompositionMaskBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateNineGridBrush">
      <summary>Creates an instance of CompositionNineGridBrush.</summary>
      <returns>Returns the created CompositionNineGridBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry">
      <summary>Creates an instance of CompositionPathGeometry.</summary>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathGeometry(Microsoft.UI.Composition.CompositionPath)">
      <summary>Creates an instance of CompositionPathGeometry using the specified path.</summary>
      <param name="path">The path data.</param>
      <returns>Returns the created CompositionPathGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePathKeyFrameAnimation">
      <summary>Creates an instance of PathKeyFrameAnimation.</summary>
      <returns>Returns the created PathKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePointLight">
      <summary>Creates an instance of PointLight.</summary>
      <returns>Returns the created PointLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadow">
      <summary>Creates an instance of CompositionProjectedShadow.</summary>
      <returns>Returns the created CompositionProjectedShadow object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowCaster">
      <summary>Creates an instance of CompositionProjectedShadowCaster.</summary>
      <returns>Returns the created CompositionProjectedShadowCaster object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateProjectedShadowReceiver">
      <summary>Creates an instance of CompositionProjectedShadowReceiver.</summary>
      <returns>Returns the created CompositionProjectedShadowReceiver object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreatePropertySet">
      <summary>Creates an instance of CompositionPropertySet.</summary>
      <returns>Returns the created CompositionPropertySet object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateQuaternionKeyFrameAnimation">
      <summary>Creates an instance of QuaternionKeyFrameAnimation.</summary>
      <returns>Returns the created QuaternionKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRadialGradientBrush">
      <summary>Creates an instance of CompositionRadialGradientBrush.</summary>
      <returns>Returns the created CompositionRadialGradientBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRectangleGeometry">
      <summary>Creates an instance of CompositionRectangleGeometry.</summary>
      <returns>Returns the created CompositionRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual">
      <summary>Creates an instance of RedirectVisual.</summary>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRedirectVisual(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of RedirectVisual using the specified source.</summary>
      <param name="source">
      </param>
      <returns>Returns the created RedirectVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateRoundedRectangleGeometry">
      <summary>Creates an instance of CompositionRoundedRectangleGeometry.</summary>
      <returns>Returns the created CompositionRoundedRectangleGeometry object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScalarKeyFrameAnimation">
      <summary>Creates an instance of ScalarKeyFrameAnimation.</summary>
      <returns>Returns the created ScalarKeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateScopedBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Creates an instance of CompositionScopedBatch.</summary>
      <param name="batchType">The type of composition batch to create.</param>
      <returns>Returns the created CompositionScopedBatch object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateShapeVisual">
      <summary>Creates an instance of ShapeVisual.</summary>
      <returns>Returns the created ShapeVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpotLight">
      <summary>Creates an instance of SpotLight.</summary>
      <returns>Returns the created SpotLight object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringScalarAnimation">
      <summary>Creates an instance of SpringScalarNaturalMotionAnimation.</summary>
      <returns>The created SpringScalarNaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector2Animation">
      <summary>Creates an instance of SpringVector2NaturalMotionAnimation.</summary>
      <returns>The created SpringVector2NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpringVector3Animation">
      <summary>Creates an instance of SpringVector3NaturalMotionAnimation.</summary>
      <returns>The created SpringVector3NaturalMotionAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape">
      <summary>Creates an instance of CompositionSpriteShape.</summary>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteShape(Microsoft.UI.Composition.CompositionGeometry)">
      <summary>Creates an instance of CompositionSpriteShape using the specified geometry.</summary>
      <param name="geometry">The geometry of the shape to create.</param>
      <returns>Returns the created CompositionSpriteShape object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSpriteVisual">
      <summary>Creates an instance of SpriteVisual.</summary>
      <returns>Returns the created SpriteVisual object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction">
      <summary>Creates an instance of StepEasingFunction.</summary>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateStepEasingFunction(System.Int32)">
      <summary>Creates an instance of StepEasingFunction with the specified step count.</summary>
      <param name="stepCount">The step count for the StepEasingFunction.</param>
      <returns>Returns the created StepEasingFunction object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush">
      <summary>Creates an instance of CompositionSurfaceBrush.</summary>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateSurfaceBrush(Microsoft.UI.Composition.ICompositionSurface)">
      <summary>Creates an instance of CompositionSurfaceBrush using the specified composition surface.</summary>
      <param name="surface">The composition surface to associate with the CompositionSurfaceBrush.</param>
      <returns>Returns the created CompositionSurfaceBrush object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateTargetForCurrentView">
      <summary>Creates a CompositionTarget for the current view.</summary>
      <returns>Returns the created CompositionTarget object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector2KeyFrameAnimation">
      <summary>Creates an instance of Vector2KeyFrameAnimation.</summary>
      <returns>Returns the created Vector2KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector3KeyFrameAnimation">
      <summary>Creates an instance of Vector3KeyFrameAnimation.</summary>
      <returns>Returns the created Vector3KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVector4KeyFrameAnimation">
      <summary>Creates an instance of Vector4KeyFrameAnimation.</summary>
      <returns>Returns the created Vector4KeyFrameAnimation object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateViewBox">
      <summary>Creates an instance of CompositionViewBox.</summary>
      <returns>Returns the created CompositionViewBox object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.CreateVisualSurface">
      <summary>Creates an instance of CompositionVisualSurface.</summary>
      <returns>Returns the created CompositionVisualSurface object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.GetCommitBatch(Microsoft.UI.Composition.CompositionBatchTypes)">
      <summary>Retrieves a commit batch for the current commit cycle.</summary>
      <param name="batchType">The batch type.</param>
      <returns>Returns a CompositionCommitBatch representing the retrieved commit batch.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Compositor.RequestCommitAsync">
      <summary>Attempts to initiate a commit cycle ansynchronously.</summary>
      <returns>An ansynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ContainerVisual">
      <summary>A node in the visual tree that can have children.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ContainerVisual.Children">
      <summary>The children of the ContainerVisual.</summary>
      <returns>The children of the ContainerVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.CubicBezierEasingFunction">
      <summary>Represents a cubic-bezier function for interpolating between animation key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint1">
      <summary>The first control point for the cubic-bezier interpolation function.</summary>
      <returns>The first control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.CubicBezierEasingFunction.ControlPoint2">
      <summary>The second control point for the cubic-bezier interpolation function.</summary>
      <returns>The second control point for the cubic-bezier interpolation function.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DistantLight">
      <summary>An infinitely large distant light source that emits light in a single direction. For example, a distant light could be used to represent sunlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Color">
      <summary>Color of the emitted DistantLight.</summary>
      <returns>Color of the emitted DistantLight.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.CoordinateSpace">
      <summary>The Visual used to determine the light’s direction. The light's </summary>
      <returns>The Visual used to determine the light’s direction. The light's </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is cast.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DistantLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.DropShadow">
      <summary>A drop shadow cast by a SpriteVisual or LayerVisual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.BlurRadius">
      <summary>The radius of the Gaussian blur used to generate the shadow. Animatable.</summary>
      <returns>The radius of the Gaussian blur used to generate the shadow. Defaults to 9.0f. Specifying a value of 0 will result in no blur occurring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Color">
      <summary>The color of the shadow. Animatable.</summary>
      <returns>The color of the shadow. Default color is Colors.Black.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Mask">
      <summary>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush. Animatable.</summary>
      <returns>Brush used to specify an opacity mask for the shadow. Defaults to the SpriteVisual's brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Offset">
      <summary>Offset of the shadow relative to its SpriteVisual. Animatable.</summary>
      <returns>Offset of the shadow relative to its SpriteVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.Opacity">
      <summary>The opacity of the shadow. Animatable.</summary>
      <returns>The opacity of the shadow.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.DropShadow.SourcePolicy">
      <summary>Used to define the shadow masking policy to be used for the shadow.</summary>
      <returns>The masking policy to apply to the shadow.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ExpressionAnimation">
      <summary>A Composition Animation that uses a mathematical equation to calculate the value for an animating property every frame.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ExpressionAnimation.Expression">
      <summary>The mathematical equation specifying how the animated value is calculated each frame. The Expression is the core of an ExpressionAnimation and represents the equation the system will use to calculate the value of the animation property each frame. The equation is set on this property in the form of a string.</summary>
      <returns>The mathematical equation specifying how the animated value is calculated each frame.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.IAnimationObject">
      <summary>Represents an object that has properties that can be referenced by an animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.IAnimationObject.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionAnimationBase">
      <summary>Base class for composition animations.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ICompositionSurface">
      <summary>Represents the content of a surface that can be used to paint the bounds of a SpriteVisual. All surface types that can be used to paint a SpriteVisual must implement this interface. The following classes implement this interface and can be set as content of a SpriteVisual (using a CompositionSurfaceBrush):</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.ImplicitAnimationCollection">
      <summary>A collection of animations triggered when a condition is met.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ImplicitAnimationCollection.Size">
      <summary>The size of the collection.</summary>
      <returns>The size of the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Clear">
      <summary>Removes all animations from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.First">
      <summary>Retrieves the first animation in the collection.</summary>
      <returns>Retrieves the first animation in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.GetView">
      <summary>Returns a map view of the collection.</summary>
      <returns>Returns a map view of the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.HasKey(System.String)">
      <summary>Returns a boolean indicating whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>Returns true if the key is in the collection; otherwise returns false.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Insert(System.String,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Inserts an animation into the collection.</summary>
      <param name="key">The property the animation affects.</param>
      <param name="value">The animation to insert.</param>
      <returns>Boolean value indicating whether the animation was successfully inserted.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Lookup(System.String)">
      <summary>Retrieves the animation associated with the specified property.</summary>
      <param name="key">The property to lookup.</param>
      <returns>The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.ImplicitAnimationCollection.Remove(System.String)">
      <summary>Removes the specified animation from the collection.</summary>
      <param name="key">The property the animation is assigned to.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.InitialValueExpressionCollection">
      <summary>A collection of values that specify where an animation will start.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.InitialValueExpressionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.First">
      <summary>Retrieves the first item in the collection.</summary>
      <returns>The first item in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.HasKey(System.String)">
      <summary>Returns a value that indicates whether the collection contains the specified key.</summary>
      <param name="key">The key to check for.</param>
      <returns>**true** if the key is in the collection; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Insert(System.String,System.String)">
      <summary>Inserts an item into the collection.</summary>
      <param name="key">The key to identify the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>**true** if animation was successfully inserted; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Lookup(System.String)">
      <summary>Retrieves the item associated with the specified key.</summary>
      <param name="key">The key that identifies the item to retrieve.</param>
      <returns>The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.InitialValueExpressionCollection.Remove(System.String)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="key">The key that identifies the item to remove.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.InsetClip">
      <summary>Clips a portion of a visual. The visible portion of the visual is a rectangle defined as inset values from the edges of the visual. The portion of the visual outside the rectangle is clipped.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.BottomInset">
      <summary>The offset from the bottom of the visual. The portion of the visual below the BottomtInset will be clipped. Animatable.</summary>
      <returns>The offset from the bottom of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.LeftInset">
      <summary>The offset from the left of the visual. The portion of the visual to the left of the LeftInset will be clipped. Animatable.</summary>
      <returns>The offset from the left of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.RightInset">
      <summary>The offset from the right of the visual. The portion of the visual to the right of the RightInset will be clipped. Animatable.</summary>
      <returns>The offset from the right of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.InsetClip.TopInset">
      <summary>The offset from the top of the visual. The portion of the visual above the TopInset will be clipped. Animatable.</summary>
      <returns>The offset from the top of the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.IVisualElement">
      <summary>Marks an object to indicate to the system that it can resolve to a CompositionVisual</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.KeyFrameAnimation">
      <summary>A time-based animation with one or more key frames. These frames are markers, allowing developers to specify values at specific times for the animating property. KeyFrame animations can be further customized by specifying how the animation interpolates between keyframes.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayBehavior">
      <summary>The delay behavior of the key frame animation.</summary>
      <returns>The delay behavior of the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Direction">
      <summary>The direction the animation is playing.</summary>
      <returns>The direction the animation is playing.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.Duration">
      <summary>The duration of the animation.</summary>
      <returns>The duration of the animation. Minimum allowed value is 1ms and maximum allowed value is 24 days.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationBehavior">
      <summary>The iteration behavior for the key frame animation.</summary>
      <returns>The iteration behavior for the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.IterationCount">
      <summary>The number of times to repeat the key frame animation.</summary>
      <returns>The number of times to repeat the key frame animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.KeyFrameCount">
      <summary>The number of key frames in the KeyFrameAnimation.</summary>
      <returns>The number of key frames in the KeyFrameAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.KeyFrameAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String)">
      <summary>Inserts an expression key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.KeyFrameAnimation.InsertExpressionKeyFrame(System.Single,System.String,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts an expression keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The expression used to calculate the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.LayerVisual">
      <summary>A ContainerVisual whose children are flattened into a single layer.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Effect">
      <summary>The effect to be applied to the flattened representation of the children of a LayerVisual.</summary>
      <returns>The effect to be applied to the flattened representation of the children of a LayerVisual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.LayerVisual.Shadow">
      <summary>The shadow to be applied to the flattened representation of the children of a LayerVisual.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.LinearEasingFunction">
      <summary>Represents a linear function for interpolating between animation key frames.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.NaturalMotionAnimation">
      <summary>Represents a physics-based animation that uses forces to dynamically move content.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayBehavior">
      <summary>The delay behavior of the NaturalMotionAnimation.</summary>
      <returns>The delay behavior of the NaturalMotionAnimation.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.DelayTime">
      <summary>Delay before the animation starts after CompositionObject.StartAnimation is called.</summary>
      <returns>Delay before the animation starts after CompositionObject.StartAnimation is called.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.NaturalMotionAnimation.StopBehavior">
      <summary>Specifies how to set the property value when StopAnimation is called.</summary>
      <returns>Specifies how to set the property value when StopAnimation is called.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.PathKeyFrameAnimation">
      <summary>Represents a time-based animation with one or more key frames where each key frame value is represented by a</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.PathKeyFrameAnimation.InsertKeyFrame(System.Single,Microsoft.UI.Composition.CompositionPath,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="path">The path used to define the value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.PointLight">
      <summary>A point source of light that emanates light in all directions.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Color">
      <summary>Color of the light.</summary>
      <returns>Color of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.CoordinateSpace">
      <summary>The Visual used to determine the light's offset. The light's offset property is relative to this Visual's coordinate space.</summary>
      <returns>The Visual used to determine the light's offset.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Intensity">
      <summary>Gets or sets the intensity of the light.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls-off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.Offset">
      <summary>Offset of the light source relative to its coordinate space Visual.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.PointLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance.</summary>
      <returns>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.QuaternionKeyFrameAnimation">
      <summary>A time-based animation that targets the Orientation property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.QuaternionKeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Quaternion,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.RedirectVisual">
      <summary>Represents a visual that gets its content from another visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RedirectVisual.Source">
      <summary>Gets or sets the Visual that this RedirectVisual gets its content from.</summary>
      <returns>The Visual that this RedirectVisual gets its content from. The default is **null**.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs">
      <summary>Arguments for the RenderingDeviceReplaced event.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs.GraphicsDevice">
      <summary>The new graphics device.</summary>
      <returns>The new graphics device.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarKeyFrameAnimation">
      <summary>A time-based animation that targets any Scalar-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.ScalarKeyFrameAnimation.InsertKeyFrame(System.Single,System.Single,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use to interpolate between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.ScalarNaturalMotionAnimation">
      <summary>The base Scalar NaturalMotionAnimation used to target a Scalar property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ScalarNaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.ShapeVisual">
      <summary>Represents a visual tree node that is the root of a CompositionShape.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.Shapes">
      <summary>Gets the collection of CompositionShapes that this shape visual tree is composed of.</summary>
      <returns>The collection of CompositionShapes that this shape visual tree is composed of.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.ShapeVisual.ViewBox">
      <summary>Gets or sets the CompositionViewBox that maps shape visual tree coordinates onto the visual.</summary>
      <returns>The CompositionViewBox that maps shape visual tree coordinates onto the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpotLight">
      <summary>A light source that casts inner and outer cones of light. For example, a flashlight.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.ConstantAttenuation">
      <summary>The constant coefficient in the light's attenuation equation. Controls light intensity. Animatable.</summary>
      <returns>The constant coefficient in the light's attenuation equation. Controls light intensity. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.CoordinateSpace">
      <summary>The Visual used to determine the light's direction and offset. The light's offset and direction properties are relative to this Visual's coordinate space.</summary>
      <returns>The visual the light's offset is relative to.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Direction">
      <summary>The direction in which the light is pointing, specified relative to its CoordinateSpace Visual.</summary>
      <returns>The direction in which the light is pointing, specified relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngle">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in radians.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeAngleInDegrees">
      <summary>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees. Animatable.</summary>
      <returns>The SpotLight’s inner cone angle, expressed as a semi-vertical angle in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeColor">
      <summary>Color of the spotlight's inner cone. Animatable.</summary>
      <returns>Color of the spotlight's inner cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.InnerConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's inner cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.LinearAttenuation">
      <summary>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The linear coefficient in the light's attenuation equation that determines how the light falls off with distance. Range is from 0 to infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MaxAttenuationCutoff">
      <summary>Gets or sets the maximum range at which this light is effective.</summary>
      <returns>The maximum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.MinAttenuationCutoff">
      <summary>Gets or sets the minimum range at which this light is effective.</summary>
      <returns>The minimum range at which this light is effective. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.Offset">
      <summary>Offset of the light source relative to its CoordinateSpace Visual. Animatable.</summary>
      <returns>Offset of the light source relative to its coordinate space Visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngle">
      <summary>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. Animatable.</summary>
      <returns>The SpotLight’s outer cone angle, expressed as a semi-vertical angle in radians. The value must be between 0 and pi.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeAngleInDegrees">
      <summary>The semi-vertical angle, in degrees, of the SpotLight's outer cone. Animatable.</summary>
      <returns>The semi-vertical angle, in degrees, of the SpotLight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeColor">
      <summary>The color of the spotlight's outer cone. Animatable.</summary>
      <returns>The color of the spotlight's outer cone.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.OuterConeIntensity">
      <summary>Gets or sets the intensity of the light in the spotlight's outer cone.</summary>
      <returns>The intensity of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpotLight.QuadraticAttenuation">
      <summary>The quadratic portion of the attenuation equation that determines how the light falls off with distance. Animatable.</summary>
      <returns>The quadratic coefficient in the light's attenuation equation. Controls light intensity falloff based on distance squared. Range is from 0 to infinity.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Scalar-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector2-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation">
      <summary>A spring physics-based animation that targets any Vector3-based property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.DampingRatio">
      <summary>Gets or sets a value that indicates how much damping is applied to the spring.</summary>
      <returns>A value that indicates how much damping is applied to the spring.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.Period">
      <summary>Gets or sets the time for the Spring to complete a single oscillation.</summary>
      <returns>The time for the Spring to complete a single oscillation.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.SpriteVisual">
      <summary>Hosts 2D boxed content of type CompositionBrush. Any part of the visual not covered by pixels from the brush are rendered as transparent pixels. CompositionBrush can be either a CompositionBackdropBrush, CompositionColorBrush, a CompositionSurfaceBrush or a CompositionEffectBrush.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Brush">
      <summary>A CompositionBrush describing how the SpriteVisual is painted.</summary>
      <returns>A CompositionBrush describing how the SpriteVisual is painted.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.SpriteVisual.Shadow">
      <summary>The shadow for the SpriteVisual.</summary>
      <returns>The shadow for the SpriteVisual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.StepEasingFunction">
      <summary>A step function for interpolating between animation key frames.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.FinalStep">
      <summary>The step to end at.</summary>
      <returns>The step to end at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.InitialStep">
      <summary>The step to start at.</summary>
      <returns>The step to start at.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsFinalStepSingleFrame">
      <summary>Indicates whether the final step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the final step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.IsInitialStepSingleFrame">
      <summary>Indicates whether the initial step should last the smallest possible duration.</summary>
      <returns>Boolean indicating whether the initial step should last the smallest possible duration (1 frame).</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.StepEasingFunction.StepCount">
      <summary>The number of steps between the starting value and the end value.</summary>
      <returns>The number of steps between the starting value and the end value.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector2-based property with one or more key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector2KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector2,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a keyframe with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector2NaturalMotionAnimation">
      <summary>The base Vector2 NaturalMotionAnimation used to target a Vector2 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector2NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector3-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector3KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector3NaturalMotionAnimation">
      <summary>The base Vector3 NaturalMotionAnimation used to target a Vector3 property.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.FinalValue">
      <summary>Gets or sets a value that indicates where the animation ends.</summary>
      <returns>A value that indicates where the animation ends. The default is **null**. If left **null**, the ending value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialValue">
      <summary>Gets or sets a value that indicates where the animation starts.</summary>
      <returns>A value that indicates where the animation starts. The default is **null**. If left **null**, the beginning value of the property being animated is used.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Vector3NaturalMotionAnimation.InitialVelocity">
      <summary>Gets or sets the velocity that the animation starts with.</summary>
      <returns>The velocity that the animation starts with. The default is 0.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Vector4KeyFrameAnimation">
      <summary>A time-based animation that targets any Vector4-based property with one or more keyframes.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4)">
      <summary>Inserts a key frame.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Vector4KeyFrameAnimation.InsertKeyFrame(System.Single,Windows.Foundation.Numerics.Vector4,Microsoft.UI.Composition.CompositionEasingFunction)">
      <summary>Inserts a key frame with the specified easing function.</summary>
      <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
      <param name="value">The value of the key frame.</param>
      <param name="easingFunction">The easing function to use when interpolating between key frames.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Visual">
      <summary>The base visual object in the visual hierarchy.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.AnchorPoint">
      <summary>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual. Animatable.</summary>
      <returns>The point on the visual to be positioned at the visual's offset. Value is normalized with respect to the size of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BackfaceVisibility">
      <summary>Specifies whether the back face of the visual should be visible during a 3D transform.</summary>
      <returns>Whether the back face of the visual should be visible during a 3D transform.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.BorderMode">
      <summary>Specifies how to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual. Setting BorderMode at a parent Visual will affect all children visuals in the subtree and can be selectively turned off at each child visual.</summary>
      <returns>How to compose the edges of bitmaps and clips associated with a visual, or with all visuals in the subtree rooted at this visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CenterPoint">
      <summary>The point about which rotation or scaling occurs. Animatable</summary>
      <returns>The point about which rotation or scaling occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Clip">
      <summary>Specifies the clipping region for the visual. When a visual is rendered, only the portion of the visual that falls inside the clipping region is displayed, while any content that extends outside the clipping region is clipped (that is, not displayed).</summary>
      <returns>Specifies the clipping region for the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.CompositeMode">
      <summary>Specifies how a visual's bitmap is blended with the screen.</summary>
      <returns>How a visual's bitmap is blended with the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.IsVisible">
      <summary>Indicates whether the visual and its entire subtree of child visuals is visible.</summary>
      <returns>Indicates whether the visual and its entire subtree of child visuals is visible.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Offset">
      <summary>The offset of the visual relative to its parent or for a root visual the offset relative to the upper-left corner of the windows that hosts the visual. Animatable.</summary>
      <returns>Offset of the visual relative to its parent.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Opacity">
      <summary>The opacity of the visual. Animatable.</summary>
      <returns>The opacity of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Orientation">
      <summary>A quaternion describing an orientation and rotation in 3D space that will be applied to the visual. Animatable.</summary>
      <returns>A Quaternion describing an orientation and rotation in 3D space that will be applied to the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Parent">
      <summary>The parent of the visual.</summary>
      <returns>The parent of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.ParentForTransform">
      <summary>Visual specifying the coordinate system in which this visual is composed.</summary>
      <returns>Visual specifying the coordinate system in which this visual is composed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeOffsetAdjustment">
      <summary>Specifies the offset of the visual with respect to the size of its parent visual.</summary>
      <returns>The offset of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RelativeSizeAdjustment">
      <summary>The size of the visual with respect to the size of its parent visual.</summary>
      <returns>The size of the visual with respect to the size of its parent visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngle">
      <summary>The rotation angle in radians of the visual. Animatable.</summary>
      <returns>The rotation angle in radians of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAngleInDegrees">
      <summary>The rotation angle of the visual in degrees. Animatable.</summary>
      <returns>The rotation angle of the visual in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.RotationAxis">
      <summary>The axis to rotate the visual around. Animatable.</summary>
      <returns>The axis to rotate the visual around. For example, a value of Vector3(1,0,0) indicates rotation along the x-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Scale">
      <summary>The scale to apply to the visual.</summary>
      <returns>The scale to apply to the visual. A value of Vector3 (1.0,1.0,1.0) is equivalent to 100%.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.Size">
      <summary>The width and height of the visual. Animatable.</summary>
      <returns>The width and height of the visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Visual.TransformMatrix">
      <summary>The transformation matrix to apply to the visual. Animatable.</summary>
      <returns>The transformation matrix to apply to the visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualCollection">
      <summary>Represents a collection of visual instances.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualCollection.Count">
      <summary>Gets the number of visual instances in the collection.</summary>
      <returns>The number of visual instances in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.First">
      <summary>Retrieves an iterator with the first object at the bottom of the collection.</summary>
      <returns>Returns an iterator with the first object at the bottom of the collection. VisualCollections are ordered from bottom to top.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAbove(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Inserts a visual above the specified sibling visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling to insert the visual above.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtBottom(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the bottom of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertAtTop(Microsoft.UI.Composition.Visual)">
      <summary>Inserts a new visual at the top of the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.InsertBelow(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Visual)">
      <summary>Insert a new visual below the specified visual in the visual collection.</summary>
      <param name="newChild">The new visual to insert.</param>
      <param name="sibling">The sibling visual to insert the new visual below.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes the specified visual instance from the collection.</summary>
      <param name="child">The specified visual instance from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualCollection.RemoveAll">
      <summary>Removes all of the visual instances from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.VisualUnorderedCollection">
      <summary>An unordered collection of visuals.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.VisualUnorderedCollection.Count">
      <summary>The number of visuals in the collection.</summary>
      <returns>The nubmer of visuals in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Add(Microsoft.UI.Composition.Visual)">
      <summary>Adds a visual to the collection.</summary>
      <param name="newVisual">The visual to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.First">
      <summary>Retrieves the first visual in the collection.</summary>
      <returns>The first visual in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.Remove(Microsoft.UI.Composition.Visual)">
      <summary>Removes a visual from the collection.</summary>
      <param name="visual">Removes a visual from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.VisualUnorderedCollection.RemoveAll">
      <summary>Removes all visuals from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Core.CompositorController">
      <summary>Represents a compositor on which intended composition changes must be explicitly committed.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.#ctor">
      <summary>Initializes a new instance of the CompositorController class.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Core.CompositorController.Compositor">
      <summary>Gets the compositor associated with this composition controller.</summary>
      <returns>The compositor associated with this composition controller.</returns>
    </member>
    <member name="E:Microsoft.UI.Composition.Core.CompositorController.CommitNeeded">
      <summary>Occurs when the framework needs to call Commit in order for changes to Composition objects to be reflected onscreen.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Close">
      <summary>Releases system resources that are used by the CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.Commit">
      <summary>Calls commit on the compositor associated with this CompositorController.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Core.CompositorController.EnsurePreviousCommitCompletedAsync">
      <summary>Ensures the previous commit was completed.</summary>
      <returns>An asynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Desktop.DesktopWindowTarget">
      <summary>Represents a window that is the target of a composition.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Desktop.DesktopWindowTarget.IsTopmost">
      <summary>Gets a value that indicates whether the window is rendered on top of all other windows.</summary>
      <returns>**true** if the window is rendered on top of all other windows; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps">
      <summary>Represents heatmaps that show overdrawn areas of a composition UI.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.Hide(Microsoft.UI.Composition.Visual)">
      <summary>Hides the heatmap for the specified subtree.</summary>
      <param name="subtree">The part of the visual tree for which to hide the heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowMemoryUsage(Microsoft.UI.Composition.Visual)">
      <summary>Shows a graphical representation of the GPU memory used by the app.</summary>
      <param name="subtree">The part of the visual tree for which to show texture memory usage.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowOverdraw(Microsoft.UI.Composition.Visual,Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds)">
      <summary>Highlights pixels affected by multiple visuals at the same time.</summary>
      <param name="subtree">The part of the visual tree for which to show overdraw regions.</param>
      <param name="contentKinds">An enumeration value that specifies what type of content is shown on the overdraw heatmap.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugHeatMaps.ShowRedraw(Microsoft.UI.Composition.Visual)">
      <summary>Highlights areas of the app UI that are producing updates.</summary>
      <param name="subtree">The part of the visual tree for which to show redraw.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds">
      <summary>Defines constants that specify what kinds of content are shown on an overdraw heatmap.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.All">
      <summary>All content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Colors">
      <summary>Colors are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Effects">
      <summary>Effects are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Lights">
      <summary>Lights are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.None">
      <summary>No content kinds are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.OffscreenRendered">
      <summary>Elements rendered offscreen are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Shadows">
      <summary>Shadows are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.Surfaces">
      <summary>Surfaces are shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Diagnostics.CompositionDebugOverdrawContentKinds.SwapChains">
      <summary>SwapChains are shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings">
      <summary>Hosts diagnostic and debugging features such as heatmaps.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.HeatMaps">
      <summary>Gets the heatmaps for this debug settings instance.</summary>
      <returns>The heatmaps for this debug settings instance.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Diagnostics.CompositionDebugSettings.TryGetSettings(Microsoft.UI.Composition.Compositor)">
      <summary>Attempts to get an instance of CompositionDebugSettings for the specified compositor.</summary>
      <param name="compositor">The compositor to get debug settings for.</param>
      <returns>An instance of composition debug settings.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffect">
      <summary>Controls the reflective properties of a SpriteVisual. A SceneLightingEffect will overwrite CompositionLight defaults. It is used to control the reflective properties of a SpriteVisual. A NormalMap can be used as an input source but is not required.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Effects.SceneLightingEffect.#ctor">
      <summary>Creates an instance of SceneLightingEffect.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.AmbientAmount">
      <summary>The proportion of predefined AmbientLight used by the effect.</summary>
      <returns>The proportion of predefined AmbientLight used by the effect. Values must be set between 0.0 and 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.DiffuseAmount">
      <summary>Intensity of the diffuse light.</summary>
      <returns>Intensity of the diffuse light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.Name">
      <summary>Name of the light.</summary>
      <returns>Name of the light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.NormalMapSource">
      <summary>The normal map for the effect.</summary>
      <returns>The normal map for the effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.ReflectanceModel">
      <summary>Gets or sets a value that indicates how the reflectance of a SceneLightingEffect is modeled.</summary>
      <returns>A value that indicates how the reflectance of a SceneLightingEffect is modeled.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularAmount">
      <summary>Intensity of the specular light.</summary>
      <returns>Intensity of the specular light.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Effects.SceneLightingEffect.SpecularShine">
      <summary>Specular power for the Blinn-Phong lighting model.</summary>
      <returns>Specular power for the Blinn-Phong lighting model. Value must be set between 1.0 and 128. The default value is 16.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel">
      <summary>Defines constants that specify how the reflectance of a SceneLightingEffect is modeled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.BlinnPhong">
      <summary>The BlinnPhong model is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel.PhysicallyBasedBlinnPhong">
      <summary>The PhysicallyBasedBlinnPhong model is used.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionConditionalValue">
      <summary>Allows conditional modification of the position and scale of a visual interaction source.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Condition">
      <summary>The condition expression that determines when to apply modifiers to the visual interaction source.</summary>
      <returns>The condition expression that determines when to apply modifiers to the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Value">
      <summary>The modified input expression to be applied when the condition is true.</summary>
      <returns>The modified input expression to be applied when the condition is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionConditionalValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of CompositionConditionalValue.</summary>
      <param name="compositor">
      </param>
      <returns>Returns the created CompositionConditionalValue.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection">
      <summary>A collection of interaction sources.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Count">
      <summary>The number of interaction sources in the collection.</summary>
      <returns>The number of interaction sources in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Add(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Adds an interaction source to the collection.</summary>
      <param name="value">The interaction source to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.First">
      <summary>Returns an iterator pointing to the first object in the collection.</summary>
      <returns>Returns an iterator pointing to the first object in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.Remove(Microsoft.UI.Composition.Interactions.ICompositionInteractionSource)">
      <summary>Removes the specified interaction source from the collection.</summary>
      <param name="value">The interaction source to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection.RemoveAll">
      <summary>Removes all interaction sources from the collection.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.ICompositionInteractionSource">
      <summary>An object that is being tracked for interactions in the compositor.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner">
      <summary>Contains callbacks that will be triggered by InteractionTracker events.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.CustomAnimationStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the custom animation state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.IdleStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the idle state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InertiaStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)">
      <summary>Callback triggered when an InteractionTracker enters the inertia state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.InteractingStateEntered(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs)">
      <summary>Callback that is triggered when an InteractionTracker enters the interaction state.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">Arguments for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.RequestIgnored(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs)">
      <summary>Callback that is triggered when the InteractionTracker has ignored a request.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The arguemtns for the callback.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner.ValuesChanged(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs)">
      <summary>Callback that is triggered when the InteractionTracker 's output values have changed.</summary>
      <param name="sender">The InteractionTracker that triggered the callback.</param>
      <param name="args">The new values for the InteractionTracker.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.None">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionX">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.PositionY">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes.Scale">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionChainingMode">
      <summary>Defines the chaining behavior for a VisualInteractionSource. There are three options: Always chain, never chain or auto chain (let the system choose). If chaining is enabled, when an InteractionTracker reaches its minimum or maximum bounds, it will instead send the input to the next ancestor VisualInteractionSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Always">
      <summary>Always continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Auto">
      <summary>Automatically determine whether to continue the manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionChainingMode.Never">
      <summary>Never continue the manipulation.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration">
      <summary>Represents the configuration of a VisualInteractionSource input.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionXSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the X axis.</summary>
      <returns>The source mode for the X axis. By default, it takes the value of VisualInteractionTracker.PositionXSourceMode.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.PositionYSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the Y axis.</summary>
      <returns>The source mode for the Y axis. By default, it takes the value of VisualInteractionTracker.PositionYSourceMode.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration.ScaleSourceMode">
      <summary>Gets or sets a value that indicates how interactions are processed for this VisualInteractionSource input on the scale axis.</summary>
      <returns>The source mode for the scale axis. By default, it takes the value of VisualInteractionTracker.ScaleSourceMode.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceMode">
      <summary>Provides the various definitions for how a VisualInteractionSource will process interactions. Options available for the enumeration are </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.Disabled">
      <summary>Interaction is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithInertia">
      <summary>Interaction is enabled with inertia.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceMode.EnabledWithoutInertia">
      <summary>Interaction is enabled without inertia.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode">
      <summary>Defines constants that specify whether an input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Disabled">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode.Enabled">
      <summary>Input is redirected to the InteractionTracker.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTracker">
      <summary>Handles the logic of input that can be used as targets in ExpressionAnimations—typically to drive the motion of visuals based on input.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.InteractionSources">
      <summary>A collection of objects that generate interactions.</summary>
      <returns>A collection of objects that generate interactions.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>**true** if the inertia is the result of an impulse; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.IsPositionRoundingSuggested">
      <summary>Boolean value indicating whether position rounding is currently suggested.</summary>
      <returns>Boolean value indicating whether position rounding is currently suggested.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxPosition">
      <summary>The maximum position allowed for the InteractionTracker.</summary>
      <returns>The maximum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MaxScale">
      <summary>The maximum scale for the InteractionTracker.</summary>
      <returns>The maximum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinPosition">
      <summary>The minimum position allowed for the InteractionTracker.</summary>
      <returns>The minimum position allowed for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.MinScale">
      <summary>The minimum scale for the InteractionTracker.</summary>
      <returns>The minimum scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingPosition">
      <summary>Natural resting position for the InteractionTracker.</summary>
      <returns>Natural resting position for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.NaturalRestingScale">
      <summary>Natural resting scale for the InteractionTracker.</summary>
      <returns>Natural resting scale for the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Owner">
      <summary>The IInteractionTrackerOwner associated with the InteractionTracker.</summary>
      <returns>The IInteractionTrackerOwner associated with the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Position">
      <summary>The output position calculated by the InteractionTracker. The current position is a relative value. During the Idle and CustomAnimation states, it will always be between the values specified in the MinPosition and MaxPosition properties. The InteractionTracker’s position property can go outside this range during the Interacting and Inertia states in order to show a bounce or resistance at the boundary.</summary>
      <returns>The output position calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionInertiaDecayRate">
      <summary>Inertia decay rate for position. Range is from 0 to 1.</summary>
      <returns>Inertia decay rate for position. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.PositionVelocityInPixelsPerSecond">
      <summary>The velocity currently applied to position.</summary>
      <returns>The velocity currently applied to position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.Scale">
      <summary>The output scale calculated by the InteractionTracker. The current scale is a relative value that depends on the values specified in the MinScale and MaxScale properties.</summary>
      <returns>The output scale calculated by the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleInertiaDecayRate">
      <summary>Inertia decay rate, for scale. Range is from 0 to 1.</summary>
      <returns>Inertia decay rate for scale. Range is from 0 to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTracker.ScaleVelocityInPercentPerSecond">
      <summary>The rate of change for scale.</summary>
      <returns>The rate of change for scale.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionXIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position x coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position x coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position x coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.AdjustPositionYIfGreaterThanThreshold(System.Single,System.Single)">
      <summary>Adjusts the position y coordinate if it is greater than the specified threshold.</summary>
      <param name="adjustment">The amount to adjust the position y coordinate.</param>
      <param name="positionThreshold">The threshold for ajusting the position y coordinate.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureCenterPointYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, while the tracker is in Inertia, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the tracker uses with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionXInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the x inertia of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the x inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigurePositionYInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the y inertia of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the y inertia of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureScaleInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the scale of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the scale of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.ConfigureVector2PositionInertiaModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier})">
      <summary>Applies a collection of InteractionTrackerInertiaModifier objects to the position of an InteractionTracker.</summary>
      <param name="modifiers">The collection of InteractionTrackerInertiaModifier objects to apply to the position of an InteractionTracker.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTracker.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.CreateWithOwner(Microsoft.UI.Composition.Compositor,Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner)">
      <summary>Creates an instance of InteractionTracker with the specified owner.</summary>
      <param name="compositor">The compositor to use to create the instance of InteractionTracker.</param>
      <param name="owner">The InteractionTracker owner to associate with the created InteractionTracker.</param>
      <returns>Returns the created InteractionTracker object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.GetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker)">
      <summary>
      </summary>
      <param name="boundTracker1">
      </param>
      <param name="boundTracker2">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.SetBindingMode(Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionTracker,Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes)">
      <summary>
      </summary>
      <param name="boundTracker1">
      </param>
      <param name="boundTracker2">
      </param>
      <param name="axisMode">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePosition(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to update the position of the InteractionTracker using the specified clamping option.</summary>
      <param name="value">The new position for the InteractionTracker.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to adjust the InteractionTracker 's position by the specified amount.</summary>
      <param name="amount">The value to add to the current position.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionBy(Windows.Foundation.Numerics.Vector3,Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption)">
      <summary>Tries to adjust the position of the InteractionTracker by the specified amount using the specified clamping option.</summary>
      <param name="amount">The value to add to the current position.</param>
      <param name="option">A value that specifies how values are clamped to the maximum and minimum.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAdditionalVelocity(Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the InteractionTracker 's position by adding velocity.</summary>
      <param name="velocityInPixelsPerSecond">The velocity to add in pixels per second.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdatePositionWithAnimation(Microsoft.UI.Composition.CompositionAnimation)">
      <summary>Tries to update the InteractionTracker 's position by applying an animation.</summary>
      <param name="animation">The animation to apply to the InteractionTracker.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScale(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale to the specified value.</summary>
      <param name="value">The new value for scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAdditionalVelocity(System.Single,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale by adding the specified velocity.</summary>
      <param name="velocityInPercentPerSecond">The velocity to add to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTracker.TryUpdateScaleWithAnimation(Microsoft.UI.Composition.CompositionAnimation,Windows.Foundation.Numerics.Vector3)">
      <summary>Tries to update the scale with the specified animation.</summary>
      <param name="animation">The animation to apply to the scale.</param>
      <param name="centerPoint">The new center point.</param>
      <returns>Returns the request ID. On state transitions, the request which caused the change in state will be included in the args. These IDs will start at 1 and increase with each try call during the lifetime of the application.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption">
      <summary>Defines constants that specify how values are clamped when the InteractionTracker position is updated.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Auto">
      <summary>If the input value is greater (or less) than the max (or min) value, it is immediately clamped.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption.Disabled">
      <summary>If the input value is greater (or less) than the max (or min) value, it is not immediately clamped. Instead, the max/min is enforced to the newly input value of Position (and potentially clamped) the next time InteractionTracker enters the Inertia state.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.CustomAnimationStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.IdleStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier">
      <summary>Base class for inertia modifiers.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion">
      <summary>An ExpressionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Motion">
      <summary>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>An ExpressionAnimation describing the modified motion for InteractionTracker if the expression in the Condition property is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion">
      <summary>A ScalarNaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</summary>
      <returns>A ScalarNaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue">
      <summary>An ExpressionAnimation that defines the rest position after an interaction.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Condition">
      <summary>An ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.RestingValue">
      <summary>An ExpressionAnimation to define the resting value of InteractionTracker if the expression in the Condition property is true.</summary>
      <returns>An ExpressionAnimation to define the resting value if the expression in the Condition property is true.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerInertiaRestingValue.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaRestingValue object.</param>
      <returns>Returns the created InteractionTrackerInertiaRestingValue object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InertiaStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.IsInertiaFromImpulse">
      <summary>Gets a value that indicates whether the inertia is the result of an impulse.</summary>
      <returns>**true** if the inertia is the result of an impulse; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes after InteractionTrackerInertiaModifier s and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ModifiedRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, after InteractionTrackerInertiaModifiers and boundaries have been applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingPosition">
      <summary>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.</summary>
      <returns>The InteractionTracker 's resting position when inertia completes, without any modifiers or boundaries applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.NaturalRestingScale">
      <summary>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.</summary>
      <returns>The InteractionTracker 's resting scale when inertia completes, without accounting for InteractionTrackerInertiaModifier s or boundaries.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.PositionVelocityInPixelsPerSecond">
      <summary>The velocity of InteractionTracker 's position.</summary>
      <returns>The velocity of InteractionTracker 's position.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback. Represents the ID of the request that caused InteractionTracker to enter the Inertia State (the InertiaStateEntered callback was triggered). Note that the RequestID property will be incremented each time a request tries to change the state of InteractionTracker.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs.ScaleVelocityInPercentPerSecond">
      <summary>The velocity of InteractionTracker 's scale.</summary>
      <returns>The velocity of InteractionTracker 's scale.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.InteractingStateEntered callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.IsFromBinding">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs">
      <summary>Arguments for the IInteractionTrackerOwner.RequestIgnored callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs">
      <summary>Arguments for the IInteractionTrackerOwner.ValuesChanged callback.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Position">
      <summary>The current position of the InteractionTracker.</summary>
      <returns>The current position of the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.RequestId">
      <summary>The ID of the request that triggered the callback.</summary>
      <returns>The ID of the request that triggered the callback.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs.Scale">
      <summary>The current scale of the InteractionTracker.</summary>
      <returns>The current scale of the InteractionTracker.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier">
      <summary>Base class for InteractionTrackerVector2InertiaNaturalMotion.</summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion">
      <summary>A Vector2NaturalMotionAnimation that defines motion of InteractionTracker during its inertia state.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Condition">
      <summary>Gets or sets an ExpressionAnimation describing when the modifier should be applied.</summary>
      <returns>An ExpressionAnimation describing when the modifier should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.NaturalMotion">
      <summary>Gets or set a Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</summary>
      <returns>A Vector2NaturalMotionAnimation that describes the modified motion for InteractionTracker if the expression in the Condition property is **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of InteractionTrackerVector2InertiaNaturalMotion.</summary>
      <param name="compositor">The compositor to use when creating the InteractionTrackerInertiaNaturalMotion object.</param>
      <returns>Returns the created InteractionTrackerInertiaNaturalMotion object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSource">
      <summary>Object for configuring input to the InteractionTracker relative to a visual.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaPosition">
      <summary>The amount of position change to be applied during the upcoming frame. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The change in position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.DeltaScale">
      <summary>The amount of scale change to be applied during the upcoming frame. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The change in scale of the visual interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionXRailsEnabled">
      <summary>Indicates whether panning on the x-axis is railed.</summary>
      <returns>Boolean value indicating whether panning on the x-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.IsPositionYRailsEnabled">
      <summary>Indicates whether panning on the y-axis is railed.</summary>
      <returns>Boolean value indicating whether panning on the y-axis is railed.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ManipulationRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
      <returns>Indicates what input should be redirected to the InteractionTracker.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PointerWheelConfig">
      <summary>Gets the configuration for pointer wheel input.</summary>
      <returns>The configuration for pointer wheel input.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Position">
      <summary>The total amount of position change since the start of the interaction. Defaults to 0. Readable only via expression/animation.</summary>
      <returns>The position of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionVelocity">
      <summary>The instantaneous rate of change of position in the interaction, in pixels per second. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The position velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXChainingMode">
      <summary>The PositionXChainingMode property defines the chaining behavior for an InteractionSource in the X direction. There are three types of InteractionChainingMode s: </summary>
      <returns>Chaining mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionXSourceMode">
      <summary>Source mode for the X-axis.</summary>
      <returns>Source mode for the X-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYChainingMode">
      <summary>The PositionYChainingMode property defines the chaining behavior for an InteractionSource in the Y direction. There are three types of InteractionChainingMode s: </summary>
      <returns>Chaining mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.PositionYSourceMode">
      <summary>Source mode for the Y-axis.</summary>
      <returns>Source mode for the Y-axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Scale">
      <summary>The total percentage-difference in scale since the start of the interaction. Multiplicative. Defaults to 1. Readable only via expression/animation.</summary>
      <returns>The scale of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleChainingMode">
      <summary>The ScaleChainingMode property defines the chaining behavior for an InteractionSource in the Scale direction. There are three types of InteractionChainingMode s: Auto, Always, Never. When Scale chaining is enabled, input will flow to the nearest ancestor’s VisualInteractionSource whenever the interaction (such as panning) would otherwise take InteractionTracker ’s position past it’s minimum or maximum Scale position.</summary>
      <returns>Chaining mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleSourceMode">
      <summary>Defines how interactions are processed for an VisualInteractionSource on the scale axis. There are 3 types of InteractionSourceMode s to choose from: Interactions are </summary>
      <returns>Source mode for the scale axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ScaleVelocity">
      <summary>The instantaneous rate of change of scale in the interaction, in percent per second. Additive. Defaults to 0. Readble only via expression/animation.</summary>
      <returns>The scale velocity of the interaction source.</returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Source">
      <summary>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</summary>
      <returns>The visual that is used for hit-testing and defines the co-ordinate space for gesture recognition.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureCenterPointYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the zoom CenterPointY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the CenterPointY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionXModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionX value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionX is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaPositionYModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaPositionY value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaPositionY is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.ConfigureDeltaScaleModifiers(Windows.Foundation.Collections.IIterable{Microsoft.UI.Composition.Interactions.CompositionConditionalValue})">
      <summary>Takes an ordered list of CompositionConditionalValue. In a frame, the first CompositionConditionalValue to have its “.Condition” evaluate to true replaces the DeltaScale value the VisualInteractionSource provides with its “.Value”. If none evaluate to true, the DeltaScale is not replaced that frame.</summary>
      <param name="conditionalValues">
      </param>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.Create(Microsoft.UI.Composition.Visual)">
      <summary>Creates an instance of VisualInteractionSource.</summary>
      <param name="source">The visual to use as the source of the interaction.</param>
      <returns>Returns the created VisualInteractionSource object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.CreateFromIVisualElement(Microsoft.UI.Composition.IVisualElement)">
      <summary>
      </summary>
      <param name="source">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Interactions.VisualInteractionSource.TryRedirectForManipulation(Microsoft.UI.Input.PointerPoint)">
      <summary>Indicates that configured manipulations for the given pointer stream should be sent to the InteractionTracker, not the app's UI thread, starting at the given PointerPoint.</summary>
      <param name="pointerPoint">Indicates that configured manipulations for the given pointer stream should be sent to the InteractionTracker, not the app's UI thread, starting at the given PointerPoint.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode">
      <summary>Indicates what input should be redirected to the InteractionTracker.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadAndPointerWheel">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.CapableTouchpadOnly">
      <summary>Pointer input goes to the UI thread, Precision Touchpad input goes to the compositor.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.Off">
      <summary>Redirection is off, all input goes to the UI thread.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode.PointerWheelOnly">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAlphaMode">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.AlphaTest">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Blend">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAlphaMode.Opaque">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Color">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Index">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Tangent">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord0">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.TexCoord1">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneAttributeSemantic.Vertex">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneBoundingBox">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Center">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Extents">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Max">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Min">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneBoundingBox.Size">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponent">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponent.ComponentType">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentCollection">
      <summary>Represents a collection of SceneComponent objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Append(Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneComponent value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneComponent,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneComponent[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneComponentCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneComponent)">
      <summary>Sets the value at the specified index to the specified SceneComponent value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneComponentType">
      <summary>Defines constants that specify what kind a scene component is.</summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneComponentType.MeshRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterial">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMaterialInput">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMesh">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.Bounds">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMesh.PrimitiveTopology">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneMesh.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneMesh object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMesh.FillMeshAttribute(Microsoft.UI.Composition.Scenes.SceneAttributeSemantic,Windows.Graphics.DirectX.DirectXPixelFormat,Windows.Foundation.MemoryBuffer)">
      <summary>
      </summary>
      <param name="semantic">
      </param>
      <param name="format">
      </param>
      <param name="memory">
      </param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap">
      <summary>Represents a collection of material attributes for a scene mesh as key/value pairs.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Size">
      <summary>Gets the number of items in the map.</summary>
      <returns>The number of items in the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Clear">
      <summary>Removes all items from the map.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.GetView">
      <summary>Returns an immutable view of the map.</summary>
      <returns>The view of the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.HasKey(System.String)">
      <summary>Determines whether the map contains the specified key.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>**true** if the key is found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Insert(System.String,Microsoft.UI.Composition.Scenes.SceneAttributeSemantic)">
      <summary>Inserts or replaces an item in the map.</summary>
      <param name="key">The key associated with the item to insert.</param>
      <param name="value">The item to insert.</param>
      <returns>**true** if an item with the specified key is an existing item that was replaced; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Lookup(System.String)">
      <summary>Returns the item at the specified key in the map.</summary>
      <param name="key">The key associated with the item to locate.</param>
      <returns>The value, if an item with the specified key exists. Use the HasKey method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.Remove(System.String)">
      <summary>Removes an item from the map.</summary>
      <param name="key">The key associated with the item to remove.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Material">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Mesh">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.UVMappings">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.BaseColorInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.MetallicRoughnessInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.RoughnessFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneModelTransform">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Orientation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngle">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAngleInDegrees">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.RotationAxis">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Scale">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneModelTransform.Translation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNode">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Children">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Components">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Parent">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNode.Transform">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneNode.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneNode object.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNode.FindFirstComponentOfType(Microsoft.UI.Composition.Scenes.SceneComponentType)">
      <summary>
      </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneNodeCollection">
      <summary>Represents a collection of SceneNode objects that can be individually accessed by index.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Append(Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SceneNode value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetMany(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.IndexOf(Microsoft.UI.Composition.Scenes.SceneNode,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.InsertAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.ReplaceAll(Microsoft.UI.Composition.Scenes.SceneNode[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneNodeCollection.SetAt(System.UInt32,Microsoft.UI.Composition.Scenes.SceneNode)">
      <summary>Sets the value at the specified index to the specified SceneNode value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneObject">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.ScenePbrMaterial">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaCutoff">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.AlphaMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveFactor">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.EmissiveInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.IsDoubleSided">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.NormalScale">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionInput">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.ScenePbrMaterial.OcclusionStrength">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneRendererComponent">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput">
      <summary>
      </summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.BitmapInterpolationMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Surface">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingUMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.WrappingVMode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.Create(Microsoft.UI.Composition.Compositor)">
      <summary>
      </summary>
      <param name="compositor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneVisual">
      <summary>Represents a container visual for the nodes of a 3D scene.</summary>
    </member>
    <member name="P:Microsoft.UI.Composition.Scenes.SceneVisual.Root">
      <summary>Gets or sets the root node for scene.</summary>
      <returns>The root node for scene.</returns>
    </member>
    <member name="M:Microsoft.UI.Composition.Scenes.SceneVisual.Create(Microsoft.UI.Composition.Compositor)">
      <summary>Creates an instance of SceneVisual.</summary>
      <param name="compositor">An instance of the Compositor class.</param>
      <returns>Returns the created SceneVisual object.</returns>
    </member>
    <member name="T:Microsoft.UI.Composition.Scenes.SceneWrappingMode">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.ClampToEdge">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.MirroredRepeat">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Composition.Scenes.SceneWrappingMode.Repeat">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Input.AttachableInputObject">
      <summary>Base class for an InputActivationListener object associated with a window, view, or other visual element.</summary>
    </member>
    <member name="M:Microsoft.UI.Input.AttachableInputObject.Close">
      <summary>Terminates the AttachableInputObject instance.</summary>
    </member>
    <member name="T:Microsoft.UI.Text.FontWeights">
      <summary>Provides a set of predefined font weights as static property values.</summary>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Black">
      <summary>Specifies a font weight value of 900.</summary>
      <returns>A FontWeight with a Weight value of 900.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Bold">
      <summary>Specifies a font weight value of 700.</summary>
      <returns>A FontWeight with a Weight value of 700.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.ExtraBlack">
      <summary>Specifies a font weight value of 950.</summary>
      <returns>A FontWeight with a Weight value of 950.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.ExtraBold">
      <summary>Specifies a font weight value of 800.</summary>
      <returns>A FontWeight with a Weight value of 800.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.ExtraLight">
      <summary>Specifies a font weight value of 200.</summary>
      <returns>A FontWeight with a Weight value of 200.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Light">
      <summary>Specifies a font weight value of 300.</summary>
      <returns>A FontWeight with a Weight value of 300.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Medium">
      <summary>Specifies a font weight value of 500.</summary>
      <returns>A FontWeight with a Weight value of 500.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Normal">
      <summary>Specifies a font weight value of 400.</summary>
      <returns>A FontWeight with a Weight value of 400.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.SemiBold">
      <summary>Specifies a font weight value of 600.</summary>
      <returns>A FontWeight with a Weight value of 600.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.SemiLight">
      <summary>Specifies a font weight value of 350.</summary>
      <returns>A FontWeight with a Weight value of 350.</returns>
    </member>
    <member name="P:Microsoft.UI.Text.FontWeights.Thin">
      <summary>Specifies a font weight value of 100.</summary>
      <returns>A FontWeight with a Weight value of 100.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.AdaptiveTrigger">
      <summary>Represents a declarative rule that applies visual states based on window properties.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.AdaptiveTrigger.#ctor">
      <summary>Initializes a new instance of the AdaptiveTrigger class</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowHeight">
      <summary>Gets or sets the minimum window height at which the VisualState should be applied.</summary>
      <returns>The minimum window height (in effective pixels) at which the VisualState should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowHeightProperty">
      <summary>Identifies the MinWindowHeight dependency property.</summary>
      <returns>The identifier for the MinWindowHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowWidth">
      <summary>Gets or sets the minimum window width at which the VisualState should be applied.</summary>
      <returns>The minimum window width (in effective pixels) at which the VisualState should be applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowWidthProperty">
      <summary>Identifies the MinWindowWidth dependency property.</summary>
      <returns>The identifier for the MinWindowWidth dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Application">
      <summary>Encapsulates the app and its available services.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.#ctor">
      <summary>Initializes a new instance of the Application class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.Current">
      <summary>Gets the Application object for the current application.</summary>
      <returns>The Application object for the current application.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.DebugSettings">
      <summary>Gets an object that declares how the app behaves when run in a debug environment.</summary>
      <returns>An object that declares how the app behaves when run in a debug environment.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.FocusVisualKind">
      <summary>Gets or sets the type of visual feedback that an app can use to indicate the UI element with focus.</summary>
      <returns>The type of visual feedback used to indicate the UI element with focus. The default value depends on the operating system.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.HighContrastAdjustment">
      <summary>Gets or sets a value that indicates whether the framework automatically adjusts visual properties when high contrast themes are enabled.</summary>
      <returns>A value of the enumeration that indicates whether the framework automatically adjusts visual properties when high contrast themes are enabled. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.RequestedTheme">
      <summary>Gets or sets a value that determines the light-dark preference for the overall theme of an app.</summary>
      <returns>A value of the enumeration. The initial value is the default theme set by the user in Windows settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.RequiresPointerMode">
      <summary>Gets or sets whether a UWP app supports mouse mode, which emulates pointer interaction experiences with non-pointer input devices such as an Xbox gamepad or remote control. (All nested elements inherit this behavior.)</summary>
      <returns>The pointer emulation mode. The default is Auto (the default system experience for the input device).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Application.Resources">
      <summary>Gets a collection of application-scoped resources, such as styles, templates, and brushes.</summary>
      <returns>A ResourceDictionary object that contains zero or more application-scoped resources.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Application.EnteredBackground">
      <summary>Occurs when the app moves from the foreground to the background.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Application.LeavingBackground">
      <summary>Occurs when the app moves from the background to the foreground.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Application.Resuming">
      <summary>Occurs when the application transitions from Suspended state to Running state.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Application.Suspending">
      <summary>Occurs when the application transitions to Suspended state from some other state.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Application.UnhandledException">
      <summary>Occurs when an exception can be handled by app code, as forwarded from a native-level Windows Runtime error. Apps can mark the occurrence as handled in event data.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.Exit">
      <summary>Shuts down the app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.LoadComponent(System.Object,Windows.Foundation.Uri)">
      <summary>Loads a XAML file that is located at the specified relative location, and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="component">An object of the same type as the root element of the XAML content to be loaded.</param>
      <param name="resourceLocator">An object describing the Uniform Resource Identifier (URI) path to the resource to load.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.LoadComponent(System.Object,Windows.Foundation.Uri,Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation)">
      <summary>Loads a XAML file that is located at the specified relative location, and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
      <param name="component">An object of the same type as the root element of the XAML content to be loaded.</param>
      <param name="resourceLocator">An object describing the Uniform Resource Identifier (URI) path to the resource to load.</param>
      <param name="componentResourceLocation">A value of the enumeration.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs)">
      <summary>Invoked when the application is activated by some means other than normal launching.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnBackgroundActivated(Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs)">
      <summary>Invoked when the application is activated in the background.</summary>
      <param name="args">Data about the background activation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnCachedFileUpdaterActivated(Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs)">
      <summary>Invoked when the application is activated due to an activation contract with ActivationKind as **CachedFileUpdater**.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnFileActivated(Windows.ApplicationModel.Activation.FileActivatedEventArgs)">
      <summary>Invoked when the application is activated through file-open.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnFileOpenPickerActivated(Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs)">
      <summary>Invoked when the application is activated through file-open dialog association.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnFileSavePickerActivated(Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs)">
      <summary>Invoked when the application is activated through file-save dialog association.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnLaunched(Microsoft.UI.Xaml.LaunchActivatedEventArgs)">
      <summary>Invoked when the application is launched. Override this method to perform application initialization and to display initial content in the associated Window.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnSearchActivated(Windows.ApplicationModel.Activation.SearchActivatedEventArgs)">
      <summary>Invoked when the application is activated through a search association.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnShareTargetActivated(Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs)">
      <summary>Invoked when the application is activated through sharing association.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.OnWindowCreated(Microsoft.UI.Xaml.WindowCreatedEventArgs)">
      <summary>Invoked when the application creates a window.</summary>
      <param name="args">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Application.Start(Microsoft.UI.Xaml.ApplicationInitializationCallback)">
      <summary>Provides the entry point and requests initialization of the application. Use the callback to instantiate the Application class.</summary>
      <param name="callback">The callback that should be invoked during the initialization sequence.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.ApplicationHighContrastAdjustment">
      <summary>Defines constants that specify whether the framework automatically adjusts visual properties for the app when high contrast themes are enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationHighContrastAdjustment.Auto">
      <summary>Visuals are automatically adjusted when high contrast is enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationHighContrastAdjustment.None">
      <summary>No automatic adjustments are made to visuals.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ApplicationInitializationCallback">
      <summary>Represents the callback that should be invoked during the initialization sequence.</summary>
      <param name="p">Parameters that convey information for custom startup initialization.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.ApplicationInitializationCallbackParams">
      <summary>A class that developers should derive from in order to pass information for a custom initialization sequence, in cases where both an Application subclass is present and the entry point Start call is adjusted to pass the information.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ApplicationRequiresPointerMode">
      <summary>Specifies the interaction experiences for non-pointer devices such as an Xbox controller or remote control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationRequiresPointerMode.Auto">
      <summary>The default system experience for the input device.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationRequiresPointerMode.WhenRequested">
      <summary>A pointer-like interaction experience using a mouse cursor that can be freely moved using non-pointer input devices.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ApplicationTheme">
      <summary>Declares the theme preference for an app.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationTheme.Dark">
      <summary>Use the **Dark** default theme.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ApplicationTheme.Light">
      <summary>Use the **Light** default theme.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.AutomationTextAttributesEnum">
      <summary>Defines constants that identify text attributes of a Microsoft UI Automation text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.AnimationStyleAttribute">
      <summary>Identifies the **AnimationStyle** text attribute, which specifies the type of animation applied to the text. This attribute is specified as a value of the AutomationAnimationStyle enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.AnnotationObjectsAttribute">
      <summary>Identifies the **AnnotationObjects** text attribute.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.AnnotationTypesAttribute">
      <summary>Identifies the **AnnotationTypes** text attribute, which maintains a list of annotation type identifiers for a range of text. This attribute is specified as a value of the AnnotationType enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.BackgroundColorAttribute">
      <summary>Identifies the **BackgroundColor** text attribute, which specifies the background color of the text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.BulletStyleAttribute">
      <summary>Identifies the **BulletStyle** text attribute, which specifies the style of bullets used in the text range. This attribute is specified as a value of the AutomationBulletStyle enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.CapStyleAttribute">
      <summary>Identifies the **CapStyle** text attribute, which specifies the capitalization style for the text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.CaretBidiModeAttribute">
      <summary>Identifies the **CaretBidiMode** text attribute, which indicates the direction of text flow in the text range. This attribute is specified as a value of the AutomationCaretBidiMode enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.CaretPositionAttribute">
      <summary>Identifies the **CaretPosition** text attribute, which indicates whether the caret is at the beginning or the end of a line of text in the text range. This attribute is specified as a value of the AutomationCaretPosition enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.CultureAttribute">
      <summary>Identifies the **Culture** text attribute, which specifies the locale of the text by locale identifier (LCID).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.FontNameAttribute">
      <summary>Identifies the **FontName** text attribute, which specifies the name of the font. Examples: "Arial Black"; "Arial Narrow". The font name string is not localized.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.FontSizeAttribute">
      <summary>Identifies the **FontSize** text attribute, which specifies the point size of the font.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.FontWeightAttribute">
      <summary>Identifies the **FontWeight** text attribute, which specifies the relative stroke, thickness, or boldness of the font.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.ForegroundColorAttribute">
      <summary>Identifies the **ForegroundColor** text attribute, which specifies the foreground color of the text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.HorizontalTextAlignmentAttribute">
      <summary>Identifies the **HorizontalTextAlignment** text attribute, which specifies how the text is aligned horizontally.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IndentationFirstLineAttribute">
      <summary>Identifies the **IndentationFirstLine** text attribute, which specifies how far, in points, to indent the first line of a paragraph.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IndentationLeadingAttribute">
      <summary>Identifies the **IndentationLeading** text attribute, which specifies the leading indentation, in points.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IndentationTrailingAttribute">
      <summary>Identifies the **IndentationTrailing** text attribute, which specifies the trailing indentation, in points.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsActiveAttribute">
      <summary>Identifies the **IsActive** text attribute, which indicates whether the control that contains the text range has the keyboard focus (**true**) or not (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsHiddenAttribute">
      <summary>Identifies the **IsHidden** text attribute, which indicates whether the text is hidden (**true**) or visible (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsItalicAttribute">
      <summary>Identifies the **IsItalic** text attribute, which indicates whether the text is italic (**true**) or not (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsReadOnlyAttribute">
      <summary>Identifies the **IsReadOnly** text attribute, which indicates whether the text is read-only (**true**) or can be modified (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsSubscriptAttribute">
      <summary>Identifies the **IsSubscript** text attribute, which indicates whether the text is subscript (**true**) or not (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.IsSuperscriptAttribute">
      <summary>Identifies the **IsSuperscript** text attribute, which indicates whether the text is subscript (**true**) or not (**false**).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.LinkAttribute">
      <summary>Identifies the **Link** text attribute, which contains the ITextRangeProvider interface of the text range that is the target of an internal link in a document.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.MarginBottomAttribute">
      <summary>Identifies the **MarginBottom** text attribute, which specifies the size, in points, of the bottom margin applied to the page associated with the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.MarginLeadingAttribute">
      <summary>Identifies the **MarginLeading** text attribute, which specifies the size, in points, of the leading margin applied to the page associated with the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.MarginTopAttribute">
      <summary>Identifies the **MarginTop** text attribute, which specifies the size, in points, of the top margin applied to the page associated with the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.MarginTrailingAttribute">
      <summary>Identifies the **MarginTrailing** text attribute, which specifies the size, in points, of the trailing margin applied to the page associated with the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.OutlineStylesAttribute">
      <summary>Identifies the **OutlineStyles** text attribute, which specifies the outline style of the text. This attribute is specified as a value of the AutomationOutlineStyles enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.OverlineColorAttribute">
      <summary>Identifies the **OverlineColor** text attribute, which specifies the color of the overline text decoration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.OverlineStyleAttribute">
      <summary>Identifies the **OverlineStyle** text attribute, which specifies the style of the overline text decoration. This attribute is specified as a value of the AutomationTextDecorationLineStyle enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.SelectionActiveEndAttribute">
      <summary>Identifies the **SelectionActiveEnd** text attribute, which indicates the location of the caret relative to a text range that represents the currently selected text. This attribute is specified as a value from the AutomationActiveEnd enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.StrikethroughColorAttribute">
      <summary>Identifies the **StrikethroughColor** text attribute, which specifies the color of the strikethrough text decoration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.StrikethroughStyleAttribute">
      <summary>Identifies the **StrikethroughStyle** text attribute, which specifies the style of the strikethrough text decoration. This attribute is specified as a value of the AutomationTextDecorationLineStyle enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.StyleIdAttribute">
      <summary>Identifies the **StyleId** text attribute, which indicates the text styles in use for a text range. This attribute is specified as a value of the AutomationStyleId enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.StyleNameAttribute">
      <summary>Identifies the **StyleName** text attribute, which identifies the localized name of the text style in use for a text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.TabsAttribute">
      <summary>Identifies the **Tabs** text attribute, which is an array specifying the tab stops for the text range. Each array element specifies a distance, in points, from the leading margin.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.TextFlowDirectionsAttribute">
      <summary>Identifies the **TextFlowDirections** text attribute, which specifies the direction of text flow. This attribute is specified as a combination of values of the AutomationFlowDirections enumeration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.UnderlineColorAttribute">
      <summary>Identifies the **UnderlineColor** text attribute, which specifies the color of the underline text decoration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.AutomationTextAttributesEnum.UnderlineStyleAttribute">
      <summary>Identifies the **UnderlineStyle** text attribute, which specifies the style of the underline text decoration. This attribute is specified as a value of the AutomationTextDecorationLineStyle enumeration.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.BindingFailedEventArgs">
      <summary>Provides event data for the DebugSettings.BindingFailed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.BindingFailedEventArgs.Message">
      <summary>Gets the explanation of the binding failure.</summary>
      <returns>The reason the binding failed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.BindingFailedEventHandler">
      <summary>Represents the method that will handle the DebugSettings.BindingFailed event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.BringIntoViewOptions">
      <summary>Represents the options that can be applied when an element is brought into view.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.BringIntoViewOptions.#ctor">
      <summary>Initializes a new instance of the BringIntoViewOptions class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.AnimationDesired">
      <summary>Gets or sets a value that indicates whether to use animation when the element is brought into view.</summary>
      <returns>**true** to use animation; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.HorizontalAlignmentRatio">
      <summary>Controls the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge. By default this is set to 0.0f.</summary>
      <returns>A value that specifies the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The default is 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.HorizontalOffset">
      <summary>Gets or sets the horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</summary>
      <returns>The horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.TargetRect">
      <summary>Gets or sets the area of an element to bring into view.</summary>
      <returns>A rectangle that defines the area of an element to bring into view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.VerticalAlignmentRatio">
      <summary>Controls the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge. By default this is set to 0.0f.</summary>
      <returns>A value that specifies the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The default is 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewOptions.VerticalOffset">
      <summary>Gets or sets the vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</summary>
      <returns>The vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs">
      <summary>Provides data for the UIElement.BringIntoViewRequested event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.AnimationDesired">
      <summary>Gets or sets a value that specifies whether the scrolling should be animated.</summary>
      <returns>**true** to animate the scrolling; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.HorizontalAlignmentRatio">
      <summary>Gets the horizontal distance that should be added to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</summary>
      <returns>The horizontal distance that should be added to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.HorizontalOffset">
      <summary>Gets or sets the horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</summary>
      <returns>The horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.TargetElement">
      <summary>Gets or sets the element that should be made visible in response to the event.</summary>
      <returns>The element that should be made visible in response to the event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.TargetRect">
      <summary>Gets or sets the Rect in the TargetElement’s coordinate space to bring into view.</summary>
      <returns>The Rect in the TargetElement’s coordinate space to bring into view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.VerticalAlignmentRatio">
      <summary>Gets the vertical distance that should be added to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</summary>
      <returns>The vertical distance that should be added to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs.VerticalOffset">
      <summary>Gets or sets the vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</summary>
      <returns>The vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.BrushTransition">
      <summary>Provides the animated transition behavior when an element's brush changes. Currently limited to changes between SolidColorBrush objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.BrushTransition.#ctor">
      <summary>Initializes a new instance of the BrushTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.BrushTransition.Duration">
      <summary>Gets or sets the duration of the transition.</summary>
      <returns>The duration of the transition.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ColorPaletteResources">
      <summary>Represents a specialized resource dictionary that contains color resources used by XAML elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ColorPaletteResources.#ctor">
      <summary>Initializes a new instance of the ColorPaletteResources class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.Accent">
      <summary>Gets or sets the Accent color value.</summary>
      <returns>The Accent color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.AltHigh">
      <summary>Gets or sets the AltHigh color value.</summary>
      <returns>The AltHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.AltLow">
      <summary>Gets or sets the AltLow color value.</summary>
      <returns>The AltLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.AltMedium">
      <summary>Gets or sets the AltMedium color value.</summary>
      <returns>The AltMedium color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.AltMediumHigh">
      <summary>Gets or sets the AltMediumHigh color value.</summary>
      <returns>The AltMediumHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.AltMediumLow">
      <summary>Gets or sets the AltMediumLow color value.</summary>
      <returns>The AltMediumLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.BaseHigh">
      <summary>Gets or sets the BaseHigh color value.</summary>
      <returns>The BaseHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.BaseLow">
      <summary>Gets or sets the BaseLow color value.</summary>
      <returns>The BaseLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.BaseMedium">
      <summary>Gets or sets the BaseMedium color value.</summary>
      <returns>The BaseMedium color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumHigh">
      <summary>Gets or sets the BaseMediumHigh color value.</summary>
      <returns>The BaseMediumHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumLow">
      <summary>Gets or sets the BaseMediumLow color value.</summary>
      <returns>The BaseMediumLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeAltLow">
      <summary>Gets or sets the ChromeAltLow color value.</summary>
      <returns>The ChromeAltLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackHigh">
      <summary>Gets or sets the ChromeBlackHigh color value.</summary>
      <returns>The ChromeBlackHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackLow">
      <summary>Gets or sets the ChromeBlackLow color value.</summary>
      <returns>The ChromeBlackLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMedium">
      <summary>Gets or sets the ChromeBlackMedium color value.</summary>
      <returns>The ChromeBlackMedium color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMediumLow">
      <summary>Gets or sets the ChromeBlackMediumLow color value.</summary>
      <returns>The ChromeBlackMediumLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledHigh">
      <summary>Gets or sets the ChromeDisabledHigh color value.</summary>
      <returns>The ChromeDisabledHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledLow">
      <summary>Gets or sets the ChromeDisabledLow color value.</summary>
      <returns>The ChromeDisabledLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeGray">
      <summary>Gets or sets the ChromeGray color value.</summary>
      <returns>The ChromeGray color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeHigh">
      <summary>Gets or sets the ChromeHigh color value.</summary>
      <returns>The ChromeHigh color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeLow">
      <summary>Gets or sets the ChromeLow color value.</summary>
      <returns>The ChromeLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeMedium">
      <summary>Gets or sets the ChromeMedium color value.</summary>
      <returns>The ChromeMedium color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeMediumLow">
      <summary>Gets or sets the ChromeMediumLow color value.</summary>
      <returns>The ChromeMediumLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ChromeWhite">
      <summary>Gets or sets the ChromeWhite color value.</summary>
      <returns>The ChromeWhite color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ErrorText">
      <summary>Gets or sets the ErrorText color value.</summary>
      <returns>The ErrorText color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ListLow">
      <summary>Gets or sets the ListLow color value.</summary>
      <returns>The ListLow color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ColorPaletteResources.ListMedium">
      <summary>Gets or sets the ListMedium color value.</summary>
      <returns>The ListMedium color value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.CornerRadius">
      <summary>Describes the characteristics of a rounded corner, such as can be applied to a Border.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.CornerRadius.BottomLeft">
      <summary>The radius of rounding, in pixels, of the lower-left corner of the object where a CornerRadius is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.CornerRadius.BottomRight">
      <summary>The radius of rounding, in pixels, of the lower-right corner of the object where a CornerRadius is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.CornerRadius.TopLeft">
      <summary>The radius of rounding, in pixels, of the upper-left corner of the object where a CornerRadius is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.CornerRadius.TopRight">
      <summary>The radius of rounding, in pixels, of the upper-right corner of the object where a CornerRadius is applied.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CornerRadiusHelper">
      <summary>Provides basic utility methods for processing CornerRadius values. C# and Microsoft Visual Basic code should use methods of CornerRadius instead.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.CornerRadiusHelper.FromRadii(System.Double,System.Double,System.Double,System.Double)">
      <summary>Generates a CornerRadius value from element values. C# and Microsoft Visual Basic code should use CornerRadius(Double,Double,Double,Double) instead.</summary>
      <param name="topLeft">The initial **TopLeft** value.</param>
      <param name="topRight">The initial **TopRight** value.</param>
      <param name="bottomRight">The initial **BottomRight** value.</param>
      <param name="bottomLeft">The initial **BottomLeft** value.</param>
      <returns>The created CornerRadius.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.CornerRadiusHelper.FromUniformRadius(System.Double)">
      <summary>Creates a new CornerRadius value that has a uniform radius value for each of its elements. C# and Microsoft Visual Basic code should use CornerRadius(Double) instead.</summary>
      <param name="uniformRadius">The uniform radius value to set. See CornerRadius.</param>
      <returns>The created CornerRadius.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.CreateDefaultValueCallback">
      <summary>Represents the method that can be invoked as part of a PropertyMetadata constructor to defer definition of a dependency property default value.</summary>
      <returns>The desired default value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DataContextChangedEventArgs">
      <summary>Provides data for the DataContextChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DataContextChangedEventArgs.Handled">
      <summary>Gets or sets a value that influences whether another DataContextChanged event should be fired from child elements that inherit the DataContext value and detect that the value has changed.</summary>
      <returns>**true** to prevent further DataContextChanged events from being fired for each child FrameworkElement that inherits the DataContext value. You would do this to indicate to other handlers that the necessary logic for responding to the data context change has already been performed. **false** to permit the event to be fired by each immediate child FrameworkElement in the element tree that detects a change to the inherited DataContext value. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DataContextChangedEventArgs.NewValue">
      <summary>Gets the new DataContext value for the element where the DataContextChanged event fired.</summary>
      <returns>An object representing the new DataContext value for the element where the DataContextChanged event fired.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DataTemplate">
      <summary>Describes the visual structure of a data object. Use data binding for specific elements in the template that display the data values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.#ctor">
      <summary>Initializes a new instance of the DataTemplate class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DataTemplate.ExtensionInstanceProperty">
      <summary>Identifies the ExtensionInstance  XAML attached property.</summary>
      <returns>The identifier for the ExtensionInstance  XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.GetElement(Microsoft.UI.Xaml.ElementFactoryGetArgs)">
      <summary>Creates or retrieves an existing instance of the UIElement object declared in the DataTemplate.</summary>
      <param name="args">An instance of ElementFactoryGetArgs.</param>
      <returns>An instance of the root UIElement declared in the DataTemplate or **null** if the root of the DataTemplate is not a UIElement.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.GetExtensionInstance(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the DataTemplate.ExtensionInstance  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The DataTemplate.ExtensionInstance  XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.LoadContent">
      <summary>Creates the UIElement objects in the DataTemplate.</summary>
      <returns>The root UIElement of the DataTemplate.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.RecycleElement(Microsoft.UI.Xaml.ElementFactoryRecycleArgs)">
      <summary>Recycles a UIElement that was previously retrieved using GetElement.</summary>
      <param name="args">An instance of ElementFactoryRecycleArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(Microsoft.UI.Xaml.FrameworkElement,Microsoft.UI.Xaml.IDataTemplateExtension)">
      <summary>Sets the value of the DataTemplate.ExtensionInstance  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DataTemplateKey">
      <summary>Represents the resource key for the DataTemplate class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplateKey.#ctor">
      <summary>Initializes a new instance of the DataTemplateKey class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DataTemplateKey.#ctor(System.Object)">
      <summary>Initializes a new instance of the DataTemplateKey class with the specified type.</summary>
      <param name="dataType">The type for which this template is designed. </param>
    </member>
    <member name="P:Microsoft.UI.Xaml.DataTemplateKey.DataType">
      <summary>Gets or sets the type for which the template is designed.</summary>
      <returns>The type of object that the template is used to display, or a string that specifies the XML tag name for the XML data that the template is used to display.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DebugSettings">
      <summary>Declares how certain aspects of the app behave when it is run in a debug environment</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.EnableFrameRateCounter">
      <summary>Gets or sets a value that indicates whether to display frame-rate and per-frame CPU usage info. These display as an overlay of counters in the window chrome while the app runs.</summary>
      <returns>**true** to display the overlay debug counters; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.EnableRedrawRegions">
      <summary>Gets or sets a value that indicates whether to highlight areas of the app UI surface that are being redrawn each frame.</summary>
      <returns>**true** to highlight redraw regions. **false** to not highlight redraw regions. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.FailFastOnErrors">
      <summary>Gets or sets a value that indicates whether XAML errors cause an immediate FailFast rather than returning an error.</summary>
      <returns>**true** if XAML errors cause an immediate FailFast rather than returning an error; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.IsBindingTracingEnabled">
      <summary>Gets or sets a value that indicates whether to engage the binding tracing feature of Microsoft Visual Studio when the app runs.</summary>
      <returns>**true** to engage the binding tracing feature of Microsoft Visual Studio; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.IsOverdrawHeatMapEnabled">
      <summary>Gets or sets a value that enables a debug setting that visualizes overdraw operations. This visualization is useful during application development for detecting layout, animation, and other operations that are graphics processing intensive.</summary>
      <returns>**true** to enable the visualization, otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DebugSettings.IsTextPerformanceVisualizationEnabled">
      <summary>Gets or sets a value that indicates whether to engage the text performance visualization feature of Microsoft Visual Studio when the app runs.</summary>
      <returns>**true** to engage the text performance visualization feature of Microsoft Visual Studio; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.DebugSettings.BindingFailed">
      <summary>Occurs when a Binding cannot be resolved.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyObject">
      <summary>Represents an object that participates in the dependency property system. DependencyObject is the immediate base class of many important UI-related classes, such as UIElement, Geometry, FrameworkTemplate, Style, and ResourceDictionary. For more info on how DependencyObject supports dependency properties, see Dependency properties overview.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.#ctor">
      <summary>Provides base class initialization behavior for DependencyObject derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyObject.Dispatcher">
      <summary>Gets the CoreDispatcher that this object is associated with. The CoreDispatcher represents a facility that can access the DependencyObject on the UI thread even if the code is initiated by a non-UI thread.</summary>
      <returns>The CoreDispatcher that DependencyObject object is associated with, which represents the UI thread.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.ClearValue(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Clears the local value of a dependency property.</summary>
      <param name="dp">The DependencyProperty identifier of the property for which to clear the value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.GetAnimationBaseValue(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Returns any base value established for a dependency property, which would apply in cases where an animation is not active.</summary>
      <param name="dp">The identifier for the desired dependency property.</param>
      <returns>The returned base value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.GetValue(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Returns the current effective value of a dependency property from a DependencyObject.</summary>
      <param name="dp">The DependencyProperty identifier of the property for which to retrieve the value.</param>
      <returns>Returns the current effective value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.ReadLocalValue(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Returns the local value of a dependency property, if a local value is set.</summary>
      <param name="dp">The DependencyProperty identifier of the property for which to retrieve the local value.</param>
      <returns>Returns the local value, or returns the sentinel value UnsetValue if no local value is set.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.RegisterPropertyChangedCallback(Microsoft.UI.Xaml.DependencyProperty,Microsoft.UI.Xaml.DependencyPropertyChangedCallback)">
      <summary>Registers a notification function for listening to changes to a specific DependencyProperty on this DependencyObject instance.</summary>
      <param name="dp">The dependency property identifier of the property to register for property-changed notification.</param>
      <param name="callback">A callback based on the DependencyPropertyChangedCallback delegate, which the system invokes when the value of the specified property changes.</param>
      <returns>A token that represents the callback, used to identify the callback in calls to UnregisterPropertyChangedCallback.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.SetValue(Microsoft.UI.Xaml.DependencyProperty,System.Object)">
      <summary>Sets the local value of a dependency property on a DependencyObject.</summary>
      <param name="dp">The identifier of the dependency property to set.</param>
      <param name="value">The new local value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObject.UnregisterPropertyChangedCallback(Microsoft.UI.Xaml.DependencyProperty,System.Int64)">
      <summary>Cancels a change notification that was previously registered by calling RegisterPropertyChangedCallback.</summary>
      <param name="dp">The dependency property identifier of the property to unregister for property-changed notification.</param>
      <param name="token">A token that represents the callback (returned by RegisterPropertyChangedCallback ).</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyObjectCollection">
      <summary>Implements a practical collection class that can contain DependencyObject items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.#ctor">
      <summary>Initializes a new instance of the DependencyObjectCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyObjectCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.DependencyObjectCollection.VectorChanged">
      <summary>Occurs when the contents of the collection changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.Append(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.GetAt(System.UInt32)">
      <summary>Returns the DependencyObject located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The DependencyObject value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.DependencyObject[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items returned.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.IndexOf(Microsoft.UI.Xaml.DependencyObject,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.DependencyObject)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.ReplaceAll(Microsoft.UI.Xaml.DependencyObject[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyObjectCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.DependencyObject)">
      <summary>Sets the value at the specified index to the DependencyObject value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyProperty">
      <summary>Represents a dependency property that is registered with the dependency property system. Dependency properties provide support for value expressions, data binding, animation, and property change notification. For more info on how DependencyProperty values serve as identifiers for dependency properties, see Dependency properties overview.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyProperty.UnsetValue">
      <summary>Specifies a static value that is used by the property system rather than **null** to indicate that the property exists, but does not have its value set by the property system or by any app code.</summary>
      <returns>The sentinel value for an unset value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyProperty.GetMetadata(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Retrieves the property metadata value for the dependency property as registered to a type. You specify the type you want info from as a type reference.</summary>
      <param name="forType">The name of the specific type from which to retrieve the dependency property metadata, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <returns>A property metadata object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyProperty.Register(System.String,Microsoft.UI.Xaml.Interop.TypeName,Microsoft.UI.Xaml.Interop.TypeName,Microsoft.UI.Xaml.PropertyMetadata)">
      <summary>Registers a dependency property with the specified property name, property type, owner type, and property metadata for the property. Use this method when defining or initializing a DependencyObject derived class that will own the registered dependency property.</summary>
      <param name="name">The name of the dependency property to register.</param>
      <param name="propertyType">The type of the property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="ownerType">The owner type that is registering the dependency property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="typeMetadata">A property metadata instance. This can contain a PropertyChangedCallback implementation reference.</param>
      <returns>A dependency property identifier that typically is stored in a public static read-only field in your DependencyObject derived class. The identifier is then used both by your own code and any third-party user code to reference the dependency property later, for operations such as setting its value programmatically or attaching a Binding in code.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(System.String,Microsoft.UI.Xaml.Interop.TypeName,Microsoft.UI.Xaml.Interop.TypeName,Microsoft.UI.Xaml.PropertyMetadata)">
      <summary>Registers an attached dependency property with the specified property name, property type, owner type, and property metadata for the property.</summary>
      <param name="name">The name of the dependency property to register.</param>
      <param name="propertyType">The type of the property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="ownerType">The owner type that is registering the dependency property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="defaultMetadata">A property metadata instance. This can contain a PropertyChangedCallback implementation reference.</param>
      <returns>A dependency property identifier that should be used to set the value of a public static read-only field in your class. That identifier is then used to reference the attached property later, for operations such as setting its value programmatically or attaching a Binding.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyPropertyChangedCallback">
      <summary>Represents the callback that is invoked when a property value changes, for property change notifications that are registered with the RegisterPropertyChangedCallback technique.</summary>
      <param name="sender">The object instance that holds the property to register for property-changed notification.</param>
      <param name="dp">The dependency property identifier of the property to register for property-changed notification.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs">
      <summary>Provides data for a PropertyChangedCallback implementation that is invoked when a dependency property changes its value. Also provides event data for the Control.IsEnabledChanged event and any other event that uses the DependencyPropertyChangedEventHandler delegate.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Gets the value of the dependency property after the reported change.</summary>
      <returns>The dependency property value after the change.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Gets the value of the dependency property before the reported change.</summary>
      <returns>The dependency property value before the change.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs.Property">
      <summary>Gets the identifier for the dependency property where the value change occurred.</summary>
      <returns>The identifier field of the dependency property where the value change occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler">
      <summary>Represents the method that will handle events that occur when a DependencyProperty is changed on a particular DependencyObject implementation.</summary>
      <param name="sender">The source of the event (typically the object where the property changed).</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DispatcherTimer">
      <summary>Provides a timer that is integrated into the **Dispatcher** queue, which is processed at a specified interval of time and at a specified priority.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DispatcherTimer.#ctor">
      <summary>Initializes a new instance of the DispatcherTimer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DispatcherTimer.Interval">
      <summary>Gets or sets the amount of time between timer ticks.</summary>
      <returns>The amount of time between ticks. The default is a **TimeSpan**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DispatcherTimer.IsEnabled">
      <summary>Gets a value that indicates whether the timer is running.</summary>
      <returns>**true** if the timer is enabled and running; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.DispatcherTimer.Tick">
      <summary>Occurs when the timer interval has elapsed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DispatcherTimer.Start">
      <summary>Starts the DispatcherTimer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DispatcherTimer.Stop">
      <summary>Stops the DispatcherTimer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragEventArgs">
      <summary>Provides data for drag-and-drop events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.AcceptedOperation">
      <summary>Gets or sets a value that specifies which operations are allowed by the originator of the drag event.</summary>
      <returns>A member of the DataPackageOperation enumeration that specifies which operations are allowed by the originator of the drag event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.AllowedOperations">
      <summary>Gets the allowed data package operations (none, move, copy, and/or link) for the drag and drop operation.</summary>
      <returns>The allowed data operations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.Data">
      <summary>Gets or sets a data object (DataPackage ) that contains the data associated with the corresponding drag event. This value is not useful in all event cases; specifically, the event must be handled by a valid drop target.</summary>
      <returns>The data object that contains data payload that is associated with the corresponding drag event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.DataView">
      <summary>Gets a read-only copy of the Data object.</summary>
      <returns>A read-only copy of the Data object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.DragUIOverride">
      <summary>Gets the visual representation of the data being dragged.</summary>
      <returns>The visual representation of the data being dragged. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.Handled">
      <summary>Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.</summary>
      <returns>**true** if the event is marked handled; otherwise, **false**. The default value is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragEventArgs.Modifiers">
      <summary>Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</summary>
      <returns>One or more members of the DragDropModifiers flag enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragEventArgs.GetDeferral">
      <summary>Supports asynchronous drag-and-drop operations by creating and returning a DragOperationDeferral object.</summary>
      <returns>A deferral object that you can use to identify when the generation of the data package is complete.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a drop point that is relative to a specified UIElement.</summary>
      <param name="relativeTo">The UIElement for which to get a relative drop point.</param>
      <returns>A point in the coordinate system that is relative to the element specified in *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragEventHandler">
      <summary>Represents the method that will handle the DragEnter, DragLeave, DragOver, and Drop events of a UIElement.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragOperationDeferral">
      <summary>Enables you to drag-and-drop content with a target app asynchronously.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragOperationDeferral.Complete">
      <summary>Indicates that the content for an asynchronous drag-and-drop operation is ready for a target app.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragStartingEventArgs">
      <summary>Provides event data for the DragStarting event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragStartingEventArgs.AllowedOperations">
      <summary>Gets or sets the allowed data package operations (none, move, copy, and/or link) for the drag and drop operation.</summary>
      <returns>The allowed data operations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragStartingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the drag action should be canceled.</summary>
      <returns>**true** to cancel the drag action; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragStartingEventArgs.Data">
      <summary>Gets the data payload associated with a drag action.</summary>
      <returns>The data payload. The default is an empty DataPackage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragStartingEventArgs.DragUI">
      <summary>Gets the visual representation of the data being dragged.</summary>
      <returns>The visual representation of the data being dragged.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragStartingEventArgs.GetDeferral">
      <summary>Supports asynchronous drag-and-drop operations by creating and returning a DragOperationDeferral object.</summary>
      <returns>A deferral object that you can use to identify when the generation of the data package is complete.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragStartingEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a drop point that is relative to a specified UIElement.</summary>
      <param name="relativeTo">The UIElement for which to get a relative drop point.</param>
      <returns>A point in the coordinate system that is relative to the element specified in *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragUI">
      <summary>Provides the visual representation of the data being dragged at the start of a drag-and-drop operation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUI.SetContentFromBitmapImage(Microsoft.UI.Xaml.Media.Imaging.BitmapImage)">
      <summary>Creates a visual element from a provided BitmapImage to represent the dragged data in a drag-and-drop operation.</summary>
      <param name="bitmapImage">The source image used to create the drag visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUI.SetContentFromBitmapImage(Microsoft.UI.Xaml.Media.Imaging.BitmapImage,Windows.Foundation.Point)">
      <summary>Creates a visual element from a provided BitmapImage to represent the dragged data in a drag-and-drop operation, and sets the relative position of the visual from the pointer.</summary>
      <param name="bitmapImage">The source image used to create the drag visual.</param>
      <param name="anchorPoint">The relative position of the drag visual from the pointer.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUI.SetContentFromDataPackage">
      <summary>Creates a system provided visual element that represents the format of the dragged data in a drag-and-drop operation, typically the icon of the default handler for the file format.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUI.SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)">
      <summary>Creates a visual element from a provided SoftwareBitmap to represent the dragged data in a drag-and-drop operation.</summary>
      <param name="softwareBitmap">The source image used to create the drag visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUI.SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)">
      <summary>Creates a visual element from a provided SoftwareBitmap to represent the dragged data in a drag-and-drop operation, and sets the relative position of the visual from the pointer.</summary>
      <param name="softwareBitmap">The source image used to create the drag visual.</param>
      <param name="anchorPoint">The relative position of the drag visual from the pointer.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DragUIOverride">
      <summary>Provides the visual representation of the data being dragged during a drag-and-drop operation, including feedback from the drop target.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragUIOverride.Caption">
      <summary>Gets or sets the caption text that overlays the drag visual. The text typically describes the drag-and-drop action.</summary>
      <returns>The caption text that overlays the drag visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragUIOverride.IsCaptionVisible">
      <summary>Gets or sets a value that indicates whether the caption text is shown.</summary>
      <returns>**true** if the caption text is shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragUIOverride.IsContentVisible">
      <summary>Gets or sets a value that indicates whether the content of the drag visual is shown.</summary>
      <returns>**true** if the content is shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DragUIOverride.IsGlyphVisible">
      <summary>Gets or sets a value that indicates whether the glyph is shown.</summary>
      <returns>**true** if the glyph is shown; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUIOverride.Clear">
      <summary>Clears the content, caption, and glyph of the drag visual.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUIOverride.SetContentFromBitmapImage(Microsoft.UI.Xaml.Media.Imaging.BitmapImage)">
      <summary>Creates a visual element from a provided BitmapImage to represent the dragged data in a drag-and-drop operation.</summary>
      <param name="bitmapImage">The source image used to create the drag visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUIOverride.SetContentFromBitmapImage(Microsoft.UI.Xaml.Media.Imaging.BitmapImage,Windows.Foundation.Point)">
      <summary>Creates a visual element from a provided BitmapImage to represent the dragged data in a drag-and-drop operation, and sets the relative position of the visual from the pointer.</summary>
      <param name="bitmapImage">The source image used to create the drag visual.</param>
      <param name="anchorPoint">The relative position of the drag visual from the pointer.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUIOverride.SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)">
      <summary>Creates a visual element from a provided SoftwareBitmap to represent the dragged data in a drag-and-drop operation.</summary>
      <param name="softwareBitmap">The source image used to create the drag visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.DragUIOverride.SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)">
      <summary>Creates a visual element from a provided SoftwareBitmap to represent the dragged data in a drag-and-drop operation, and sets the relative position of the visual from the pointer.</summary>
      <param name="softwareBitmap">The source image used to create the drag visual.</param>
      <param name="anchorPoint">The relative position of the drag visual from the pointer.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.DropCompletedEventArgs">
      <summary>Provides event data for the DropCompleted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DropCompletedEventArgs.DropResult">
      <summary>Gets a value that indicates the type of drag-and-drop operation, and whether the operation was successful.</summary>
      <returns>An enumeration value that indicates the type of drag-and-drop operation, and whether the operation was successful.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Duration">
      <summary>Represents the duration of time that a Timeline is active, or more generally represents a duration of time that also supports two special values **Automatic** and **Forever**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Duration.TimeSpan">
      <summary>The **TimeSpan** value component.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Duration.Type">
      <summary>The type as a member of the enumeration.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.DurationHelper">
      <summary>Provides basic utility methods for processing Duration values. C# and Microsoft Visual Basic code should use methods of Duration instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.DurationHelper.Automatic">
      <summary>Returns a generated Duration value that indicates an "Automatic"  Duration. C# and Microsoft Visual Basic code should use Automatic instead.</summary>
      <returns>A Duration value that indicates an "Automatic"**Duration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.DurationHelper.Forever">
      <summary>Returns a generated Duration value that indicates a "Forever"  Duration. C# and Microsoft Visual Basic code should use Forever instead.</summary>
      <returns>A Duration value that indicates a "Forever"**Duration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.Add(Microsoft.UI.Xaml.Duration,Microsoft.UI.Xaml.Duration)">
      <summary>Adds the **TimeSpan** component of two Duration values. C# and Microsoft Visual Basic code should use the + operator or the Add method instead.</summary>
      <param name="target">The value to add to.</param>
      <param name="duration">The value to add.</param>
      <returns>The resulting Duration after **TimeSpan** component addition.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.Compare(Microsoft.UI.Xaml.Duration,Microsoft.UI.Xaml.Duration)">
      <summary>Compares value equality of two Duration structures. C# and Microsoft Visual Basic code should use Compare instead.</summary>
      <param name="duration1">The first Duration to compare.</param>
      <param name="duration2">The second Duration to compare.</param>
      <returns>If *duration1* is less than *duration2*, a negative value that represents the difference. If *duration1* is equal to *duration2*, zero. If *duration1* is greater than *duration2*, a positive value that represents the difference.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.Equals(Microsoft.UI.Xaml.Duration,Microsoft.UI.Xaml.Duration)">
      <summary>Determines whether two Duration values have equivalent values. C# and Microsoft Visual Basic code should use the = operator instead. </summary>
      <param name="target">The first Duration to compare.</param>
      <param name="value">The second Duration to compare.</param>
      <returns>**true** if *target* and *value* hold equivalent values; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.FromTimeSpan(Windows.Foundation.TimeSpan)">
      <summary>Creates a new Duration based on a TimeSpan value. C# and Microsoft Visual Basic code should Duration(TimeSpan) instead.</summary>
      <param name="timeSpan">The initializing TimeSpan.</param>
      <returns>The created Duration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.GetHasTimeSpan(Microsoft.UI.Xaml.Duration)">
      <summary>Returns whether the **TimeSpan** component of a given Duration holds a non-null value. C# and Microsoft Visual Basic code should use HasTimeSpan instead.</summary>
      <param name="target">The Duration value to evaluate.</param>
      <returns>**true** if the **TimeSpan** component of the provided Duration is not **null**; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.DurationHelper.Subtract(Microsoft.UI.Xaml.Duration,Microsoft.UI.Xaml.Duration)">
      <summary>Subtracts the **TimeSpan** component of one Duration value from another Duration value. C# and Microsoft Visual Basic code should use the - operator or the Subtract method instead.</summary>
      <param name="target">The value to subtract from.</param>
      <param name="duration">The value to subtract.</param>
      <returns>The resulting Duration after **TimeSpan** component subtraction.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.DurationType">
      <summary>Declares whether a Duration has a special value of Automatic or Forever, or has valid information in its **TimeSpan** component.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.DurationType.Automatic">
      <summary>Has the Automatic special value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.DurationType.Forever">
      <summary>Has the Forever special value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.DurationType.TimeSpan">
      <summary>Has valid information in the **TimeSpan** component.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs">
      <summary>Provides data for the FrameworkElement.EffectiveViewportChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs.BringIntoViewDistanceX">
      <summary>Gets the sum of translation in the X-axis that is required to bring the FrameworkElement into view of each viewport containing the element.</summary>
      <returns>The translation in the X-axis that is required to bring the FrameworkElement into view of each viewport containing the element</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs.BringIntoViewDistanceY">
      <summary>Gets the sum of translation in the Y-axis that is required to bring the FrameworkElement into view of each viewport containing the element.</summary>
      <returns>The translation in the Y-axis that is required to bring the FrameworkElement into view of each viewport containing the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs.EffectiveViewport">
      <summary>Gets the Rect representing the effective viewport.</summary>
      <returns>The Rect representing the effective viewport.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs.MaxViewport">
      <summary>Gets the Rect representing the maximum effective viewport with the current viewport sizes.</summary>
      <returns>The Rect representing the maximum effective viewport with the current viewport sizes.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementFactoryGetArgs">
      <summary>Represents the optional arguments to use when calling an implementation of the IElementFactory 's GetElement method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ElementFactoryGetArgs.#ctor">
      <summary>Initializes a new instance of the ElementFactoryGetArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementFactoryGetArgs.Data">
      <summary>Gets or sets the data item for which an appropriate element tree should be realized when calling GetElement.</summary>
      <returns>A reference to the data item for which a UIElement should be realized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementFactoryGetArgs.Parent">
      <summary>Gets or sets the UIElement that is expected to be the parent of the realized element from GetElement.</summary>
      <returns>The UIElement object expected to be the parent of the realized UIElement or **null**.  By default, it is **null**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementFactoryRecycleArgs">
      <summary>Represents the optional arguments to use when calling an implementation of the IElementFactory 's RecycleElement method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ElementFactoryRecycleArgs.#ctor">
      <summary>Initializes a new instance of the ElementFactoryRecycleArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementFactoryRecycleArgs.Element">
      <summary>Gets or sets the UIElement object to recycle when calling RecycleElement.</summary>
      <returns>The UIElement object to recycle.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementFactoryRecycleArgs.Parent">
      <summary>Gets or sets a reference to the current parent UIElement of the element being recycled.</summary>
      <returns>The parent UIElement object or **null**.  By default, it is **null**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementHighContrastAdjustment">
      <summary>Defines constants that specify whether the framework automatically adjusts visual properties for an element when high contrast themes are enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementHighContrastAdjustment.Application">
      <summary>Behavior is inherited from the Application.HighContrastAdjustment setting.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementHighContrastAdjustment.Auto">
      <summary>Visuals are automatically adjusted when high contrast is enabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementHighContrastAdjustment.None">
      <summary>No automatic adjustments are made to visuals.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementSoundKind">
      <summary>Defines constants that specify the sound played by the ElementSoundPlayer.Play method.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.Focus">
      <summary>The sound to play when an element gets focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.GoBack">
      <summary>The sound to play when a user navigates back.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.Hide">
      <summary>The sound to play when a flyout, dialog, or command bar is closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.Invoke">
      <summary>The sound to play when an element is invoked.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.MoveNext">
      <summary>The sound to play when a user navigates to the next panel or view within a page.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.MovePrevious">
      <summary>The sound to play when a user navigates to the previous panel or view within a page.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundKind.Show">
      <summary>The sound to play when a flyout, dialog, or command bar is opened.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementSoundMode">
      <summary>Defines constants that specify a control's preference for whether sounds are played.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundMode.Default">
      <summary>Sound is played based on the ElementSoundPlayer.State setting.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundMode.FocusOnly">
      <summary>Sound is played only when focus on the control changes.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundMode.Off">
      <summary>No sounds are played.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementSoundPlayer">
      <summary>Represents a player for XAML control sounds.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementSoundPlayer.SpatialAudioMode">
      <summary>Gets or sets a value that indicates whether spatial audio is on, off, or handled automatically.</summary>
      <returns>An enumeration value that indicates whether spatial audio is on, off, or handled automatically. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementSoundPlayer.State">
      <summary>Gets or sets a value that specifies whether the system plays control sounds.</summary>
      <returns>A value of the enumeration that specifies whether the system plays control sounds. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ElementSoundPlayer.Volume">
      <summary>Gets or sets the volume of the sounds played by the Play method.</summary>
      <returns>The volume of the sounds played by the Play method. The default is 1.0.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ElementSoundPlayer.Play(Microsoft.UI.Xaml.ElementSoundKind)">
      <summary>Plays the specified sound.</summary>
      <param name="sound">A value of the enumeration that specifies the sound to play.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementSoundPlayerState">
      <summary>Defines constants that specify whether XAML controls play sounds.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundPlayerState.Auto">
      <summary>The platform determines whether or not sounds are played.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundPlayerState.Off">
      <summary>Sounds are never played on any platform.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSoundPlayerState.On">
      <summary>Sounds are played on all platforms.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementSpatialAudioMode">
      <summary>Defines constants that indicate whether spatial sound is on, off, or handled automatically.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSpatialAudioMode.Auto">
      <summary>Spatial sound is turned on or off by the system.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSpatialAudioMode.Off">
      <summary>Spatial sound is off.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementSpatialAudioMode.On">
      <summary>Spatial sound is on.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ElementTheme">
      <summary>Specifies a UI theme that should be used for individual UIElement parts of an app UI.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementTheme.Dark">
      <summary>Use the **Dark** default theme.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementTheme.Default">
      <summary>Use the Application.RequestedTheme value for the element. This is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.ElementTheme.Light">
      <summary>Use the **Light** default theme.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.EnteredBackgroundEventHandler">
      <summary>Represents the method that will handle the Application.EnteredBackground event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.EventTrigger">
      <summary>Represents a trigger that applies a set of actions (animation storyboards) in response to an event. Not commonly used. See Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.EventTrigger.#ctor">
      <summary>Initializes a new instance of the EventTrigger class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.EventTrigger.Actions">
      <summary>Gets the collection of BeginStoryboard objects that this EventTrigger maintains.</summary>
      <returns>The existing TriggerActionCollection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.EventTrigger.RoutedEvent">
      <summary>Gets or sets the name of the event that initiates the trigger. Not commonly set, see Remarks.</summary>
      <returns>The name or identifier of the event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ExceptionRoutedEventArgs">
      <summary>Provides event data for exceptions that are raised as events by asynchronous operations, such as ImageFailed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ExceptionRoutedEventArgs.ErrorMessage">
      <summary>Gets the message component of the exception, as a string.</summary>
      <returns>The message component of the exception.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ExceptionRoutedEventHandler">
      <summary>Represents the method that will handle certain events that report exceptions. These exceptions generally come from asynchronous operations.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.FlowDirection">
      <summary>Defines constants that specify the content flow direction for text and UI elements.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FlowDirection.LeftToRight">
      <summary>Indicates that content should flow from left to right.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FlowDirection.RightToLeft">
      <summary>Indicates that content should flow from right to left.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FocusState">
      <summary>Describes how an element obtained focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusState.Keyboard">
      <summary>Element obtained focus through a keyboard action, such as tab sequence traversal.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusState.Pointer">
      <summary>Element obtained focus through a pointer action.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusState.Programmatic">
      <summary>Element obtained focus through a deliberate call to Focus or a related API.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusState.Unfocused">
      <summary>Element is not currently focused.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FocusVisualKind">
      <summary>Specifies the visual feedback used to indicate the UI element with focus when navigating with a keyboard or gamepad.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusVisualKind.DottedLine">
      <summary>A dotted line rectangle. Also known as "marching ants". </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusVisualKind.HighVisibility">
      <summary>A solid line rectangle composed of an inner and outer rectangle of contrasting colors.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FocusVisualKind.Reveal">
      <summary>A solid line rectangle, surrounded by a glowing light effect to simulate depth. </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontCapitals">
      <summary>Describes the capital letter style value for the Typography.Capitals attached property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.AllPetiteCaps">
      <summary>Both capital and lowercase letters are replaced with a glyph form of an uppercase letter with the same approximate height. Petite capitals are smaller than small capitals.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.AllSmallCaps">
      <summary>Both capital and lowercase letters are replaced with a glyph form of an uppercase letter with the same approximate height.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.Normal">
      <summary>Capital letters render normally.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.PetiteCaps">
      <summary>Lowercase letters are replaced with a glyph form of an uppercase letter with the same approximate height. Petite capitals are smaller than small capitals.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.SmallCaps">
      <summary>Lowercase letters are replaced with a glyph form of an uppercase letter with the same approximate height.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.Titling">
      <summary>Glyph forms are substituted with a typographic form specifically designed for titles.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontCapitals.Unicase">
      <summary>Capital letters display in unicase. Unicase fonts render both uppercase and lowercase letters in a mixture of uppercase and lowercase glyphs determined by the type designer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontEastAsianLanguage">
      <summary>Provides a mechanism for selecting font-specific versions of glyphs for a specified East Asian writing system or language.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.HojoKanji">
      <summary>Replaces default glyphs with the corresponding forms from the Hojo Kanji specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Jis04">
      <summary>Replaces default Japanese glyphs with the corresponding forms from the JIS04 specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Jis78">
      <summary>Replaces default Japanese glyphs with the corresponding forms from the JIS78 specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Jis83">
      <summary>Replaces default Japanese glyphs with the corresponding forms from the JIS83 specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Jis90">
      <summary>Replaces default Japanese glyphs with the corresponding forms from the JIS90 specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.NlcKanji">
      <summary>Replaces default glyphs with the corresponding forms from the NLC Kanji specification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Normal">
      <summary>No font-specific glyph versions are applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Simplified">
      <summary>Replaces traditional Chinese or Japanese forms with their corresponding simplified forms.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.Traditional">
      <summary>Replaces simplified Chinese or Japanese forms with their corresponding traditional forms.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianLanguage.TraditionalNames">
      <summary>Replaces simplified Kanji forms with their corresponding traditional forms. This glyph set is explicitly limited to the traditional forms considered proper for use in personal names.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontEastAsianWidths">
      <summary>Provides a mechanism for selecting glyphs of different width styles.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Full">
      <summary>Replaces uniform width glyphs with full width (usually em) glyphs.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Half">
      <summary>Replaces uniform width glyphs with half width (half em) glyphs</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Normal">
      <summary>Default width style.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Proportional">
      <summary>Replaces uniform width glyphs with proportionally spaced glyphs.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Quarter">
      <summary>Replaces uniform width glyphs with one-quarter width (one-quarter em) glyphs.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontEastAsianWidths.Third">
      <summary>Replaces uniform width glyphs with one-third width (one-third em) glyphs.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontFraction">
      <summary>Describes a fraction style value for the Typography.Fraction attached property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontFraction.Normal">
      <summary>Default style is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontFraction.Slashed">
      <summary>Stacked fraction style is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontFraction.Stacked">
      <summary>Slashed fraction style is used.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontNumeralAlignment">
      <summary>Describes the numeral alignment value for the Typography.NumeralAlignment attached property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralAlignment.Normal">
      <summary>Default numeral alignment is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralAlignment.Proportional">
      <summary>Proportional width alignment is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralAlignment.Tabular">
      <summary>Tabular alignment is used.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontNumeralStyle">
      <summary>Describes a numeral style value for the Typography.NumeralStyle attached property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralStyle.Lining">
      <summary>Lining numeral style is used. Replaces default glyphs with numeric forms of even height.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralStyle.Normal">
      <summary>Default numeral style is used.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontNumeralStyle.OldStyle">
      <summary>Old style numeral style is used. Replaces default glyphs with a figure style that matches lowercase letters in height and color.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FontVariants">
      <summary>Describes a font variant value for the Typography.Variants attached property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Inferior">
      <summary>Replaces a default glyph with an inferior glyph, or it may combine glyph substitution with positioning adjustments for proper placement. Inferior forms are typically used in chemical formulas or mathematical notation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Normal">
      <summary>Default font behavior. Font scaling and positioning is normal.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Ordinal">
      <summary>Replaces a default glyph with an ordinal glyph, or it may combine glyph substitution with positioning adjustments for proper placement. Ordinal forms are normally associated with numeric notation of an ordinal word, such as "1st" for "first".</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Ruby">
      <summary>Replaces a default glyph with a smaller Japanese Kana glyph. This is used to clarify the meaning of Kanji, which may be unfamiliar to the reader.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Subscript">
      <summary>Replaces a default glyph with a subscript glyph.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.FontVariants.Superscript">
      <summary>Replaces a default glyph with a superscript glyph. Superscript is commonly used for footnotes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FrameworkElement">
      <summary>Provides a base element class for Windows Runtime UI objects. FrameworkElement defines common API that support UI interaction and the automatic layout system. FrameworkElement  also defines API related to data binding, defining and examining the object tree, and tracking object lifetime.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.#ctor">
      <summary>Provides base class initialization behavior for FrameworkElement -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualHeight">
      <summary>Gets the rendered height of a FrameworkElement. See Remarks.</summary>
      <returns>The height, in pixels, of the object. The default is 0. The default might be encountered if the object has not been loaded and hasn't yet been involved in a layout pass that renders the UI.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualHeightProperty">
      <summary>Identifies the ActualHeight  dependency property. See Remarks.</summary>
      <returns>The identifier for the ActualHeight  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualTheme">
      <summary>Gets the UI theme that is currently used by the element, which might be different than the RequestedTheme.</summary>
      <returns>A value of the enumeration, for example **Light**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualThemeProperty">
      <summary>Identifies the ActualTheme dependency property.</summary>
      <returns>The identifier for the ActualTheme dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualWidth">
      <summary>Gets the rendered width of a FrameworkElement. See Remarks.</summary>
      <returns>The width, in pixels, of the object. The default is 0. The default might be encountered if the object has not been loaded and hasn't yet been involved in a layout pass that renders the UI.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.ActualWidthProperty">
      <summary>Identifies the ActualWidth  dependency property. See Remarks.</summary>
      <returns>The identifier for the ActualWidth  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.AllowFocusOnInteraction">
      <summary>Gets or sets a value that indicates whether the element automatically gets focus when the user interacts with it.</summary>
      <returns>**true** if the element gets focus when a user interacts with it; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.AllowFocusOnInteractionProperty">
      <summary>Identifies for the AllowFocusOnInteraction dependency property.</summary>
      <returns>The identifier for the AllowFocusOnInteraction dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.AllowFocusWhenDisabled">
      <summary>Gets or sets whether a disabled control can receive focus.</summary>
      <returns>**true** if a disabled control can receive focus; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.AllowFocusWhenDisabledProperty">
      <summary>Identifies the AllowFocusWhenDisabled  dependency property.</summary>
      <returns>The identifier for the AllowFocusWhenDisabled  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.BaseUri">
      <summary>Gets a Uniform Resource Identifier (URI) that represents the base Uniform Resource Identifier (URI) for an XAML-constructed object at XAML load time. This property is useful for Uniform Resource Identifier (URI) resolution at run time.</summary>
      <returns>The base Uniform Resource Identifier (URI) for an object at XAML load time.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.DataContext">
      <summary>Gets or sets the data context for a FrameworkElement. A common use of a data context is when a **FrameworkElement** uses the {Binding} markup extension and participates in data binding.</summary>
      <returns>The object to use as data context.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.DataContextProperty">
      <summary>Identifies the DataContext  dependency property.</summary>
      <returns>The DataContext  dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FlowDirection">
      <summary>Gets or sets the direction in which text and other UI elements flow within any parent element that controls their layout. This property can be set to either **LeftToRight** or **RightToLeft**. Setting FlowDirection to **RightToLeft** on any element sets the alignment to the right, the reading order to right-to-left and the layout of the control to flow from right to left.</summary>
      <returns>The direction that text and other UI elements flow within their parent element, as a value of the enumeration. The default value is LeftToRight.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FlowDirectionProperty">
      <summary>Identifies the FlowDirection  dependency property.</summary>
      <returns>The FlowDirection  dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualMargin">
      <summary>Gets or sets the outer margin of the focus visual for a FrameworkElement.</summary>
      <returns>Provides margin values for the focus visual. The default value is a default Thickness with all properties (dimensions) equal to 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualMarginProperty">
      <summary>Identifies the FocusVisualMargin  dependency property.</summary>
      <returns>The identifier for the FocusVisualMargin  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrush">
      <summary>Gets or sets the brush used to draw the outer border of a HighVisibility focus visual for a FrameworkElement.</summary>
      <returns>The brush used to draw the outer border of a HighVisibility focus visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrushProperty">
      <summary>Identifies the FocusVisualPrimaryBrush  dependency property.</summary>
      <returns>The identifier for the FocusVisualPrimaryBrush  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryThickness">
      <summary>Gets or sets the thickness of the outer border of a HighVisibility focus visual for a FrameworkElement.</summary>
      <returns>The thickness of the outer border of a HighVisibility focus visual. The default value is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty">
      <summary>Identifies the FocusVisualPrimaryThickness  dependency property.</summary>
      <returns>The identifier for the FocusVisualPrimaryThickness  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrush">
      <summary>Gets or sets the brush used to draw the inner border of a HighVisibility focus visual for a FrameworkElement.</summary>
      <returns>The brush used to draw the inner border of a HighVisibility focus visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrushProperty">
      <summary>Identifies the FocusVisualSecondaryBrush  dependency property.</summary>
      <returns>The identifier for the FocusVisualSecondaryBrush  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryThickness">
      <summary>Gets or sets the thickness of the inner border of a HighVisibility focus visual for a FrameworkElement.</summary>
      <returns>The thickness of the inner border of a HighVisibility focus visual. The default value is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty">
      <summary>Identifies the FocusVisualSecondaryThickness  dependency property.</summary>
      <returns>The identifier for the FocusVisualSecondaryThickness  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Height">
      <summary>Gets or sets the suggested height of a FrameworkElement.</summary>
      <returns>The height, in pixels, of the object. The default is NaN. Except for the special NaN value, this value must be equal to or greater than 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.HeightProperty">
      <summary>Identifies the Height  dependency property.</summary>
      <returns>The identifier for the Height  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment characteristics that are applied to a FrameworkElement when it is composed in a layout parent, such as a panel or items control.</summary>
      <returns>A horizontal alignment setting, as a value of the enumeration. The default is **Stretch**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty">
      <summary>Identifies the HorizontalAlignment  dependency property.</summary>
      <returns>The HorizontalAlignment  dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.IsLoaded">
      <summary>Gets a value that indicates whether the element has been added to the element tree and is ready for interaction.</summary>
      <returns>**true** if the element has been added to the element tree and is ready for interaction; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Language">
      <summary>Gets or sets localization/globalization language information that applies to a FrameworkElement, and also to all child elements of the current FrameworkElement in the object representation and in UI.</summary>
      <returns>A string specifying language and culture that follows the Internet Engineering Task Force (IETF)  BCP 47 standards. For example, U.S. English is "en-US".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.LanguageProperty">
      <summary>Identifies the Language dependency property.</summary>
      <returns>The identifier for the Language dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Margin">
      <summary>Gets or sets the outer margin of a FrameworkElement.</summary>
      <returns>Provides margin values for the object. The default value is a default Thickness with all properties (dimensions) equal to 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MarginProperty">
      <summary>Identifies the Margin  dependency property.</summary>
      <returns>The Margin  dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MaxHeight">
      <summary>Gets or sets the maximum height constraint of a FrameworkElement.</summary>
      <returns>The maximum height of the object, in pixels. The default value is PositiveInfinity. This value can be any value equal to or greater than 0. PositiveInfinity is also valid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MaxHeightProperty">
      <summary>Identifies the MaxHeight  dependency property.</summary>
      <returns>The identifier for the MaxHeight  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MaxWidth">
      <summary>Gets or sets the maximum width constraint of a FrameworkElement.</summary>
      <returns>The maximum width of the object, in pixels. The default is PositiveInfinity. This value can be any value equal to or greater than 0. PositiveInfinity is also valid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MaxWidthProperty">
      <summary>Identifies the MaxWidth  dependency property.</summary>
      <returns>The identifier for the MaxWidth  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MinHeight">
      <summary>Gets or sets the minimum height constraint of a FrameworkElement.</summary>
      <returns>The minimum height of the object, in pixels. The default is 0. This value can be any value equal to or greater than 0. However, PositiveInfinity is not valid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MinHeightProperty">
      <summary>Identifies the MinHeight  dependency property.</summary>
      <returns>The identifier for the MinHeight  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MinWidth">
      <summary>Gets or sets the minimum width constraint of a FrameworkElement.</summary>
      <returns>The minimum width of the object, in pixels. The default is 0. This value can be any value equal to or greater than 0. However, PositiveInfinity is not valid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.MinWidthProperty">
      <summary>Identifies the MinWidth  dependency property.</summary>
      <returns>The identifier for the MinWidth  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Name">
      <summary>Gets or sets the identifying name of the object. When a XAML processor creates the object tree from XAML markup, run-time code can refer to the XAML-declared object by this name.</summary>
      <returns>The name of the object, which must be a string that is valid in the XamlName grammar (see table in x:Name attribute reference). The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.NameProperty">
      <summary>Identifies the Name  dependency property.</summary>
      <returns>The identifier for the Name  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Parent">
      <summary>Gets the parent object of this FrameworkElement in the object tree.</summary>
      <returns>The parent object of this object in the object tree.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.RequestedTheme">
      <summary>Gets or sets the UI theme that is used by the UIElement (and its child elements) for resource determination. The UI theme you specify with RequestedTheme can override the app-level RequestedTheme.</summary>
      <returns>A value of the enumeration, for example **Light**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.RequestedThemeProperty">
      <summary>Identifies the RequestedTheme dependency property.</summary>
      <returns>The identifier for the RequestedTheme dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Resources">
      <summary>Gets the locally defined resource dictionary. In XAML, you can establish resource items as child object elements of a `frameworkElement.Resources` property element, through XAML implicit collection syntax.</summary>
      <returns>The current locally defined dictionary of resources, where each resource can be accessed by its key.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Style">
      <summary>Gets or sets an instance Style that is applied for this object during layout and rendering.</summary>
      <returns>The applied style for the object, if present; otherwise, **null**. The default for a default-constructed FrameworkElement is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.StyleProperty">
      <summary>Identifies the Style dependency property.</summary>
      <returns>The identifier for the Style dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Tag">
      <summary>Gets or sets an arbitrary object value that can be used to store custom information about this object.</summary>
      <returns>The intended arbitrary object value. This property has no default value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.TagProperty">
      <summary>Identifies the Tag  dependency property.</summary>
      <returns>The identifier for the Tag  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Triggers">
      <summary>Gets the collection of triggers for animations that are defined for a FrameworkElement. Not commonly used. See Remarks.</summary>
      <returns>The collection of triggers for animations that are defined for this object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.VerticalAlignment">
      <summary>Gets or sets the vertical alignment characteristics that are applied to a FrameworkElement when it is composed in a parent object such as a panel or items control.</summary>
      <returns>A vertical alignment setting, as a value of the enumeration. The default is **Stretch**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.VerticalAlignmentProperty">
      <summary>Identifies the VerticalAlignment  dependency property.</summary>
      <returns>The VerticalAlignment  dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.Width">
      <summary>Gets or sets the width of a FrameworkElement.</summary>
      <returns>The width of the object, in pixels. The default is NaN. Except for the special NaN value, this value must be equal to or greater than 0. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.FrameworkElement.WidthProperty">
      <summary>Identifies the Width  dependency property.</summary>
      <returns>The identifier for the Width  dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.ActualThemeChanged">
      <summary>Occurs when the ActualTheme property value has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.DataContextChanged">
      <summary>Occurs when the value of the FrameworkElement.DataContext property changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.EffectiveViewportChanged">
      <summary>Occurs when the FrameworkElement 's *effective viewport* changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.LayoutUpdated">
      <summary>Occurs when the layout of the visual tree changes, due to layout-relevant properties changing value or some other action that refreshes the layout.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.Loaded">
      <summary>Occurs when a FrameworkElement has been constructed and added to the object tree, and is ready for interaction.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.Loading">
      <summary>Occurs when a FrameworkElement begins to load.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.SizeChanged">
      <summary>Occurs when either the ActualHeight or the ActualWidth property changes value on a FrameworkElement.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.FrameworkElement.Unloaded">
      <summary>Occurs when this object is no longer connected to the main object tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
      <summary>Provides the behavior for the "Arrange" pass of layout. Classes can override this method to define their own "Arrange" pass behavior.</summary>
      <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
      <returns>The actual size that is used after the element is arranged in layout.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.DeferTree(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Removes the specified element from the XAML visual tree in a way that it can be undeferred later.</summary>
      <param name="element">The element to remove from the XAML visual tree.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.FindName(System.String)">
      <summary>Retrieves an object that has the specified identifier name.</summary>
      <param name="name">The name of the requested object.</param>
      <returns>The requested object. This can be null if no matching object was found in the current XAML namescope.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.GetBindingExpression(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Returns the BindingExpression that represents the binding on the specified property.</summary>
      <param name="dp">The identifier for the target dependency property to get the binding from.</param>
      <returns>A BindingExpression if the target property has an active binding on this object; otherwise, returns **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
      <summary>When implemented in a derived class, enables per-state construction of a visual tree for a control template in code, rather than by loading XAML for all states at control startup.</summary>
      <param name="stateName">The state to transition to.</param>
      <param name="useTransitions">**true** to use a VisualTransition to transition between states. **false** to skip using transitions and go directly to the requested state. The default is **false**.</param>
      <returns>**true** if the control successfully transitions to the new state, or was already using that state; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.InvalidateViewport">
      <summary>Invalidates the viewport state for a UIElement that is used to calculate the *effective viewport*.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
      <summary>Provides the behavior for the "Measure" pass of the layout cycle. Classes can override this method to define their own "Measure" pass behavior.</summary>
      <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
      <returns>The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects or based on other considerations such as a fixed container size.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkElement.SetBinding(Microsoft.UI.Xaml.DependencyProperty,Microsoft.UI.Xaml.Data.BindingBase)">
      <summary>Attaches a binding to a FrameworkElement, using the provided binding object</summary>
      <param name="dp">The dependency property identifier of the property that is data bound.</param>
      <param name="binding">The binding to use for the property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.FrameworkTemplate">
      <summary>Creates an element tree of elements. FrameworkTemplate is a base class for classes that have specific templating behavior, including ControlTemplate and DataTemplate.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkTemplate.#ctor">
      <summary>Provides base class initialization behavior for FrameworkTemplate -derived classes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FrameworkView">
      <summary>Represents the UI window of an application.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.#ctor">
      <summary>Initializes a new instance of the FrameworkView class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.Initialize(Windows.ApplicationModel.Core.CoreApplicationView)">
      <summary>Initializes the view.</summary>
      <param name="applicationView">The view object.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.Load(System.String)">
      <summary>Loads the view.</summary>
      <param name="entryPoint">An identifier, such as a class name from the application code, that provides additional information about the view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.Run">
      <summary>Passes execution to the view provider.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.SetWindow(Windows.UI.Core.CoreWindow)">
      <summary>Associates a Window with a view.</summary>
      <param name="window">The Window to associate.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkView.Uninitialize">
      <summary>Returns the view to the uninitialized state.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.FrameworkViewSource">
      <summary>Creates views, specifically FrameworkView instances. This is infrastructure and does not need to be accessed in most app scenarios.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkViewSource.#ctor">
      <summary>Initializes a new instance of the FrameworkViewSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.FrameworkViewSource.CreateView">
      <summary>Creates a FrameworkView.</summary>
      <returns>The created FrameworkView.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.GridLength">
      <summary>Represents a measurement for control logic that explicitly supports **Star** (`*`) sizing and **Auto** sizing.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.GridLength.GridUnitType">
      <summary>A value of the GridUnitType enumeration that qualifies how **Value** is interpreted as a measure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.GridLength.Value">
      <summary>The measure for this GridLength, which is not necessarily a pixel measure.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.GridLengthHelper">
      <summary>Provides helper methods to evaluate or set GridLength values. C# and Microsoft Visual Basic code should use methods of GridLength instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.GridLengthHelper.Auto">
      <summary>Gets a static GridLength value that corresponds to the special "Auto" value. C# and Microsoft Visual Basic code should use Auto instead.</summary>
      <returns>A GridLength value that corresponds to the special "Auto" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.Equals(Microsoft.UI.Xaml.GridLength,Microsoft.UI.Xaml.GridLength)">
      <summary>Provides comparison of the values of two GridLength values. C# and Microsoft Visual Basic code should use the = operator instead. </summary>
      <param name="target">The first GridLength to compare.</param>
      <param name="value">The second GridLength to compare.</param>
      <returns>**true** if the two GridLength values hold equivalent values as their structure value information; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.FromPixels(System.Double)">
      <summary>Creates a new GridLength value based on a fixed number of pixels. C# and Microsoft Visual Basic code should use GridLength(Double) instead.</summary>
      <param name="pixels">The pixel height or width to specify.</param>
      <returns>The created GridLength.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.FromValueAndType(System.Double,Microsoft.UI.Xaml.GridUnitType)">
      <summary>Creates a new GridLength value based on a possible number of pixels, and a GridUnitType. C# and Microsoft Visual Basic code should use  GridLength(Double,GridUnitType) instead.</summary>
      <param name="value">A numeric value. This might be a pixel height or width to specify, if *type* is specified as **Pixel**, or a factor, if *type* is specified as **Star**. This value is ignored if *type* is specified as **Auto**.</param>
      <param name="type">A value of the enumeration that specifies which unit type the GridLength represents.</param>
      <returns>The created GridLength.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.GetIsAbsolute(Microsoft.UI.Xaml.GridLength)">
      <summary>Returns whether the evaluated GridLength is the special "Absolute" value. C# and Microsoft Visual Basic code should use IsAbsolute instead.</summary>
      <param name="target">The GridLength to evaluate.</param>
      <returns>**true** if the evaluated GridLength is the special "Absolute" value; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.GetIsAuto(Microsoft.UI.Xaml.GridLength)">
      <summary>Returns whether the evaluated GridLength is the special "Auto" value. C# and Microsoft Visual Basic code should use IsAuto instead.</summary>
      <param name="target">The GridLength to evaluate.</param>
      <returns>**true** if the evaluated GridLength is the special "Auto" value; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.GridLengthHelper.GetIsStar(Microsoft.UI.Xaml.GridLength)">
      <summary>Returns whether the evaluated GridLength is the special "*" (star sizing) value. C# and Microsoft Visual Basic code should use IsStar instead.</summary>
      <param name="target">The GridLength to evaluate.</param>
      <returns>**true** if the evaluated GridLength is the special "*" (star sizing) value; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.GridUnitType">
      <summary>Describes the kind of value that a GridLength object is holding.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.GridUnitType.Auto">
      <summary>The size is determined by the size properties of the content object.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.GridUnitType.Pixel">
      <summary>The value is expressed in pixels.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.GridUnitType.Star">
      <summary>The value is expressed as a weighted proportion of available space.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.HorizontalAlignment">
      <summary>Indicates where an element should be displayed on the horizontal axis relative to the allocated layout slot of the parent element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.HorizontalAlignment.Center">
      <summary>An element aligned to the center of the layout slot for the parent element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.HorizontalAlignment.Left">
      <summary>An element aligned to the left of the layout slot for the parent element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.HorizontalAlignment.Right">
      <summary>An element aligned to the right of the layout slot for the parent element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.HorizontalAlignment.Stretch">
      <summary>An element stretched to fill the entire layout slot of the parent element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.IDataTemplateExtension">
      <summary>Defines helper methods for phased rendering of a data template.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.IDataTemplateExtension.ProcessBinding(System.UInt32)">
      <summary>Provides phased rendering of bound data in a data template.</summary>
      <param name="phase">Gets the number of times the method has been called.</param>
      <returns>**true** if there are more phases to be processed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.IDataTemplateExtension.ProcessBindings(Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <summary>Updates a list item container element with bound data.</summary>
      <param name="arg">Information about the item, item index, and rendering phase.</param>
      <returns>The phase at which the next call to ProcessBindings will occur. A value of -1 indicates that no further callbacks are requested.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.IDataTemplateExtension.ResetTemplate">
      <summary>Disconnects any event listeners so the data template can be recycled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.IElementFactory">
      <summary>Supports the creation and recycling of UIElement objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.IElementFactory.GetElement(Microsoft.UI.Xaml.ElementFactoryGetArgs)">
      <summary>Gets an UIElement object.</summary>
      <param name="args">An instance of ElementFactoryGetArgs.</param>
      <returns>A UIElement object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.IElementFactory.RecycleElement(Microsoft.UI.Xaml.ElementFactoryRecycleArgs)">
      <summary>Recycles a UIElement that was previously retrieved using GetElement.</summary>
      <param name="args">An instance of ElementFactoryRecycleArgs.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.LeavingBackgroundEventHandler">
      <summary>Represents the method that will handle the Application.LeavingBackground event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.LineStackingStrategy">
      <summary>Describes the mechanism by which a line box is determined for each line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.LineStackingStrategy.BaselineToBaseline">
      <summary>The stack height is determined by adding LineHeight to the baseline of the previous line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.LineStackingStrategy.BlockLineHeight">
      <summary>The stack height is determined by the block element's LineHeight property value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.LineStackingStrategy.MaxHeight">
      <summary>The stack height is the minimum of the extended block progression dimension (height) of all the inline elements when properly aligned and the LineHeight value, if specified.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.MediaFailedRoutedEventArgs">
      <summary>Provides event data for media failed events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.MediaFailedRoutedEventArgs.ErrorTrace">
      <summary>Gets the trace information for a media failed event.</summary>
      <returns>The error trace for the failed media event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.OpticalMarginAlignment">
      <summary>Specifies how side bearing values in per-character typography are handled when aligning to a text container boundary.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.OpticalMarginAlignment.None">
      <summary>Use side bearings that come from font typography values. This is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.OpticalMarginAlignment.TrimSideBearings">
      <summary>Don't use side bearings that come from font typography values, and align the side of the glyph to where the "ink" part of the glyph begins.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.PointHelper">
      <summary>Provides helper methods to set Point values. C# and Microsoft Visual Basic code should use methods of Point instead.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.PointHelper.FromCoordinates(System.Single,System.Single)">
      <summary>Creates a new Point value using x- and y-coordinate values in pixels. C# and Microsoft Visual Basic code should use Point(Double,Double) instead.</summary>
      <param name="x">The pixel value to set for **X**.</param>
      <param name="y">The pixel value to set for **Y**.</param>
      <returns>The created Point.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.PropertyChangedCallback">
      <summary>Represents the callback that is invoked when the effective property value of a dependency property changes.</summary>
      <param name="d">The DependencyObject on which the property has changed value.</param>
      <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.PropertyMetadata">
      <summary>Defines behavior aspects of a dependency property, including conditions it was registered with. For more info on how PropertyMetadata is used for dependency properties, see Custom dependency properties.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.#ctor(System.Object)">
      <summary>Initializes a new instance of the PropertyMetadata class, using a property default value.</summary>
      <param name="defaultValue">A default value for the property where this PropertyMetadata is applied.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.#ctor(System.Object,Microsoft.UI.Xaml.PropertyChangedCallback)">
      <summary>Initializes a new instance of the PropertyMetadata class, using a property default value and callback reference.</summary>
      <param name="defaultValue">A default value for the property where this PropertyMetadata is applied.</param>
      <param name="propertyChangedCallback">A reference to the callback to call for property changed behavior.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.PropertyMetadata.CreateDefaultValueCallback">
      <summary>Gets a reference to the callback method that provides a default property value.</summary>
      <returns>A reference to the callback method that provides a default property value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.PropertyMetadata.DefaultValue">
      <summary>Gets the default value for the dependency property.</summary>
      <returns>The default value for the dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.Create(System.Object)">
      <summary>Creates a PropertyMetadata value, specifying a fixed default value for a dependency property.</summary>
      <param name="defaultValue">The dependency property default value to apply.</param>
      <returns>The newly created dependency property metadata.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.Create(System.Object,Microsoft.UI.Xaml.PropertyChangedCallback)">
      <summary>Creates a PropertyMetadata value, specifying a fixed default value for a dependency property, and a property-changed callback.</summary>
      <param name="defaultValue">The dependency property default value to apply.</param>
      <param name="propertyChangedCallback">A reference to the callback method that is invoked by the property system when a dependency property value changes.</param>
      <returns>The newly created dependency property metadata.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.Create(Microsoft.UI.Xaml.CreateDefaultValueCallback)">
      <summary>Creates a PropertyMetadata value, specifying a callback that establishes a default value for a dependency property.</summary>
      <param name="createDefaultValueCallback">A reference to the callback method that provides a default property value.</param>
      <returns>The newly created dependency property metadata.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyMetadata.Create(Microsoft.UI.Xaml.CreateDefaultValueCallback,Microsoft.UI.Xaml.PropertyChangedCallback)">
      <summary>Creates a PropertyMetadata value, specifying a callback that establishes a default value for a dependency property, and a property-changed callback.</summary>
      <param name="createDefaultValueCallback">A reference to the callback method that provides a default property value.</param>
      <param name="propertyChangedCallback">A reference to the callback method that is invoked by the property system when a dependency property value changes.</param>
      <returns>The newly created dependency property metadata.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.PropertyPath">
      <summary>Implements a data structure for describing a property as a path below another property, or below an owning type. Property paths are used in data binding to objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.PropertyPath.#ctor(System.String)">
      <summary>Initializes a new instance of the PropertyPath class based on a path string.</summary>
      <param name="path">The path string to construct with.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.PropertyPath.Path">
      <summary>Gets the path value held by this PropertyPath.</summary>
      <returns>The path value held by this PropertyPath.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.RectHelper">
      <summary>Provides helper methods to evaluate or set Rect values. C# and Microsoft Visual Basic code should use members of Rect instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.RectHelper.Empty">
      <summary>Gets a static Rect value where the Rect has no size or position (all values 0). C# and Microsoft Visual Basic code should use Empty instead.</summary>
      <returns>A Rect with all values as 0.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.Contains(Windows.Foundation.Rect,Windows.Foundation.Point)">
      <summary>Returns whether a given Point is within the bounds of a given Rect, for a shared coordinate reference. C# and Microsoft Visual Basic code should use Contains instead. C# and Microsoft Visual Basic code should use the = operator instead. </summary>
      <param name="target">The Rect to evaluate.</param>
      <param name="point">The Point to check for containment.</param>
      <returns>**true** if *point* is within the *target* bounds; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.Equals(Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Provides comparison of the values of two Rect values. C# and Microsoft Visual Basic code should use the = operator instead. </summary>
      <param name="target">The first Rect to compare.</param>
      <param name="value">The second Rect to compare.</param>
      <returns>**true** if *target* and *value* hold equivalent values; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.FromCoordinatesAndDimensions(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a new Rect value based on the element values of a Rect structure. C# and Microsoft Visual Basic code should use Rect(Double,Double,Double,Double) instead.</summary>
      <param name="x">The pixel value to set for **X**.</param>
      <param name="y">The pixel value to set for **Y**.</param>
      <param name="width">The pixel value to set for **Width**.</param>
      <param name="height">The pixel value to set for **Height**.</param>
      <returns>The created Rect.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.FromLocationAndSize(Windows.Foundation.Point,Windows.Foundation.Size)">
      <summary>Creates a new Rect value based on a Point that specifies the upper-left origin, and a Size that specifies the width and height. C# and Microsoft Visual Basic code should use Rect(Point,Size) instead.</summary>
      <param name="location">The Point location of the origin (upper left).</param>
      <param name="size">The Size that specifies width and height.</param>
      <returns>The created Rect value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.FromPoints(Windows.Foundation.Point,Windows.Foundation.Point)">
      <summary>Creates a new Rect value based on two points. C# and Microsoft Visual Basic code should use Rect(Point,Point) instead.</summary>
      <param name="point1">The first point.</param>
      <param name="point2">The second point.</param>
      <returns>The created Rect.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.GetBottom(Windows.Foundation.Rect)">
      <summary>Gets a "Bottom" value for the specified Rect. So long as **Height** is positive, "Bottom" is evaluated as **Y** + **Height**. C# and Microsoft Visual Basic code should use Bottom instead.</summary>
      <param name="target">The Rect to evaluate.</param>
      <returns>The evaluated "Bottom" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.GetIsEmpty(Windows.Foundation.Rect)">
      <summary>Returns whether a specified Rect is equivalent to an Empty  Rect. C# and Microsoft Visual Basic code should use IsEmpty instead.</summary>
      <param name="target">The Rect to evaluate.</param>
      <returns>**true** if the specified Rect is equivalent to an Empty  Rect; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.GetLeft(Windows.Foundation.Rect)">
      <summary>Gets a "Left" value for the specified Rect. So long as **Width** is positive, "Left" is evaluated as **X**. C# and Microsoft Visual Basic code should use Left instead.</summary>
      <param name="target">The Rect to evaluate.</param>
      <returns>The evaluated "Left" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.GetRight(Windows.Foundation.Rect)">
      <summary>Gets a "Right" value for the specified Rect. So long as **Width** is positive, "Right" is evaluated as **X** + **Width**. C# and Microsoft Visual Basic code should use Right instead.</summary>
      <param name="target">The Rect to evaluate.</param>
      <returns>The evaluated "Right" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.GetTop(Windows.Foundation.Rect)">
      <summary>Gets a "Top" value for the specified Rect. So long as **Height** is positive, "Top" is evaluated as **Y**. C# and Microsoft Visual Basic code should use Top instead.</summary>
      <param name="target">The Rect to evaluate.</param>
      <returns>The evaluated "Top" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.Intersect(Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Returns the areas of two specified Rect values that intersect, as a new Rect. C# and Microsoft Visual Basic code should use Intersect instead.</summary>
      <param name="target">The first Rect to check for intersect.</param>
      <param name="rect">The second Rect to check for intersect.</param>
      <returns>A Rect that represents the areas of *target* and *rect* that intersect. Can be an Empty value if there is no intersect.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.Union(Windows.Foundation.Rect,Windows.Foundation.Point)">
      <summary>Creates a rectangle that is exactly large enough to contain the a specified rectangle and a specified point. C# and Microsoft Visual Basic code should use Union(Point) instead.</summary>
      <param name="target">The rectangle to include.</param>
      <param name="point">The point to include.</param>
      <returns>A rectangle that is exactly large enough to contain the specified rectangle and point.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.RectHelper.Union(Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Creates a rectangle that is exactly large enough to contain the two specified rectangles. C# and Microsoft Visual Basic code should use Union(Rect) instead.</summary>
      <param name="target">The first rectangle to include.</param>
      <param name="rect">The second rectangle to include.</param>
      <returns>A rectangle that is exactly large enough to contain the two specified rectangles.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.ResourceDictionary">
      <summary>Defines a repository for XAML resources, such as styles, that your app uses. You define the resources in XAML and can then retrieve them in XAML using the {StaticResource} markup extension and {ThemeResource} markup extension s. You can also access resources with code, but that is less common.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.#ctor">
      <summary>Initializes a new instance of the ResourceDictionary class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries">
      <summary>Gets a collection of the ResourceDictionary dictionaries that constitute the various resource dictionaries in the merged dictionaries.</summary>
      <returns>A list collection of the ResourceDictionary dictionaries that constitute the various resource dictionaries in the merged dictionaries.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ResourceDictionary.Size">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ResourceDictionary.Source">
      <summary>Gets or sets a Uniform Resource Identifier (URI) that provides the source location of a merged resource dictionary.</summary>
      <returns>A Uniform Resource Identifier (URI) that provides the source location of a merged resource dictionary. This is typically a path that references a XAML resource within the app, or a reference to a loose XAML file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries">
      <summary>Gets a collection of merged resource dictionaries that are specifically keyed and composed to address theme scenarios, for example supplying theme values for "HighContrast".</summary>
      <returns>A dictionary of ResourceDictionary theme dictionaries. Each must be keyed with **x:Key**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.Clear">
      <summary>Removes all items from this ResourceDictionary.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.GetView">
      <summary>Retrieves a view against the ResourceDictionary.</summary>
      <returns>The view object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.HasKey(System.Object)">
      <summary>Returns whether the ResourceDictionary has an entry with the requested key.</summary>
      <param name="key">The requested key.</param>
      <returns>**true** if the ResourceDictionary has an entry with the requested key; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.Insert(System.Object,System.Object)">
      <summary>Adds a new entry to the ResourceDictionary.</summary>
      <param name="key">The object key for the resource to insert.</param>
      <param name="value">The object value for the resource to insert.</param>
      <returns>**true** if calling the method replaced a value that already existed for the key; **false** if calling the method defined a new key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.Lookup(System.Object)">
      <summary>Returns the value from the requested key, if an entry with that key exists.</summary>
      <param name="key">The requested key.</param>
      <returns>The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ResourceDictionary.Remove(System.Object)">
      <summary>Removes a specific item from the ResourceDictionary.</summary>
      <param name="key">The key of the item to remove.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.RoutedEvent">
      <summary>Represents a routed event to the Windows Runtime event system.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.RoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.RoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the RoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.RoutedEventArgs.OriginalSource">
      <summary>Gets a reference to the object that raised the event. This is often a template part of a control rather than an element that was declared in your app UI.</summary>
      <returns>The object that raised the event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.RoutedEventHandler">
      <summary>Represents the method that will handle routed events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.ScalarTransition">
      <summary>Provides the animated transition behavior when an element's Opacity or Rotation properties change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ScalarTransition.#ctor">
      <summary>Initializes a new instance of the ScalarTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.ScalarTransition.Duration">
      <summary>Gets or sets the duration of the transition.</summary>
      <returns>The duration of the transition.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Setter">
      <summary>Applies a value to a property in a Style or a VisualState.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Setter.#ctor">
      <summary>Initializes a new instance of the Setter class with no initial Property or Value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Setter.#ctor(Microsoft.UI.Xaml.DependencyProperty,System.Object)">
      <summary>Initializes a new instance of the Setter class with initial Property and Value information.</summary>
      <param name="targetProperty">The dependency property identifier for the property that is being styled.</param>
      <param name="value">The value to assign to the value when the Setter applies.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Setter.Property">
      <summary>Gets or sets the property to apply the Value to.</summary>
      <returns>A DependencyProperty to which the Value will be applied. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Setter.Target">
      <summary>Gets or sets the path of a property on a target element to apply the Value to.</summary>
      <returns>The path of a property on a target element to apply the Value to.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Setter.Value">
      <summary>Gets or sets the value to apply to the property that is specified by the Setter.</summary>
      <returns>The value to apply to the property that is specified by the Setter.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.SetterBase">
      <summary>Represents the base class for value setters.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.SetterBase.IsSealed">
      <summary>Gets a value that indicates whether this object is in an immutable state.</summary>
      <returns>**true** if this object is in an immutable state; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.SetterBaseCollection">
      <summary>Represents a collection of objects that inherit from SetterBase.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.#ctor">
      <summary>Initializes a new instance of the SetterBaseCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.SetterBaseCollection.IsSealed">
      <summary>Gets a value that indicates whether the collection is in a read-only state.</summary>
      <returns>**true** if this object is in a read-only state and cannot be changed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.SetterBaseCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.Append(Microsoft.UI.Xaml.SetterBase)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.GetAt(System.UInt32)">
      <summary>Returns the SetterBase located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The SetterBase value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.SetterBase[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items returned.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.IndexOf(Microsoft.UI.Xaml.SetterBase,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.SetterBase)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.ReplaceAll(Microsoft.UI.Xaml.SetterBase[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.SetterBaseCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.SetterBase)">
      <summary>Sets the value at the specified index to the SetterBase value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.SizeChangedEventArgs">
      <summary>Provides data related to the FrameworkElement.SizeChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.SizeChangedEventArgs.NewSize">
      <summary>Gets the new size of the object reporting the size change.</summary>
      <returns>The new size. The Size structure contains the new height and width.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.SizeChangedEventArgs.PreviousSize">
      <summary>Gets the previous size of the object reporting the size change.</summary>
      <returns>The previous size.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.SizeChangedEventHandler">
      <summary>Represents the method that will handle the SizeChanged event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.SizeHelper">
      <summary>Provides helper methods to evaluate or set Size values. C# and Microsoft Visual Basic code should use members of Size instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.SizeHelper.Empty">
      <summary>Gets a static Size value where the Size has no height or width (all values 0). C# and Microsoft Visual Basic code should use Empty instead.</summary>
      <returns>A Size with all values as 0.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SizeHelper.Equals(Windows.Foundation.Size,Windows.Foundation.Size)">
      <summary>Provides comparison of the values of two Size values. C# and Microsoft Visual Basic code should use the = operator instead. </summary>
      <param name="target">The first Size to compare.</param>
      <param name="value">The second Size to compare.</param>
      <returns>**true** if *target* and *value* hold equivalent values; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SizeHelper.FromDimensions(System.Single,System.Single)">
      <summary>Creates a new Size based on width and height element values. C# and Microsoft Visual Basic code should use Size(Double,Double) instead.</summary>
      <param name="width">The initial **Width**.</param>
      <param name="height">The initial **Height**.</param>
      <returns>The created Size.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.SizeHelper.GetIsEmpty(Windows.Foundation.Size)">
      <summary>Returns whether a specified Size is equivalent to an Empty  Size. C# and Microsoft Visual Basic code should use IsEmpty instead.</summary>
      <param name="target">The Size to evaluate.</param>
      <returns>**true** if the specified Size is equivalent to an Empty  Size; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.StateTrigger">
      <summary>Represents a trigger that applies visual states conditionally.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.StateTrigger.#ctor">
      <summary>Initializes a new instance of the StateTrigger class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.StateTrigger.IsActive">
      <summary>Gets or sets a value that indicates whether the trigger should be applied.</summary>
      <returns>**true** if the system should apply the trigger; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.StateTrigger.IsActiveProperty">
      <summary>Identifies the IsActive  dependency property.</summary>
      <returns>The identifier for the IsActive  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.StateTriggerBase">
      <summary>Represents the base class for state triggers.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.StateTriggerBase.#ctor">
      <summary>Initializes a new instance of the StateTriggerBase class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.StateTriggerBase.SetActive(System.Boolean)">
      <summary>Sets the value that indicates whether the state trigger is active.</summary>
      <param name="IsActive">**true** if the system should apply the trigger; otherwise, **false**.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Style">
      <summary>Contains property setters that can be shared between instances of a type. A Style is usually declared in a resources collection so that it can be shared and used for applying control templates and other styles.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Style.#ctor">
      <summary>Initializes a new instance of the Style class, with no initial TargetType and an empty Setters collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Style.#ctor(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Initializes a new instance of the Style class, with a specified initial TargetType and an empty Setters collection.</summary>
      <param name="targetType">The TargetType to set for the Style.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Style.BasedOn">
      <summary>Gets or sets a defined style that is the basis of the current style.</summary>
      <returns>A defined style that is the basis of the current style. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Style.IsSealed">
      <summary>Gets a value that indicates whether the style is read-only and cannot be changed.</summary>
      <returns>**true** if the style is read-only; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Style.Setters">
      <summary>Gets a collection of Setter objects.</summary>
      <returns>A collection of Setter objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Style.TargetType">
      <summary>Gets or sets the type for which the style is intended. TargetType can be used to declare an implicit style resource if there's no resource key specified.</summary>
      <returns>The type of object to which the style is applied. This value is usually set in XAML, not code. See Remarks.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Style.Seal">
      <summary>Locks the style so that the TargetType property or any Setter in the Setters collection cannot be changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.StyleTypedPropertyAttribute">
      <summary>Represents an attribute that is applied to the class definition and determines the **TargetTypes** of the properties that are of type Style.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.StyleTypedPropertyAttribute.Property">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.StyleTypedPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the StyleTypedPropertyAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.SuspendingEventHandler">
      <summary>Represents the method that will handle the Suspending event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.TargetPropertyPath">
      <summary>Represents the path to a property on a target element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TargetPropertyPath.#ctor">
      <summary>Initializes a new instance of the TargetPropertyPath class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TargetPropertyPath.#ctor(Microsoft.UI.Xaml.DependencyProperty)">
      <summary>Initializes a new instance of the TargetPropertyPath class with the specified target property.</summary>
      <param name="targetProperty">The target property.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.TargetPropertyPath.Path">
      <summary>Gets or sets the path to the property on the target element.</summary>
      <returns>The path to the property on the target element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.TargetPropertyPath.Target">
      <summary>Gets or sets the object that contains the property described by Path.</summary>
      <returns>The object that contains the property described by Path.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.TemplatePartAttribute">
      <summary>Represents an attribute that is applied to the class definition to identify the types of the named parts that are used for templating.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TemplatePartAttribute.Name">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TemplatePartAttribute.Type">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TemplatePartAttribute.#ctor">
      <summary>Initializes a new instance of the TemplatePartAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TemplateVisualStateAttribute">
      <summary>Specifies that a control can be in a certain state and that a VisualState is expected in the control's ControlTemplate.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TemplateVisualStateAttribute.GroupName">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TemplateVisualStateAttribute.Name">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TemplateVisualStateAttribute.#ctor">
      <summary>Initializes a new instance of the TemplateVisualStateAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TextAlignment">
      <summary>Specifies whether text is centered, left-aligned, or right-aligned.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.Center">
      <summary>Text is centered within the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.DetectFromContent">
      <summary>Text alignment is inferred from the text content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.End">
      <summary>The end of the text is aligned to the edge of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.Justify">
      <summary>Text is justified within the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.Left">
      <summary>Text is aligned to the left edge of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.Right">
      <summary>Text is aligned to the right edge of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextAlignment.Start">
      <summary>The beginning of the text is aligned to the edge of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TextLineBounds">
      <summary>Influences how a line box height is calculated</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextLineBounds.Full">
      <summary>Uses normal line box height calculation, this is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextLineBounds.Tight">
      <summary>Top of line box height is the cap height from the font, bottom of line box height is the text baseline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextLineBounds.TrimToBaseline">
      <summary>Bottom of line box height is the text baseline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextLineBounds.TrimToCapHeight">
      <summary>Top of line box height is the cap height from the font.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TextReadingOrder">
      <summary>Provides a value for **TextReadingOrder** properties.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextReadingOrder.Default">
      <summary>Do not detect flow direction from content. Use FlowDirection value (if any) for reading order decisions. (Windows 8.1)</summary>
      <deprecated type="deprecate">Consider using UseFlowDirection, which is an improved version of Default. For more info, see MSDN.</deprecated>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextReadingOrder.DetectFromContent">
      <summary>Detect flow direction from text content. For bidirectional text, text containers will infer the reading order for text based on the content. See Remarks.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextReadingOrder.UseFlowDirection">
      <summary>Do not detect flow direction from content. Use FlowDirection value (if any) for reading order decisions. (Starting with Windows 10)</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TextTrimming">
      <summary>Describes how text is trimmed when it overflows the edge of its containing box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextTrimming.CharacterEllipsis">
      <summary>**Introduced in .** Text is trimmed at a character boundary. An ellipsis (...) is drawn in place of remaining text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextTrimming.Clip">
      <summary>**Introduced in .** Text is trimmed at a pixel level, visually clipping the excess glyphs.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextTrimming.None">
      <summary>Text is not trimmed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextTrimming.WordEllipsis">
      <summary>Text is trimmed at a word boundary. An ellipsis (...) is drawn in place of remaining text.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TextWrapping">
      <summary>Specifies whether text wraps when it reaches the edge of its container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextWrapping.NoWrap">
      <summary>No line wrapping is performed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextWrapping.Wrap">
      <summary>Line breaking occurs if a line of text overflows beyond the available width of its container. Line breaking occurs even if the text logic can't determine any line break opportunity. For example, if a very long word is constrained in a fixed-width container that can't scroll, it will wrap at a point that might be in the middle of a word.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.TextWrapping.WrapWholeWords">
      <summary>**Introduced in .** Line-breaking occurs if the line overflows beyond the available block width. A line may overflow beyond the block width if the text logic can't determine a line break opportunity. For example, if a very long word is constrained in a fixed-width container that can't scroll, it will overflow the long word and continue the text after the long word on the next line. Not supported by all controls; see Remarks.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Thickness">
      <summary>Describes the thickness of a frame around a rectangle. Four Double values describe the **Left**, **Top**, **Right**, and **Bottom** sides of the rectangle, respectively.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Thickness.Bottom">
      <summary>The bottom edge measure of the Thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Thickness.Left">
      <summary>The left side measure of the Thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Thickness.Right">
      <summary>The right side measure of the Thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Thickness.Top">
      <summary>The top edge measure of the Thickness.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.ThicknessHelper">
      <summary>Provides helper methods to evaluate or set Thickness values. C# and Microsoft Visual Basic code should use members of Thickness instead.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.ThicknessHelper.FromLengths(System.Double,System.Double,System.Double,System.Double)">
      <summary>Creates a Thickness value based on element values. C# and Microsoft Visual Basic code should use Thickness(Double,Double,Double,Double) instead.</summary>
      <param name="left">The initial **Left**.</param>
      <param name="top">The initial **Top**.</param>
      <param name="right">The initial **Right**.</param>
      <param name="bottom">The initial **Bottom**.</param>
      <returns>The created Thickness.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.ThicknessHelper.FromUniformLength(System.Double)">
      <summary>Creates a new Thickness value using a uniform value for all the element values. C# and Microsoft Visual Basic code should use Thickness(Double) instead.</summary>
      <param name="uniformLength">The uniform value to apply to all four of the Thickness element values.</param>
      <returns>The created Thickness.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.TriggerAction">
      <summary>Serves as the base class for BeginStoryboard. Not commonly used. See Remarks.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TriggerActionCollection">
      <summary>Represents a collection of BeginStoryboard objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.#ctor">
      <summary>Initializes a new instance of the TriggerActionCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.TriggerActionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.Append(Microsoft.UI.Xaml.TriggerAction)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The TriggerAction value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.TriggerAction[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.IndexOf(Microsoft.UI.Xaml.TriggerAction,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.TriggerAction)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.ReplaceAll(Microsoft.UI.Xaml.TriggerAction[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerActionCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.TriggerAction)">
      <summary>Sets the value at the specified index to the TriggerAction value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.TriggerBase">
      <summary>Serves as the base class for EventTrigger. Not commonly used. See Remarks.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.TriggerCollection">
      <summary>Represents a collection of EventTrigger objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.TriggerCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.Append(Microsoft.UI.Xaml.TriggerBase)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.TriggerBase[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.IndexOf(Microsoft.UI.Xaml.TriggerBase,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.TriggerBase)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.ReplaceAll(Microsoft.UI.Xaml.TriggerBase[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.TriggerCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.TriggerBase)">
      <summary>Sets the value at the specified index to the TriggerBase value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.UIElement">
      <summary>UIElement is a base class for most of the Windows Runtime UI objects that have visual appearance and can process basic input as part of your app's user interface.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AccessKey">
      <summary>Gets or sets the access key (mnemonic) for this element.</summary>
      <returns>The access key (mnemonic) for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AccessKeyProperty">
      <summary>Identifies for the AccessKey dependency property.</summary>
      <returns>The identifier for the AccessKey dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AccessKeyScopeOwner">
      <summary>Gets or sets a source element that provides the access key scope for this element, even if it's not in the visual tree of the source element.</summary>
      <returns>The element that defines the access key scope.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AccessKeyScopeOwnerProperty">
      <summary>Identifies for the AccessKeyScopeOwner dependency property.</summary>
      <returns>The identifier for the AccessKeyScopeOwner dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ActualOffset">
      <summary>Gets the position of this UIElement, relative to its parent, computed during the arrange pass of the layout process.</summary>
      <returns>The position of this UIElement, relative to its parent, computed during the arrange pass of the layout process.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ActualSize">
      <summary>Gets the size that this UIElement computed during the arrange pass of the layout process.</summary>
      <returns>The size that this UIElement computed during the arrange pass of the layout process.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AllowDrop">
      <summary>Gets or sets a value that determines whether this UIElement can be a drop target for purposes of drag-and-drop operations.</summary>
      <returns>**true** if this UIElement can be a drop target for purposes of drag-and-drop operations; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.AllowDropProperty">
      <summary>Identifies the AllowDrop dependency property.</summary>
      <returns>The identifier for the AllowDrop dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.BringIntoViewRequestedEvent">
      <summary>Gets the identifier for the BringIntoViewRequested routed event.</summary>
      <returns>The identifier for the BringIntoViewRequested routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CacheMode">
      <summary>[deprecated] This property doesn't do anything, it remains only for compatibility purposes.</summary>
      <returns>An unused value</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CacheModeProperty">
      <summary>Identifies the CacheMode dependency property.</summary>
      <returns>The identifier for the CacheMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CanBeScrollAnchor">
      <summary>Gets or sets a value that indicates whether the UIElement can be a candidate for scroll anchoring.</summary>
      <returns>**true** if an element should be considered as a candidate for scroll anchoring; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CanBeScrollAnchorProperty">
      <summary>Identifies the CanBeScrollAnchor dependency property.</summary>
      <returns>The identifier for the CanBeScrollAnchor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CanDrag">
      <summary>Gets or sets a value that indicates whether the element can be dragged as data in a drag-and-drop operation.</summary>
      <returns>**true** if the element can be dragged as data in a drag-and-drop operation; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CanDragProperty">
      <summary>Identifies the CanDrag dependency property.</summary>
      <returns>The identifier for the CanDrag dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CenterPoint">
      <summary>Gets or sets the center point of the element, which is the point about which rotation or scaling occurs. Affects the rendering position of the element.</summary>
      <returns>The center point of the element, which is the point about which rotation or scaling occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CharacterReceivedEvent">
      <summary>Gets the identifier for the CharacterReceived routed event.</summary>
      <returns>The identifier for the CharacterReceived routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Clip">
      <summary>Gets or sets the RectangleGeometry used to define the outline of the contents of a UIElement.</summary>
      <returns>The rectangle geometry to be used for clipping area sizing. The default value is **null** (no clipping).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ClipProperty">
      <summary>Identifies the Clip dependency property.</summary>
      <returns>The identifier for the Clip dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CompositeMode">
      <summary>Gets or sets a property that declares alternate composition and blending modes for the element in its parent layout and window. This is relevant for elements that are involved in a mixed XAML / Microsoft DirectX UI.</summary>
      <returns>A value of the enumeration. The default is **Inherit**, but see Remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.CompositeModeProperty">
      <summary>Identifies the CompositeMode dependency property.</summary>
      <returns>The identifier for the CompositeMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ContextFlyout">
      <summary>Gets or sets the flyout associated with this element.</summary>
      <returns>The flyout associated with this element, if any; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ContextFlyoutProperty">
      <summary>Identifies for the ContextFlyout dependency property.</summary>
      <returns>The identifier for the ContextFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ContextRequestedEvent">
      <summary>Gets the identifier for the ContextRequested routed event.</summary>
      <returns>The identifier for the ContextRequested routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DesiredSize">
      <summary>Gets the size that this UIElement computed during the measure pass of the layout process.</summary>
      <returns>The size that this UIElement computed during the measure pass of the layout process.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DoubleTappedEvent">
      <summary>Gets the identifier for the DoubleTapped routed event.</summary>
      <returns>The identifier for the DoubleTapped routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DragEnterEvent">
      <summary>Gets the identifier for the DragEnter routed event.</summary>
      <returns>The identifier for the DragEnter routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DragLeaveEvent">
      <summary>Gets the identifier for the DragLeave routed event.</summary>
      <returns>The identifier for the DragLeave routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DragOverEvent">
      <summary>Gets the identifier for the DragOver routed event.</summary>
      <returns>The identifier for the DragOver routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.DropEvent">
      <summary>Gets the identifier for the Drop routed event.</summary>
      <returns>The identifier for the Drop routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvoked">
      <summary>Gets or sets a value that specifies whether the access key display is dismissed when an access key is invoked.</summary>
      <returns>**true** to dismiss the access key display when an access key is invoked; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvokedProperty">
      <summary>Identifies the ExitDisplayModeOnAccessKeyInvoked  dependency property.</summary>
      <returns>The identifier for the ExitDisplayModeOnAccessKeyInvoked  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.GettingFocusEvent">
      <summary>Gets the identifier for the GettingFocus routed event.</summary>
      <returns>The identifier for the GettingFocus routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.HighContrastAdjustment">
      <summary>Gets or sets a value that indicates whether the framework automatically adjusts the element's visual properties when high contrast themes are enabled.</summary>
      <returns>A value of the enumeration that indicates whether the framework automatically adjusts the element's visual properties when high contrast themes are enabled. The default is **Application**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.HighContrastAdjustmentProperty">
      <summary>Identifies the HighContrastAdjustment dependency property.</summary>
      <returns>The identifier for the HighContrastAdjustment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.HoldingEvent">
      <summary>Gets the identifier for the Holding routed event.</summary>
      <returns>The identifier for the Holding routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsAccessKeyScope">
      <summary>Gets or sets a value that indicates whether an element defines its own access key scope.</summary>
      <returns>**true** if an element defines its own scope; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsAccessKeyScopeProperty">
      <summary>Identifies for the IsAccessKeyScope dependency property.</summary>
      <returns>The identifier for the IsAccessKeyScope dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsDoubleTapEnabled">
      <summary>Gets or sets a value that determines whether the DoubleTapped event can originate from that element.</summary>
      <returns>**true** if a DoubleTapped event can originate from this element; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsDoubleTapEnabledProperty">
      <summary>Identifies the IsDoubleTapEnabled dependency property.</summary>
      <returns>The identifier for the IsDoubleTapEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsHitTestVisible">
      <summary>Gets or sets whether the contained area of this UIElement can return true values for hit testing.</summary>
      <returns>**true** if the contained area of this UIElement can be used for hit testing; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsHitTestVisibleProperty">
      <summary>Identifies the IsHitTestVisible dependency property.</summary>
      <returns>The identifier for the IsHitTestVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsHoldingEnabled">
      <summary>Gets or sets a value that determines whether the Holding event can originate from that element.</summary>
      <returns>**true** if a Holding event can originate from this element; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsHoldingEnabledProperty">
      <summary>Identifies the IsHoldingEnabled dependency property.</summary>
      <returns>The identifier for the IsHoldingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsRightTapEnabled">
      <summary>Gets or sets a value that determines whether the RightTapped event can originate from that element.</summary>
      <returns>**true** if a RightTapped event can originate from this element; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsRightTapEnabledProperty">
      <summary>Identifies the IsRightTapEnabled dependency property.</summary>
      <returns>The identifier for the IsRightTapEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsTapEnabled">
      <summary>Gets or sets a value that determines whether the Tapped event can originate from that element.</summary>
      <returns>**true** if a Tapped event can originate from this element; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.IsTapEnabledProperty">
      <summary>Identifies the IsTapEnabled dependency property.</summary>
      <returns>The identifier for the IsTapEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementMode">
      <summary>Gets or sets a value that indicates whether the control tooltip displays the key combination for it's associated keyboard accelerator.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementModeProperty">
      <summary>Identifies the KeyboardAcceleratorPlacementMode dependency property.</summary>
      <returns>The identifier for the KeyboardAcceleratorPlacementMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTarget">
      <summary>Gets or sets a value that indicates the control tooltip that displays the accelerator key combination.</summary>
      <returns>The control tooltip that displays the accelerator key combination.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTargetProperty">
      <summary>Identifies the KeyboardAcceleratorPlacementTarget dependency property.</summary>
      <returns>The identifier for the KeyboardAcceleratorPlacementTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyboardAccelerators">
      <summary>Gets the collection of key combinations that invoke an action using the keyboard. </summary>
      <returns>The collection of **KeyboardAccelerator** objects.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyDownEvent">
      <summary>Gets the identifier for the KeyDown routed event.</summary>
      <returns>The identifier for the KeyDown routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipHorizontalOffset">
      <summary>Gets or sets a value that indicates how far left or right the Key Tip is placed in relation to the UIElement.</summary>
      <returns>The number of pixels to move the Key Tip. Positive values move it right. Negative values move it left.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipHorizontalOffsetProperty">
      <summary>Identifies the KeyTipHorizontalOffset dependency property.</summary>
      <returns>The identifier for the KeyTipHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipPlacementMode">
      <summary>Gets or sets a value that indicates where the access key Key Tip is placed in relation to the boundary of the UIElement.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipPlacementModeProperty">
      <summary>Identifies the KeyTipPlacementMode dependency property.</summary>
      <returns>The identifier for the KeyTipPlacementMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipTarget">
      <summary>Gets or sets a value that indicates the element targeted by the access key Key Tip.</summary>
      <returns>The element targeted by the Key Tip.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipTargetProperty">
      <summary>Identifies the KeyTipTarget dependency property.</summary>
      <returns>The identifier for the KeyTipTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipVerticalOffset">
      <summary>Gets or sets a value that indicates how far up or down the Key Tip is placed in relation to the UI element.</summary>
      <returns>The number of pixels to move the Key Tip. Positive values move it down. Negative values move it up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyTipVerticalOffsetProperty">
      <summary>Identifies the KeyTipVerticalOffset dependency property.</summary>
      <returns>The identifier for the KeyTipVerticalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.KeyUpEvent">
      <summary>Gets the identifier for the KeyUp routed event.</summary>
      <returns>The identifier for the KeyUp routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Lights">
      <summary>Gets the collection of XamlLight objects attached to this element.</summary>
      <returns>The collection of XamlLight elements that apply to a UIElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.LightsProperty">
      <summary>Identifies the Lights dependency property.</summary>
      <returns>The identifier for the Lights dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.LosingFocusEvent">
      <summary>Gets the identifier for the LosingFocus routed event.</summary>
      <returns>The identifier for the LosingFocus routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationCompletedEvent">
      <summary>Gets the identifier for the ManipulationCompleted routed event.</summary>
      <returns>The identifier for the ManipulationCompleted routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationDeltaEvent">
      <summary>Gets the identifier for the ManipulationDelta routed event.</summary>
      <returns>The identifier for the ManipulationDelta routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationInertiaStartingEvent">
      <summary>Gets the identifier for the ManipulationInertiaStarting routed event.</summary>
      <returns>The identifier for the ManipulationInertiaStarting routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationMode">
      <summary>Gets or sets the ManipulationModes value used for UIElement behavior and interaction with gestures. Setting this value enables handling the manipulation events from this element in app code.</summary>
      <returns>A value or values of the enumeration. The default is typically **System**, but this can vary on specific controls and elements. See Remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationModeProperty">
      <summary>Identifies the ManipulationMode dependency property.</summary>
      <returns>The identifier for the ManipulationMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationStartedEvent">
      <summary>Gets the identifier for the ManipulationStarted routed event.</summary>
      <returns>The identifier for the ManipulationStarted routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ManipulationStartingEvent">
      <summary>Gets the identifier for the ManipulationStarting routed event.</summary>
      <returns>The identifier for the ManipulationStarting routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.NoFocusCandidateFoundEvent">
      <summary>Gets the identifier for the NoFocusCandidateFound routed event.</summary>
      <returns>The identifier for the NoFocusCandidateFound routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Opacity">
      <summary>Gets or sets the degree of the object's opacity.</summary>
      <returns>A value between 0 and 1.0 that declares the opacity factor, with 1.0 meaning full opacity and 0 meaning transparent. The default value is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.OpacityProperty">
      <summary>Identifies the IsHitTestVisible dependency property.</summary>
      <returns>The identifier for the IsHitTestVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.OpacityTransition">
      <summary>Gets or sets the ScalarTransition that animates changes to the Opacity property.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerCanceledEvent">
      <summary>Gets the identifier for the PointerCanceled routed event.</summary>
      <returns>The identifier for the PointerCanceled routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerCaptureLostEvent">
      <summary>Gets the identifier for the PointerCaptureLost routed event.</summary>
      <returns>The identifier for the PointerCaptureLost routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerCaptures">
      <summary>Gets the set of all captured pointers, represented as Pointer values.</summary>
      <returns>The collection of captured pointers, each represented as a Pointer object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerCapturesProperty">
      <summary>Identifies the PointerCaptures dependency property.</summary>
      <returns>The identifier for the PointerCaptures dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerEnteredEvent">
      <summary>Gets the identifier for the PointerEntered routed event.</summary>
      <returns>The identifier for the PointerEntered routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerExitedEvent">
      <summary>Gets the identifier for the PointerExited routed event.</summary>
      <returns>The identifier for the PointerExited routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerMovedEvent">
      <summary>Gets the identifier for the PointerMoved routed event.</summary>
      <returns>The identifier for the PointerMoved routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerPressedEvent">
      <summary>Gets the identifier for the PointerPressed routed event.</summary>
      <returns>The identifier for the PointerPressed routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerReleasedEvent">
      <summary>Gets the identifier for the PointerReleased routed event.</summary>
      <returns>The identifier for the PointerReleased routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PointerWheelChangedEvent">
      <summary>Gets the identifier for the PointerWheelChanged routed event.</summary>
      <returns>The identifier for the PointerWheelChanged routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PreviewKeyDownEvent">
      <summary>Gets the identifier for the PreviewKeyDown routed event.</summary>
      <returns>The identifier for the PreviewKeyDown routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.PreviewKeyUpEvent">
      <summary>Gets the identifier for the PreviewKeyUp routed event.</summary>
      <returns>The identifier for the PreviewKeyUp routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Projection">
      <summary>Gets or sets the perspective projection (3-D effect) to apply when rendering this element.</summary>
      <returns>A 3-D projection effect applied to the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ProjectionProperty">
      <summary>Identifies the Projection dependency property.</summary>
      <returns>The identifier for the Projection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RenderSize">
      <summary>Gets the final render size of a UIElement. Use is not recommended, see Remarks.</summary>
      <returns>The rendered size for this object. There is no default value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RenderTransform">
      <summary>Gets or sets transform information that affects the rendering position of a UIElement.</summary>
      <returns>Describes the specifics of the desired render transform. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RenderTransformOrigin">
      <summary>Gets or sets the origin point of any possible render transform declared by RenderTransform, relative to the bounds of the UIElement.</summary>
      <returns>The origin point of the render transform. The default value is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RenderTransformOriginProperty">
      <summary>Identifies the RenderTransformOrigin dependency property.</summary>
      <returns>The identifier for the RenderTransformOrigin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RenderTransformProperty">
      <summary>Identifies the RenderTransform dependency property.</summary>
      <returns>The identifier for the RenderTransform dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RightTappedEvent">
      <summary>Gets the identifier for the RightTapped routed event.</summary>
      <returns>The identifier for the RightTapped routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Rotation">
      <summary>Gets or sets the angle of clockwise rotation, in degrees. Rotates relative to the RotationAxis and the CenterPoint. Affects the rendering position of the element.</summary>
      <returns>The angle of clockwise rotation, in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RotationAxis">
      <summary>Gets or sets the axis to rotate the element around.</summary>
      <returns>The axis to rotate the element around.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.RotationTransition">
      <summary>Gets or sets the ScalarTransition that animates changes to the Rotation property.</summary>
      <returns>The ScalarTransition that animates changes to the Rotation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Scale">
      <summary>Gets or sets the scale of the element. Scales relative to the element's CenterPoint. Affects the rendering position of the element.</summary>
      <returns>The scale of the element, relative to the element's CenterPoint.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ScaleTransition">
      <summary>Gets or sets the Vector3Transition that animates changes to the Scale property.</summary>
      <returns>The Vector3Transition that animates changes to the Scale property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Shadow">
      <summary>Gets or sets the shadow effect cast by the element.</summary>
      <returns>The shadow effect cast by the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.ShadowProperty">
      <summary>Identifies the Shadow dependency property.</summary>
      <returns>The identifier for the Shadow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TabFocusNavigation">
      <summary>Gets or sets a value that modifies how tabbing and TabIndex work for this control.</summary>
      <returns>A value of the enumeration. The default is **Local**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TabFocusNavigationProperty">
      <summary>Identifies the TabFocusNavigation dependency property.</summary>
      <returns>The identifier for the TabFocusNavigation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TappedEvent">
      <summary>Gets the identifier for the Tapped routed event.</summary>
      <returns>The identifier for the Tapped routed event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Transform3D">
      <summary>Gets or sets the 3-D transform effect to apply when rendering this element.</summary>
      <returns>The 3-D transform effect to apply when rendering this element. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Transform3DProperty">
      <summary>Identifies the Transform3D dependency property.</summary>
      <returns>The identifier for the Transform3D dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TransformMatrix">
      <summary>Gets or sets the transformation matrix to apply to the element.</summary>
      <returns>The transformation matrix to apply to the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Transitions">
      <summary>Gets or sets the collection of Transition style elements that apply to a UIElement.</summary>
      <returns>The strongly typed collection of Transition style elements that apply to a UIElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TransitionsProperty">
      <summary>Identifies the Transitions dependency property.</summary>
      <returns>The identifier for the Transitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Translation">
      <summary>Gets or sets the x, y, and z rendering position of the element.</summary>
      <returns>The x, y, and z rendering position of the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.TranslationTransition">
      <summary>Gets or sets the Vector3Transition that animates changes to the Translation property.</summary>
      <returns>The Vector3Transition that animates changes to the Translation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.UseLayoutRounding">
      <summary>Gets or sets a value that determines whether rendering for the object and its visual subtree should use rounding behavior that aligns rendering to whole pixels.</summary>
      <returns>**true** if rendering and layout should use layout rounding to whole pixels; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.UseLayoutRoundingProperty">
      <summary>Identifies the UseLayoutRounding dependency property.</summary>
      <returns>The identifier for the UseLayoutRounding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.Visibility">
      <summary>Gets or sets the visibility of a UIElement. A UIElement that is not visible is not rendered and does not communicate its desired size to layout.</summary>
      <returns>A value of the enumeration. The default value is **Visible**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.VisibilityProperty">
      <summary>Identifies the Visibility dependency property.</summary>
      <returns>The identifier for the Visibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XamlRoot">
      <summary>Gets or sets the XamlRoot in which this element is being viewed.</summary>
      <returns>The XamlRoot in which this element is being viewed. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusDownNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a down navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusDownNavigationStrategyProperty">
      <summary>Identifies the XYFocusDownNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusDownNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusKeyboardNavigation">
      <summary>Gets or sets a value that enables or disables navigation using the keyboard directional arrows.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusKeyboardNavigationProperty">
      <summary>Identifies the XYFocusKeyboardNavigation dependency property.</summary>
      <returns>The identifier for the XYFocusKeyboardNavigation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusLeftNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a left navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusLeftNavigationStrategyProperty">
      <summary>Identifies the XYFocusLeftNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusLeftNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusRightNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a right navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusRightNavigationStrategyProperty">
      <summary>Identifies the XYFocusRightNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusRightNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusUpNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of an up navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElement.XYFocusUpNavigationStrategyProperty">
      <summary>Identifies the XYFocusUpNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusUpNavigationStrategy dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.AccessKeyDisplayDismissed">
      <summary>Occurs when access keys should no longer be displayed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.AccessKeyDisplayRequested">
      <summary>Occurs when the user requests that access keys be displayed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.AccessKeyInvoked">
      <summary>Occurs when a user completes an access key sequence.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.BringIntoViewRequested">
      <summary>Occurs when StartBringIntoView is called on this element or one of its descendants.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.CharacterReceived">
      <summary>Occurs when a single, composed character is received by the input queue.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ContextCanceled">
      <summary>Occurs when a context input gesture continues into a manipulation gesture, to notify the element that the context flyout should not be opened.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ContextRequested">
      <summary>Occurs when the user has completed a context input gesture, such as a right-click.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DoubleTapped">
      <summary>Occurs when an otherwise unhandled **DoubleTap** interaction occurs over the hit test area of this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DragEnter">
      <summary>Occurs when the input system reports an underlying drag event with this element as the target.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DragLeave">
      <summary>Occurs when the input system reports an underlying drag event with this element as the origin.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DragOver">
      <summary>Occurs when the input system reports an underlying drag event with this element as the potential drop target.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DragStarting">
      <summary>Occurs when a drag operation is initiated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.Drop">
      <summary>Occurs when the input system reports an underlying drop event with this element as the drop target.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.DropCompleted">
      <summary>Occurs when a drag-and-drop operation is ended.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.GettingFocus">
      <summary>Occurs before a UIElement receives focus. This event is raised synchronously to ensure focus isn't moved while the event is bubbling.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.GotFocus">
      <summary>Occurs when a UIElement receives focus. This event is raised asynchronously, so focus can move again before bubbling is complete.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.Holding">
      <summary>Occurs when an otherwise unhandled **Hold** interaction occurs over the hit test area of this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.KeyDown">
      <summary>Occurs when a keyboard key is pressed while the UIElement has focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.KeyUp">
      <summary>Occurs when a keyboard key is released while the UIElement has focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.LosingFocus">
      <summary>Occurs before a UIElement loses focus. This event is raised synchronously to ensure focus isn't moved while the event is bubbling.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.LostFocus">
      <summary>Occurs when a UIElement loses focus. This event is raised asynchronously, so focus can move again before bubbling is complete.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ManipulationCompleted">
      <summary>Occurs when a manipulation on the UIElement is complete.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ManipulationDelta">
      <summary>Occurs when the input device changes position during a manipulation.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ManipulationInertiaStarting">
      <summary>Occurs when the input device loses contact with the UIElement object during a manipulation and inertia begins.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ManipulationStarted">
      <summary>Occurs when an input device begins a manipulation on the UIElement.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ManipulationStarting">
      <summary>Occurs when the manipulation processor is first created.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.NoFocusCandidateFound">
      <summary>Occurs when a user attempts to move focus (via tab or directional arrows), but focus doesn't move because no focus candidate is found in the direction of movement.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerCanceled">
      <summary>Occurs when a pointer that made contact abnormally loses contact.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerCaptureLost">
      <summary>Occurs when pointer capture previously held by this element moves to another element or elsewhere.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerEntered">
      <summary>Occurs when a pointer enters the hit test area of this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerExited">
      <summary>Occurs when a pointer leaves the hit test area of this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerMoved">
      <summary>Occurs when a pointer moves while the pointer remains within the hit test area of this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerPressed">
      <summary>Occurs when the pointer device initiates a **Press** action within this element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerReleased">
      <summary>Occurs when the pointer device that previously initiated a **Press** action is released, while within this element. Note that the end of a **Press** action is not guaranteed to fire a PointerReleased event; other events may fire instead. For more info, see Remarks.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PointerWheelChanged">
      <summary>Occurs when the delta value of a pointer wheel changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PreviewKeyDown">
      <summary>Occurs when a keyboard key is pressed while the UIElement has focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.PreviewKeyUp">
      <summary>Occurs when a keyboard key is released while the UIElement has focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.ProcessKeyboardAccelerators">
      <summary>Occurs when a keyboard shortcut (or accelerator) is pressed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.RightTapped">
      <summary>Occurs when a right-tap input stimulus happens while the pointer is over the element.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.UIElement.Tapped">
      <summary>Occurs when an otherwise unhandled **Tap** interaction occurs over the hit test area of this element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.AddHandler(Microsoft.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
      <summary>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element. Specify *handledEventsToo* as **true** to have the provided handler be invoked even if the event is handled elsewhere.</summary>
      <param name="routedEvent">An identifier for the routed event to be handled.</param>
      <param name="handler">A reference to the handler implementation.</param>
      <param name="handledEventsToo">**true** to register the handler such that it is invoked even when the routed event is marked handled in its event data.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
      <summary>Positions child objects and determines a size for a UIElement. Parent objects that implement custom layout for their child elements should call this method from their layout override implementations to form a recursive layout update.</summary>
      <param name="finalRect">The final size that the parent computes for the child in layout, provided as a Rect value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.CancelDirectManipulations">
      <summary>Cancels ongoing direct manipulation processing (system-defined panning/zooming) on any ScrollViewer parent that contains the current UIElement.</summary>
      <returns>**true** if a ScrollViewer parent exists and setting the value resulted in canceling the panning/zooming action. **false** if calling the method results in no action.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.CapturePointer(Microsoft.UI.Xaml.Input.Pointer)">
      <summary>Sets pointer capture to a UIElement. Once captured, only the element that has capture will fire pointer-related events.</summary>
      <param name="value">The pointer object reference.</param>
      <returns>**true** if the object has pointer capture; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
      <summary>Enables a UIElement subclass to expose child elements that assist with resolving touch targeting.</summary>
      <param name="point">The point being touched.</param>
      <param name="boundingRect">The bounds used for touch tolerance.</param>
      <returns>A set of point sets. These represent the vertices of sub elements that are intersected by the given touch point (plus tolerance).</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.GetChildrenInTabFocusOrder">
      <summary>Enables a UIElement subclass to expose child elements that take part in Tab focus.</summary>
      <returns>A collection of the UIElement's child elements that take part in Tab focus.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.InvalidateArrange">
      <summary>Invalidates the arrange state (layout) for a UIElement. After the invalidation, the UIElement will have its layout updated, which will occur asynchronously.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.InvalidateMeasure">
      <summary>Invalidates the measurement state (layout) for a UIElement.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
      <summary>Updates the DesiredSize of a UIElement. Typically, objects that implement custom layout for their layout children call this method from their own MeasureOverride implementations to form a recursive layout update.</summary>
      <param name="availableSize">The available space that a parent can allocate to a child object. A child object can request a larger space than what is available; the provided size might be accommodated if scrolling or other resize behavior is possible in that particular container.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.OnBringIntoViewRequested(Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs)">
      <summary>Called before the BringIntoViewRequested event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.OnCreateAutomationPeer">
      <summary>When implemented in a derived class, returns class-specific AutomationPeer implementations for the Microsoft UI Automation infrastructure.</summary>
      <returns>The class-specific AutomationPeer subclass to return.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.OnDisconnectVisualChildren">
      <summary>Override this method to implement how layout and logic should behave when items are removed from a class-specific content or children property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.OnKeyboardAcceleratorInvoked(Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs)">
      <summary>Called when a keyboard shortcut (or accelerator) is processed in your app. Override this method to handle how your app responds when a keyboard accelerator is invoked.</summary>
      <param name="args">The KeyboardAcceleratorInvokedEventArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.OnProcessKeyboardAccelerators(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)">
      <summary>Called just before a keyboard shortcut (or accelerator) is processed in your app. Invoked whenever application code or internal processes call ProcessKeyboardAccelerators. Override this method to influence the default accelerator handling.</summary>
      <param name="args">The ProcessKeyboardAcceleratorEventArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.PopulatePropertyInfoOverride(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>When overridden in a derived class, defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="animationPropertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.RegisterAsScrollPort(Microsoft.UI.Xaml.UIElement)">
      <summary>Registers an element as representing a scrollable viewport.</summary>
      <param name="element">The element to register as a scrollable viewport.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.ReleasePointerCapture(Microsoft.UI.Xaml.Input.Pointer)">
      <summary>Releases pointer captures for capture of one specific pointer by this UIElement.</summary>
      <param name="value">The pointer reference. Use either saved references from previous captures, or pointer event data, to obtain this reference.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.ReleasePointerCaptures">
      <summary>Releases all pointer captures held by this element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.RemoveHandler(Microsoft.UI.Xaml.RoutedEvent,System.Object)">
      <summary>Removes the specified routed event handler from this UIElement. Typically the handler in question was added by AddHandler.</summary>
      <param name="routedEvent">The identifier of the routed event for which the handler is attached.</param>
      <param name="handler">The specific handler implementation to remove from the event handler collection on this UIElement.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.StartAnimation(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Begins the specified animation on the element.</summary>
      <param name="animation">The animation to start.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.StartBringIntoView">
      <summary>Initiates a request to the XAML framework to bring the element into view within any scrollable regions it is contained within.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.StartBringIntoView(Microsoft.UI.Xaml.BringIntoViewOptions)">
      <summary>Initiates a request to the XAML framework to bring the element into view using the specified options.</summary>
      <param name="options">An instance of BringIntoViewOptions.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.StartDragAsync(Microsoft.UI.Input.PointerPoint)">
      <summary>Initiates a drag-and-drop operation.</summary>
      <param name="pointerPoint">The coordinates of the pointer where the user interacts with the screen, and where the drag visual is attached.</param>
      <returns>A DataPackageOperation value that indicates the type of drag-and-drop operation, and whether the operation was successful.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.StopAnimation(Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Stops the specified animation on the element.</summary>
      <param name="animation">The animation to stop.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.TransformToVisual(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a transform object that can be used to transform coordinates from the UIElement to the specified object.</summary>
      <param name="visual">The object to compare to the current object for purposes of obtaining the transform.</param>
      <returns>The transform information as an object. Call methods on this object to get a practical transform.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.TryInvokeKeyboardAccelerator(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)">
      <summary>Attempts to invoke a keyboard shortcut (or accelerator) by searching the entire visual tree of the UIElement for the shortcut.</summary>
      <param name="args">The ProcessKeyboardAcceleratorEventArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.TryStartDirectManipulation(Microsoft.UI.Xaml.Input.Pointer)">
      <summary>Resumes direct manipulation processing (system-defined panning/zooming) on any ScrollViewer parent that contains the current UIElement.</summary>
      <param name="value">The active touch point that initiated the manipulation.</param>
      <returns>**true** if a ScrollViewer parent exists and setting the value resulted in resuming the panning/zooming action. **false** if calling the method results in no action.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElement.UpdateLayout">
      <summary>Ensures that all positions of child objects of a UIElement are properly updated for layout.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.UIElementWeakCollection">
      <summary>Represents a collection of weak references to UIElement objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.#ctor">
      <summary>Initializes a new instance of the UIElementWeakCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.UIElementWeakCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.Append(Microsoft.UI.Xaml.UIElement)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.UIElement[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object that represents the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.IndexOf(Microsoft.UI.Xaml.UIElement,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.UIElement)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.ReplaceAll(Microsoft.UI.Xaml.UIElement[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.UIElementWeakCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets the value at the specified index to the specified UIElement value.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.UnhandledExceptionEventArgs">
      <summary>Provides data for the UnhandledException event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.UnhandledExceptionEventArgs.Exception">
      <summary>Gets the **HRESULT** code associated with the unhandled exception.</summary>
      <returns>The **HRESULT** code (for Visual C++ component extensions (C++/CX)), or a mapped common language runtime (CLR)  System.Exception.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UnhandledExceptionEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the exception is handled.</summary>
      <returns>**true** to mark the exception as handled, which indicates that the event system should not process it further; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.UnhandledExceptionEventArgs.Message">
      <summary>Gets the message string as passed by the originating unhandled exception.</summary>
      <returns>The message string, which may be useful for debugging.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.UnhandledExceptionEventHandler">
      <summary>Represents the method that will handle the UnhandledException event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Vector3Transition">
      <summary>Provides the animated transition behavior when an element's Translation or Scale properties change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Vector3Transition.#ctor">
      <summary>Initializes a new instance of the Vector3Transition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Vector3Transition.Components">
      <summary>Gets or sets a value that specifies whether to animate changes in the three subchannels of the Vector3.</summary>
      <returns>A value that specifies whether to animate changes in the subchannels of the Vector3.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Vector3Transition.Duration">
      <summary>Gets or sets the duration of the transition.</summary>
      <returns>The duration of the transition.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Vector3TransitionComponents">
      <summary>Defines constants that specify which axes to animate during the Vector3Transition animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Vector3TransitionComponents.X">
      <summary>Animate the X axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Vector3TransitionComponents.Y">
      <summary>Animate the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Vector3TransitionComponents.Z">
      <summary>Animate the Z axis.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.VerticalAlignment">
      <summary>Describes how a child element is vertically positioned or stretched within a parent's layout slot.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.VerticalAlignment.Bottom">
      <summary>The element is aligned to the bottom of the parent's layout slot.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.VerticalAlignment.Center">
      <summary>The element is aligned to the center of the parent's layout slot.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.VerticalAlignment.Stretch">
      <summary>The element is stretched to fill the entire layout slot of the parent element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.VerticalAlignment.Top">
      <summary>The element is aligned to the top of the parent's layout slot.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Visibility">
      <summary>Specifies the display state of an element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Visibility.Collapsed">
      <summary>Do not display the element, and do not reserve space for it in layout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Visibility.Visible">
      <summary>Display the element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualState">
      <summary>Represents the visual appearance of a UI element when it is in a specific state. Visual states use Setters or a Storyboard to set UI properties within pages or control templates where the VisualState is defined.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualState.#ctor">
      <summary>Initializes a new instance of the VisualState class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualState.Name">
      <summary>Gets the name of the VisualState.</summary>
      <returns>The name of the VisualState.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualState.Setters">
      <summary>Gets a collection of Setter objects that define discrete property values that control the appearance of UIElement s when this VisualState is applied.</summary>
      <returns>A collection of Setter objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualState.StateTriggers">
      <summary>Gets a collection of StateTriggerBase objects that indicate when this VisualState should be applied. If any (not all) of the triggers are active, the VisualState will be applied.</summary>
      <returns>A collection of StateTriggerBase objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualState.Storyboard">
      <summary>Gets or sets a Storyboard that defines state-specific property values and appearance of the control when it is using this visual state.</summary>
      <returns>A Storyboard that defines the property changes to apply to the control when this VisualState is used as the current visual state.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualStateChangedEventArgs">
      <summary>Provides data for the CurrentStateChanging and CurrentStateChanged events.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the VisualStateChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateChangedEventArgs.Control">
      <summary>Gets the Control that is changing states.</summary>
      <returns>The Control that is changing states.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateChangedEventArgs.NewState">
      <summary>Gets the state the Control is changing to or has changed to.</summary>
      <returns>The state the Control is changing to or has changed to.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateChangedEventArgs.OldState">
      <summary>Gets the state the Control is changing from or has changed from.</summary>
      <returns>The state the Control is changing from or has changed from.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualStateChangedEventHandler">
      <summary>Represents the method that will handle the CurrentStateChanging and CurrentStateChanged events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualStateGroup">
      <summary>Contains mutually exclusive VisualState objects and VisualTransition objects that are used to go from one state to another.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateGroup.#ctor">
      <summary>Initializes a new instance of the VisualStateGroup class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateGroup.CurrentState">
      <summary>Gets the most recently set VisualState from a successful call to the GoToState method.</summary>
      <returns>The most recently set VisualState from a successful call to the GoToState method, or **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateGroup.Name">
      <summary>Gets the name of the VisualStateGroup.</summary>
      <returns>The name of the VisualStateGroup.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateGroup.States">
      <summary>Gets the collection of mutually exclusive VisualState objects.</summary>
      <returns>The collection of mutually exclusive VisualState objects.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateGroup.Transitions">
      <summary>Gets the collection of VisualTransition objects.</summary>
      <returns>The collection of VisualTransition objects.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.VisualStateGroup.CurrentStateChanged">
      <summary>Occurs after a control changes into a different state.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.VisualStateGroup.CurrentStateChanging">
      <summary>Occurs when a control begins changing into a different state.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualStateManager">
      <summary>Manages visual states and the logic for transitions between visual states for controls. Also provides the attached property support for VisualStateManager.VisualStateGroups, which is how you define visual states in XAML for a control template.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.#ctor">
      <summary>Initializes a new instance of the VisualStateManager class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>Identifies the **VisualStateManager.CustomVisualStateManager** dependency property.</summary>
      <returns>The identifier for the **VisualStateManager.CustomVisualStateManager** dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.GetCustomVisualStateManager(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the VisualStateManager.CustomVisualStateManager attached property.</summary>
      <param name="obj">The object to get the value from.</param>
      <returns>The VisualStateManager that transitions between the states of a control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.GetVisualStateGroups(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the VisualStateManager.VisualStateGroups attached property.</summary>
      <param name="obj">The object to get the value from.</param>
      <returns>The collection of VisualStateGroup objects that is associated with the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.GoToState(Microsoft.UI.Xaml.Controls.Control,System.String,System.Boolean)">
      <summary>Transitions a control between two states, by requesting a new VisualState by name.</summary>
      <param name="control">The control to transition between states.</param>
      <param name="stateName">The state to transition to.</param>
      <param name="useTransitions">**true** to use a VisualTransition to transition between states. **false** to skip using transitions and go directly to the requested state. The default is **false**.</param>
      <returns>**true** if the control successfully transitions to the new state, or was already using that state; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.GoToStateCore(Microsoft.UI.Xaml.Controls.Control,Microsoft.UI.Xaml.FrameworkElement,System.String,Microsoft.UI.Xaml.VisualStateGroup,Microsoft.UI.Xaml.VisualState,System.Boolean)">
      <summary>When overridden in a derived class, transitions a control between states.</summary>
      <param name="control">The control to transition between states.</param>
      <param name="templateRoot">The root element of the control's ControlTemplate.</param>
      <param name="stateName">The name of the state to transition to.</param>
      <param name="group">The VisualStateGroup that the state belongs to.</param>
      <param name="state">The representation of the state to transition to.</param>
      <param name="useTransitions">**true** to use a VisualTransition to transition between states; otherwise, **false**.</param>
      <returns>**true** if the control successfully transitions to the new state; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.RaiseCurrentStateChanged(Microsoft.UI.Xaml.VisualStateGroup,Microsoft.UI.Xaml.VisualState,Microsoft.UI.Xaml.VisualState,Microsoft.UI.Xaml.Controls.Control)">
      <summary>When overridden in a derived class, fires the CurrentStateChanged event on the specified VisualStateGroup.</summary>
      <param name="stateGroup">The object on which the CurrentStateChanging event occurred.</param>
      <param name="oldState">The state that the control transitions from.</param>
      <param name="newState">The state that the control transitions to.</param>
      <param name="control">The control that transitioned states.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.RaiseCurrentStateChanging(Microsoft.UI.Xaml.VisualStateGroup,Microsoft.UI.Xaml.VisualState,Microsoft.UI.Xaml.VisualState,Microsoft.UI.Xaml.Controls.Control)">
      <summary>When overridden in a derived class, fires the CurrentStateChanging event on the specified VisualStateGroup.</summary>
      <param name="stateGroup">The object that the CurrentStateChanging event occurred on.</param>
      <param name="oldState">The state that the control is transitioning from.</param>
      <param name="newState">The state that the control should transition to.</param>
      <param name="control">The control where the transition animation between states is applied.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualStateManager.SetCustomVisualStateManager(Microsoft.UI.Xaml.FrameworkElement,Microsoft.UI.Xaml.VisualStateManager)">
      <summary>Sets the value of the VisualStateManager.CustomVisualStateManager attached property.</summary>
      <param name="obj">The target element where the property is set.</param>
      <param name="value">The VisualStateManager that transitions between the states of a control.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.VisualTransition">
      <summary>Represents the visual behavior that occurs when the control transitions from one visual state to another.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.VisualTransition.#ctor">
      <summary>Initializes a new instance of the VisualTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualTransition.From">
      <summary>Gets or sets the name of the VisualState to transition from.</summary>
      <returns>The name of the VisualState to transition from.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualTransition.GeneratedDuration">
      <summary>Gets or sets the amount of time it takes to move from one state to another, and the time that any implicit transition animations should run as part of the transition behavior.</summary>
      <returns>The amount of time it takes to move from one state to another.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction">
      <summary>Gets or sets the easing function applied to the generated animations.</summary>
      <returns>An easing function implementation that is applied to the generated animations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualTransition.Storyboard">
      <summary>Gets or sets the Storyboard that runs when the transition occurs.</summary>
      <returns>The Storyboard that occurs when the transition occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.VisualTransition.To">
      <summary>Gets or sets the name of the VisualState to transition to.</summary>
      <returns>The name of the VisualState to transition to.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Window">
      <summary>Represents an application window.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Bounds">
      <summary>Gets a Rect value containing the height and width of the application window in units of effective (view) pixels.</summary>
      <returns>A value that reports the height and width of the application window.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Compositor">
      <summary>Gets the Compositor for this window.</summary>
      <returns>The Compositor for this window.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Content">
      <summary>Gets or sets the visual root of an application window.</summary>
      <returns>The visual root of an application window.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.CoreWindow">
      <summary>Gets an internal *core* object for the application window.</summary>
      <returns>A **CoreWindow** object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Current">
      <summary>Gets the currently activated window for an application.</summary>
      <returns>The currently activated window.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Dispatcher">
      <summary>Gets the CoreDispatcher object for the Window, which is generally the CoreDispatcher for the UI thread.</summary>
      <returns>An object that references the UI thread for the Window.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Window.Visible">
      <summary>Gets a value that reports whether the window is visible.</summary>
      <returns>**true** if the window is visible; **false** if the window is not visible.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Window.Activated">
      <summary>Occurs when the window has successfully been activated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Window.Closed">
      <summary>Occurs when the window has closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Window.SizeChanged">
      <summary>Occurs when the app window has first rendered or has changed its rendering size.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Window.VisibilityChanged">
      <summary>Occurs when the value of the Visible property changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Window.Activate">
      <summary>Attempts to activate the application window by bringing it to the foreground and setting the input focus to it.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Window.Close">
      <summary>Closes the application window.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.WindowCreatedEventArgs">
      <summary>Provides data for the OnWindowCreated method.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.WindowCreatedEventArgs.Window">
      <summary>Gets the window that was created.</summary>
      <returns>The window that was created</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.WindowVisibilityChangedEventHandler">
      <summary>Represents the method that will handle the VisibilityChanged event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.XamlRoot">
      <summary>Represents a tree of XAML content and information about the context in which it is hosted.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.XamlRoot.Content">
      <summary>Gets the root element of the XAML element tree.</summary>
      <returns>The root element of the XAML element tree.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.XamlRoot.IsHostVisible">
      <summary>Gets a value that indicates whether the XamlRoot is visible.</summary>
      <returns>**true** if the XamlRoot is visible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.XamlRoot.RasterizationScale">
      <summary>Gets a value that represents the number of raw (physical) pixels for each view pixel.</summary>
      <returns>A value that represents the number of raw (physical) pixels for each view pixel.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.XamlRoot.Size">
      <summary>Gets the width and height of the content area.</summary>
      <returns>The width and height of the content area.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.XamlRoot.Changed">
      <summary>Occurs when a property of XamlRoot has changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.XamlRootChangedEventArgs">
      <summary>Provides data for the XamlRoot.Changed event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers">
      <summary>Contains values used as identifiers by IAnnotationProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.AnnotationTypeIdProperty">
      <summary>Gets the identifier for the AnnotationTypeId automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.AnnotationTypeNameProperty">
      <summary>Gets the identifier for the AnnotationTypeName automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.AuthorProperty">
      <summary>Gets the identifier for the Author automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.DateTimeProperty">
      <summary>Gets the identifier for the DateTime automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.TargetProperty">
      <summary>Gets the identifier for the Target automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AnnotationType">
      <summary>Provides a set of constants that identify types of annotations in a document, as used by the ISpreadsheetItemProvider  Microsoft UI Automation interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.AdvancedProofingIssue">
      <summary>An advanced proofing issue.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Author">
      <summary>Author info.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.CircularReferenceError">
      <summary>A circular reference error.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Comment">
      <summary>A comment. Comments can take different forms depending on the application.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.ConflictingChange">
      <summary>A conflicting change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.DataValidationError">
      <summary>A data validation error.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.DeletionChange">
      <summary>A deletion change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.EditingLockedChange">
      <summary>An editing locked change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Endnote">
      <summary>Endnote content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.ExternalChange">
      <summary>An external change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Footer">
      <summary>The footer for a page in a document.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Footnote">
      <summary>Footnote content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.FormatChange">
      <summary>A format change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.FormulaError">
      <summary>An error in a formula. Formula errors typically include red text and exclamation marks.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.GrammarError">
      <summary>A grammatical error, often denoted by a green squiggly line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Header">
      <summary>The header for a page in a document.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Highlighted">
      <summary>Highlighted content, typically denoted by a contrasting background color.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.InsertionChange">
      <summary>An insertion change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.MoveChange">
      <summary>A move change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.SpellingError">
      <summary>A spelling error, often denoted by a red squiggly line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.TrackChanges">
      <summary>A change that was made to the document.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.Unknown">
      <summary>The annotation type is unknown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AnnotationType.UnsyncedChange">
      <summary>An unsynced change.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationActiveEnd">
      <summary>Defines values for the SelectionActiveEnd text attribute, which indicates the location of the caret relative to a text range that represents the currently selected text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationActiveEnd.End">
      <summary>The caret is at the end of the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationActiveEnd.None">
      <summary>The caret is not at either end of the text range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationActiveEnd.Start">
      <summary>The caret is at the beginning of the text range.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle">
      <summary>Defines the style of animation for the automation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.BlinkingBackground">
      <summary>Blinking background animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.LasVegasLights">
      <summary>Las Vegas lights style animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.MarchingBlackAnts">
      <summary>Marching black ants animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.MarchingRedAnts">
      <summary>Marching red ants animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.None">
      <summary>No animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.Other">
      <summary>Other animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.Shimmer">
      <summary>Shimmer style animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationAnimationStyle.SparkleText">
      <summary>Sparkling text animation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationAnnotation">
      <summary>Represents a single UI automation annotation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationAnnotation.#ctor">
      <summary>Initializes a new instance of the  class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationAnnotation.#ctor(Microsoft.UI.Xaml.Automation.AnnotationType)">
      <summary>Initializes a new instance of the  class using the supplied parameters.</summary>
      <param name="type">Specifies the type of the annotation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationAnnotation.#ctor(Microsoft.UI.Xaml.Automation.AnnotationType,Microsoft.UI.Xaml.UIElement)">
      <summary>Initializes a new instance of the  class using the supplied parameters.</summary>
      <param name="type">Specifies the type of the annotation.</param>
      <param name="element">Specifies the element that implements the annotation.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationAnnotation.Element">
      <summary>Gets or sets the element that implements the annotation.</summary>
      <returns>The element that implements the annotation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationAnnotation.ElementProperty">
      <summary>Gets the identifier of the  property.</summary>
      <returns>The identifier of the  property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationAnnotation.Type">
      <summary>Gets or sets the type of the annotation.</summary>
      <returns>The type of the annotation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationAnnotation.TypeProperty">
      <summary>Gets the identifier of the  property.</summary>
      <returns>The identifier of the  property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationBulletStyle">
      <summary>Defines the style of bullets used by the automation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.DashBullet">
      <summary>Dashed bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.FilledRoundBullet">
      <summary>Filled round bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.FilledSquareBullet">
      <summary>Filled square bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.HollowRoundBullet">
      <summary>Hollow round bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.HollowSquareBullet">
      <summary>Hollow square bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.None">
      <summary>No bullets.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationBulletStyle.Other">
      <summary>Other style of bullets.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode">
      <summary>Defines the direction that the caret travels.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode.LTR">
      <summary>Left to right.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode.RTL">
      <summary>Right to left.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationCaretPosition">
      <summary>Defines the caret position.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationCaretPosition.BeginningOfLine">
      <summary>Caret is at the beginning of the line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationCaretPosition.EndOfLine">
      <summary>Caret is at the end of the line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationCaretPosition.Unknown">
      <summary>Caret position is unknown.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers">
      <summary>Contains values used as automation property identifiers by UI Automation providers and UI Automation clients.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.AcceleratorKeyProperty">
      <summary>Identifies the accelerator key automation property. The accelerator key property value is returned by the GetAcceleratorKey method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.AccessKeyProperty">
      <summary>Identifies the access key automation property. The access key property value is returned by the GetAccessKey method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.AnnotationsProperty">
      <summary>Gets the identifier for the annotations automation property.</summary>
      <returns>The identifier for the annotations automation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.AutomationIdProperty">
      <summary>Identifies the automation element identifier automation property. The automation element identifier value is returned by the GetAutomationId method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.BoundingRectangleProperty">
      <summary>Identifies the bounding rectangle automation property. The bounding rectangle property value is returned by the GetBoundingRectangle method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ClassNameProperty">
      <summary>Identifies the class name automation property. The class name property value is returned by the GetClassName method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ClickablePointProperty">
      <summary>Identifies the clickable point automation property. A valid clickable point property value is returned by the GetClickablePoint method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ControlledPeersProperty">
      <summary>Identifies the controlled peers automation property. A list of controlled peers is returned by the GetControlledPeers method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ControlTypeProperty">
      <summary>Identifies the control type automation property. The control type property value is returned by the GetAutomationControlType method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.CultureProperty">
      <summary>Identifies the Culture property, which contains a locale identifier for the automation element (for example, 0x0409 for "en-US" or English (United States)).</summary>
      <returns>The culture property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.DescribedByProperty">
      <summary>Identifies the described by automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.FlowsFromProperty">
      <summary>Identifies the "flows from" automation property. The "flows from" property value is returned by the GetFlowsFrom method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.FlowsToProperty">
      <summary>Identifies the "flows to" automation property. The "flows to" property value is returned by the GetFlowsTo method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.FullDescriptionProperty">
      <summary>Identifies the full description automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.HasKeyboardFocusProperty">
      <summary>Identifies the keyboard focus automation property. The keyboard focus state is returned by the HasKeyboardFocus method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.HeadingLevelProperty">
      <summary>Identifies the heading level automation property. The heading level property value is returned by the GetHeadingLevel method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.HelpTextProperty">
      <summary>Identifies the help text automation property. The help text property value is returned by the GetHelpText method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsContentElementProperty">
      <summary>Identifies the content element determination automation property. The content element status indicates whether the element contains content that is valuable to the end user. The current status is returned by the IsContentElement method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsControlElementProperty">
      <summary>Identifies the control element determination automation property. The control element status indicates whether the element contains user interface components that can be manipulated. The current status is returned by the IsControlElement method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsDataValidForFormProperty">
      <summary>Identifies the Boolean automation property that indicates if the data is valid for the form.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsDialogProperty">
      <summary>Identifies the Boolean AutomationProperties.IsDialogProperty that indicates whether the automation element is a dialog window.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsEnabledProperty">
      <summary>Identifies the enabled determination automation property. The enabled status indicates whether the item referenced by the automation peer is enabled. The current status is returned by the IsEnabled method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsKeyboardFocusableProperty">
      <summary>Identifies the keyboard-focusable determination automation property. The keyboard focusable status is returned by the IsKeyboardFocusable method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsOffscreenProperty">
      <summary>Identifies the offscreen determination automation property. The offscreen status indicates whether the item referenced by the automation peer is off the screen. The current status is returned by the IsOffscreen method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsPasswordProperty">
      <summary>Identifies the password determination automation property. The password status indicates whether the item referenced by the automation peer contains a password. The current status is returned by the IsPassword method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsPeripheralProperty">
      <summary>Identifies the Boolean automation property that indicates if the automation element represents peripheral UI.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.IsRequiredForFormProperty">
      <summary>Identifies the form requirement determination automation property. The form requirement status indicates whether the element must be completed on a form. The current status is returned by the IsRequiredForForm method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ItemStatusProperty">
      <summary>Identifies the item status automation property. The current item status is returned by the GetItemStatus method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.ItemTypeProperty">
      <summary>Identifies the item type automation property. The item type value is returned by GetItemType method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LabeledByProperty">
      <summary>Identifies the labeled-by peer automation property. The labeling relationship for an automation peer is returned by the GetLabeledBy method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LandmarkTypeProperty">
      <summary>Gets the identifier for the landmark type automation property.</summary>
      <returns>The identifier for the landmark type automation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LevelProperty">
      <summary>Gets the identifier for the level automation property.</summary>
      <returns>The identifier for the level automation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LiveSettingProperty">
      <summary>Identifies the live settings automation property. The live settings property value is returned by the GetLiveSetting method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LocalizedControlTypeProperty">
      <summary>Identifies the localized control type automation property which provides a mechanism to alter the control type read by Narrator.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.LocalizedLandmarkTypeProperty">
      <summary>Gets the identifier for the localized landmark type automation property.</summary>
      <returns>The identifier for the localized landmark type automation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.NameProperty">
      <summary>Identifies the element name automation property. The current name is returned by the GetName method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.OrientationProperty">
      <summary>Identifies the orientation automation property. The current orientation value is returned by the GetOrientation method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.PositionInSetProperty">
      <summary>Gets the identifier for the position in set automation property.</summary>
      <returns>The identifier for the position in set automation property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.SizeOfSetProperty">
      <summary>Gets the identification of the size of set automation property.</summary>
      <returns>The identification of the size of set automation property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationFlowDirections">
      <summary>Defines the direction of flow.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationFlowDirections.BottomToTop">
      <summary>Flow is from bottom to top.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationFlowDirections.Default">
      <summary>Flow is in the default direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationFlowDirections.RightToLeft">
      <summary>Flow is from right to left.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationFlowDirections.Vertical">
      <summary>Flow is vertical.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles">
      <summary>Defines the outline style.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles.Embossed">
      <summary>Embossed outline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles.Engraved">
      <summary>Engraved outline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles.None">
      <summary>No outline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles.Outline">
      <summary>Standard outline.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationOutlineStyles.Shadow">
      <summary>Drop shadow.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationProperties">
      <summary>Provides support for getting or setting instance-level values of automation properties. These property values are set as attached properties (typically in XAML) and supplement or override automation property values from a control's AutomationPeer.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.AcceleratorKeyProperty">
      <summary>Identifies the AutomationProperties.AcceleratorKey attached property, which is a string containing the accelerator key (also called shortcut key) combinations for the automation element.</summary>
      <returns>The identifier for the AutomationProperties.AcceleratorKey attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.AccessibilityViewProperty">
      <summary>Identifies the AutomationProperties.AccessibilityView attached property. Set this attached property on individual elements in order to change their element visibility to specific modes requested by a UI Automation client.</summary>
      <returns>The identifier for the AutomationProperties.AccessibilityView attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.AccessKeyProperty">
      <summary>Identifies the AutomationProperties.AccessKey attached property, which is a string containing the access key character for the automation element.</summary>
      <returns>The identifier for the AutomationProperties.AccessKey attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.AnnotationsProperty">
      <summary>Identifies a dependency property that's used for a list of annotation objects in a document, such as comment, header, footer, and so on.</summary>
      <returns>The identifier for the **Annotations** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationIdProperty">
      <summary>Identifies the AutomationProperties.AutomationId attached property, which is a string containing the UI Automation identifier (ID) for the automation element.</summary>
      <returns>The identifier for the AutomationProperties.AutomationId attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.ControlledPeersProperty">
      <summary>Identifies the ControlledPeers attached property, which is used for a collection of automation elements that can be manipulated by the specified automation element.</summary>
      <returns>The identifier for the ControlledPeers attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.CultureProperty">
      <summary>Gets the identifier for the culture attached property which contains a locale identifier for the automation element (for example, 0x0409 for "en-US" or English (United States)).</summary>
      <returns>The identifier for the culture attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.DescribedByProperty">
      <summary>Gets the identifier for the described by attached property, which is an array of elements that provide more information about the automation element.</summary>
      <returns>The identifier for the described by attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsFromProperty">
      <summary>Gets the identifier for the **FlowsFrom** attached property, which is an array of automation elements that suggests the reading order before the current automation element.</summary>
      <returns>The identifier for the **FlowsFrom** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsToProperty">
      <summary>Gets the identifier for the **FlowsTo** attached property, which is an array of automation elements that suggests the reading order after the current automation element.</summary>
      <returns>The identifier for the "flows to" attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.FullDescriptionProperty">
      <summary>Gets the identifier for the full description attached property, which exposes a localized string containing extended description text for an element.</summary>
      <returns>The identifier for the full description attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.HeadingLevelProperty">
      <summary>Gets the identifier for the **HeadingLevel** attached property, which indicates the heading level for a UI Automation element.</summary>
      <returns>The identifier for the **HeadingLevel** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.HelpTextProperty">
      <summary>Identifies the AutomationProperties.HelpText attached property, which is a help text string associated with the automation element.</summary>
      <returns>The identifier for the AutomationProperties.HelpText attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.IsDataValidForFormProperty">
      <summary>Identifies the Boolean dependency property that indicates if the data is valid for the form.</summary>
      <returns>The dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.IsDialogProperty">
      <summary>Identifies the AutomationProperties.IsDialog attached property, which is a Boolean value that indicates whether the automation element is a dialog window.</summary>
      <returns>The identifier for the AutomationProperties.IsDialog attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.IsPeripheralProperty">
      <summary>Identifies the Boolean dependency property that indicates if the automation element represents peripheral UI.</summary>
      <returns>The dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.IsRequiredForFormProperty">
      <summary>Identifies the AutomationProperties.IsRequiredForForm attached property, which is a Boolean value that indicates whether the automation element is required to be filled out on a form.</summary>
      <returns>The identifier for the AutomationProperties.IsRequiredForForm attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.ItemStatusProperty">
      <summary>Identifies the AutomationProperties.ItemStatus attached property, which is a text string describing the status of an item of the automation element.</summary>
      <returns>The identifier for the AutomationProperties.ItemStatus attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.ItemTypeProperty">
      <summary>Identifies the AutomationProperties.ItemType attached property, which is a text string describing the type of the automation element.</summary>
      <returns>The identifier for the AutomationProperties.ItemType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LabeledByProperty">
      <summary>Identifies the AutomationProperties.LabeledBy attached property, which is an automation element that contains the text label for this element.</summary>
      <returns>The identifier for the AutomationProperties.LabeledBy attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LandmarkTypeProperty">
      <summary>Gets the identifier for the landmark type attached property, which is a Landmark Type Identifier associated with an element.</summary>
      <returns>The identifier for the landmark type attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LevelProperty">
      <summary>Gets the identifier for the **Level** attached property, which is a 1-based integer associated with an automation element.</summary>
      <returns>The identifier for the **Level** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LiveSettingProperty">
      <summary>Identifies the AutomationProperties.LiveSetting attached property, which is supported by an automation element that represents a live region.</summary>
      <returns>The property identifier for the AutomationProperties.LiveSetting attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedControlTypeProperty">
      <summary>Identifies the localized control type dependency property, which is a text string describing the type of control that the automation element represents.</summary>
      <returns>The dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedLandmarkTypeProperty">
      <summary>Gets the identifier for the localized landmark type attached property, which is a localized text string describing the type of landmark that the automation element represents.</summary>
      <returns>The identifier for the localized landmark type attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.NameProperty">
      <summary>Identifies the AutomationProperties.Name attached property, which is a string that holds the name of the automation element.</summary>
      <returns>The identifier for the AutomationProperties.Name attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.PositionInSetProperty">
      <summary>Gets the identifier for the **PositionInSet** attached property, which is a 1-based integer associated with an automation element.</summary>
      <returns>The identifier for the **PositionInSet** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.AutomationProperties.SizeOfSetProperty">
      <summary>Gets the identifier for the  attached property.</summary>
      <returns>The identifier for the  attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetAcceleratorKey(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.AcceleratorKey attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The accelerator key, as a string.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetAccessibilityView(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.AccessibilityView attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The accessibility view setting, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetAccessKey(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.AccessKey attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The access key, as a string.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetAnnotations(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.Annotations property for the specified DependencyObject.</summary>
      <param name="element">The specified DependencyObject.</param>
      <returns>The value of the AutomationProperties.Annotations property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetAutomationId(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.AutomationId attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The UI Automation identifier for the specified element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetControlledPeers(Microsoft.UI.Xaml.DependencyObject)">
      <summary>A static utility method that retrieves the list of controlled peers from a target owner.</summary>
      <param name="element">The owner object to retrieve controlled peers from.</param>
      <returns>A list containing the peers that the target element controls.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetCulture(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the CultureProperty attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The value of the culture property for the specified *element*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetDescribedBy(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a collection of elements that provide more information about the specified automation element.</summary>
      <param name="element">The automation element for which to get the described by collection.</param>
      <returns>A collection of elements that provide more information about the automation element specified by the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetFlowsFrom(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a list of automation elements that suggests the reading order before the specified automation element.</summary>
      <param name="element">The element for which to get the preceding reading order elements.</param>
      <returns>A list of automation elements that suggests the reading order before the automation element specified by the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetFlowsTo(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a list of automation elements that suggests the reading order after the specified automation element.</summary>
      <param name="element">The element for which to get the following reading order elements.</param>
      <returns>A list of automation elements that suggests the reading order after the automation element specified by the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetFullDescription(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a localized string that describes the visual appearance or contents of the specified DependencyObject.</summary>
      <param name="element">The object for which to get the full description.</param>
      <returns>A localized string that describes the visual appearance or contents of the object specified in the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetHeadingLevel(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.HeadingLevel property for the specified DependencyObject.</summary>
      <param name="element">The specified DependencyObject.</param>
      <returns>The value of the AutomationProperties.HeadingLevel property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetHelpText(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.HelpText attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The help text for the specified element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetIsDataValidForForm(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the specified element.</summary>
      <param name="element">The element for which to get data validation.</param>
      <returns>A Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the object specified by the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetIsDialog(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.IsDialog attached property for the specified DependencyObject.</summary>
      <param name="element">The object to check.</param>
      <returns>**true** if the specified element is identified as a dialog window; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetIsPeripheral(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a Boolean value that indicates whether the specified element represents peripheral UI.</summary>
      <param name="element">The element to check for peripheral data.</param>
      <returns>A Boolean value that indicates whether the DependencyObject specified by the *element* parameter represents peripheral UI.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetIsRequiredForForm(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.IsRequiredForForm attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>**true** if the specified element is required for completion of a form; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetItemStatus(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.ItemStatus attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The item status of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetItemType(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.ItemType attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The item type of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLabeledBy(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.LabeledBy attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The element that is targeted by the label.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLandmarkType(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the landmark type attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The landmark type of the *element*</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLevel(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the  property for the specified .</summary>
      <param name="element">The specified .</param>
      <returns>The value of the  property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLiveSetting(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.LiveSetting attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The live setting value for the specified element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLocalizedControlType(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a localized string that indicates the type of the specified control.</summary>
      <param name="element">The control for which to retrieve the type.</param>
      <returns>A localized string that indicates the type of the control specified by the *element* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetLocalizedLandmarkType(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the localized landmark type attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The localized string defining the landmark type of the *element*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetName(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the AutomationProperties.Name attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to check.</param>
      <returns>The name of the specified element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetPositionInSet(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the  property for the specified .</summary>
      <param name="element">The specified .</param>
      <returns>The value of the  property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.GetSizeOfSet(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the  property for the specified .</summary>
      <param name="element">The specified .</param>
      <returns>The value of the  property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetAcceleratorKey(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.AcceleratorKey attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The accelerator key value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetAccessibilityView(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Automation.Peers.AccessibilityView)">
      <summary>Sets the value of the AutomationProperties.AccessibilityView attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject to set the attached property on.</param>
      <param name="value">The enumeration value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetAccessKey(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.AccessKey attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The access key value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetAutomationId(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.AutomationId attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The UI Automation identifier value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetCulture(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the CultureProperty attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the culture property.</param>
      <param name="value">The value of the culture property to set for the specified *element*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetFullDescription(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets a localized string that describes the visual appearance or contents of the specified DependencyObject.</summary>
      <param name="element">The object for which to set the full description.</param>
      <param name="value">The localized full description of the object specified in the *element* parameter.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetHeadingLevel(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel)">
      <summary>Sets the value of the AutomationProperties.HeadingLevel property for the specified DependencyObject.</summary>
      <param name="element">The specified DependencyObject.</param>
      <param name="value">The value for the heading level.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetHelpText(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.HelpText attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The help text.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetIsDataValidForForm(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets a Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the specified element.</summary>
      <param name="element">The element for which to set data validation.</param>
      <param name="value">A Boolean value that indicates whether the entered or selected data is valid for the form.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetIsDialog(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets a Boolean value that indicates whether the specified element should be identified as a dialog window.</summary>
      <param name="element">The object to identify as a dialog window.</param>
      <param name="value">**true** if the element should be identified as a dialog window; otherwise, **false**.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetIsPeripheral(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets a Boolean value that indicates whether the specified element represents peripheral UI.</summary>
      <param name="element">The element for which to set peripheral data.</param>
      <param name="value">A Boolean value that indicates whether the DependencyObject specified by the *element* parameter represents peripheral UI.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetIsRequiredForForm(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the AutomationProperties.IsRequiredForForm attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">**true** to specify that the element is required to be filled out on a form; otherwise, **false**.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetItemStatus(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.ItemStatus attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The item status.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetItemType(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.ItemType attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The item type.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLabeledBy(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets the value of the AutomationProperties.LabeledBy attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The UI element that represents the label for *element*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLandmarkType(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType)">
      <summary>Sets the value of the landmark type attached property for the specified DependencyObject.</summary>
      <param name="element">The specified DependencyObject.</param>
      <param name="value">The value of the landmark type property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLevel(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the AutomationProperties.Level attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLiveSetting(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting)">
      <summary>Sets the value of the AutomationProperties.LiveSetting attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The AutomationLiveSetting value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLocalizedControlType(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets a localized string that indicates the type of the specified control.</summary>
      <param name="element">The control for which to set the type.</param>
      <param name="value">A localized string that indicates the type of the control specified by the *element* parameter.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetLocalizedLandmarkType(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the localized landmark type attached property for the specified DependencyObject.</summary>
      <param name="element">The specified DependencyObject.</param>
      <param name="value">The localized string defining the landmark type of the *element*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetName(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the value of the AutomationProperties.Name attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The object name.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetPositionInSet(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the AutomationProperties.PositionInSet attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.AutomationProperties.SetSizeOfSet(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the AutomationProperties.SizeOfSet attached property for the specified DependencyObject.</summary>
      <param name="element">The DependencyObject for which to set the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationProperty">
      <summary>Identifies a property of AutomationElementIdentifiers or of a specific control pattern.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationStyleId">
      <summary>Defines the style of the text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.BulletedList">
      <summary>Text styled as Bulleted List.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Emphasis">
      <summary>Text styled as Emphasis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading1">
      <summary>Text styled as Heading 1.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading2">
      <summary>Text styled as Heading 2.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading3">
      <summary>Text styled as Heading 3.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading4">
      <summary>Text styled as Heading 4.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading5">
      <summary>Text styled as Heading 5.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading6">
      <summary>Text styled as Heading 6.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading7">
      <summary>Text styled as Heading 7.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading8">
      <summary>Text styled as Heading 8.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Heading9">
      <summary>Text styled as Heading 9.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Normal">
      <summary>Text styled as Normal.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Quote">
      <summary>Text styled as Quote.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Subtitle">
      <summary>Text styled as Subtitle.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationStyleId.Title">
      <summary>Text styled as Title.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle">
      <summary>Defines the line style of text decorations.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Dash">
      <summary>Dashed line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.DashDot">
      <summary>Dash-dot line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.DashDotDot">
      <summary>Dash-dot-dot line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Dot">
      <summary>Dotted line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Double">
      <summary>Double line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.DoubleWavy">
      <summary>Double wavy line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.LongDash">
      <summary>Long dashed line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.None">
      <summary>No text decoration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Other">
      <summary>Other line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Single">
      <summary>Single line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickDash">
      <summary>Thick dashed line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickDashDot">
      <summary>Thick dash-dot line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickDashDotDot">
      <summary>Thick dash-dot-dot line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickDot">
      <summary>Thick dotted line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickLongDash">
      <summary>Thick long dashed line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickSingle">
      <summary>Single thick line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.ThickWavy">
      <summary>Thick wavy line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.Wavy">
      <summary>Wavy line.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle.WordsOnly">
      <summary>Words only.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType">
      <summary>Defines the type of text edit change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType.AutoCorrect">
      <summary>Change is from an auto-correct action performed by a control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType.Composition">
      <summary>Change is from an IME active composition within a control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType.CompositionFinalized">
      <summary>Change is from an IME composition going from active to finalized state within a control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType.None">
      <summary>Not related to a specific change type.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.DockPatternIdentifiers">
      <summary>Contains values used as identifiers by IDockProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DockPatternIdentifiers.DockPositionProperty">
      <summary>Identifies the DockPosition automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.DockPosition">
      <summary>Contains values that specify the dock position of an object within a docking container. Used by IDockProvider.DockPosition.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.Bottom">
      <summary>Indicates that the UI Automation element is docked along the bottom edge of the docking container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.Fill">
      <summary>Indicates that the UI Automation element is docked along all edges of the docking container and fills all available space within the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.Left">
      <summary>Indicates that the UI Automation element is docked along the left edge of the docking container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.None">
      <summary>Indicates that the UI Automation element is not docked to any edge of the docking container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.Right">
      <summary>Indicates that the UI Automation element is docked along the right edge of the docking container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.DockPosition.Top">
      <summary>Indicates that the UI Automation element is docked along the top edge of the docking container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.DragPatternIdentifiers">
      <summary>Contains values used as identifiers by IDragProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DragPatternIdentifiers.DropEffectProperty">
      <summary>Gets the identifier for the DropEffect automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DragPatternIdentifiers.DropEffectsProperty">
      <summary>Gets the identifier for the DropEffects automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DragPatternIdentifiers.GrabbedItemsProperty">
      <summary>Gets the identifier for the GrabbedItems automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DragPatternIdentifiers.IsGrabbedProperty">
      <summary>Gets the identifier for the IsGrabbed automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers">
      <summary>Contains values used as identifiers by IDropTargetProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers.DropTargetEffectProperty">
      <summary>Gets the identifier for the DropEffect automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers.DropTargetEffectsProperty">
      <summary>Gets the identifier for the DropEffects automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers">
      <summary>Contains values used as identifiers by IExpandCollapseProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty">
      <summary>Identifies the ExpandCollapseState automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ExpandCollapseState">
      <summary>Contains values that specify the ExpandCollapseState automation property value of a UI Automation element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ExpandCollapseState.Collapsed">
      <summary>No child nodes, controls, or content of the UI Automation element are displayed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ExpandCollapseState.Expanded">
      <summary>All child nodes, controls, and content of the UI Automation element are displayed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ExpandCollapseState.LeafNode">
      <summary>The UI Automation element has no child nodes, controls, or content to display.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ExpandCollapseState.PartiallyExpanded">
      <summary>Some, but not all, child nodes, controls, or content of the UI Automation element are displayed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers">
      <summary>Contains values used as identifiers by IGridItemProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.ColumnProperty">
      <summary>Identifies the Column automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.ColumnSpanProperty">
      <summary>Identifies the ColumnSpan automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.ContainingGridProperty">
      <summary>Identifies the ContainingGrid automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.RowProperty">
      <summary>Identifies the Row automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.RowSpanProperty">
      <summary>Identifies the RowSpan property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.GridPatternIdentifiers">
      <summary>Contains values used as identifiers by IGridProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridPatternIdentifiers.ColumnCountProperty">
      <summary>Identifies the ColumnCount automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.GridPatternIdentifiers.RowCountProperty">
      <summary>Identifies the RowCount automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers">
      <summary>Contains values used as identifiers by IMultipleViewProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers.CurrentViewProperty">
      <summary>Identifies the CurrentView automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers.SupportedViewsProperty">
      <summary>Identifies the automation property that gets the control-specific collection of views.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers">
      <summary>Contains values used as identifiers by IRangeValueProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.LargeChangeProperty">
      <summary>Identifies the LargeChange automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.MaximumProperty">
      <summary>Identifies the Maximum automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.MinimumProperty">
      <summary>Identifies the Minimum automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.SmallChangeProperty">
      <summary>Identifies the SmallChange automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.ValueProperty">
      <summary>Identifies the Value automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.RowOrColumnMajor">
      <summary>Specifies whether data in a table should be read primarily by row or by column.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.RowOrColumnMajor.ColumnMajor">
      <summary>Data in the table should be read column by column.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.RowOrColumnMajor.Indeterminate">
      <summary>The best way to present the data is indeterminate.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.RowOrColumnMajor.RowMajor">
      <summary>Data in the table should be read row by row.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ScrollAmount">
      <summary>Contains values that are used by the IScrollProvider pattern to indicate the direction and distance to scroll.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ScrollAmount.LargeDecrement">
      <summary>Specifies that scrolling is performed in large decrements, which is equivalent to pressing the PAGE UP key or to clicking a blank part of a scrollbar. If the distance represented by the PAGE UP key is not a relevant amount for the control, or if no scrollbar exists, the value represents an amount equal to the size of the currently visible window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ScrollAmount.LargeIncrement">
      <summary>Specifies that scrolling is performed in large increments, which is equivalent to pressing the PAGE DOWN key or to clicking a blank part of a scrollbar. If the distance represented by the PAGE DOWN key is not a relevant amount for the control, or if no scrollbar exists, the value represents an amount equal to the size of the currently visible region.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ScrollAmount.NoAmount">
      <summary>Specifies that scrolling should not be performed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ScrollAmount.SmallDecrement">
      <summary>Specifies that scrolling is performed in small decrements, which is equivalent to pressing an arrow key or to clicking the arrow button on a scrollbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ScrollAmount.SmallIncrement">
      <summary>Specifies that scrolling is performed in small increments, which is equivalent to pressing an arrow key or to clicking the arrow button on a scrollbar.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers">
      <summary>Contains values used as identifiers by IScrollProvider, and also contains the NoScroll constant.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.HorizontallyScrollableProperty">
      <summary>Identifies the HorizontallyScrollable automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.HorizontalScrollPercentProperty">
      <summary>Identifies the HorizontalScrollPercent automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.HorizontalViewSizeProperty">
      <summary>Identifies the HorizontalViewSize automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.NoScroll">
      <summary>Specifies that scrolling should not be performed.</summary>
      <returns>The value – 1. This is the value to return if a client asks for the scrolling percentage, but scrolling is not enabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.VerticallyScrollableProperty">
      <summary>Identifies the VerticallyScrollable automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.VerticalScrollPercentProperty">
      <summary>Identifies the VerticalScrollPercent automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.VerticalViewSizeProperty">
      <summary>Identifies the VerticalViewSize automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers">
      <summary>Contains values used as identifiers by ISelectionItemProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers.IsSelectedProperty">
      <summary>Identifies the IsSelected automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers.SelectionContainerProperty">
      <summary>Identifies the SelectionContainer automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers">
      <summary>Contains values used as identifiers by ISelectionProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers.CanSelectMultipleProperty">
      <summary>Identifies the CanSelectMultiple automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers.IsSelectionRequiredProperty">
      <summary>Identifies the IsSelectionRequired automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers.SelectionProperty">
      <summary>Identifies the property that gets the selected items in a container.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers">
      <summary>Contains values used as automation property identifiers for properties of the ISpreadsheetItemProvider pattern.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers.FormulaProperty">
      <summary>Identifies the Formula automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers">
      <summary>Contains values used as identifiers by IStylesProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.ExtendedPropertiesProperty">
      <summary>Identifies the ExtendedProperties automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.FillColorProperty">
      <summary>Identifies the FillColor automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.FillPatternColorProperty">
      <summary>Identifies the FillPatternColor automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.FillPatternStyleProperty">
      <summary>Identifies the FillPatternStyle automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.ShapeProperty">
      <summary>Identifies the Shape automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.StyleIdProperty">
      <summary>Identifies the StyleId automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.StyleNameProperty">
      <summary>Identifies the StyleName automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.SupportedTextSelection">
      <summary>Contains values that specify whether a text provider supports selection and, if so, whether it supports a single, continuous selection or multiple, disjoint selections.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SupportedTextSelection.Multiple">
      <summary>Supports multiple, disjoint text selections.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SupportedTextSelection.None">
      <summary>Does not support text selections.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SupportedTextSelection.Single">
      <summary>Supports a single, continuous text selection.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.SynchronizedInputType">
      <summary>Provides a of set constants that identify, as used by the ISynchronizedInputProvider  Microsoft UI Automation interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.KeyDown">
      <summary>A key has been pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.KeyUp">
      <summary>A key has been released.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.LeftMouseDown">
      <summary>The left mouse button has been pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.LeftMouseUp">
      <summary>The left mouse button has been released.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.RightMouseDown">
      <summary>The right mouse button has been pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.SynchronizedInputType.RightMouseUp">
      <summary>The right mouse button has been released.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers">
      <summary>Contains values used as identifiers by ITableProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers.ColumnHeaderItemsProperty">
      <summary>Identifies the automation property that retrieves all the column headers associated with a table item or cell.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers.RowHeaderItemsProperty">
      <summary>Identifies the automation property that retrieves all the row headers associated with a table item or cell.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.TablePatternIdentifiers">
      <summary>Contains values used as identifiers by ITableProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TablePatternIdentifiers.ColumnHeadersProperty">
      <summary>Identifies the automation property that is accessed by the GetColumnHeaders method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TablePatternIdentifiers.RowHeadersProperty">
      <summary>Identifies the automation property that is accessed by the GetRowHeaders method.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TablePatternIdentifiers.RowOrColumnMajorProperty">
      <summary>Identifies the RowOrColumnMajor automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers">
      <summary>Contains values used as identifiers by IToggleProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers.ToggleStateProperty">
      <summary>Identifies the ToggleState automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ToggleState">
      <summary>Contains values that specify the ToggleState of a UI Automation element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ToggleState.Indeterminate">
      <summary>The UI Automation element is in an indeterminate state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ToggleState.Off">
      <summary>The UI Automation element isn't selected, checked, marked, or otherwise activated.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ToggleState.On">
      <summary>The UI Automation element is selected, checked, marked, or otherwise activated.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers">
      <summary>Contains values used as identifiers by ITransformProvider2.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers.CanZoomProperty">
      <summary>Identifies the CanZoom automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers.MaxZoomProperty">
      <summary>Identifies the MaxZoom automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers.MinZoomProperty">
      <summary>Identifies the MinZoom automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers.ZoomLevelProperty">
      <summary>Identifies the ZoomLevel automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers">
      <summary>Contains values used as identifiers by ITransformProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers.CanMoveProperty">
      <summary>Identifies the CanMove automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers.CanResizeProperty">
      <summary>Identifies the CanResize automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers.CanRotateProperty">
      <summary>Identifies the CanRotate automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers">
      <summary>Contains values used as identifiers by IValueProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly property.</summary>
      <returns>The automation property reference for the IsReadOnly property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers.ValueProperty">
      <summary>Identifies the Value automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.WindowInteractionState">
      <summary>Defines values that specify the current state of the window for purposes of user or programmatic interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowInteractionState.BlockedByModalWindow">
      <summary>The window is blocked by a modal window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowInteractionState.Closing">
      <summary>The window is closing.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowInteractionState.NotResponding">
      <summary>The window is not responding.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowInteractionState.ReadyForUserInteraction">
      <summary>The window is ready for user interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowInteractionState.Running">
      <summary>The window is running. This doesn't guarantee that the window is responding or ready for user interaction.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers">
      <summary>Contains values used as identifiers by IWindowProvider.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.CanMaximizeProperty">
      <summary>Identifies the Maximizable automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.CanMinimizeProperty">
      <summary>Identifies the Minimizable automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.IsModalProperty">
      <summary>Identifies the IsModal automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.IsTopmostProperty">
      <summary>Identifies the IsTopmost automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.WindowInteractionStateProperty">
      <summary>Identifies the InteractionState automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.WindowVisualStateProperty">
      <summary>Identifies the VisualState automation property.</summary>
      <returns>The automation property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.WindowVisualState">
      <summary>Contains values that specify the visual state of a window for the IWindowProvider pattern.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowVisualState.Maximized">
      <summary>Specifies that the window is maximized.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowVisualState.Minimized">
      <summary>Specifies that the window is minimized.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.WindowVisualState.Normal">
      <summary>Specifies that the window is normal (restored).</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.ZoomUnit">
      <summary>Contains possible values for the ZoomByUnit method, which zooms the viewport of a control by the specified unit.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ZoomUnit.LargeDecrement">
      <summary>Decrease zoom by a large decrement.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ZoomUnit.LargeIncrement">
      <summary>Increase zoom by a large increment.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ZoomUnit.NoAmount">
      <summary>No increase or decrease in zoom.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ZoomUnit.SmallDecrement">
      <summary>Decrease zoom by a small decrement.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.ZoomUnit.SmallIncrement">
      <summary>Increase zoom by a small increment.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AccessibilityView">
      <summary>Declares how a control should included in different views of a Microsoft UI Automation tree.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AccessibilityView.Content">
      <summary>The control is included in the **Content** view of a Microsoft UI Automation tree. This is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AccessibilityView.Control">
      <summary>The control is included in the **Control** view of a Microsoft UI Automation tree.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AccessibilityView.Raw">
      <summary>The control is included in the **Raw** view of a Microsoft UI Automation tree.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer">
      <summary>Exposes AppBar types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.AppBar)">
      <summary>Initializes a new instance of the AppBarAutomationPeer class.</summary>
      <param name="owner">The AppBar control instance to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.InteractionState">
      <summary>Gets the interaction state of the app bar, such as running, closing, and so on.</summary>
      <returns>The interaction state of the app bar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.IsModal">
      <summary>Gets a Boolean value indicating if the app bar is modal.</summary>
      <returns>**true** if the app bar is modal; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.IsTopmost">
      <summary>Gets a Boolean value indicating if the app bar is the topmost element in the z-order of layout.</summary>
      <returns>**true** if the app bar is topmost; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Maximizable">
      <summary>Gets a Boolean value that indicates whether the app bar can be maximized.</summary>
      <returns>**true** if the app bar can be maximized; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Minimizable">
      <summary>Gets a Boolean value that indicates whether the app bar can be minimized.</summary>
      <returns>**true** if the app bar can be minimized; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.ToggleState">
      <summary>Retrieves the toggle state of the owner AppBar.</summary>
      <returns>The ToggleState of the owner control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.VisualState">
      <summary>Gets the visual state of the app bar.</summary>
      <returns>The visual state of the app bar, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Close">
      <summary>Closes the app bar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.SetVisualState(Microsoft.UI.Xaml.Automation.WindowVisualState)">
      <summary>Changes the visual state of the app bar (such as minimizing or maximizing it).</summary>
      <param name="state">The visual state of the app bar to change to, as a value of the enumeration.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of an AppBarAutomationPeer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.WaitForInputIdle(System.Int32)">
      <summary>Blocks the calling code for the specified time or until the associated process enters an idle state, whichever completes first.</summary>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle.</param>
      <returns>**true** if the app bar has entered the idle state; **false** if the timeout occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer">
      <summary>Exposes AppBarButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.AppBarButton)">
      <summary>Initializes a new instance of the AppBarButtonAutomationPeer class.</summary>
      <param name="owner">The AppBarButton to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer">
      <summary>Exposes AppBarToggleButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.AppBarToggleButton)">
      <summary>Initializes a new instance of the AppBarToggleButtonAutomationPeer class.</summary>
      <param name="owner">The AppBarToggleButton to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType">
      <summary>Specifies the control type that is exposed to the Microsoft UI Automation client. Used by GetAutomationControlType.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.AppBar">
      <summary>**Introduced in .** An app bar control (AppBar ).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Button">
      <summary>A button control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Calendar">
      <summary>A calendar control, such as a date picker.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.CheckBox">
      <summary>A check box control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ComboBox">
      <summary>A combo box control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Custom">
      <summary>A control that is not one of the defined control types.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.DataGrid">
      <summary>A data grid control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.DataItem">
      <summary>A data item control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Document">
      <summary>A document control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Edit">
      <summary>An edit control, such as a text box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Group">
      <summary>A group control, which acts as a container for other controls.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Header">
      <summary>A header control, which is a container for the labels of rows and columns of information.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.HeaderItem">
      <summary>A header item, which is the label for a row or column of information.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Hyperlink">
      <summary>A hyperlink control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Image">
      <summary>An image control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.List">
      <summary>A list control, such as a list box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ListItem">
      <summary>A list item control, which is a child item of a list control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Menu">
      <summary>A menu control, such as a top-level menu in an application window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.MenuBar">
      <summary>A menu bar control, which generally contains a set of top-level menus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.MenuItem">
      <summary>A menu item control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Pane">
      <summary>A pane control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ProgressBar">
      <summary>A progress bar control, which visually indicates the progress of a lengthy operation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.RadioButton">
      <summary>A radio button control, which is a selection mechanism allowing exactly one selected item in a group.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ScrollBar">
      <summary>A scroll bar control, such as a scroll bar in an application window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.SemanticZoom">
      <summary>A semantic zoom control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Separator">
      <summary>A separator, which creates a visual division in controls such as menus and toolbars.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Slider">
      <summary>A slider control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Spinner">
      <summary>A spinner control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.SplitButton">
      <summary>A split button, which is a button that performs a default action and can also expand to a list of other possible actions.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.StatusBar">
      <summary>A status bar control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Tab">
      <summary>A tab control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.TabItem">
      <summary>A tab item control, which represents a page of a tab control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Table">
      <summary>A table.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Text">
      <summary>An edit control, such as a text box or rich text box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Thumb">
      <summary>The control in a scrollbar that can be dragged to a different position.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.TitleBar">
      <summary>The caption bar on a window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ToolBar">
      <summary>A toolbar, such as the control that contains a set of command buttons in an application window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.ToolTip">
      <summary>A tooltip control, an informational window that appears as a result of moving the pointer over a control or sometimes when tabbing to a control using the keyboard.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Tree">
      <summary>A tree control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.TreeItem">
      <summary>A node in a tree control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationControlType.Window">
      <summary>A window frame, which contains child objects.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents">
      <summary>Specifies the event that is raised by the element through the associated AutomationPeer. Used by RaiseAutomationEvent.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.AsyncContentLoaded">
      <summary>The event that is raised when content is loaded asynchronously.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.AutomationFocusChanged">
      <summary>The event that is raised when the focus has changed. See SetFocus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.ConversionTargetChanged">
      <summary>The event that is raised when the conversion target has changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.DragCancel">
      <summary>The event that is raised when a drag operation is canceled from a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.DragComplete">
      <summary>The event that is raised when a drag operation finishes from a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.DragEnter">
      <summary>The event that is raised when a drag operation targets a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.DragLeave">
      <summary>The event that is raised when a drag operation switches targets away from a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.DragStart">
      <summary>The event that is raised when a drag operation originates from a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.Dropped">
      <summary>The event that is raised when a drag operation drops on a peer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.InputDiscarded">
      <summary>The event that is raised when user input has been discarded.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.InputReachedOtherElement">
      <summary>The event that is raised when user input has reached the other element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.InputReachedTarget">
      <summary>The event that is raised when user input has reached its target.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.InvokePatternOnInvoked">
      <summary>The event that is raised when a control is activated. See Invoke.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.LayoutInvalidated">
      <summary>The event that is raised when the window layout has become invalidated. This event is also used for Auto-suggest accessibility.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.LiveRegionChanged">
      <summary>The event that is raised as notification when a live region refreshes its content without having focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.MenuClosed">
      <summary>The event that is raised when a menu is closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.MenuOpened">
      <summary>The event that is raised when a menu is opened.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.PropertyChanged">
      <summary>The event that is raised when a property has changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementAddedToSelection">
      <summary>The event that is raised when an item is added to a collection of selected items. See AddToSelection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection">
      <summary>The event that is raised when an item is removed from a collection of selected items. See RemoveFromSelection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementSelected">
      <summary>The event that is raised when a single item is selected (which clears any previous selection). See Select.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.SelectionPatternOnInvalidated">
      <summary>The event that is raised when a selection in a container has changed significantly.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.StructureChanged">
      <summary>The event that is raised when the UI Automation tree structure is changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.TextEditTextChanged">
      <summary>The event that is raised when the text was changed in an edit control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.TextPatternOnTextChanged">
      <summary>The event that is raised when textual content is modified.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.TextPatternOnTextSelectionChanged">
      <summary>The event that is raised when the text selection is modified.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.ToolTipClosed">
      <summary>The event that is raised when a tooltip is closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.ToolTipOpened">
      <summary>The event that is raised when a tooltip is opened.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.WindowClosed">
      <summary>The event that is raised when a window is closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationEvents.WindowOpened">
      <summary>The event that is raised when a window is opened.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel">
      <summary>Defines the heading levels for UI Automation elements.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level1">
      <summary>Heading level 1.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level2">
      <summary>Heading level 2.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level3">
      <summary>Heading level 3.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level4">
      <summary>Heading level 4.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level5">
      <summary>Heading level 5.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level6">
      <summary>Heading level 6.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level7">
      <summary>Heading level 7.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level8">
      <summary>Heading level 8.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.Level9">
      <summary>Heading level 9.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel.None">
      <summary>Not a heading.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType">
      <summary>Defines the automation landmark types for elements.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.Custom">
      <summary>Custom landmark type</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.Form">
      <summary>Form landmark type</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.Main">
      <summary>Main page landmark type</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.Navigation">
      <summary>Navigation landmark type</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.None">
      <summary>No landmark type specified</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType.Search">
      <summary>Search landmark type</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting">
      <summary>Describes the notification characteristics of a particular live region in an app UI. Used by GetLiveSetting and AutomationProperties.LiveSetting.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting.Assertive">
      <summary>The element sends interruptive notifications if the content of the live region has changed. With this setting, Microsoft UI Automation clients and assistive technology are expected to interrupt the user to inform of changes to the live region.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting.Off">
      <summary>The element does not send notifications if the content of the live region has changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting.Polite">
      <summary>The element sends non-interruptive notifications if the content of the live region has changed. With this setting, Microsoft UI Automation clients and assistive technology are expected to not interrupt the user to inform of changes to the live region.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection">
      <summary>Defines the directions of navigation within the Microsoft UI Automation tree.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection.FirstChild">
      <summary>Navigate to the first child of the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection.LastChild">
      <summary>Navigate to the last child of the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection.NextSibling">
      <summary>Navigate to the next sibling of the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection.Parent">
      <summary>Navigate to the parent of the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection.PreviousSibling">
      <summary>Navigate to the previous sibling of the current node.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind">
      <summary>Indicates the type of notification when calling RaiseNotificationEvent</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind.ActionAborted">
      <summary>The current element has a notification that an action was abandoned.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind.ActionCompleted">
      <summary>The current element has a notification that an action was completed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind.ItemAdded">
      <summary>The current element container has had something added to it that should be presented to the user.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind.ItemRemoved">
      <summary>The current element has had something removed from inside it that should be presented to the user.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind.Other">
      <summary>The current element has a notification not an add, remove, completed, or aborted action.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing">
      <summary>Specifies the order in which to process a notification.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing.All">
      <summary>These notifications should be presented to the user when possible. All of the notifications from this source should be delivered to the user.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing.CurrentThenMostRecent">
      <summary>These notifications should be presented to the user when possible. Don’t interrupt the current notification for this one. If new notifications come in from the same source while the current notification is being presented, then keep the most recent and ignore the rest until the current processing is completed. Then use the most recent message as the current message.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing.ImportantAll">
      <summary>These notifications should be presented to the user as soon as possible. All of the notifications from this source should be delivered to the user.  </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing.ImportantMostRecent">
      <summary>These notifications should be presented to the user as soon as possible. The most recent notifications from this source should be delivered to the user because the most recent notification supersedes all of the other notifications.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing.MostRecent">
      <summary>These notifications should be presented to the user when possible. Interrupt the current notification for this one.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation">
      <summary>Specifies the orientation direction in which a control can be presented. Values are used by GetOrientation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation.Horizontal">
      <summary>The control is presented horizontally.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation.None">
      <summary>The control does not have an orientation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation.Vertical">
      <summary>The control is presented vertically.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer">
      <summary>Provides a base class that exposes the automation peer for an associated owner class to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.#ctor">
      <summary>Provides base class initialization behavior for AutomationPeer derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.EventsSource">
      <summary>Gets or sets an AutomationPeer that is reported to the automation client as the source for all the events that come from this AutomationPeer. See Remarks.</summary>
      <returns>The AutomationPeer that is the source of events.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GenerateRawElementProviderRuntimeId">
      <summary>Generates a runtime identifier for the element that is associated with the automation peer.</summary>
      <returns>The runtime identifier for the element .</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAcceleratorKey">
      <summary>Gets the accelerator key combinations for the object that is associated with the UI Automation peer.</summary>
      <returns>The accelerator key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetAcceleratorKey or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The accelerator key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAccessKey">
      <summary>Gets the access key for the element that is associated with the automation peer.</summary>
      <returns>The access key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAccessKeyCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetAccessKey or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The access key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAnnotations">
      <summary>Gets a reference to the list of UI automation annotations for the current automation peer.</summary>
      <returns>The list of UI automation annotations.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAnnotationsCore">
      <summary>Provides the behavior of the peer when a Microsoft UI Automation client calls GetAnnotations or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The behavior of the peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationControlType">
      <summary>Gets the control type for the element that is associated with the UI Automation peer.</summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetAutomationControlType or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationId">
      <summary>Gets the **AutomationId** of the element that is associated with the automation peer.</summary>
      <returns>The automation identifier.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationIdCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetAutomationId or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The automation identifier.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetBoundingRectangle">
      <summary>Gets the Rect object that represents the screen coordinates of the element that is associated with the automation peer.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetBoundingRectangle or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetChildren">
      <summary>Gets the collection of child elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</summary>
      <returns>The collection of AutomationPeer objects for child elements.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetChildrenCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetChildren or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The collection of AutomationPeer objects for child elements.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClassName">
      <summary>Gets a name that is used with AutomationControlType, to differentiate the control that is represented by this AutomationPeer.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClassNameCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetClassName or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClickablePoint">
      <summary>Gets a point on the element that is associated with the automation peer that responds to a mouse click.</summary>
      <returns>A point in the clickable area of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClickablePointCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetClickablePoint or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A point within the clickable area of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetControlledPeers">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetControlledPeers or an equivalent Microsoft UI Automation client API such as getting a property value as identified by **UIA_ControllerForPropertyId**.</summary>
      <returns>A list of the controlled peers for the current automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetControlledPeersCore">
      <summary>Gets a list of the controlled peers for the current automation peer.</summary>
      <returns>A list of the controlled peers for the current automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetCulture">
      <summary>Calls GetCultureCore to get the culture value for the element that is associated with the automation peer.</summary>
      <returns>The value of the culture property for the element that is associated with the automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetCultureCore">
      <summary>Gets the culture value for the element that is associated with the automation peer.</summary>
      <returns>The value of the culture property for the element that is associated with the automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetDescribedByCore">
      <summary>Gets a collection of elements that provide more information about the automation element.</summary>
      <returns>A collection of elements that provide more information about the automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetElementFromPoint(Windows.Foundation.Point)">
      <summary>Gets an element from the specified point.</summary>
      <param name="pointInWindowCoordinates">The specified point.</param>
      <returns>The element at the specified point.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetElementFromPointCore(Windows.Foundation.Point)">
      <summary>Provides the behavior of the peer when a Microsoft UI Automation client calls GetElementFromPoint or an equivalent Microsoft UI Automation client API.</summary>
      <param name="pointInWindowCoordinates">The specified point.</param>
      <returns>The behavior of the peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFlowsFromCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetFlowsFrom or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A list of automation elements that suggests the reading order before the current automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFlowsToCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetFlowsTo or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A list of automation elements that suggests the reading order after the current automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFocusedElement">
      <summary>Gets the element that currently has the focus.</summary>
      <returns>The element that currently has the focus.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFocusedElementCore">
      <summary>Provides the behavior of the peer when a Microsoft UI Automation client calls GetFocusedElement or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The behavior of the peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFullDescription">
      <summary>Gets a localized string that describes the actual visual appearance or contents of something such as an image or image control.</summary>
      <returns>A localized string that describes the actual visual appearance or contents of something such as an image or image control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFullDescriptionCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetFullDescription or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A localized string that describes the actual visual appearance or contents of something such as an image or image control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHeadingLevel">
      <summary>Gets the heading level of the UI Automation element that is associated with this automation peer.</summary>
      <returns>The text heading level.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHeadingLevelCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetHeadingLevel or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The heading level.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHelpText">
      <summary>Gets text that describes the functionality of the control that is associated with the automation peer.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHelpTextCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetHelpText or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemStatus">
      <summary>Gets text that conveys the visual status of the element that is associated with this automation peer.</summary>
      <returns>The item status.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemStatusCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetItemStatus or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The item status.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemType">
      <summary>Gets a string that describes what kind of item an element represents.</summary>
      <returns>The kind of item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemTypeCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetItemType or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The kind of item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLabeledBy">
      <summary>Gets the AutomationPeer for the UIElement that is targeted to the element.</summary>
      <returns>The AutomationPeer for the element that is targeted by the UIElement.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLabeledByCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetLabeledBy or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The AutomationPeer for the element that is targeted by the UIElement.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLandmarkType">
      <summary>Gets the landmark type for this automation peer.</summary>
      <returns>The landmark type for this automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLandmarkTypeCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetLandmarkType or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The landmark type.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLevel">
      <summary>Returns the 1-based integer for the level (hierarchy) of the element that is associated with the automation peer.</summary>
      <returns>The 1-based integer for the level of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLevelCore">
      <summary>Provides the behavior of the peer when a Microsoft UI Automation client calls GetLevel or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The behavior of the peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLiveSetting">
      <summary>Gets the live setting notification behavior information for the object that is associated with the UI Automation peer.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLiveSettingCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetLiveSetting or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A value of the enumeration that reports the live setting notification behavior for a peer implementation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedControlType">
      <summary>Gets a localized string that represents the AutomationControlType value for the control that is associated with this automation peer.</summary>
      <returns>The type of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetLocalizedControlType or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The type of the control, as a string that is localized to be suitable for direct presentation to users by assistive technology.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedLandmarkType">
      <summary>Gets a localized string that represents the AutomationLandmarkType value for the element that is associated with this automation peer.</summary>
      <returns>The landmark type of the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedLandmarkTypeCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetLocalizedLandmarkType or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The landmark type of the peer, as a string that is localized to be suitable for direct presentation to users by assistive technology.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetName">
      <summary>Gets text that describes the element that is associated with this automation peer. The Microsoft UI Automation  **Name** value is the primary identifier used by most assistive technology when they represent your app's UI by interacting with the Microsoft UI Automation framework.</summary>
      <returns>The name of the element that is the peer's owner, as used by assistive technology and other Microsoft UI Automation clients.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetNameCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetName or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The name as used by assistive technology and other Microsoft UI Automation clients.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetOrientation">
      <summary>Gets a value that indicates the explicit control orientation, if any.</summary>
      <returns>The orientation of the control as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetOrientationCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetOrientation or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The orientation of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetParent">
      <summary>Gets the AutomationPeer that is the parent of this AutomationPeer.</summary>
      <deprecated type="deprecate">Consider using Navigate with AutomationNavigationDirection::Parent, which is an improved version of GetParent. For more info, see MSDN.</deprecated>
      <returns>The parent automation peer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPattern(Microsoft.UI.Xaml.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern that is associated with the specified PatternInterface.</summary>
      <param name="patternInterface">A value from the PatternInterface enumeration.</param>
      <returns>The object that implements the pattern interface; null if the peer does not support this interface.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPatternCore(Microsoft.UI.Xaml.Automation.Peers.PatternInterface)">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetPattern or an equivalent Microsoft UI Automation client API.</summary>
      <param name="patternInterface">A value from the PatternInterface enumeration.</param>
      <returns>The object that implements the pattern interface; **null** if the peer does not support this interface.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPeerFromPoint(Windows.Foundation.Point)">
      <summary>Gets an AutomationPeer from the specified point.</summary>
      <deprecated type="deprecate">Consider using GetElementFromPoint, which is an improved version of GetPeerFromPoint. For more info, see MSDN.</deprecated>
      <param name="point">The relative position of the target UI element in the UI.</param>
      <returns>The AutomationPeer for the UI element at the specified point.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPeerFromPointCore(Windows.Foundation.Point)">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls GetPeerFromPoint or an equivalent Microsoft UI Automation client API.</summary>
      <param name="point">The relative position of the target UI element in the UI.</param>
      <returns>The AutomationPeer for the UI element at the specified point.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPositionInSet">
      <summary>Returns the 1-based integer for the ordinal position in the set for the element that is associated with the automation peer.</summary>
      <returns>The 1-based integer for the ordinal position in the set.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPositionInSetCore">
      <summary>Provides the peer’s behavior when a Microsoft UI Automation client calls GetPositionInSet or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The peer’s behavior.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetSizeOfSet">
      <summary>Returns the 1-based integer for the size of the set where the element that is associated with the automation peer is located.</summary>
      <returns>The 1-based integer for the size of the set.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetSizeOfSetCore">
      <summary>Provides the peer’s behavior when a Microsoft UI Automation client calls GetSizeOfSet or an equivalent Microsoft UI Automation client API.</summary>
      <returns>The peer’s behavior.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.HasKeyboardFocus">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</summary>
      <returns>**true** if the element has keyboard focus; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls HasKeyboardFocus or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element has keyboard focus; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.InvalidatePeer">
      <summary>Triggers recalculation of the main properties of the AutomationPeer and raises the PropertyChanged notification to the automation client if the properties have changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsContentElement">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</summary>
      <returns>**true** if the element is a content element; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsContentElementCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsContentElement or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element is a content element; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsControlElement">
      <summary>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the GUI.</summary>
      <returns>**true** if the element is a control; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsControlElementCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsControlElement or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element is a control; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDataValidForForm">
      <summary>Gets a Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the automation element.</summary>
      <returns>A Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the automation element. The default return value is **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDataValidForFormCore">
      <summary>Provides the peer’s behavior when a Microsoft UI Automation client accesses IsDataValidForForm or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDialog">
      <summary>Gets a value that indicates whether the element associated with this automation peer is a dialog window.</summary>
      <returns>**true** if the element is a dialog; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDialogCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsDialog or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element is a dialog; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsEnabled">
      <summary>Gets a value that indicates whether the element associated with this automation peer supports interaction.</summary>
      <returns>**true** if the element supports interaction; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsEnabledCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsEnabled or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element can be interacted with; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
      <summary>Gets a value that indicates whether the element can accept keyboard focus.</summary>
      <returns>**true** if the element can accept keyboard focus; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsKeyboardFocusable or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element can accept keyboard focus; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsOffscreen">
      <summary>Gets a value that indicates whether an element is off the screen.</summary>
      <returns>**true** if the element is not on the screen; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsOffscreenCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsOffscreen or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element is not on the screen; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPassword">
      <summary>Gets a value that indicates whether the element contains sensitive content.</summary>
      <returns>**true** if the element contains sensitive content such as a password; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPasswordCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsPassword or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element contains sensitive content; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPeripheral">
      <summary>Gets a Boolean value that indicates whether the automation element represents peripheral UI.</summary>
      <returns>A Boolean value that indicates whether the automation element represents peripheral UI.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPeripheralCore">
      <summary>Provides the peer’s behavior when a Microsoft UI Automation client accesses IsPeripheral or an equivalent Microsoft UI Automation client API.</summary>
      <returns>A Boolean value that indicates whether the automation element represents peripheral UI.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsRequiredForForm">
      <summary>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</summary>
      <returns>**true** if the element must be completed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls IsRequiredForForm or an equivalent Microsoft UI Automation client API.</summary>
      <returns>**true** if the element must be completed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ListenerExists(Microsoft.UI.Xaml.Automation.Peers.AutomationEvents)">
      <summary>Gets a value that indicates whether Microsoft UI Automation reports that a client is listening for the specified event.</summary>
      <param name="eventId">One of the enumeration values.</param>
      <returns>**true** if Microsoft UI Automation reports a client is listening for the specified event; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.Navigate(Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection)">
      <summary>Gets the element in the specified direction within the UI automation tree.</summary>
      <param name="direction">The specified direction.</param>
      <returns>The element in the specified direction within the UI automation tree.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.NavigateCore(Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection)">
      <summary>Provides the peer’s behavior when a Microsoft UI Automation client calls Navigate or an equivalent Microsoft UI Automation client API.</summary>
      <param name="direction">The specified direction.</param>
      <returns>The element in the specified direction within the UI automation tree.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.PeerFromProvider(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple)">
      <summary>Gets an AutomationPeer for the specified IRawElementProviderSimple proxy.</summary>
      <param name="provider">The class that implements IRawElementProviderSimple.</param>
      <returns>The AutomationPeer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ProviderFromPeer(Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)">
      <summary>Gets the IRawElementProviderSimple proxy for the specified AutomationPeer.</summary>
      <param name="peer">The automation peer.</param>
      <returns>The proxy.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaiseAutomationEvent(Microsoft.UI.Xaml.Automation.Peers.AutomationEvents)">
      <summary>Raises an automation event.</summary>
      <param name="eventId">The event identifier for the event to raise, as a value of the enumeration. See AutomationEvents.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaiseNotificationEvent(Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind,Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing,System.String,System.String)">
      <summary>Initiates a notification event.</summary>
      <param name="notificationKind">Specifies the type of the notification.</param>
      <param name="notificationProcessing">Specifies the order in which to process the notification.</param>
      <param name="displayString">A display string describing the event.</param>
      <param name="activityId">A unique non-localized string to identify an action or group of actions. Use this to pass additional information to the event handler.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(Microsoft.UI.Xaml.Automation.AutomationProperty,System.Object,System.Object)">
      <summary>Raises an event to notify the automation client of a changed property value.</summary>
      <param name="automationProperty">The property that changed.</param>
      <param name="oldValue">The previous value of the property.</param>
      <param name="newValue">The new value of the property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaiseStructureChangedEvent(Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType,Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)">
      <summary>Raises an event to notify the Microsoft UI Automation core that the tree structure has changed.</summary>
      <param name="structureChangeType">The type of change that has occurred.</param>
      <param name="child">The element to which the change has been made.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaiseTextEditTextChangedEvent(Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType,Windows.Foundation.Collections.IVectorView{System.String})">
      <summary>Raises an event to notify the Microsoft UI Automation core that a text control has programmatically changed text.</summary>
      <param name="automationTextEditChangeType">The type of change that was made to the text.</param>
      <param name="changedData">The new text.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetFocus">
      <summary>Sets the keyboard focus on the element that is associated with this automation peer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetFocusCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls SetFocus or an equivalent Microsoft UI Automation client API.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetParent(Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)">
      <summary>Sets the AutomationPeer that is the parent of this AutomationPeer.</summary>
      <param name="peer">The parent automation peer.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ShowContextMenu">
      <summary>Shows the available context menu for the owner element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ShowContextMenuCore">
      <summary>Provides the peer's behavior when a Microsoft UI Automation client calls ShowContextMenu or an equivalent Microsoft UI Automation client API.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation">
      <summary>Represents a single UI automation annotation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.#ctor">
      <summary>Initializes a new instance of the  class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.#ctor(Microsoft.UI.Xaml.Automation.AnnotationType)">
      <summary>Initializes a new instance of the  class using the defined parameter.</summary>
      <param name="type">The type of annotation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.#ctor(Microsoft.UI.Xaml.Automation.AnnotationType,Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)">
      <summary>Initializes a new instance of the  class using the defined parameters.</summary>
      <param name="type">The type of annotation.</param>
      <param name="peer">The automation peer of the element that implements the annotation.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Peer">
      <summary>Gets or sets the automation peer of the element that implements the annotation.</summary>
      <returns>The automation peer of the element that implements the annotation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.PeerProperty">
      <summary>Identifies the AutomationPeerAnnotation.Peer property.</summary>
      <returns>The AutomationPeerAnnotation.Peer property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Type">
      <summary>Gets or sets the type of the annotation.</summary>
      <returns>The type of the annotation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.TypeProperty">
      <summary>Identifies the AutomationPeerAnnotation.Type property.</summary>
      <returns>The AutomationPeerAnnotation.Type property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType">
      <summary>Defines the types of change in the Microsoft UI Automation tree structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildAdded">
      <summary>A child has been added to the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildRemoved">
      <summary>A child has been removed from the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildrenBulkAdded">
      <summary>Children have been bulk added to the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildrenBulkRemoved">
      <summary>Children have been bulk removed from the current node.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildrenInvalidated">
      <summary>One or more children of the current node have been invalidated.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType.ChildrenReordered">
      <summary>The children of the current node have been reordered.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer">
      <summary>Exposes AutoSuggestBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.AutoSuggestBox)">
      <summary>Initializes a new instance of the AutoSuggestBoxAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer.Invoke">
      <summary>Sends a request to submit the auto-suggest query to the AutoSuggestBox associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer">
      <summary>Exposes Button types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Button)">
      <summary>Initializes a new instance of the ButtonAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer.Invoke">
      <summary>Sends a request to click the button associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>Represents a base class for exposing classes derived from ButtonBase to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)">
      <summary>Provides base class initialization behavior for ButtonBase derived classes.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer">
      <summary>Exposes CalendarDatePicker types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.CalendarDatePicker)">
      <summary>Initializes a new instance of the CalendarDatePickerAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.IsReadOnly">
      <summary>Gets a value that specifies whether the value of a control is read-only.</summary>
      <returns>**true** if the control value can be set; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control, as a string.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.Invoke">
      <summary>Sends a request to open the CalendarDatePicker associated with the automation peer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.SetValue(System.String)">
      <summary>Sets the value of a control, as an implementation of the IValueProvider pattern.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.CaptureElementAutomationPeer">
      <summary>Exposes CaptureElement types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.CaptureElementAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.CaptureElement)">
      <summary>Initializes a new instance of the CaptureElementAutomationPeer class.</summary>
      <param name="owner">The CaptureElement instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer">
      <summary>Exposes CheckBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.CheckBox)">
      <summary>Initializes a new instance of the CheckBoxAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer">
      <summary>Exposes **ColorPickerSlider ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)">
      <summary>Initializes a new instance of the **ColorPickerSliderAutomationPeer** class.</summary>
      <param name="owner">The **ColorPickerSlider ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer">
      <summary>Exposes **ColorSpectrum ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)">
      <summary>Initializes a new instance of the **ColorSpectrumAutomationPeer** class.</summary>
      <param name="owner">The **ColorSpectrum ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer">
      <summary>Exposes ComboBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ComboBox)">
      <summary>Initializes a new instance of the ComboBoxAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.InteractionState">
      <summary>Gets the interaction state of the ComboBox control.</summary>
      <returns>The interaction state of the ComboBox control, as a value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.IsModal">
      <summary>Gets a Boolean value indicating if the ComboBox control is modal.</summary>
      <returns>A Boolean value indicating if the ComboBox control is modal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.IsReadOnly">
      <summary>Gets a value that specifies whether the value of a control is read-only.</summary>
      <returns>**true** if the control value can be set; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.IsTopmost">
      <summary>Gets a Boolean value indicating if the ComboBox control is topmost.</summary>
      <returns>A Boolean value indicating if the ComboBox control is topmost.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Maximizable">
      <summary>Gets a Boolean value indicating if the ComboBox control can be maximized.</summary>
      <returns>A Boolean value indicating if the ComboBox control can be maximized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Minimizable">
      <summary>Gets a Boolean value indicating if the ComboBox control can be minimized.</summary>
      <returns>A Boolean value indicating if the ComboBox control can be minimized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control, as a string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.VisualState">
      <summary>Gets the WindowVisualState for the ComboBox control.</summary>
      <returns>The WindowVisualState for the ComboBox control, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Close">
      <summary>Attempts to close the ComboBox control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.SetValue(System.String)">
      <summary>Sets the value of a control, as an implementation of the IValueProvider pattern.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.SetVisualState(Microsoft.UI.Xaml.Automation.WindowVisualState)">
      <summary>Changes the visual state of the ComboBox control.</summary>
      <param name="state">The visual state for the ComboBox control, as a value of the enumeration.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.WaitForInputIdle(System.Int32)">
      <summary>Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</summary>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle. The maximum is **Int32.MaxValue**.</param>
      <returns>**true** if the window has entered the idle state; **false** if the time-out occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer">
      <summary>Exposes the ComboBoxItem contents in a ComboBox to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ComboBoxItem)">
      <summary>Initializes a new instance of the ComboBoxItemAutomationPeer class.</summary>
      <param name="owner">The ComboBoxItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer">
      <summary>Exposes the data content of a ComboBoxItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer)">
      <summary>Initializes a new instance of the ComboBoxItemDataAutomationPeer class.</summary>
      <param name="item">The item data.</param>
      <param name="parent">The owner to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of a parent container in order to display the peer owner's content within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer">
      <summary>Exposes DatePicker types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.DatePicker)">
      <summary>Initializes a new instance of the DatePickerAutomationPeer class.</summary>
      <param name="owner">The DatePicker to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer">
      <summary>Exposes DatePickerFlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer">
      <summary>Exposes FlipView types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.FlipView)">
      <summary>Initializes a new instance of the FlipViewAutomationPeer class.</summary>
      <param name="owner">The FlipView to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer">
      <summary>Exposes a FlipViewItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.FlipViewItem)">
      <summary>Initializes a new instance of the FlipViewItemAutomationPeer class.</summary>
      <param name="owner">The FlipViewItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer">
      <summary>Exposes the data content of a FlipViewItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer)">
      <summary>Initializes a new instance of the FlipViewItemDataAutomationPeer class.</summary>
      <param name="item">The item data.</param>
      <param name="parent">The owner to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of a parent container in order to display the peer owner's content within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer">
      <summary>Exposes FlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.FlyoutPresenter)">
      <summary>Initializes a new instance of the FlyoutPresenterAutomationPeer class.</summary>
      <param name="owner">The FlyoutPresenter to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>Exposes FrameworkElement derived types (including all controls) to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.#ctor(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Initializes a new instance of the FrameworkElementAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.Owner">
      <summary>Gets the UIElement owner that is associated with this FrameworkElementAutomationPeer.</summary>
      <returns>The element that owns this instance of the peer class.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Creates a FrameworkElementAutomationPeer for the specified UIElement.</summary>
      <param name="element">The UIElement that is associated with this FrameworkElementAutomationPeer.</param>
      <returns>A FrameworkElementAutomationPeer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.FromElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the FrameworkElementAutomationPeer for the specified UIElement.</summary>
      <param name="element">The UIElement that is associated with this FrameworkElementAutomationPeer.</param>
      <returns>The FrameworkElementAutomationPeer, or null if the FrameworkElementAutomationPeer could not be created.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer">
      <summary>Exposes GridView types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.GridView)">
      <summary>Initializes a new instance of the GridViewAutomationPeer class.</summary>
      <param name="owner">The GridView to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer">
      <summary>Exposes GridViewHeaderItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.GridViewHeaderItem)">
      <summary>Initializes a new instance of the GridViewHeaderItemAutomationPeer class.</summary>
      <param name="owner">The GridViewHeaderItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer">
      <summary>Exposes a GridViewItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.GridViewItem)">
      <summary>Initializes a new instance of the GridViewItemAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer">
      <summary>Exposes GridView items to Microsoft UI Automation, using a data representation of the item so that the peer supports scrolling to that item with data awareness.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer)">
      <summary>Initializes a new instance of the GridViewItemDataAutomationPeer class.</summary>
      <param name="item">The specific data item.</param>
      <param name="parent">The automation peer for the GridView that contains the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer">
      <summary>Exposes a GroupItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.GroupItem)">
      <summary>Initializes a new instance of the GroupItemAutomationPeer class.</summary>
      <param name="owner">The GroupItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer">
      <summary>Exposes Hub types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Hub)">
      <summary>Initializes a new instance of the HubAutomationPeer class.</summary>
      <param name="owner">The Hub to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer">
      <summary>Exposes HubSection types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.HubSection)">
      <summary>Initializes a new instance of the HubSectionAutomationPeer class.</summary>
      <param name="owner">The HubSection to create the peer for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of the parent container in order to display the item within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer">
      <summary>Exposes HyperlinkButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.HyperlinkButton)">
      <summary>Initializes a new instance of the HyperlinkButtonAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer.Invoke">
      <summary>Sends a request to click the hyperlink button associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer">
      <summary>Exposes Image types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Image)">
      <summary>Initializes a new instance of the ImageAutomationPeer class.</summary>
      <param name="owner">The Image to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.InkToolbarAutomationPeer">
      <summary>Exposes InkToolbar types to Microsoft UI Automation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer">
      <summary>Exposes a data item in an Items collection to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>Initializes a new instance of the ItemAutomationPeer class.</summary>
      <param name="item">The specific item to create for.</param>
      <param name="parent">The items-control owner to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.Item">
      <summary>Gets the data item in the Items collection that is associated with this ItemAutomationPeer.</summary>
      <returns>The data item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>Gets the ItemsControlAutomationPeer that is associated with the ItemsControl that holds the Items collection.</summary>
      <returns>The ItemsControlAutomationPeer associated with the ItemsControl that holds the Items collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.Realize">
      <summary>Makes the virtual item fully accessible as a Microsoft UI Automation element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer">
      <summary>Exposes ItemsControl types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ItemsControl)">
      <summary>Initializes a new instance of the ItemsControlAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>Creates a new instance of the ItemAutomationPeer for a data item in the Items collection of this ItemsControl.</summary>
      <param name="item">The data item that is associated with this ItemAutomationPeer.</param>
      <returns>The new ItemAutomationPeer created.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.FindItemByProperty(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple,Microsoft.UI.Xaml.Automation.AutomationProperty,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="automationProperty">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion if such an item exists; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.OnCreateItemAutomationPeer(System.Object)">
      <summary>Invoked whenever a new instance of the ItemAutomationPeer is created for a data item in the Items collection of this ItemsControl.</summary>
      <param name="item">The data item that is associated with this ItemAutomationPeer.</param>
      <returns>The new ItemAutomationPeer created.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer">
      <summary>Exposes ListBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListBox)">
      <summary>Initializes a new instance of the ListBoxAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>Exposes the items in the Items collection of a ListBox to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListBoxItem)">
      <summary>Initializes a new instance of the ListBoxItemAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer">
      <summary>Exposes ListBox items to Microsoft UI Automation, using a data representation of the item so that the peer supports scrolling to that item with data awareness.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer)">
      <summary>Initializes a new instance of the ListBoxItemDataAutomationPeer class.</summary>
      <param name="item">The specific data item.</param>
      <param name="parent">The automation peer for the ListBox that contains the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer">
      <summary>Exposes ListPickerFlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer">
      <summary>Exposes ListView types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListView)">
      <summary>Initializes a new instance of the ListViewAutomationPeer class.</summary>
      <param name="owner">The ListView to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer">
      <summary>A base class that provides a Microsoft UI Automation peer implementation for types that derive from ListViewBase.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListViewBase)">
      <summary>Initializes a new instance of the ListViewBaseAutomationPeer class.</summary>
      <param name="owner">The ListViewBase derived object to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.DropEffect">
      <summary>Gets a string that indicates what will happen when the item is dropped.</summary>
      <returns>A string that indicates what will happen when the item is dropped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.DropEffects">
      <summary>Gets an array of strings that enumerates possible drop effects when this item is dropped.</summary>
      <returns>An array of strings that enumerates possible drop effects when this item is dropped.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer">
      <summary>Exposes ListViewBaseHeaderItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem)">
      <summary>Initializes a new instance of the ListViewBaseHeaderItemAutomationPeer class.</summary>
      <param name="owner">The ListViewBaseHeaderItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer">
      <summary>Exposes ListViewHeaderItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListViewHeaderItem)">
      <summary>Initializes a new instance of the ListViewHeaderItemAutomationPeer class.</summary>
      <param name="owner">The ListViewHeaderItem to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer">
      <summary>Exposes a ListViewItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ListViewItem)">
      <summary>Initializes a new instance of the ListViewItemAutomationPeer class.</summary>
      <param name="owner">The ListViewItem to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer">
      <summary>Exposes ListView items to Microsoft UI Automation, using a data representation of the item so that the peer supports scrolling to that item with data awareness.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer)">
      <summary>Initializes a new instance of the ListViewItemDataAutomationPeer class.</summary>
      <param name="item">The specific data item.</param>
      <param name="parent">The automation peer for the ListViewBase derived type that contains the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of the parent container in order to display the peer's data within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer">
      <summary>Exposes LoopingSelector types to Microsoft UI Automation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.CanSelectMultiple">
      <summary>Gets a value that indicates whether the control allows more than one child element to be selected concurrently.</summary>
      <returns>**true** if multiple selection is allowed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.HorizontallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll horizontally.</summary>
      <returns>**true** if the control can scroll horizontally; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.HorizontalScrollPercent">
      <summary>Gets the current horizontal scroll position.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.HorizontalViewSize">
      <summary>Gets the current horizontal view size.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.IsSelectionRequired">
      <summary>Gets a value that indicates whether the control requires at least one child element to be selected.</summary>
      <returns>**true** if selection is required; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.VerticallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll vertically.</summary>
      <returns>**true** if the control can scroll vertically; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.VerticalScrollPercent">
      <summary>Gets the current vertical scroll position.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.VerticalViewSize">
      <summary>Gets the current vertical view size.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.FindItemByProperty(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple,Microsoft.UI.Xaml.Automation.AutomationProperty,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="automationProperty">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion if such an item exists; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.GetSelection">
      <summary>Retrieves a Microsoft UI Automation provider for each child element that is selected.</summary>
      <returns>A generic list of Microsoft UI Automation providers.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.Scroll(Microsoft.UI.Xaml.Automation.ScrollAmount,Microsoft.UI.Xaml.Automation.ScrollAmount)">
      <summary>Scrolls the visible region of the content area horizontally, vertically, or both.</summary>
      <param name="horizontalAmount">The horizontal increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalAmount">The vertical increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer">
      <summary>Exposes LoopingSelectorItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>**true** if the element is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.SelectionContainer">
      <summary>Gets the UI automation provider that implements ISelectionProvider and acts as the container for the calling object.</summary>
      <returns>The provider that supports ISelectionProvider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of the parent container in order to display the item within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer">
      <summary>Exposes the data content of a LoopingSelectorItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer.Realize">
      <summary>Makes the virtual item fully accessible as a Microsoft UI Automation element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer">
      <summary>Exposes MapControl types to Microsoft UI Automation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.CanMove">
      <summary>Gets a Boolean value indicating if the associated map can be repositioned.</summary>
      <returns>A Boolean value indicating if the associated map can be repositioned.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.CanResize">
      <summary>Gets a Boolean value indicating if the associated map can be resized.</summary>
      <returns>A Boolean value indicating if the associated map can be resized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.CanRotate">
      <summary>Gets a Boolean value indicating if the associated map can be rotated.</summary>
      <returns>A Boolean value indicating if the associated map can be rotated.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.CanZoom">
      <summary>Get a Boolean value indicating if the associated map can be zoomed.</summary>
      <returns>A Boolean value indicating if the associated map can be zoomed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.HorizontallyScrollable">
      <summary>Gets a Boolean value indicating if the map is scrollable in a horizontal direction.</summary>
      <returns>Boolean value indicating if the map is scrollable in a horizontal direction.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.HorizontalScrollPercent">
      <summary>Gets a Double value indicating the percentage of how far the map has been scrolled horizontally.</summary>
      <returns>A Double value indicating the percentage of how far the map has been scrolled horizontally.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.HorizontalViewSize">
      <summary>Gets the horizontal size of the map view.</summary>
      <returns>The horizontal size of the map view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.MaxZoom">
      <summary>Gets the maximum zoom level for the associated map.</summary>
      <returns>The maximum zoom level for the associated map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.MinZoom">
      <summary>Gets the minimum zoom level for the associated map.</summary>
      <returns>The minimum zoom level for the associated map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.VerticallyScrollable">
      <summary>Gets a Boolean value indicating if the map is scrollable in a vetrical direction.</summary>
      <returns>Boolean value indicating if the map is scrollable in a vertical direction.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.VerticalScrollPercent">
      <summary>Gets a Double value indicating the percentage of how far the map has been scrolled vertically.</summary>
      <returns>A Double value indicating the percentage of how far the map has been scrolled vertically.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.VerticalViewSize">
      <summary>Gets the vertical size of the map view.</summary>
      <returns>The vertical size of the map view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.ZoomLevel">
      <summary>Gets the zoom level of the associated map, which is a value between 1 and 20 in 2D views.</summary>
      <returns>The zoom level of the associated map.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.Move(System.Double,System.Double)">
      <summary>Moves the map by the specified horizontal and vertical amounts.</summary>
      <param name="x">The amount to move the map horizontally.</param>
      <param name="y">The amount to move the map vertically.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.Resize(System.Double,System.Double)">
      <summary>Resizes the associated map to the specified width and height.</summary>
      <param name="width">The new width for the associated map.</param>
      <param name="height">The new height for the associated map.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.Rotate(System.Double)">
      <summary>Rotates the map's camera from its current position.</summary>
      <param name="degrees">The degrees that the map's camera rotates in a horizontal clockwise direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.Scroll(Microsoft.UI.Xaml.Automation.ScrollAmount,Microsoft.UI.Xaml.Automation.ScrollAmount)">
      <summary>Scrolls the map by the specified horizontal and vertical amounts.</summary>
      <param name="horizontalAmount">The amount to scroll the map horizontally.</param>
      <param name="verticalAmount">The amount to scroll the map vertically.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the percentage that the map is scrolled both horizontally and vertically.</summary>
      <param name="horizontalPercent">The percentage that the map is scrolled horizontally.</param>
      <param name="verticalPercent">The percentage that the map is scrolled vertically.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.Zoom(System.Double)">
      <summary>Zooms the associated map to the specified ZoomLevel.</summary>
      <param name="zoom">The ZoomLevel to which to set the associated map.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MapControlAutomationPeer.ZoomByUnit(Microsoft.UI.Xaml.Automation.ZoomUnit)">
      <summary>Zooms the viewport of the associated map by the specified ZoomUnit.</summary>
      <param name="zoomUnit">The amount to zoom the viewport of the associated map.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MediaElementAutomationPeer">
      <summary>Exposes MediaElement types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MediaElementAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MediaElement)">
      <summary>Initializes a new instance of the MediaElementAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer">
      <summary>Exposes MediaPlayerElement types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MediaPlayerElement)">
      <summary>Initializes a new instance of the MediaPlayerElementAutomationPeer class.</summary>
      <param name="owner">The MediaPlayerElement to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer">
      <summary>Exposes MediaTransportControls types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MediaTransportControls)">
      <summary>Initializes a new instance of the MediaTransportControlsAutomationPeer class using the specified media transport controls.</summary>
      <param name="owner">The specified media transport controls.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer">
      <summary>Exposes MenuBar types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuBar)">
      <summary>Initializes a new instance of the MenuBarAutomationPeer class using the specified MenuBar.</summary>
      <param name="owner">The specified MenuBar.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer">
      <summary>Exposes MenuBarItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuBarItem)">
      <summary>Initializes a new instance of the MenuBarItemAutomationPeer class using the specified MenuBarItem.</summary>
      <param name="owner">The specified MenuBarItem.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the MenuBarItem.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the MenuBarItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the MenuBarItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Invoke">
      <summary>Sends a request to click the MenuBarItem associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer">
      <summary>Exposes MenuFlyoutItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuFlyoutItem)">
      <summary>Initializes a new instance of the MenuFlyoutItemAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer.Invoke">
      <summary>Sends a request to invoke the menu flyout associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer">
      <summary>Exposes MenuFlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter)">
      <summary>Initializes a new instance of the MenuFlyoutPresenterAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer">
      <summary>Exposes **NavigationViewItem ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.NavigationViewItem)">
      <summary>Initializes a new instance of the **NavigationViewItemAutomationPeer** class.</summary>
      <param name="owner">The **NavigationViewItem ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>Exposes PasswordBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.PasswordBox)">
      <summary>Initializes a new instance of the PasswordBoxAutomationPeer class.</summary>
      <param name="owner">The PasswordBox to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PatternInterface">
      <summary>Specifies the control pattern that the GetPattern method returns.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Annotation">
      <summary>The IAnnotationProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.CustomNavigation">
      <summary>The CustomNavigation control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Dock">
      <summary>The IDockProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Drag">
      <summary>The IDragProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.DropTarget">
      <summary>The IDropTargetProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.ExpandCollapse">
      <summary>The IExpandCollapseProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Grid">
      <summary>The IGridProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.GridItem">
      <summary>The IGridItemProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Invoke">
      <summary>The IInvokeProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.ItemContainer">
      <summary>The IItemContainerProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.MultipleView">
      <summary>The IMultipleViewProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.ObjectModel">
      <summary>**Introduced in .** The IObjectModelProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.RangeValue">
      <summary>The IRangeValueProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Scroll">
      <summary>The IScrollProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.ScrollItem">
      <summary>The IScrollItemProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Selection">
      <summary>The ISelectionProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.SelectionItem">
      <summary>The ISelectionItemProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Spreadsheet">
      <summary>**Introduced in .** The ISpreadsheetProvider  interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.SpreadsheetItem">
      <summary>**Introduced in .** The ISpreadsheetItemProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Styles">
      <summary>**Introduced in .** The IStylesProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.SynchronizedInput">
      <summary>**Introduced in .** The ISynchronizedInputProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Table">
      <summary>The ITableProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.TableItem">
      <summary>The ITableItemProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Text">
      <summary>The ITextProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Text2">
      <summary>The ITextProvider2 interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.TextChild">
      <summary>The ITextChildProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.TextEdit">
      <summary>The TextEdit control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.TextRange">
      <summary>The ITextRangeProvider interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Toggle">
      <summary>The IToggleProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Transform">
      <summary>The ITransformProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Transform2">
      <summary>**Introduced in .** The ITransformProvider2 interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Value">
      <summary>The IValueProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.VirtualizedItem">
      <summary>The IVirtualizedItemProvider control pattern interface.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.PatternInterface.Window">
      <summary>The IWindowProvider control pattern interface.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer">
      <summary>Exposes **PersonPicture ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.PersonPicture)">
      <summary>Initializes a new instance of the **PersonPictureAutomationPeer** class.</summary>
      <param name="owner">The **PersonPicture ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer">
      <summary>Exposes PickerFlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer">
      <summary>Exposes Pivot types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Pivot)">
      <summary>Initializes a new instance of the PivotAutomationPeer class.</summary>
      <param name="owner">The Pivot to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.CanSelectMultiple">
      <summary>Gets a value that indicates whether the control allows more than one child element to be selected concurrently.</summary>
      <returns>**true** if multiple selection is allowed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.HorizontallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll horizontally.</summary>
      <returns>**true** if the control can scroll horizontally; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.HorizontalScrollPercent">
      <summary>Gets the current horizontal scroll position.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.HorizontalViewSize">
      <summary>Gets the current horizontal view size.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.IsSelectionRequired">
      <summary>Gets a value that indicates whether the control requires at least one child element to be selected.</summary>
      <returns>**true** if selection is required; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.VerticallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll vertically.</summary>
      <returns>**true** if the control can scroll vertically; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.VerticalScrollPercent">
      <summary>Gets the current vertical scroll position.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.VerticalViewSize">
      <summary>Gets the current vertical view size.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.GetSelection">
      <summary>Retrieves a Microsoft UI Automation provider for each child element that is selected.</summary>
      <returns>A generic list of Microsoft UI Automation providers.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.Scroll(Microsoft.UI.Xaml.Automation.ScrollAmount,Microsoft.UI.Xaml.Automation.ScrollAmount)">
      <summary>Scrolls the visible region of the content area horizontally, vertically, or both.</summary>
      <param name="horizontalAmount">The horizontal increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalAmount">The vertical increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer">
      <summary>Exposes PivotItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.PivotItem)">
      <summary>Initializes a new instance of the PivotItemAutomationPeer class.</summary>
      <param name="owner">The PivotItem to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer">
      <summary>Exposes the data content of a PivotItem to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer)">
      <summary>Initializes a new instance of the PivotItemDataAutomationPeer class.</summary>
      <param name="item">The specific data item.</param>
      <param name="parent">The automation peer for the Pivot object that contains the item.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>**true** if the element is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.SelectionContainer">
      <summary>Gets the UI automation provider that implements ISelectionProvider and acts as the container for the calling object.</summary>
      <returns>The provider that supports ISelectionProvider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.Realize">
      <summary>Makes the virtual item fully accessible as a Microsoft UI Automation element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.ScrollIntoView">
      <summary>Scrolls the content area of the parent container in order to display the item within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer">
      <summary>Exposes ProgressBar types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ProgressBar)">
      <summary>Initializes a new instance of the ProgressBarAutomationPeer class.</summary>
      <param name="owner">The ProgressBar to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer">
      <summary>Exposes ProgressRing types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ProgressRing)">
      <summary>Initializes a new instance of the ProgressRingAutomationPeer class.</summary>
      <param name="owner">The ProgressRing to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer">
      <summary>Exposes RadioButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RadioButton)">
      <summary>Initializes a new instance of the RadioButtonAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>**true** if the element is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.SelectionContainer">
      <summary>Gets the UI automation provider that implements ISelectionProvider and acts as the container for the calling object.</summary>
      <returns>The provider that supports ISelectionProvider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer">
      <summary>A base class that provides a Microsoft UI Automation peer implementation for types that derive from RangeBase.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.RangeBase)">
      <summary>Initializes a new instance of the RangeBaseAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.IsReadOnly">
      <summary>Gets a value that indicates whether the value of a control is read-only.</summary>
      <returns>**true** if the value is read-only; **false** if it can be modified.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.LargeChange">
      <summary>Gets the value that is added to or subtracted from the Value property when a large change is made, such as with the PAGE DOWN key.</summary>
      <returns>The large-change value supported by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.Maximum">
      <summary>Gets the maximum range value that is supported by the control.</summary>
      <returns>The maximum range value supported by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.Minimum">
      <summary>Gets the minimum range value that is supported by the control.</summary>
      <returns>The minimum range value supported by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.SmallChange">
      <summary>Gets the value that is added to or subtracted from the Value property when a small change is made, such as with an arrow key.</summary>
      <returns>The small-change value supported by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.SetValue(System.Double)">
      <summary>Sets the value of the control, as an implementation of the IValueProvider pattern.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer">
      <summary>Exposes **RatingControl ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RatingControl)">
      <summary>Initializes a new instance of the **RatingControlAutomationPeer** class.</summary>
      <param name="owner">The **RatingControl ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId">
      <summary>Represents the runtime ID for an element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId.Part1">
      <summary>The first part of the identifier.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId.Part2">
      <summary>The second part of the identifier.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>Exposes RepeatButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.RepeatButton)">
      <summary>Initializes a new instance of the RepeatButtonAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer.Invoke">
      <summary>Sends a request to click the repeat button associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer">
      <summary>Exposes RichEditBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RichEditBox)">
      <summary>Initializes a new instance of the RichEditBoxAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer">
      <summary>Exposes RichTextBlock types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RichTextBlock)">
      <summary>Initializes a new instance of the RichTextBlockAutomationPeer class.</summary>
      <param name="owner">The RichTextBlock to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer">
      <summary>Exposes RichTextBlockOverflow types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RichTextBlockOverflow)">
      <summary>Initializes a new instance of the RichTextBlockOverflowAutomationPeer class.</summary>
      <param name="owner">The RichTextBlockOverflow to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer">
      <summary>Exposes ScrollBar types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ScrollBar)">
      <summary>Initializes a new instance of the ScrollBarAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>Exposes ScrollViewer types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ScrollViewer)">
      <summary>Initializes a new instance of the ScrollViewerAutomationPeer class.</summary>
      <param name="owner">The ScrollViewer to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.HorizontallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll horizontally.</summary>
      <returns>**true** if the control can scroll horizontally; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.HorizontalScrollPercent">
      <summary>Gets the current horizontal scroll position.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.HorizontalViewSize">
      <summary>Gets the current horizontal view size.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.VerticallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll vertically.</summary>
      <returns>**true** if the control can scroll vertically; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.VerticalScrollPercent">
      <summary>Gets the current vertical scroll position.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.VerticalViewSize">
      <summary>Gets the vertical view size.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.Scroll(Microsoft.UI.Xaml.Automation.ScrollAmount,Microsoft.UI.Xaml.Automation.ScrollAmount)">
      <summary>Scrolls the visible region of the content area horizontally, vertically, or both.</summary>
      <param name="horizontalAmount">The horizontal increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalAmount">The vertical increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SearchBoxAutomationPeer">
      <summary>Exposes SearchBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SearchBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.SearchBox)">
      <summary>Initializes a new instance of the SearchBoxAutomationPeer class.</summary>
      <param name="owner">The SearchBox to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer">
      <summary>A base class that provides a Microsoft UI Automation peer implementation for types that derive from Selector.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.Selector)">
      <summary>Initializes a new instance of the SelectorAutomationPeer class.</summary>
      <param name="owner">The owner Selector implementation to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.CanSelectMultiple">
      <summary>Gets a value that indicates whether the Microsoft UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>**true** if multiple selection is allowed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.IsSelectionRequired">
      <summary>Gets a value that indicates whether the Microsoft UI Automation provider requires at least one child element to be selected.</summary>
      <returns>**true** if selection is required; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.GetSelection">
      <summary>Retrieves a Microsoft UI Automation provider for each child element that is selected.</summary>
      <returns>A generic list of Microsoft UI Automation providers.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer">
      <summary>Exposes the items in a Selector to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer)">
      <summary>Initializes a new instance of the SelectorItemAutomationPeer class.</summary>
      <param name="item">The specific item.</param>
      <param name="parent">The parent items control to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>**true** if the element is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.SelectionContainer">
      <summary>Gets the UI Automation provider that implements ISelectionProvider and acts as container for the calling object.</summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer">
      <summary>Exposes SemanticZoom types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.SemanticZoom)">
      <summary>Initializes a new instance of the SemanticZoomAutomationPeer class.</summary>
      <param name="owner">The SemanticZoom to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.ToggleState">
      <summary>Gets a value that indicates whether the Toggle method can be called and result in a toggled view.</summary>
      <returns>**true** if calling Toggle will result in a toggled view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer">
      <summary>Exposes Slider types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Slider)">
      <summary>Initializes a new instance of the SliderAutomationPeer class.</summary>
      <param name="owner">The Slider to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer">
      <summary>Exposes TextBlock types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TextBlock)">
      <summary>Initializes a new instance of the TextBlockAutomationPeer class.</summary>
      <param name="owner">The TextBlock to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer">
      <summary>Exposes TextBox types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TextBox)">
      <summary>Initializes a new instance of the TextBoxAutomationPeer class.</summary>
      <param name="owner">The TextBox to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer">
      <summary>Exposes Thumb types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.Thumb)">
      <summary>Initializes a new instance of the ThumbAutomationPeer class.</summary>
      <param name="owner">The Thumb to create a peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer">
      <summary>Exposes TimePicker types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TimePicker)">
      <summary>Initializes a new instance of the TimePickerAutomationPeer class.</summary>
      <param name="owner">The TimePicker to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer">
      <summary>Exposes TimePickerFlyoutPresenter types to Microsoft UI Automation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>Exposes ToggleButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton)">
      <summary>Initializes a new instance of the ToggleButtonAutomationPeer class.</summary>
      <param name="owner">The ToggleButton to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>The toggle state of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer">
      <summary>Exposes ToggleMenuFlyoutItem types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem)">
      <summary>Initializes a new instance of the ToggleMenuFlyoutItemAutomationPeer class.</summary>
      <param name="owner">The owner element to create for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>The toggle state of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer">
      <summary>Exposes ToggleSwitch types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ToggleSwitch)">
      <summary>Initializes a new instance of the ToggleSwitchAutomationPeer class.</summary>
      <param name="owner">The ToggleSwitch to create a peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>The toggle state of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>Exposes **TreeViewItem ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TreeViewItem)">
      <summary>Initializes a new instance of the **TreeViewItemAutomationPeer** class.</summary>
      <param name="owner">The **TreeViewItem ** control instance to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.ExpandCollapseState">
      <summary>Gets a value indicating the expanded or collapsed state of the associated **TreeViewItem **.</summary>
      <returns>The expanded or collapsed state of the associated **TreeViewItem **. The default value is **Expanded**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.Collapse">
      <summary>Collapses the associated **TreeViewItem **.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.Expand">
      <summary>Expands the associated **TreeViewItem **.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer">
      <summary>Exposes **TreeViewList ** types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TreeViewList)">
      <summary>Initializes a new instance of the **TreeViewListAutomationPeer** class.</summary>
      <param name="owner">The **TreeViewList ** control instance to create the peer for.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider">
      <summary>Exposes the properties of an annotation in a document. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Annotation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.AnnotationTypeId">
      <summary>Gets the annotation type identifier of this annotation.</summary>
      <returns>The annotation type identifier of this annotation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.AnnotationTypeName">
      <summary>Gets the name of this annotation type.</summary>
      <returns>The name of this annotation type.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.Author">
      <summary>Gets the name of the annotation author.</summary>
      <returns>The name of the annotation author.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.DateTime">
      <summary>Gets the date and time when this annotation was created.</summary>
      <returns>The date and time when this annotation was created.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.Target">
      <summary>Gets the UI Automation element that is being annotated.</summary>
      <returns>The UI Automation element that is being annotated.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider">
      <summary>Exposes a method to support access by a Microsoft UI Automation client to controls that support a custom navigation order. Implement ICustomNavigationProvider to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.CustomNavigation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider.NavigateCustom(Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection)">
      <summary>Gets the next element in the specified direction within the logical UI tree.</summary>
      <param name="direction">The specified direction.</param>
      <returns>The next element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IDockProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that expose their dock properties in a docking container. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Dock.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDockProvider.DockPosition">
      <summary>Gets the current DockPosition of the control in a docking container.</summary>
      <returns>The DockPosition of the control, relative to the boundaries of the docking container and to other elements in the container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IDockProvider.SetDockPosition(Microsoft.UI.Xaml.Automation.DockPosition)">
      <summary>Docks the control in a docking container.</summary>
      <param name="dockPosition">The dock position, relative to the boundaries of the docking container and to other elements in the container.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IDragProvider">
      <summary>Enables a Microsoft UI Automation element to describe itself as an element that can be dragged as part of a drag-and-drop operation. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Drag.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDragProvider.DropEffect">
      <summary>Gets a string that indicates what will happen when the item is dropped.</summary>
      <returns>A string that indicates what will happen when the item is dropped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDragProvider.DropEffects">
      <summary>Gets an array of strings that enumerates possible drop effects when this item is dropped.</summary>
      <returns>An array of strings that enumerates possible drop effects when this item is dropped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDragProvider.IsGrabbed">
      <summary>Gets a value indicating whether an item is currently being dragged.</summary>
      <returns>**true** if the item is being dragged. Otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IDragProvider.GetGrabbedItems">
      <summary>Gets an array of UI Automation elements that are being dragged as part of this drag operation.</summary>
      <returns>An array of UI Automation elements that are being dragged. Null if this item is an individual item being dragged. Used to enable providers that support dragging multiple items at a time to create an intermediary IDragProvider that encapsulates all of the items being dragged.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider">
      <summary>Enables a Microsoft UI Automation element to describe itself as an element that can receive a drop of a dragged element as part of a drag-and-drop operation. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.DropTarget.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider.DropEffect">
      <summary>Gets a string that indicates what will happen when the item is dropped.</summary>
      <returns>A string that indicates what will happen when the item is dropped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider.DropEffects">
      <summary>Gets an array of strings that enumerates possible drop effects when this item is dropped.</summary>
      <returns>An array of strings that enumerates possible drop effects when this item is dropped.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that visually expand to display content and that collapse to hide content. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.ExpandCollapse.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>Gets the state (expanded or collapsed) of the control.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to individual child controls of containers that implement IGridProvider. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.GridItem.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>Gets the number of columns that are spanned by a cell or item.</summary>
      <returns>The number of columns.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>Gets a UI Automation provider that implements IGridProvider and that represents the container of the cell or item.</summary>
      <returns>A UI Automation provider that implements the **Grid** control pattern and that represents the cell or item container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>Gets the number of rows spanned by a cell or item.</summary>
      <returns>The number of rows.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IGridProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that act as containers for a collection of child elements. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Grid.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridProvider.ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IGridProvider.RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI Automation provider for the specified cell.</summary>
      <param name="row">The ordinal number of the row that contains the cell.</param>
      <param name="column">The ordinal number of the column that contains the cell.</param>
      <returns>The UI Automation provider for the specified cell.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider">
      <summary>Exposes a method to support Microsoft UI Automation access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Invoke.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider.Invoke">
      <summary>Sends a request to initiate or perform the single, unambiguous action of the provider control. For example, the invoke action for a Button is click.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider">
      <summary>Exposes a Microsoft UI Automation method to enable applications to find an element in a container, such as a virtualized list. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.ItemContainer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider.FindItemByProperty(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple,Microsoft.UI.Xaml.Automation.AutomationProperty,System.Object)">
      <summary>Retrieves an element by the specified property value.</summary>
      <param name="startAfter">The item in the container after which to begin the search.</param>
      <param name="automationProperty">The property that contains the value to retrieve.</param>
      <param name="value">The value to retrieve.</param>
      <returns>The first item that matches the search criterion; otherwise, null.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider">
      <summary>Exposes methods and properties to support Microsoft UI Automation client access to controls that provide, and are able to switch between, multiple representations of the same set of information or child controls. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.MultipleView.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>Gets the current control-specific view.</summary>
      <returns>The view identifier for the current view of the UI Automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>Retrieves a collection of control-specific view identifiers.</summary>
      <returns>A collection of values that identifies the views available for a UI Automation element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>Retrieves the name of a control-specific view.</summary>
      <param name="viewId">The view identifier.</param>
      <returns>A localized name for the view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>Sets the current control-specific view.</summary>
      <param name="viewId">A view identifier.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider">
      <summary>Provides access to the underlying object model implemented by a control or app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider.GetUnderlyingObjectModel">
      <summary>Returns an interface used to access the underlying object model of the provider.</summary>
      <returns>An untyped interface for accessing the underlying object model.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that can be set to a value within a range. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.RangeValue.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>Gets a value that indicates whether the value of a control is read-only.</summary>
      <returns>**true** if the value is read-only; **false** if it can be modified.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>Gets the value that is added to or subtracted from the Value property when a large change is made, such as with the PAGE DOWN key.</summary>
      <returns>The large-change value that is supported by the control, or null if the control does not support LargeChange.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>Gets the maximum range value that is supported by the control.</summary>
      <returns>The maximum value that is supported by the control, or null if the control does not support Maximum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>Gets the minimum range value that is supported by the control.</summary>
      <returns>The minimum value that is supported by the control, or null if the control does not support Minimum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>Gets the value that is added to or subtracted from the Value property when a small change is made, such as with an arrow key.</summary>
      <returns>The small-change value supported by the control, or null if the control does not support SmallChange.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control, or null if the control does not support Value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>Sets the value of the control.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple">
      <summary>Provides methods and properties that expose basic information about a UI element. IRawElementProviderSimple is a Windows Runtime class, not an interface.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider">
      <summary>Exposes methods and properties to support access by Microsoft UI Automation client to individual child controls of containers that implement IScrollProvider. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.ScrollItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to a control that acts as a scrollable container for a collection of child objects. The children of this element must implement IScrollItemProvider. Implement IScrollProvider in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Scroll.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll horizontally.</summary>
      <returns>**true** if the control can scroll horizontally; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>Gets the current horizontal scroll position.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>Gets the current horizontal view size.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>Gets a value that indicates whether the control can scroll vertically.</summary>
      <returns>**true** if the control can scroll vertically; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>Gets the current vertical scroll position.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>Gets the vertical view size.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.Scroll(Microsoft.UI.Xaml.Automation.ScrollAmount,Microsoft.UI.Xaml.Automation.ScrollAmount)">
      <summary>Scrolls the visible region of the content area horizontally, vertically, or both.</summary>
      <param name="horizontalAmount">The horizontal increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalAmount">The vertical increment that is specific to the control. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass NoScroll if the control cannot be scrolled in this direction.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to individual, selectable child controls of containers that implement ISelectionProvider. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.SelectionItem.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>**true** if the element is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>Gets the UI Automation provider that implements ISelectionProvider and acts as the container for the calling object.</summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that act as containers for a collection of individual, selectable child items. The children of this element must implement ISelectionItemProvider. Implement ISelectionProvider in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.SelectionItem.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>Gets a value that indicates whether the Microsoft UI Automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>**true** if multiple selection is allowed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>Gets a value that indicates whether the UI Automation provider requires at least one child element to be selected.</summary>
      <returns>**true** if selection is required; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>Retrieves a UI Automation provider for each child element that is selected.</summary>
      <returns>An array of UI Automation providers.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider">
      <summary>Provides access to information about an item (cell) in a spreadsheet.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.Formula">
      <summary>Gets the formula for this spreadsheet cell, as a string.</summary>
      <returns>The formula for this cell, as a string.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.GetAnnotationObjects">
      <summary>Returns an array of objects that represent the annotations associated with this spreadsheet cell.</summary>
      <returns>An array of IRawElementProviderSimple interfaces for Microsoft UI Automation elements that represent the annotations associated with the spreadsheet cell.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.GetAnnotationTypes">
      <summary>Returns an array of annotation type identifiers indicating the types of annotations that are associated with this spreadsheet cell.</summary>
      <returns>An array of annotation type identifiers, which contains one entry for each type of annotation associated with the spreadsheet cell. For a list of possible values, see AnnotationType.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider">
      <summary>Provides access to items (cells) in a spreadsheet.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider.GetItemByName(System.String)">
      <summary>Returns a Microsoft UI Automation element that represents the spreadsheet cell that has the specified name.</summary>
      <param name="name">The name of the target cell.</param>
      <returns>A Microsoft UI Automation element that represents the target cell.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider">
      <summary>Provides access to the visual styles associated with the content of a document.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.ExtendedProperties">
      <summary>Gets a string value that contains additional property info. The info is for properties are that are not included in this control pattern, but that provide information about the document content that might be useful to the user.</summary>
      <returns>A localized, formatted string that contains the list of extended properties. The string must be formatted as a list of name/value pairs, as follows: "prop1=value;prop2=value2".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillColor">
      <summary>Gets the fill color of an element in a document.</summary>
      <returns>The fill color, represented as a Windows Runtime  Color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillPatternColor">
      <summary>Gets the color of the pattern used to fill an element in a document.</summary>
      <returns>The color of the fill pattern, represented as a Windows Runtime  Color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillPatternStyle">
      <summary>Gets a string that represents the fill pattern style of an element in a document.</summary>
      <returns>A localized string that indicates the fill pattern style, such as "Vertical Stripe".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.Shape">
      <summary>Gets a string that represents the shape of an element in a document.</summary>
      <returns>A localized string that indicates the shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.StyleId">
      <summary>Gets the identifier for a visual style of an element in a document.</summary>
      <returns>The style identifier. For a list of possible values, see Style Identifiers.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.StyleName">
      <summary>Gets the name of the visual style of an element in a document.</summary>
      <returns>The name of the style, or empty string if the style has no name.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider">
      <summary>Enables Microsoft UI Automation client applications to direct the mouse or keyboard input to a specific UI element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider.Cancel">
      <summary>Cancels listening for input.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider.StartListening(Microsoft.UI.Xaml.Automation.SynchronizedInputType)">
      <summary>Starts listening for input of the specified type.</summary>
      <param name="inputType">The type of input that is requested to be synchronized.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider">
      <summary>Exposes methods and properties to support Microsoft UI Automation client access to child controls of containers that implement ITableProvider. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.TableItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>Retrieves an array of UI Automation providers representing all the column headers associated with a table item or cell.</summary>
      <returns>An array of UI Automation providers.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>Retrieves an array of UI Automation providers representing all the row headers associated with a table item or cell.</summary>
      <returns>An array of UI Automation providers.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITableProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that act as containers for a collection of child elements. The children of this element must implement ITableItemProvider and be organized in a two-dimensional logical coordinate system that can be traversed (a Microsoft UI Automation client can move to adjacent controls, which are headers or cells of the table) by using the keyboard.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>Gets the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>Returns a collection of UI Automation providers that represents all the column headers in a table.</summary>
      <returns>An array of UI Automation providers.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>Returns a collection of UI Automation providers that represents all row headers in the table.</summary>
      <returns>An array of UI Automation providers.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider">
      <summary>Provides access to a text-based control that is a child of another text-based control. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.TextChild.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider.TextContainer">
      <summary>Gets this element's nearest ancestor provider that supports the **Text** (ITextProvider ) control pattern.</summary>
      <returns>The nearest ancestor provider that supports the **Text** (ITextProvider ) control pattern.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider.TextRange">
      <summary>Gets a text range that encloses this child element.</summary>
      <returns>A text range that encloses this child element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider">
      <summary>Extends the ITextProvider interface to support access by a Microsoft UI Automation client to controls that support programmatic text-edit actions. Implement ITextEditProvider in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.TextEdit.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider.GetActiveComposition">
      <summary>Gets the active composition.</summary>
      <returns>The active composition.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider.GetConversionTarget">
      <summary>Gets the current conversion target.</summary>
      <returns>The current conversion target.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextProvider">
      <summary>Exposes methods and properties to support Microsoft UI Automation client access to controls that contain text. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Text.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.DocumentRange">
      <summary>Gets a text range that encloses the main text of a document.</summary>
      <returns>A text range that encloses the main text of a document.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>Gets a value that specifies whether a text provider supports selection, and if it does, the type of selection that is supported.</summary>
      <returns>A value of SupportedTextSelection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetSelection">
      <summary>Retrieves a collection of disjoint text ranges that are associated with the current text selection or selections.</summary>
      <returns>A collection of disjoint text ranges.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>Retrieves an array of disjoint text ranges from a text container. Each text range begins with the first partially visible line and ends with the last partially visible line.</summary>
      <returns>The collection of visible text ranges within a container or an empty array. This method never returns null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromChild(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple)">
      <summary>Retrieves a text range that encloses a child element, such as an image, hyperlink, or other embedded object.</summary>
      <param name="childElement">The enclosed object.</param>
      <returns>A range that spans the child element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromPoint(Windows.Foundation.Point)">
      <summary>Retrieves a text range from the vicinity of a screen coordinate.</summary>
      <param name="screenLocation">The coordinate screen location.</param>
      <returns>A range that contains text. </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextProvider2">
      <summary>Extends the ITextProvider interface to enable Microsoft UI Automation providers to expose textual content that is the target of an annotation or selection. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Text2.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider2.GetCaretRange(System.Boolean@)">
      <summary>Retrieves a zero-length text range at the location of the caret that belongs to the text-based control.</summary>
      <param name="isActive">**true** if the text-based control that contains the caret has keyboard focus; otherwise, **false**.</param>
      <returns>A text range that represents the current location of the caret that belongs to the text-based control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextProvider2.RangeFromAnnotation(Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple)">
      <summary>Exposes a text range that contains the text that is the target of the annotation associated with the specified annotation element.</summary>
      <param name="annotationElement">The provider for an element that implements the IAnnotationProvider interface. The annotation element is a sibling of the element that implements the ITextProvider2 interface for the document. </param>
      <returns>A text range that contains the annotation target text.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider">
      <summary>Exposes methods and properties to support Microsoft UI Automation client access to a span of continuous text in a text container that implements ITextProvider.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>Adds to the collection of highlighted text in a text container that supports multiple disjoint selections.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Clone">
      <summary>Returns a new ITextRangeProvider that is identical to the original ITextRangeProvider and that inherits all the properties of the original.</summary>
      <returns>The new text range. This method never returns null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Compare(Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)">
      <summary>Returns a value that indicates whether the start and end points of a text range are the same as another text range.</summary>
      <param name="textRangeProvider">A text range to compare to the implementing peer's text range.</param>
      <returns>**true** if the span of both text ranges is identical; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.CompareEndpoints(Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider,Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Returns a value that indicates whether two text ranges have identical endpoints.</summary>
      <param name="endpoint">The **Start** or **End** endpoint of the caller.</param>
      <param name="textRangeProvider">The target range for comparison.</param>
      <param name="targetEndpoint">The **Start** or **End** endpoint of the target.</param>
      <returns>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint. Returns zero if the caller's endpoint is at the same location as the target endpoint. Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(Microsoft.UI.Xaml.Automation.Text.TextUnit)">
      <summary>Expands the text range to the specified text unit.</summary>
      <param name="unit">The text measure unit.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>Returns a text range subset that has the specified attribute ID and attribute value.</summary>
      <param name="attributeId">The attribute ID to search for.</param>
      <param name="value">The attribute value to search for. This value must match the type specified for the attribute.</param>
      <param name="backward">**true** if the last occurring text range should be returned instead of the first; otherwise, **false**.</param>
      <returns>A text range that has a matching attribute ID and attribute value; otherwise **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>Returns a text range subset that contains the specified text.</summary>
      <param name="text">The text string to search for.</param>
      <param name="backward">**true** to return the last occurring text range instead of the first; otherwise, **false**.</param>
      <param name="ignoreCase">**true** to ignore case; otherwise, **false**.</param>
      <returns>A text range that matches the specified text; otherwise null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>Retrieves the value of the specified attribute ID across the text range.</summary>
      <param name="attributeId">The text attribute ID.</param>
      <returns>Retrieves an object that represents the value of the specified attribute.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetBoundingRectangles(System.Double[]@)">
      <summary>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</summary>
      <param name="returnValue">An array of bounding rectangles for each full or partial line of text in a text range. An empty array for a degenerate range. An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window. </param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>Retrieves a collection of all the embedded objects that exist within the text range.</summary>
      <returns>A collection of child objects that exist within the range. Child objects that overlap with the text range but are not completely enclosed by it are also included in the collection. Returns an empty collection if no child objects exist.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>Returns the innermost element that encloses the text range.</summary>
      <returns>The enclosing control, typically the text provider that provides the text range. However, if the text provider supports child text elements such as tables or hyperlinks, the enclosing element can be a descendant of the text provider.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>Retrieves the plain text of the range.</summary>
      <param name="maxLength">The maximum length of the string to return. Use – 1 to specify an unlimited length.</param>
      <returns>The plain text of the text range, which might represent a portion of the full string truncated at the specified *maxLength*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Move(Microsoft.UI.Xaml.Automation.Text.TextUnit,System.Int32)">
      <summary>Moves the text range the specified number of text units.</summary>
      <param name="unit">The text unit boundary.</param>
      <param name="count">The number of text units to move. A positive value moves the text range forward; a negative value moves the text range backward; and a value of 0 has no effect.</param>
      <returns>The number of units actually moved. This value can be less than the *count* requested if either of the new text range endpoints is greater than or less than the DocumentRange endpoints. This value can be negative if navigation is happening in the backward direction.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider,Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Moves one endpoint of a text range to the specified endpoint of a second text range.</summary>
      <param name="endpoint">The endpoint to move.</param>
      <param name="textRangeProvider">Another range from the same text provider.</param>
      <param name="targetEndpoint">An endpoint on the other range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Microsoft.UI.Xaml.Automation.Text.TextUnit,System.Int32)">
      <summary>Moves one endpoint of the text range the specified number of text units within the document range.</summary>
      <param name="endpoint">The endpoint to move.</param>
      <param name="unit">The text measure unit for moving.</param>
      <param name="count">The number of units to move. A positive value moves the endpoint forward. A negative value moves it backward. A value of 0 has no effect.</param>
      <returns>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>From the collection of highlighted text in a text container that supports multiple disjoint selections, removes a highlighted section of text that corresponds to the caller's text range endpoints.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>Causes the text control to scroll vertically until the text range is visible in the viewport.</summary>
      <param name="alignToTop">**true** if the text control should be scrolled so that the text range is flush with the top of the viewport; **false** if the text range is flush with the bottom of the viewport.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Select">
      <summary>Highlights text in the text control that corresponds to the start and end endpoints of the text range.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2">
      <summary>Extends the ITextRange interface to enable Microsoft UI Automation providers to programmatically open context menus that are contextual to text input operations.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2.ShowContextMenu">
      <summary>Shows the available context menu for the owner element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IToggleProvider">
      <summary>Exposes methods and properties to support Microsoft UI Automation client access to controls that can cycle through a set of states and maintain a particular state. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Toggle.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IToggleProvider.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>The toggle state of the control, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IToggleProvider.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls or elements that can be moved, resized, or rotated within a two-dimensional space. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Transform.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanMove">
      <summary>Gets a value that indicates whether the element can be moved.</summary>
      <returns>**true** if the element can be moved; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanResize">
      <summary>Gets a value that indicates whether the element can be resized.</summary>
      <returns>**true** if the element can be resized; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanRotate">
      <summary>Gets a value that indicates whether the element can be rotated.</summary>
      <returns>**true** if the element can be rotated; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>Moves the control.</summary>
      <param name="x">The absolute screen coordinates of the left side of the control.</param>
      <param name="y">The absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>Resizes the control.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>Rotates the control.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates the control clockwise. A negative number rotates the control counterclockwise.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2">
      <summary>Extends the ITransformProvider interface to enable Microsoft UI Automation providers to expose API to support the viewport zooming functionality of a control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.CanZoom">
      <summary>Gets a value that indicates whether the control supports zooming of its viewport.</summary>
      <returns>**true** if the viewport can be zoomed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.MaxZoom">
      <summary>Gets the maximum zoom level of the element.</summary>
      <returns>The maximum zoom level, as a percentage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.MinZoom">
      <summary>Gets the minimum zoom level of the element.</summary>
      <returns>The minimum zoom level, as a percentage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.ZoomLevel">
      <summary>Gets the zoom level of the control's viewport.</summary>
      <returns>The zoom level, specified as a percentage. The provider should zoom the viewport to the nearest supported value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.Zoom(System.Double)">
      <summary>Zooms the viewport of the control.</summary>
      <param name="zoom">The amount to zoom the viewport, specified as a percentage. The provider should zoom the viewport to the nearest supported value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.ZoomByUnit(Microsoft.UI.Xaml.Automation.ZoomUnit)">
      <summary>Zooms the viewport of the control by the specified logical unit.</summary>
      <param name="zoomUnit">The logical unit by which to increase or decrease the zoom of the viewport.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IValueProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that have an intrinsic value that does not span a range and that can be represented as a string. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Value.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>Gets a value that indicates whether the value of a control is read-only.</summary>
      <returns>**true** if the value is read-only; **false** if it can be modified.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>Sets the value of a control.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider">
      <summary>Exposes a method to support the virtualized item control pattern. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.VirtualizedItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider.Realize">
      <summary>Makes the virtual item fully accessible as a UI Automation element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider">
      <summary>Exposes methods and properties to support access by a Microsoft UI Automation client to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI). Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Window.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.InteractionState">
      <summary>Gets the interaction state of the window.</summary>
      <returns>The interaction state of the control, as a value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.IsModal">
      <summary>Gets a value that specifies whether the window is modal.</summary>
      <returns>**true** if the window is modal; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>Gets a value that specifies whether the window is the topmost element in the z-order of layout.</summary>
      <returns>**true** if the window is topmost; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Maximizable">
      <summary>Gets a value that specifies whether the window can be maximized.</summary>
      <returns>**true** if the window can be maximized; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Minimizable">
      <summary>Gets a value that specifies whether the window can be minimized.</summary>
      <returns>**true** if the window can be minimized; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.VisualState">
      <summary>Gets the visual state of the window.</summary>
      <returns>The visual state of the window, as a value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Close">
      <summary>Closes the window.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.SetVisualState(Microsoft.UI.Xaml.Automation.WindowVisualState)">
      <summary>Changes the visual state of the window (such as minimizing or maximizing it).</summary>
      <param name="state">The visual state of the window to change to, as a value of the enumeration.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>Blocks the calling code for the specified time or until the associated process enters an idle state, whichever completes first.</summary>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle.</param>
      <returns>**true** if the window has entered the idle state; **false** if the timeout occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint">
      <summary>Identifies text range endpoints for methods of ITextRangeProvider.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint.End">
      <summary>The endpoint of the range.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint.Start">
      <summary>The start point of the range.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Text.TextUnit">
      <summary>Represents predefined units of text for the purposes of navigation within a document.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Character">
      <summary>Specifies that the text unit is one character in length.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Document">
      <summary>Specifies that the text unit is an entire document in length.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Format">
      <summary>Specifies that the text unit is the length of a single, common format specification, such as bold, italic, or similar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Line">
      <summary>Specifies that the text unit is one line in length.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Page">
      <summary>Specifies that the text unit is one document-specific page in length.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Paragraph">
      <summary>Specifies that the text unit is one paragraph in length.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Automation.Text.TextUnit.Word">
      <summary>Specifies that the text unit is one word in length.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs">
      <summary>Provides data for the ScrollViewer.AnchorRequested event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.Anchor">
      <summary>Gets or sets the *anchor element* to use when performing scroll anchoring.</summary>
      <returns>The UIElement to use as the CurrentAnchor. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.AnchorCandidates">
      <summary>Gets the set of anchor candidates that are currently registered with the scrolling control (e.g. ScrollViewer).</summary>
      <returns>A list of UIElement anchor candidates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBar">
      <summary>Represents the container control that holds app UI components for commanding and experiences. For Windows 10, see Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBar.#ctor">
      <summary>Initializes a new instance of the AppBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayMode">
      <summary>Gets or sets a value that indicates whether icon buttons are displayed when the app bar is not completely open.</summary>
      <returns>A value that indicates whether icon buttons are displayed when the app bar is not completely open.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayModeProperty">
      <summary>Identifies the ClosedDisplayMode dependency property.</summary>
      <returns>The identifier for the ClosedDisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.IsOpen">
      <summary>Gets or sets a value that indicates whether the AppBar is open.</summary>
      <returns>**true** if the app bar is open; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
      <returns>The identifier for the IsOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.IsSticky">
      <summary>Gets or sets a value that indicates whether the AppBar does not close on light dismiss.</summary>
      <returns>**true** if the AppBar does not close on light dismiss. **false** if the AppBar is hidden on light dismiss.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.IsStickyProperty">
      <summary>Identifies the IsSticky dependency property.</summary>
      <returns>The identifier for the IsSticky dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBar.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for an AppBar control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AppBar.Closed">
      <summary>Occurs when the AppBar changes from visible to hidden.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AppBar.Closing">
      <summary>Occurs when the AppBar starts to change from visible to hidden.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AppBar.Opened">
      <summary>Occurs when the AppBar changes from hidden to visible.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AppBar.Opening">
      <summary>Occurs when the AppBar starts to change from hidden to visible.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBar.OnClosed(System.Object)">
      <summary>Invoked when the AppBar changes from visible to hidden.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBar.OnClosing(System.Object)">
      <summary>Invoked when the AppBar starts to change from visible to hidden.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBar.OnOpened(System.Object)">
      <summary>Invoked when the AppBar changes from hidden to visible, or is first displayed.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBar.OnOpening(System.Object)">
      <summary>Invoked when the AppBar starts to change from hidden to visible, or starts to be first displayed.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBarButton">
      <summary>Represents a templated button control to be displayed in an AppBar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBarButton.#ctor">
      <summary>Initializes a new instance of the AppBarButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.DynamicOverflowOrder">
      <summary>Gets or sets the order in which this item is moved to the CommandBar overflow menu.</summary>
      <returns>The order in which this item is moved to the overflow menu relative to other items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.DynamicOverflowOrderProperty">
      <summary>Identifies the DynamicOverflowOrder dependency property.</summary>
      <returns>The identifier for the DynamicOverflowOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.Icon">
      <summary>Gets or sets the graphic content of the app bar button.</summary>
      <returns>The graphic content of the app bar button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
      <returns>The identifier for the Icon dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.IsCompact">
      <summary>Gets or sets a value that indicates whether the button is shown with no label and reduced padding.</summary>
      <returns>**true** if the button is shown in its compact state; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.IsCompactProperty">
      <summary>Identifies the IsCompact dependency property.</summary>
      <returns>The identifier for the IsCompact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.IsInOverflow">
      <summary>Gets a value that indicates whether this item is in the overflow menu.</summary>
      <returns>**true** if this item is in the overflow menu; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.IsInOverflowProperty">
      <summary>Identifies the IsInOverflow dependency property.</summary>
      <returns>The identifier for the IsInOverflow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.KeyboardAcceleratorTextOverride">
      <summary>Gets or sets a string that overrides the default key combination string associated with a keyboard accelerator.</summary>
      <returns>The string to replace the default key combination string. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.KeyboardAcceleratorTextOverrideProperty">
      <summary>Identifies the AppBarButton.KeyboardAcceleratorTextOverride dependency property.</summary>
      <returns>The identifier for the AppBarButton.KeyboardAcceleratorTextOverride dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.Label">
      <summary>Gets or sets the text description displayed on the app bar button.</summary>
      <returns>The text description displayed on the app bar button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.LabelPosition">
      <summary>Gets or sets a value that indicates the placement and visibility of the button's label.</summary>
      <returns>An enumeration value that specifies the placement and visibility of the button's label. The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.LabelPositionProperty">
      <summary>Identifies the LabelPosition dependency property.</summary>
      <returns>The identifier for the LabelPosition dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.LabelProperty">
      <summary>Identifies the Label dependency property.</summary>
      <returns>The identifier for the Label dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarButton.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for an AppBarButton control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode">
      <summary>Defines constants that specify whether icon buttons are displayed when an app bar is not completely open.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode.Compact">
      <summary>Icon buttons are displayed but labels are not visible.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode.Hidden">
      <summary>The app bar is not displayed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode.Minimal">
      <summary>Only the ellipsis is displayed. Neither icon buttons nor labels are visible.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBarElementContainer">
      <summary>Represents a container that allows an element that doesn't implement ICommandBarElement to be displayed in a command bar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBarElementContainer.#ctor">
      <summary>Initializes a new instance of the AppBarElementContainer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.DynamicOverflowOrder">
      <summary>Gets or sets the order in which this item is moved to the CommandBar overflow menu.</summary>
      <returns>The order in which this item is moved to the overflow menu relative to other items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.DynamicOverflowOrderProperty">
      <summary>Identifies the DynamicOverflowOrder dependency property.</summary>
      <returns>The identifier for the DynamicOverflowOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsCompact">
      <summary>Gets or sets a value that indicates whether the element is shown in its compact state.</summary>
      <returns>**true** if the element is shown in its compact state; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsCompactProperty">
      <summary>Identifies the IsCompact dependency property.</summary>
      <returns>The identifier for the IsCompact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsInOverflow">
      <summary>Gets a value that indicates whether this item is in the overflow menu.</summary>
      <returns>**true** if this item is in the overflow menu; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsInOverflowProperty">
      <summary>Identifies the IsInOverflow dependency property.</summary>
      <returns>The identifier for the IsInOverflow dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBarSeparator">
      <summary>Represents a line that separates items in an AppBar or CommandBar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBarSeparator.#ctor">
      <summary>Initializes a new instance of the AppBarSeparator class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.DynamicOverflowOrder">
      <summary>Gets or sets the order in which this item is moved to the CommandBar overflow menu.</summary>
      <returns>The order in which this item is moved to the overflow menu relative to other items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.DynamicOverflowOrderProperty">
      <summary>Identifies the DynamicOverflowOrder dependency property.</summary>
      <returns>The identifier for the DynamicOverflowOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.IsCompact">
      <summary>Gets or sets a value that indicates whether the separator is shown with reduced padding.</summary>
      <returns>**True** if the separator is shown in its compact state; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.IsCompactProperty">
      <summary>Identifies the IsCompact dependency property.</summary>
      <returns>The identifier for the IsCompact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.IsInOverflow">
      <summary>Gets a value that indicates whether this item is in the overflow menu.</summary>
      <returns>**true** if this item is in the overflow menu; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarSeparator.IsInOverflowProperty">
      <summary>Identifies the IsInOverflow dependency property.</summary>
      <returns>The identifier for the IsInOverflow dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AppBarToggleButton">
      <summary>Represents a button control that can switch states and be displayed in an AppBar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AppBarToggleButton.#ctor">
      <summary>Initializes a new instance of the AppBarToggleButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.DynamicOverflowOrder">
      <summary>Gets or sets the order in which this item is moved to the CommandBar overflow menu.</summary>
      <returns>The order in which this item is moved to the overflow menu relative to other items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.DynamicOverflowOrderProperty">
      <summary>Identifies the DynamicOverflowOrder dependency property.</summary>
      <returns>The identifier for the DynamicOverflowOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.Icon">
      <summary>Gets or sets the graphic content of the app bar toggle button.</summary>
      <returns>The graphic content of the app bar toggle button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
      <returns>The identifier for the Icon dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsCompact">
      <summary>Gets or sets a value that indicates whether the button is shown with no label and reduced padding.</summary>
      <returns>**True** if the button is shown in its compact state; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsCompactProperty">
      <summary>Identifies the IsCompact dependency property.</summary>
      <returns>The identifier for the IsCompact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsInOverflow">
      <summary>Gets a value that indicates whether this item is in the overflow menu.</summary>
      <returns>**true** if this item is in the overflow menu; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsInOverflowProperty">
      <summary>Identifies the IsInOverflow dependency property.</summary>
      <returns>The identifier for the IsInOverflow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.KeyboardAcceleratorTextOverride">
      <summary>Gets or sets a string that overrides the default key combination string associated with a keyboard accelerator.</summary>
      <returns>The string to replace the default key combination string. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.KeyboardAcceleratorTextOverrideProperty">
      <summary>Identifies the AppBarToggleButton.KeyboardAcceleratorTextOverride dependency property.</summary>
      <returns>The identifier for the AppBarToggleButton.KeyboardAcceleratorTextOverride dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.Label">
      <summary>Gets or sets the text description displayed on the app bar toggle button.</summary>
      <returns>The text description displayed on the app bar toggle button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.LabelPosition">
      <summary>Gets or sets a value that indicates the placement and visibility of the button's label.</summary>
      <returns>An enumeration value that specifies the placement and visibility of the button's label. The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.LabelPositionProperty">
      <summary>Identifies the LabelPosition dependency property.</summary>
      <returns>The identifier for the LabelPosition dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.LabelProperty">
      <summary>Identifies the Label dependency property.</summary>
      <returns>The identifier for the Label dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AppBarToggleButton.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for an AppBarToggleButton control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AutoSuggestBox">
      <summary>Represents a text control that makes suggestions to users as they enter text using a keyboard or pen (using ink and handwriting recognition). The app is notified when text has been changed by the user and is responsible for providing relevant suggestions for this control to display.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AutoSuggestBox.#ctor">
      <summary>Initializes a new instance of the AutoSuggestBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.AutoMaximizeSuggestionArea">
      <summary>Indicates if the suggestion area should be automatically maximized.</summary>
      <returns>A Boolean value that indicates if the suggestion area should be automatically maximized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.AutoMaximizeSuggestionAreaProperty">
      <summary>Identifies the AutoMaximizeSuggestionArea dependency property.</summary>
      <returns>The identifier for the AutoMaximizeSuggestionArea dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.Header">
      <summary>Gets or sets the header object for the text box portion of this control.</summary>
      <returns>The header object for the text box portion of this control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.IsSuggestionListOpen">
      <summary>Gets or sets a Boolean value indicating whether the drop-down portion of the AutoSuggestBox is open.</summary>
      <returns>A Boolean value indicating whether the drop-down portion of the AutoSuggestBox is open.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.IsSuggestionListOpenProperty">
      <summary>Identifies the IsSuggestionListOpen dependency property.</summary>
      <returns>Identifier for the IsSuggestionListOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.MaxSuggestionListHeight">
      <summary>Gets or set the maximum height for the drop-down portion of the AutoSuggestBox control.</summary>
      <returns>The maximum height for the drop-down portion of the AutoSuggestBox control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.MaxSuggestionListHeightProperty">
      <summary>Identifies the MaxSuggestionListHeight dependency property.</summary>
      <returns>Identifier for the MaxSuggestionListHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.PlaceholderText">
      <summary>Gets or sets the placeholder text to be displayed in the control.</summary>
      <returns>The placeholder text to be displayed in the control. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.QueryIcon">
      <summary>Gets or sets the graphic content of the button that is clicked to initiate a query.</summary>
      <returns>The graphic content of the button that is clicked to initiate a query, if present; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.QueryIconProperty">
      <summary>Identifies the QueryIcon dependency property.</summary>
      <returns>The identifier for the QueryIcon dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.Text">
      <summary>Gets or sets the text that is shown in the control.</summary>
      <returns>The text that is shown in the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextBoxStyle">
      <summary>Gets or sets the style of the auto-suggest text box.</summary>
      <returns>The style of the auto-suggest text box.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextBoxStyleProperty">
      <summary>Identifies the TextBoxStyle dependency property.</summary>
      <returns>Identifier for the TextBoxStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextMemberPath">
      <summary>Gets or sets the property path that is used to get the value for display in the text box portion of the AutoSuggestBox control, when an item is selected.</summary>
      <returns>The property path that is used to get the value for display in the text box portion of the AutoSuggestBox control, when an item is selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextMemberPathProperty">
      <summary>Identifies the TextMemberPath dependency property.</summary>
      <returns>Identifier for the TextMemberPath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.UpdateTextOnSelect">
      <summary>Used in conjunction with TextMemberPath, gets or sets a value indicating whether items in the view will trigger an update of the editable text part of the AutoSuggestBox when clicked.</summary>
      <returns>A value indicating whether items in the view will trigger an update of the editable text part of the AutoSuggestBox when clicked.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBox.UpdateTextOnSelectProperty">
      <summary>Identifies the UpdateTextOnSelect dependency property.</summary>
      <returns>Identifier for the UpdateTextOnSelect dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AutoSuggestBox.QuerySubmitted">
      <summary>Occurs when the user submits a search query.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AutoSuggestBox.SuggestionChosen">
      <summary>Raised before the text content of the editable control component is updated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextChanged">
      <summary>Raised after the text content of the editable control component is updated.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs">
      <summary>Provides event data for the AutoSuggestBox.QuerySubmitted event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.#ctor">
      <summary>Initializes a new instance of the AutoSuggestBoxQuerySubmittedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.ChosenSuggestion">
      <summary>Gets the suggested result that the user chose.</summary>
      <returns>The suggested result that the user chose.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.QueryText">
      <summary>Gets the query text of the current search.</summary>
      <returns>The query text of the current search.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs">
      <summary>Provides data for the SuggestionChosen event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs.#ctor">
      <summary>Initializes a new instance of the AutoSuggestBoxSuggestionChosenEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs.SelectedItem">
      <summary>Gets a reference to the selected item.</summary>
      <returns>A reference to the selected item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs">
      <summary>Provides data for the TextChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the AutoSuggestBoxTextChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.Reason">
      <summary>Gets or sets a value that indicates the reason for the text changing in the AutoSuggestBox.</summary>
      <returns>The reason for the text changing in the AutoSuggestBox.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.ReasonProperty">
      <summary>Identifies the Reason dependency property.</summary>
      <returns>Identifier for the Reason dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.CheckCurrent">
      <summary>Returns a Boolean value indicating if the current value of the TextBox is unchanged from the point in time when the TextChanged event was raised.</summary>
      <returns>Indicates if the current value of the TextBox is unchanged from the point in time when the TextChanged event was raised.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason">
      <summary>Values used to indicate the reason for the text changing in the AutoSuggestBox.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason.ProgrammaticChange">
      <summary>The text was changed via code.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason.SuggestionChosen">
      <summary>The user selected one of the items in the auto-suggestion box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason.UserInput">
      <summary>The user edited the text.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.BackgroundSizing">
      <summary>Defines constants that specify how far an element's background extends in relation to the element's border.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge">
      <summary>The element's background extends to the inner edge of the border, but does not extend under the border.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.BackgroundSizing.OuterBorderEdge">
      <summary>The element's background extends under the border to its outer edge, and is visible if the border is transparent.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.BitmapIcon">
      <summary>Represents an icon that uses a bitmap as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.BitmapIcon.#ctor">
      <summary>Initializes a new instance of the BitmapIcon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIcon.ShowAsMonochrome">
      <summary>Gets or sets a value that indicates whether the bitmap is shown in a single color.</summary>
      <returns>**true** to show the bitmap in a single color; **false** to show the bitmap in full color. The default is **true.**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIcon.ShowAsMonochromeProperty">
      <summary>Identifies the ShowAsMonochrome dependency property.</summary>
      <returns>The identifier for the **ShowAsMonochrome** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIcon.UriSource">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the bitmap to use as the icon content.</summary>
      <returns>The Uri of the bitmap to use as the icon content. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIcon.UriSourceProperty">
      <summary>Identifies the UriSource dependency property.</summary>
      <returns>The identifier for the UriSource dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.BitmapIconSource">
      <summary>Represents an icon source that uses a bitmap as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.BitmapIconSource.#ctor">
      <summary>Initializes a new instance of the BitmapIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochrome">
      <summary>Gets or sets a value that indicates whether the bitmap is shown in a single color.</summary>
      <returns>**true** to show the bitmap in a single color; **false** to show the bitmap in full color. The default is **true.**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochromeProperty">
      <summary>Identifies the ShowAsMonochrome dependency property.</summary>
      <returns>The identifier for the ShowAsMonochrome dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSource">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the bitmap to use as the icon content.</summary>
      <returns>The Uri of the bitmap to use as the icon content. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSourceProperty">
      <summary>Identifies the UriSource dependency property.</summary>
      <returns>The identifier for the UriSource dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Border">
      <summary>Draws a border, background, or both, around another object.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Border.#ctor">
      <summary>Initializes a new instance of the Border class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.Background">
      <summary>Gets or sets the Brush that fills the background (inner area) of the border.</summary>
      <returns>The brush that fills the background. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BackgroundTransition">
      <summary>Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.</summary>
      <returns>An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BorderBrush">
      <summary>Gets or sets the Brush that is applied to the edge area of the Border.</summary>
      <returns>The brush that fills the border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BorderThickness">
      <summary>Gets or sets the thickness of the border.</summary>
      <returns>The thickness of the border, in pixels. The default is 0 on all four sides.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.Child">
      <summary>Gets or sets the child element to draw the border around.</summary>
      <returns>The UIElement to apply the border to.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.ChildTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to child content of a Border.</summary>
      <returns>The strongly typed collection of Transition style elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.ChildTransitionsProperty">
      <summary>Identifies the ChildTransitions dependency property.</summary>
      <returns>The identifier for the ChildTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.CornerRadius">
      <summary>Gets or sets the radius for the corners of the border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Border.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Button">
      <summary>Represents a templated button control that interprets a Click user interaction.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Button.#ctor">
      <summary>Initializes a new instance of the Button class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Button.Flyout">
      <summary>Gets or sets the flyout associated with this button.</summary>
      <returns>The flyout associated with this button, if any; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Button.FlyoutProperty">
      <summary>Identifies the Flyout dependency property.</summary>
      <returns>The identifier for the Flyout dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarDatePicker">
      <summary>Represents a control that allows a user to pick a date from a calendar display.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarDatePicker.#ctor">
      <summary>Initializes a new instance of the CalendarDatePicker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarIdentifier">
      <summary>Gets or sets the calendar system to use.</summary>
      <returns>The name of the calendar system to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarIdentifierProperty">
      <summary>Identifies the CalendarIdentifier dependency property.</summary>
      <returns>The identifier for the CalendarIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarViewStyle">
      <summary>Gets or sets the Style associated with the control's internal CalendarView object.</summary>
      <returns>The current style of the CalendarView object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarViewStyleProperty">
      <summary>Identifies the CalendarViewStyle dependency property.</summary>
      <returns>The identifier for the CalendarViewStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.Date">
      <summary>Gets or sets the date currently set in the calendar picker.</summary>
      <returns>The date currently set in the calendar picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateFormat">
      <summary>Gets or sets the display format for the date value in the picker's text box.</summary>
      <returns>The string format to use to display the date in the picker's text box.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateFormatProperty">
      <summary>Identifies the DateFormat dependency property.</summary>
      <returns>The identifier for the DateFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateProperty">
      <summary>Identifies the Date dependency property.</summary>
      <returns>The identifier for the Date dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DayOfWeekFormat">
      <summary>Gets or sets the display format for the day of the week headers in the picker's CalendarView.</summary>
      <returns>The string format to use to display the day of the week headers in the picker's CalendarView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DayOfWeekFormatProperty">
      <summary>Identifies the DayOfWeekFormat dependency property.</summary>
      <returns>The identifier for the DayOfWeekFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DisplayMode">
      <summary>Gets or sets a value that indicates whether the calendar shows selections for month, year, or decade in the picker's CalendarView.</summary>
      <returns>A value of the enumeration that indicates whether the calendar shows selections for month, year, or decade. The default is **Month**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DisplayModeProperty">
      <summary>Identifies the DisplayMode dependency property.</summary>
      <returns>The identifier for the DisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.FirstDayOfWeek">
      <summary>Gets or sets a value that indicates which day is shown as the first day of the week in the picker's CalendarView.</summary>
      <returns>A value of the enumeration that indicates which day is shown as the first day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.FirstDayOfWeekProperty">
      <summary>Identifies the FirstDayOfWeek dependency property.</summary>
      <returns>The identifier for the FirstDayOfWeek dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.Header">
      <summary>Gets or sets the content for the calendar picker's header.</summary>
      <returns>The content of the header. The default value is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsCalendarOpen">
      <summary>Gets or sets a value that indicates whether the calendar view of the CalendarDatePicker is currently shown.</summary>
      <returns>**true** if the calendar view is shown; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsCalendarOpenProperty">
      <summary>Identifies the IsCalendarOpen dependency property.</summary>
      <returns>The identifier for the IsCalendarOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsGroupLabelVisible">
      <summary>Gets or sets a value that indicates whether the month name is shown with the first day of the month in the picker's CalendarView.</summary>
      <returns>**true** if the month name is shown with the first day of the month; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsGroupLabelVisibleProperty">
      <summary>Identifies the IsGroupLabelVisible  dependency property.</summary>
      <returns>The identifier for the IsGroupLabelVisible   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsOutOfScopeEnabled">
      <summary>Gets or sets a value that indicates whether out-of-scope calendar items are shown with a unique foreground color in the picker's CalendarView.</summary>
      <returns>**true** if out-of-scope calendar items are shown with a unique color; **false** if they are shown with the same color as in-scope items. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsOutOfScopeEnabledProperty">
      <summary>Identifies the IsOutOfScopeEnabled dependency property.</summary>
      <returns>The identifier for the IsOutOfScopeEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date is highlighted in the picker's CalendarView.</summary>
      <returns>**true** if the current date is highlighted; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsTodayHighlightedProperty">
      <summary>Identifies the IsTodayHighlighted dependency property.</summary>
      <returns>The identifier for the IsTodayHighlighted dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.MaxDate">
      <summary>Gets or sets the latest date that can be set in the picker.</summary>
      <returns>The latest date that can be set.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.MaxDateProperty">
      <summary>Identifies the MaxDate dependency property.</summary>
      <returns>The identifier for the MaxDate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.MinDate">
      <summary>Gets or sets the earliest date that can be set in the picker.</summary>
      <returns>The earliest date that can be set.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.MinDateProperty">
      <summary>Identifies the MinDate dependency property.</summary>
      <returns>The identifier for the MinDate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the picker's text box until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is entered. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePicker.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarViewDayItemChanging">
      <summary>Occurs when a CalendarViewDayItem is loading in the picker's CalendarView.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarDatePicker.Closed">
      <summary>Occurs when the picker's CalendarView is hidden.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateChanged">
      <summary>Occurs when the date value is changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarDatePicker.Opened">
      <summary>Occurs when the picker's CalendarView is shown.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarDatePicker.SetDisplayDate(Windows.Foundation.DateTime)">
      <summary>Shows the specified date in the calendar picker.</summary>
      <param name="date">The date to show.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarDatePicker.SetYearDecadeDisplayDimensions(System.Int32,System.Int32)">
      <summary>Sets the number of rows and columns to use in the **Year** and **Decade** display modes of the picker's CalendarView.</summary>
      <param name="columns">The number of columns in the view.</param>
      <param name="rows">The number of rows in the view.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs">
      <summary>Provides event data for the DateChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs.NewDate">
      <summary>Gets the date that is currently selected in the CalendarDatePicker.</summary>
      <returns>The date that is currently selected in the CalendarDatePicker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs.OldDate">
      <summary>Gets the date that was previously selected in the CalendarDatePicker.</summary>
      <returns>The date that was previously selected in the CalendarDatePicker.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarView">
      <summary>Represents a control that enables a user to select a date by using a visual calendar display.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarView.#ctor">
      <summary>Initializes a new instance of the CalendarView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground">
      <summary>Gets or sets a brush that provides the foreground of a date that can't be selected.</summary>
      <returns>A brush that provides the foreground of a date that can't be selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForegroundProperty">
      <summary>Identifies the BlackoutForeground  dependency property.</summary>
      <returns>The identifier for the BlackoutForeground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifier">
      <summary>Gets or sets the calendar system to use.</summary>
      <returns>The calendar system to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifierProperty">
      <summary>Identifies the CalendarIdentifier  dependency property.</summary>
      <returns>The identifier for the   CalendarIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground">
      <summary>Gets or sets a brush that provides the background of a calendar item.</summary>
      <returns>A brush that provides the background of a calendar item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackgroundProperty">
      <summary>Identifies the CalendarItemBackground  dependency property.</summary>
      <returns>The identifier for the CalendarItemBackground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush">
      <summary>Gets or sets a brush that provides the border of a calendar item.</summary>
      <returns>A brush that provides the border of a calendar item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrushProperty">
      <summary>Identifies the CalendarItemBorderBrush  dependency property.</summary>
      <returns>The identifier for the CalendarItemBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderThickness">
      <summary>Gets or sets the thickness of a calendar item's border.</summary>
      <returns>The thickness of a calendar item's border.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderThicknessProperty">
      <summary>Identifies the CalendarItemBorderThickness  dependency property.</summary>
      <returns>The identifier for the CalendarItemBorderThickness   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground">
      <summary>Gets or sets a brush that provides the foreground of a calendar item.</summary>
      <returns>A brush that provides the foreground of a calendar item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForegroundProperty">
      <summary>Identifies the CalendarItemForeground  dependency property.</summary>
      <returns>The identifier for the   CalendarItemForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarViewDayItemStyle">
      <summary>Gets or sets the Style associated with the control's internal CalendarViewDayItem object.</summary>
      <returns>The Style associated with the control's internal CalendarViewDayItem object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.CalendarViewDayItemStyleProperty">
      <summary>Identifies the CalendarViewDayItemStyle  dependency property.</summary>
      <returns>The identifier for the CalendarViewDayItemStyle   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily">
      <summary>Gets or sets the font used to display day values in the calendar.</summary>
      <returns>The font used to display day values in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamilyProperty">
      <summary>Identifies the DayItemFontFamily  dependency property.</summary>
      <returns>The identifier for the DayItemFontFamily   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontSize">
      <summary>Gets or sets the font size used to display day values in the calendar.</summary>
      <returns>The font size used to display day values in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontSizeProperty">
      <summary>Identifies the DayItemFontSize  dependency property.</summary>
      <returns>The identifier for the DayItemFontSize   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontStyle">
      <summary>Gets or sets the font style used to display day values in the calendar.</summary>
      <returns>The font style used to display day values in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontStyleProperty">
      <summary>Identifies the DayItemFontStyle  dependency property.</summary>
      <returns>The identifier for the DayItemFontStyle   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontWeight">
      <summary>Gets or sets the font weight used to display day values in the calendar.</summary>
      <returns>The font weight used to display day values in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontWeightProperty">
      <summary>Identifies the DayItemFontWeight  dependency property.</summary>
      <returns>The identifier for the DayItemFontWeight   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayOfWeekFormat">
      <summary>Gets or sets the display format for the day of the week headers.</summary>
      <returns>The display format for the day of the week header values.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DayOfWeekFormatProperty">
      <summary>Identifies the DayOfWeekFormat  dependency property.</summary>
      <returns>The identifier for the DayOfWeekFormat   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DisplayMode">
      <summary>Gets or sets a value that indicates whether the calendar shows a picker for month, year, or decade.</summary>
      <returns>A value of the enumeration that indicates whether the calendar shows a picker for month, year, or decade. The default is **Month**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.DisplayModeProperty">
      <summary>Identifies the DisplayMode  dependency property.</summary>
      <returns>The identifier for the   DisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstDayOfWeek">
      <summary>Gets or sets a value that indicates which day is shown as the first day of the week.</summary>
      <returns>A value of the enumeration that indicates which day is shown as the first day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstDayOfWeekProperty">
      <summary>Identifies the FirstDayOfWeek  dependency property.</summary>
      <returns>The identifier for the   FirstDayOfWeek dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily">
      <summary>Gets or sets the font used to display the first-of-month banner in the calendar.</summary>
      <returns>The font used to display the first-of-month banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamilyProperty">
      <summary>Identifies the FirstOfMonthLabelFontFamily  dependency property.</summary>
      <returns>The identifier for the   FirstOfMonthLabelFontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontSize">
      <summary>Gets or sets the font size used to display the first-of-month banner in the calendar.</summary>
      <returns>The font size used to display the first-of-month banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontSizeProperty">
      <summary>Identifies the FirstOfMonthLabelFontSize  dependency property.</summary>
      <returns>The identifier for the FirstOfMonthLabelFontSize   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontStyle">
      <summary>Gets or sets the font style used to display the first-of-month banner in the calendar.</summary>
      <returns>The font style used to display the first-of-month banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontStyleProperty">
      <summary>Identifies the FirstOfMonthLabelFontStyle  dependency property.</summary>
      <returns>The identifier for the FirstOfMonthLabelFontStyle   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontWeight">
      <summary>Gets or sets the font weight used to display the first-of-month banner in the calendar.</summary>
      <returns>The font weight used to display the first-of-month banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontWeightProperty">
      <summary>Identifies the FirstOfMonthLabelFontWeight  dependency property.</summary>
      <returns>The identifier for the FirstOfMonthLabelFontWeight   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily">
      <summary>Gets or sets the font used to display the first-of-year banner in the calendar.</summary>
      <returns>The font used to display the first-of-year banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamilyProperty">
      <summary>Identifies the FirstOfYearDecadeLabelFontFamily  dependency property.</summary>
      <returns>The identifier for the FirstOfYearDecadeLabelFontFamily   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontSize">
      <summary>Gets or sets the font size used to display the first-of-year banner in the calendar.</summary>
      <returns>The font size used to display the first-of-year banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontSizeProperty">
      <summary>Identifies the FirstOfYearDecadeLabelFontSize  dependency property.</summary>
      <returns>The identifier for the FirstOfYearDecadeLabelFontSize   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontStyle">
      <summary>Gets or sets the font style used to display the first-of-year banner in the calendar.</summary>
      <returns>The font style used to display the first-of-year banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontStyleProperty">
      <summary>Identifies the FirstOfYearDecadeLabelFontStyle  dependency property.</summary>
      <returns>The identifier for the FirstOfYearDecadeLabelFontStyle   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontWeight">
      <summary>Gets or sets the font weight used to display the first-of-year banner in the calendar.</summary>
      <returns>The font weight used to display the first-of-year banner in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontWeightProperty">
      <summary>Identifies the FirstOfYearDecadeLabelFontWeight  dependency property.</summary>
      <returns>The identifier for the FirstOfYearDecadeLabelFontWeight   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush">
      <summary>Gets or sets a brush that provides the border of a calendar item that has focus.</summary>
      <returns>A brush that provides the border of a calendar item that has focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrushProperty">
      <summary>Identifies the FocusBorderBrush  dependency property.</summary>
      <returns>The identifier for the FocusBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HorizontalDayItemAlignment">
      <summary>Gets or sets the horizontal alignment of day items in the calendar.</summary>
      <returns>An enumeration value that indicates the horizontal alignment of day items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HorizontalDayItemAlignmentProperty">
      <summary>Identifies the  HorizontalDayItemAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalDayItemAlignment   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HorizontalFirstOfMonthLabelAlignment">
      <summary>Gets or sets the horizontal alignment of the first-of-month banner text.</summary>
      <returns>An enumeration value that indicates the horizontal alignment of the first-of-month banner text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HorizontalFirstOfMonthLabelAlignmentProperty">
      <summary>Identifies the HorizontalFirstOfMonthLabelAlignment  dependency property.</summary>
      <returns>The identifier for the HorizontalFirstOfMonthLabelAlignment   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush">
      <summary>Gets or sets a brush that provides the border of a calendar item while the pointer is over it.</summary>
      <returns>A brush that provides the border of a calendar item while the pointer is over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrushProperty">
      <summary>Identifies the HoverBorderBrush  dependency property.</summary>
      <returns>The identifier for the HoverBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsGroupLabelVisible">
      <summary>Gets or sets a value that indicates whether the month name is shown with the first day of the </summary>
      <returns>**true** if the month name is shown with the first day of the month; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsGroupLabelVisibleProperty">
      <summary>Identifies the IsGroupLabelVisible dependency property.</summary>
      <returns>The identifier for the IsGroupLabelVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsOutOfScopeEnabled">
      <summary>Gets or sets a value that indicates whether out-of-scope calendar items are shown with a unique foreground color.</summary>
      <returns>**true** if out-of-scope calendar items are shown with a unique color; **false** if they are shown with the same color as in-scope items. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsOutOfScopeEnabledProperty">
      <summary>Identifies the IsOutOfScopeEnabled  dependency property.</summary>
      <returns>The identifier for the IsOutOfScopeEnabled   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date is highlighted.</summary>
      <returns>**true** if the current date is highlighted; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.IsTodayHighlightedProperty">
      <summary>Identifies the IsTodayHighlighted  dependency property.</summary>
      <returns>The identifier for the IsTodayHighlighted   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MaxDate">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MaxDateProperty">
      <summary>Identifies the MaxDate  dependency property.</summary>
      <returns>The identifier for the   MaxDate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MinDate">
      <summary>Gets or sets the first date to display.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MinDateProperty">
      <summary>Identifies the MinDate  dependency property.</summary>
      <returns>The identifier for the   MinDate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily">
      <summary>Gets or sets the font used to display the month and year items in the calendar.</summary>
      <returns>The font used to display the month and year items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamilyProperty">
      <summary>Identifies the MonthYearItemFontFamily  dependency property.</summary>
      <returns>The identifier for the MonthYearItemFontFamily   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontSize">
      <summary>Gets or sets the font size used to display the month and year items in the calendar.</summary>
      <returns>The font size used to display the month and year items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontSizeProperty">
      <summary>Identifies the MonthYearItemFontSize  dependency property.</summary>
      <returns>The identifier for the   MonthYearItemFontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontStyle">
      <summary>Gets or sets the font style used to display the month and year items in the calendar.</summary>
      <returns>The font style used to display the month and year items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontStyleProperty">
      <summary>Identifies the MonthYearItemFontStyle  dependency property.</summary>
      <returns>The identifier for the MonthYearItemFontStyle   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontWeight">
      <summary>Gets or sets the font weight used to display the month and year items in the calendar.</summary>
      <returns>The font weight used to display the month and year items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontWeightProperty">
      <summary>Identifies the MonthYearItemFontWeight  dependency property.</summary>
      <returns>The identifier for the MonthYearItemFontWeight   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.NumberOfWeeksInView">
      <summary>Gets or sets the number of weeks shown in the calendar view.</summary>
      <returns>The number of weeks shown in the calendar view. The default is 6.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.NumberOfWeeksInViewProperty">
      <summary>Identifies the NumberOfWeeksInView  dependency property.</summary>
      <returns>The identifier for the NumberOfWeeksInView   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground">
      <summary>Gets or sets a brush that provides the background of a date that's out of scope.</summary>
      <returns>A brush that provides the background of a date that's out of scope.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackgroundProperty">
      <summary>Identifies the OutOfScopeBackground  dependency property.</summary>
      <returns>The identifier for the   OutOfScopeBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground">
      <summary>Gets or sets a brush that provides the foreground of calendar items that are outside the current scope (month, year, or decade).</summary>
      <returns>A brush that provides the foreground of calendar items that are outside the current scope.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForegroundProperty">
      <summary>Identifies the  OutOfScopeForeground dependency property.</summary>
      <returns>The identifier for the OutOfScopeForeground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush">
      <summary>Gets or sets a brush that provides the border of a calendar item while it's pressed.</summary>
      <returns>A brush that provides the border of a calendar item while it's pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrushProperty">
      <summary>Identifies the PressedBorderBrush  dependency property.</summary>
      <returns>The identifier for the PressedBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground">
      <summary>Gets or sets a brush that provides the foreground of a calendar item while it's pressed.</summary>
      <returns>A brush that provides the foreground of a calendar item while it's pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.PressedForegroundProperty">
      <summary>Identifies the PressedForeground  dependency property.</summary>
      <returns>The identifier for the PressedForeground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush">
      <summary>Gets or sets a brush that provides the border of the currently selected calendar item.</summary>
      <returns>A brush that provides the border of the currently selected calendar item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrushProperty">
      <summary>Identifies the  SelectedBorderBrush dependency property.</summary>
      <returns>The identifier for the SelectedBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedDates">
      <summary>Gets a collection of selected dates.</summary>
      <returns>A collection that contains the currently selected dates. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedDatesProperty">
      <summary>Identifies the SelectedDates  dependency property.</summary>
      <returns>The identifier for the   SelectedDates dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground">
      <summary>Gets or sets a brush that provides the foreground of a calendar item that's selected.</summary>
      <returns>A brush that provides the foreground of a calendar item that's selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedForegroundProperty">
      <summary>Identifies the SelectedForeground  dependency property.</summary>
      <returns>The identifier for the SelectedForeground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush">
      <summary>Gets or sets a brush that provides the border of a selected calendar item while the pointer is over it.</summary>
      <returns>A brush that provides the border of a selected calendar item while the pointer is over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrushProperty">
      <summary>Identifies the  SelectedHoverBorderBrush dependency property.</summary>
      <returns>The identifier for the SelectedHoverBorderBrush   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush">
      <summary>Gets or sets a brush that provides the border of a selected calendar item while it's pressed.</summary>
      <returns>A brush that provides the border of a selected calendar item while it's pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrushProperty">
      <summary>Identifies the  SelectedPressedBorderBrush dependency property.</summary>
      <returns>The identifier for the   SelectedPressedBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectionMode">
      <summary>Gets or sets a value that indicates what kind of selections are allowed.</summary>
      <returns>An enumeration value that indicates the current selection mode. The default is **Single**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.SelectionModeProperty">
      <summary>Identifies the SelectionMode  dependency property.</summary>
      <returns>The identifier for the SelectionMode   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a CalendarView control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TemplateSettingsProperty">
      <summary>Identifies the TemplateSettings  dependency property.</summary>
      <returns>The identifier for the TemplateSettings   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TodayFontWeight">
      <summary>Gets or sets the font weight used to display the current date in the calendar.</summary>
      <returns>The font weight used to display the current date in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TodayFontWeightProperty">
      <summary>Identifies the TodayFontWeight  dependency property.</summary>
      <returns>The identifier for the TodayFontWeight   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground">
      <summary>Gets or sets a brush that provides the foreground of the calendar item for the current date.</summary>
      <returns>A brush that provides the foreground of the calendar item for the current date.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.TodayForegroundProperty">
      <summary>Identifies the TodayForeground  dependency property.</summary>
      <returns>The identifier for the TodayForeground   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.VerticalDayItemAlignment">
      <summary>Gets or sets the vertical alignment of day items in the calendar.</summary>
      <returns>An enumeration value that indicates the vertical alignment of day items in the calendar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.VerticalDayItemAlignmentProperty">
      <summary>Identifies the VerticalDayItemAlignment  dependency property.</summary>
      <returns>The identifier for the VerticalDayItemAlignment   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.VerticalFirstOfMonthLabelAlignment">
      <summary>Gets or sets the vertical alignment of the first-of-month banner text.</summary>
      <returns>An enumeration value that indicates the vertical alignment of the first-of-month banner text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarView.VerticalFirstOfMonthLabelAlignmentProperty">
      <summary>Identifies the VerticalFirstOfMonthLabelAlignment  dependency property.</summary>
      <returns>The identifier for the VerticalFirstOfMonthLabelAlignment   dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarView.CalendarViewDayItemChanging">
      <summary>Occurs when a CalendarViewDayItem is loading.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CalendarView.SelectedDatesChanged">
      <summary>Occurs when the collection of selected dates is changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarView.SetDisplayDate(Windows.Foundation.DateTime)">
      <summary>Shows the specified date in the calendar.</summary>
      <param name="date">The date to show in the calendar.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarView.SetYearDecadeDisplayDimensions(System.Int32,System.Int32)">
      <summary>Sets the number of rows and columns to use in the Year and Decade display modes.</summary>
      <param name="columns">The number of columns in the view.</param>
      <param name="rows">The number of rows in the view.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewDayItem">
      <summary>Represents a day on a CalendarView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.#ctor">
      <summary>Initializes a new instance of the CalendarViewDayItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.Date">
      <summary>Gets the date represented by this item.</summary>
      <returns>The date represented by this item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.DateProperty">
      <summary>Identifies the Date  dependency property.</summary>
      <returns>The identifier for the Date  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.IsBlackout">
      <summary>Gets or sets a value that indicates whether the date is unavailable.</summary>
      <returns>**true** if the date unavailable; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.IsBlackoutProperty">
      <summary>Identifies the IsBlackout  dependency property.</summary>
      <returns>The identifier for the IsBlackout  dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarViewDayItem.SetDensityColors(Windows.Foundation.Collections.IIterable{Windows.UI.Color})">
      <summary>Sets the collection of Color values used to display the density bar.</summary>
      <param name="colors">The collection of Color values used to display the density bar.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs">
      <summary>Provides data for the CalendarViewDayItemChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs.InRecycleQueue">
      <summary>Gets a value that indicates whether this container is in the recycle queue of the CalendarView and is not being used to visualize a calendar item.</summary>
      <returns>**true** if the container is in the recycle queue of the CalendarView; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs.Item">
      <summary>Gets the calendar day item associated with this container.</summary>
      <returns>The CalendarViewDayItem associated with this container, or **null** if no item is associated with this container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs.Phase">
      <summary>Gets the number of times this container and day item pair has been called.</summary>
      <returns>The number of times this container and day item pair has been called.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs.RegisterUpdateCallback(System.UInt32,Windows.Foundation.TypedEventHandler{Microsoft.UI.Xaml.Controls.CalendarView,Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs})">
      <summary>Registers the event handler to be called again during the specified phase.</summary>
      <param name="callbackPhase">The phase during which the callback should occur.</param>
      <param name="callback">The event handler function.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs.RegisterUpdateCallback(Windows.Foundation.TypedEventHandler{Microsoft.UI.Xaml.Controls.CalendarView,Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs})">
      <summary>Registers the event handler to be called again during the next phase.</summary>
      <param name="callback">The event handler function.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler">
      <summary>Represents the method that will handle the CalendarViewDayItemChanging event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode">
      <summary>Defines constants that specify which view of the calendar is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode.Decade">
      <summary>The decade selector view is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode.Month">
      <summary>The month view is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode.Year">
      <summary>The year selector view is shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs">
      <summary>Provides data for the SelectedDatesChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs.AddedDates">
      <summary>Gets a collection that contains the items that were selected.</summary>
      <returns>The items that were selected since the last time the SelectedDatesChanged event occurred.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs.RemovedDates">
      <summary>Gets a collection that contains the items that were unselected.</summary>
      <returns>The items that were unselected since the last time the SelectedDatesChanged event occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode">
      <summary>Defines constants that specify what kind of date selections are allowed in the calendar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode.Multiple">
      <summary>One or more dates can be selected at a time.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode.None">
      <summary>Date selection is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode.Single">
      <summary>One date can be selected at a time.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CandidateWindowAlignment">
      <summary>Defines constants that specify how the Input Method Editor (IME) window for text predictions is aligned with a text edit control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CandidateWindowAlignment.BottomEdge">
      <summary>When the hardware keyboard is used, the Input Method Editor (IME) aligns to the bottom edge and left side of the text edit control. When the Soft Input Panel (SIP) is used, the Input Method Editor (IME) is docked to the Soft Input Panel (SIP).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CandidateWindowAlignment.Default">
      <summary>When the hardware keyboard is used, the Input Method Editor (IME) follows the cursor. When the Soft Input Panel (SIP) is used, the Input Method Editor (IME) is docked to the Soft Input Panel (SIP).</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs">
      <summary>Provides event data for the **CandidateWindowBoundsChanged** event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs.Bounds">
      <summary>Gets the Rect that defines the size and location of the Input Method Editor (IME) window, in the coordinate space of the text edit control.</summary>
      <returns>The Rect that defines the size and location of the Input Method Editor (IME) window</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Canvas">
      <summary>Defines an area within which you can explicitly position child objects, using coordinates that are relative to the Canvas area.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.#ctor">
      <summary>Initializes a new instance of the Canvas class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Canvas.LeftProperty">
      <summary>Identifies the Canvas.Left  XAML attached property.</summary>
      <returns>The identifier for the Canvas.Left  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Canvas.TopProperty">
      <summary>Identifies the Canvas.Top  XAML attached property.</summary>
      <returns>The identifier for the Canvas.Top  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Canvas.ZIndexProperty">
      <summary>Identifies the Canvas.ZIndex  XAML attached property.</summary>
      <returns>The identifier for the Canvas.ZIndex  XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.GetLeft(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the Canvas.Left  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The Canvas.Left  XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.GetTop(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the Canvas.Top  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The Canvas.Top  XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.GetZIndex(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the Canvas.ZIndex  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The Canvas.ZIndex  XAML attached property value of the requested object. </returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.SetLeft(Microsoft.UI.Xaml.UIElement,System.Double)">
      <summary>Sets the value of the Canvas.Left  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="length">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.SetTop(Microsoft.UI.Xaml.UIElement,System.Double)">
      <summary>Sets the value of the Canvas.Top  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="length">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Canvas.SetZIndex(Microsoft.UI.Xaml.UIElement,System.Int32)">
      <summary>Sets the value of the Canvas.ZIndex  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written. </param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CaptureElement">
      <summary>Renders a stream from a capture device, such as a camera or webcam.  CaptureElement is used in conjunction with the Windows.Media.Capture.MediaCapture API, and must be hooked up in the code behind.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CaptureElement.#ctor">
      <summary>Initializes a new instance of the CaptureElement class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CaptureElement.Source">
      <summary>Gets or sets the source MediaCapture that this CaptureElement represents.</summary>
      <returns>The source MediaCapture</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CaptureElement.SourceProperty">
      <summary>Identifies the Source dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CaptureElement.Stretch">
      <summary>Gets or sets how content from Source is resized to fill its allocated space, as declared by the Height and Width properties of the CaptureElement.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CaptureElement.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CharacterCasing">
      <summary>Defines constants that specify how a control modifies the case of characters as they are typed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CharacterCasing.Lower">
      <summary>Characters are changed to lowercase.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CharacterCasing.Normal">
      <summary>The case of characters is left unchanged.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CharacterCasing.Upper">
      <summary>Characters are changed to uppercase.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CheckBox">
      <summary>Represents a control that a user can select (check) or clear (uncheck). A CheckBox can also report its value as indeterminate.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CheckBox.#ctor">
      <summary>Initializes a new instance of the CheckBox class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs">
      <summary>Provides event data for the ListViewBase.ChoosingGroupHeaderContainer event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs.#ctor">
      <summary>Initializes a new instance of the ChoosingGroupHeaderContainerEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs.Group">
      <summary>Gets the data group associated with this GroupHeaderContainer.</summary>
      <returns>The data group associated with this GroupHeaderContainer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs.GroupHeaderContainer">
      <summary>Gets or sets the UI container that will be used to display the current data group.</summary>
      <returns>The UI container that will be used to display the current data group.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs.GroupIndex">
      <summary>Gets the index in the ItemsSource of the data group for which a container is being selected.</summary>
      <returns>The index in the ItemsSource of the data group for which a container is being selected.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs">
      <summary>Provides event data for the ListViewBase.ChoosingItemContainer event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs.#ctor">
      <summary>Initializes a new instance of the ChoosingItemContainerEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs.IsContainerPrepared">
      <summary>Gets or sets a value that indicates whether the container is ready for use.</summary>
      <returns>**true** if the container is ready for use; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs.Item">
      <summary>Gets the data item associated with this ItemContainer.</summary>
      <returns>The data item associated with this ItemContainer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs.ItemContainer">
      <summary>Gets or sets the UI container that will be used to display the current data item.</summary>
      <returns>The UI container that will be used to display the current data item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs.ItemIndex">
      <summary>Gets the index in the ItemsSource of the data item for which a container is being selected.</summary>
      <returns>The index in the ItemsSource of the data item for which a container is being selected.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>Provides data for the CleanUpVirtualizedItemEvent event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether this item should not be revirtualized.</summary>
      <returns>**true** if you want to prevent revirtualization of this item; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>Gets an instance of the visual element that represents the data value.</summary>
      <returns>The UIElement that represents the data value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>Gets an object that represents the original data value.</summary>
      <returns>The Object that represents the original data value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>Represents the method that handles the CleanUpVirtualizedItemEvent attached event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ClickMode">
      <summary>Specifies when the Click event should be raised for a control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ClickMode.Hover">
      <summary>Specifies that the Click event should be raised when the mouse pointer moves over the control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ClickMode.Press">
      <summary>Specifies that the Click event should be raised when the mouse button is pressed and the mouse pointer is over the control. If you are using the keyboard, specifies that the Click event should be raised when the SPACEBAR or ENTER key is pressed and the control has keyboard focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ClickMode.Release">
      <summary>Specifies that the Click event should be raised when the left mouse button is pressed and released, and the mouse pointer is over the control. If you are using the keyboard, specifies that the Click event should be raised when the SPACEBAR or ENTER key is pressed and released, and the control has keyboard focus.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs">
      <summary>Provides event data for the ColorChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs.NewColor">
      <summary>Gets the color that is currently selected in the control.</summary>
      <returns>The color that is currently selected in the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs.OldColor">
      <summary>Gets the color that was previously selected in the control.</summary>
      <returns>The color that was previously selected in the control.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorPicker">
      <summary>Represents a control that lets a user pick a color using a color spectrum, sliders, and text input.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColorPicker.#ctor">
      <summary>Initializes a new instance of the ColorPicker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.Color">
      <summary>Gets or sets the current color value.</summary>
      <returns>The current color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponents">
      <summary>Gets or sets a value that indicates how the Hue-Saturation-Value (HSV) color components are mapped onto the ColorSpectrum.</summary>
      <returns>A value of the enumeration. The default is **HueSaturation**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponentsProperty">
      <summary>Identifies the ColorSpectrumComponents dependency property.</summary>
      <returns>The identifier for the ColorSpectrumComponents dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShape">
      <summary>Gets or sets a value that indicates whether the ColorSpectrum is shown as a square or a circle.</summary>
      <returns>A value of the enumeration. The default is **Box**, which shows the spectrum as a square.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShapeProperty">
      <summary>Identifies the ColorSpectrumShape dependency property.</summary>
      <returns>The identifier for the ColorSpectrumShape dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabled">
      <summary>Gets or sets a value that indicates whether the alpha channel can be modified.</summary>
      <returns>**true** if the alpha channel is enabled; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabledProperty">
      <summary>Identifies the IsAlphaEnabled dependency property.</summary>
      <returns>The identifier for the IsAlphaEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisible">
      <summary>Gets or sets a value that indicates whether the slider control for the alpha channel is shown.</summary>
      <returns>**true** if the alpha channel slider is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisibleProperty">
      <summary>Identifies the IsAlphaSliderVisible dependency property.</summary>
      <returns>The identifier for the IsAlphaSliderVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisible">
      <summary>Gets or sets a value that indicates whether the text input box for the alpha channel is shown.</summary>
      <returns>**true** if the alpha channel text input box is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisibleProperty">
      <summary>Identifies the IsAlphaTextInputVisible dependency property.</summary>
      <returns>The identifier for the IsAlphaTextInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisible">
      <summary>Gets or sets a value that indicates whether the text input boxes for the color channels are shown.</summary>
      <returns>**true** if the color channel text input boxes are shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisibleProperty">
      <summary>Identifies the IsColorChannelTextInputVisible dependency property.</summary>
      <returns>The identifier for the IsColorChannelTextInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisible">
      <summary>Gets or sets a value that indicates whether the color preview bar is shown.</summary>
      <returns>**true** if the color preview bar is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisibleProperty">
      <summary>Identifies the IsColorPreviewVisible dependency property.</summary>
      <returns>The identifier for the IsColorPreviewVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisible">
      <summary>Gets or sets a value that indicates whether the slider control for the color value is shown.</summary>
      <returns>**true** if the color slider is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisibleProperty">
      <summary>Identifies the IsColorSliderVisible dependency property.</summary>
      <returns>The identifier for the IsColorSliderVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisible">
      <summary>Gets or sets a value that indicates whether the color spectrum control is shown.</summary>
      <returns>**true** if the color spectrum is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisibleProperty">
      <summary>Identifies the IsColorSpectrumVisible dependency property.</summary>
      <returns>The identifier for the IsColorSpectrumVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisible">
      <summary>Gets or sets a value that indicates whether the text input box for a HEX color value is shown.</summary>
      <returns>**true** if the HEX color text input box is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisibleProperty">
      <summary>Identifies the IsHexInputVisible dependency property.</summary>
      <returns>The identifier for the IsHexInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisible">
      <summary>Gets or sets a value that indicates whether the 'more' button is shown.</summary>
      <returns>**true** if the 'more' button is shown; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisibleProperty">
      <summary>Identifies the IsMoreButtonVisible dependency property.</summary>
      <returns>The identifier for the IsMoreButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxHue">
      <summary>Gets or sets the maximum Hue value in the range 0-359.</summary>
      <returns>The maximum Hue value in the range 0-359. The default is 359.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxHueProperty">
      <summary>Identifies the MaxHue dependency property.</summary>
      <returns>The identifier for the MaxHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturation">
      <summary>Gets or sets the maximum Saturation value in the range 0-100.</summary>
      <returns>The maximum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturationProperty">
      <summary>Identifies the MaxSaturation dependency property.</summary>
      <returns>The identifier for the MaxSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxValue">
      <summary>Gets or sets the maximum Value value in the range 0-100.</summary>
      <returns>The maximum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxValueProperty">
      <summary>Identifies the MaxValue dependency property.</summary>
      <returns>The identifier for the MaxValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinHue">
      <summary>Gets or sets the minimum Hue value in the range 0-359.</summary>
      <returns>The minimum Hue value in the range 0-359. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinHueProperty">
      <summary>Identifies the MinHue dependency property.</summary>
      <returns>The identifier for the MinHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturation">
      <summary>Gets or sets the minimum Saturation value in the range 0-100.</summary>
      <returns>The minimum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturationProperty">
      <summary>Identifies the MinSaturation dependency property.</summary>
      <returns>The identifier for the MinSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinValue">
      <summary>Gets or sets the minimum Value value in the range 0-100.</summary>
      <returns>The minimum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinValueProperty">
      <summary>Identifies the MinValue dependency property.</summary>
      <returns>The identifier for the MinValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColor">
      <summary>Gets or sets the previous color.</summary>
      <returns>The previous color. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColorProperty">
      <summary>Identifies the PreviousColor dependency property.</summary>
      <returns>The identifier for the PreviousColor dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ColorPicker.ColorChanged">
      <summary>Occurs when the Color property has changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel">
      <summary>Defines contstants that specify which Hue-Saturation-Value-Alpha component a slider in a ColorPicker controls.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Alpha">
      <summary>The slider controls the Alpha channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Hue">
      <summary>The slider controls the Hue channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Saturation">
      <summary>The slider controls the Saturation channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Value">
      <summary>The slider controls the Value channel.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents">
      <summary>Defines constants that specify how the Hue-Saturation-Value (HSV) color components are mapped onto the ColorSpectrum.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation">
      <summary>Hue is mapped to the X axis. Saturation is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueValue">
      <summary>Hue is mapped to the X axis. Value is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationHue">
      <summary>Saturation is mapped to the X axis. Hue is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationValue">
      <summary>Saturation is mapped to the X axis. Value is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueHue">
      <summary>Value is mapped to the X axis. Hue is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueSaturation">
      <summary>Value is mapped to the X axis. Saturation is mapped to the Y axis.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorSpectrumShape">
      <summary>Defines constants that specify how the ColorSpectrum control is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Box">
      <summary>The ColorSpectrum control is shown as a square.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Ring">
      <summary>The ColorSpectrum control is shown as a circle.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColumnDefinition">
      <summary>Defines column-specific properties that apply to Grid objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinition.#ctor">
      <summary>Initializes a new instance of the ColumnDefinition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.ActualWidth">
      <summary>Gets a value that represents the actual calculated width of a ColumnDefinition.</summary>
      <returns>A Double that represents the actual calculated width in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.MaxWidth">
      <summary>Gets or sets a value that represents the maximum width of a ColumnDefinition.</summary>
      <returns>A Double that represents the maximum width in pixels. The default is PositiveInfinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>Identifies the MaxWidth dependency property.</summary>
      <returns>The identifier for the MaxWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.MinWidth">
      <summary>Gets or sets a value that represents the minimum width of a ColumnDefinition.</summary>
      <returns>A Double that represents the minimum width in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.MinWidthProperty">
      <summary>Identifies the MinWidth dependency property.</summary>
      <returns>The identifier for the MinWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.Width">
      <summary>Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a column that is defined by the ColumnDefinition.</summary>
      <returns>The GridLength that represents the width of the column. The default value is a GridLength representing a "1\*" sizing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinition.WidthProperty">
      <summary>Identifies the Width dependency property.</summary>
      <returns>The identifier for the Width dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of ColumnDefinition objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.Append(Microsoft.UI.Xaml.Controls.ColumnDefinition)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.GetAt(System.UInt32)">
      <summary>Returns the ColumnDefinition located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The ColumnDefinition value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.ColumnDefinition[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.IndexOf(Microsoft.UI.Xaml.Controls.ColumnDefinition,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The item to find in the collection.</param>
      <param name="index">The index of the item, if it is found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.ColumnDefinition)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.ReplaceAll(Microsoft.UI.Xaml.Controls.ColumnDefinition[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.ColumnDefinition)">
      <summary>Sets the value at the specified index to the ColumnDefinition value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ComboBox">
      <summary>Represents a selection control that combines a non-editable text box and a drop-down list box that allows users to select an item from a list.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ComboBox.#ctor">
      <summary>Initializes a new instance of the ComboBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down portion of the ComboBox is currently open.</summary>
      <returns>**True** if the drop-down portion is open; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>Identifies the IsDropDownOpen dependency property.</summary>
      <returns>The identifier for the IsDropDownOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsEditable">
      <summary>Gets or sets a value that indicates whether the user can edit text in the text box portion of the ComboBox. See remarks.</summary>
      <returns>**true** if the user can edit text in the ComboBox, otherwise **false**. The default is **false**. See remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsEditableProperty">
      <summary>Identifies the IsEditable dependency property.</summary>
      <returns>The identifier for the IsEditable dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>Gets a value that indicates whether the SelectionBoxItem component is highlighted.</summary>
      <returns>**True** if the SelectionBoxItem is highlighted; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsTextSearchEnabled">
      <summary>Gets or sets a value that specifies whether a user can jump to a value by typing.</summary>
      <returns>**true** if a user can jump to a value by typing; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.IsTextSearchEnabledProperty">
      <summary>Identifies the IsTextSearchEnabled dependency property.</summary>
      <returns>The identifier for the IsTextSearchEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.MaxDropDownHeight">
      <summary>Gets or sets the maximum height for a combo box drop-down.</summary>
      <returns>The maximum height of the drop-down. The default is infinity.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
      <returns>The identifier for the MaxDropDownHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderForeground">
      <summary>Gets or sets a brush that describes the color of placeholder text.</summary>
      <returns>The brush that describes the color of placeholder text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderForegroundProperty">
      <summary>Identifies the PlaceholderForeground dependency property.</summary>
      <returns>The identifier for the PlaceholderForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is selected. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItem">
      <summary>Gets the item shown when the ComboBox is closed.</summary>
      <returns>The item shown when the ComboBox is closed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>Gets the template applied to the selection box content.</summary>
      <returns>The template applied to the selection box content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.SelectionChangedTrigger">
      <summary>Gets or sets a value that indicates what action causes a SelectionChanged event to occur.</summary>
      <returns>A value of the enumeration. The default is **Committed**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.SelectionChangedTriggerProperty">
      <summary>Identifies the SelectionChangedTrigger dependency property.</summary>
      <returns>The identifier for the **SelectionChangedTrigger** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ComboBox control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.Text">
      <summary>Gets or sets the text in the ComboBox.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.TextBoxStyle">
      <summary>Gets or sets the style of the TextBox in the ComboBox when the ComboBox is editable.</summary>
      <returns>The style of the TextBox in the ComboBox when the ComboBox is editable.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.TextBoxStyleProperty">
      <summary>Identifies the TextBoxStyle dependency property.</summary>
      <returns>The identifier for the TextBoxStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBox.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ComboBox.DropDownClosed">
      <summary>Occurs when the drop-down portion of the ComboBox closes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ComboBox.DropDownOpened">
      <summary>Occurs when the drop-down portion of the ComboBox opens.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ComboBox.TextSubmitted">
      <summary>Occurs when the user submits some text that does not correspond to an item in the ComboBox dropdown list.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ComboBox.OnDropDownClosed(System.Object)">
      <summary>Invoked when the DropDownClosed event is raised.</summary>
      <param name="e">Event data for the event. </param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ComboBox.OnDropDownOpened(System.Object)">
      <summary>Invoked when the DropDownOpened event is raised.</summary>
      <param name="e">Event data for the event. </param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ComboBoxItem">
      <summary>Represents the container for an item in a ComboBox control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ComboBoxItem.#ctor">
      <summary>Initializes a new instance of the ComboBoxItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger">
      <summary>Defines constants that specify what action causes a SelectionChanged event to occur.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger.Always">
      <summary>A change event occurs each time the user navigates to a new selection in the combo box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger.Committed">
      <summary>A change event occurs when the user commits a selection in the combo box.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs">
      <summary>Provides data when the user enters custom text into the ComboBox.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs.Handled">
      <summary>Gets or sets whether the TextSubmitted event was handled or not. If **true**, the framework will not automatically update the selected item of the ComboBox to the new value.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs.Text">
      <summary>Gets the custom text value entered by the user.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBar">
      <summary>Represents a specialized app bar that provides layout for AppBarButton and related command elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CommandBar.#ctor">
      <summary>Initializes a new instance of the CommandBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.CommandBarOverflowPresenterStyle">
      <summary>Gets or sets the Style applied to the overflow content of the CommandBar.</summary>
      <returns>The applied Style for the overflow content of the CommandBar, if present; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.CommandBarOverflowPresenterStyleProperty">
      <summary>Identifies the CommandBarOverflowPresenterStyle dependency property.</summary>
      <returns>The identifier for the CommandBarOverflowPresenterStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.CommandBarTemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a CommandBar control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.DefaultLabelPosition">
      <summary>Gets or sets a value that indicates the placement and visibility of the labels on the command bar's buttons.</summary>
      <returns>An enumeration value that indicates the placement and visibility of the labels on the command bar's buttons. The default is **Bottom**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.DefaultLabelPositionProperty">
      <summary>Identifies the DefaultLabelPosition dependency property.</summary>
      <returns>The identifier for the DefaultLabelPosition dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.IsDynamicOverflowEnabled">
      <summary>Gets or sets a value that indicates whether primary commands automatically move to the overflow menu when space is limited.</summary>
      <returns>**true** if primary commands automatically move to the overflow menu when space is limited; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.IsDynamicOverflowEnabledProperty">
      <summary>Identifies the IsDynamicOverflowEnabled dependency property.</summary>
      <returns>The identifier for the IsDynamicOverflowEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.OverflowButtonVisibility">
      <summary>Gets or sets a value that indicates when a command bar's overflow button is shown.</summary>
      <returns>An enumeration value that indicates when a command bar's overflow button is shown. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.OverflowButtonVisibilityProperty">
      <summary>Identifies the OverflowButtonVisibility dependency property.</summary>
      <returns>The identifier for the OverflowButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.PrimaryCommands">
      <summary>Gets the collection of primary command elements for the CommandBar.</summary>
      <returns>The collection of primary command elements for the CommandBar. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.PrimaryCommandsProperty">
      <summary>Identifies the PrimaryCommands dependency property.</summary>
      <returns>The identifier for the PrimaryCommands dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.SecondaryCommands">
      <summary>Gets the collection of secondary command elements for the CommandBar.</summary>
      <returns>The collection of secondary command elements for the CommandBar. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBar.SecondaryCommandsProperty">
      <summary>Identifies the SecondaryCommands dependency property.</summary>
      <returns>The identifier for the SecondaryCommands dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.CommandBar.DynamicOverflowItemsChanging">
      <summary>Occurs when items move into or out of the overflow menu.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition">
      <summary>Defines constants that specify the placement and visibility of AppBarButton labels in a CommandBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition.Bottom">
      <summary>App bar button labels are shown below the icon. Labels are visible only when the command bar is open.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition.Collapsed">
      <summary>App bar button labels are always hidden whether the command bar is open or closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition.Right">
      <summary>App bar button labels are shown to the right of the icon. Labels are visible even when the command bar is closed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction">
      <summary>Defines constants that specify whether items were added to or removed from the CommandBar overflow menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction.AddingToOverflow">
      <summary>Items are added to the overflow menu.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction.RemovingFromOverflow">
      <summary>Items are removed from the overflow menu.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarFlyout">
      <summary>Represents a specialized flyout that provides layout for AppBarButton and related command elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CommandBarFlyout.#ctor">
      <summary>Initializes a new instance of the CommandBarFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBarFlyout.PrimaryCommands">
      <summary>Gets the collection of primary command elements for the CommandBarFlyout.</summary>
      <returns>The collection of primary command elements for the CommandBarFlyout. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBarFlyout.SecondaryCommands">
      <summary>Gets the collection of secondary command elements for the CommandBarFlyout.</summary>
      <returns>The collection of secondary command elements for the CommandBarFlyout. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarLabelPosition">
      <summary>Defines constants that specify the placement and visibility of an app bar button's label.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarLabelPosition.Collapsed">
      <summary>The app bar button's label is always hidden whether the command bar is open or closed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarLabelPosition.Default">
      <summary>The placement and visibility of the app bar button's label is determined by the value of the CommandBar.DefaultLabelPosition property.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility">
      <summary>Defines constants that specify when a command bar's overflow button is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility.Auto">
      <summary>The overflow button automatically hides when there are no secondary commands and the closed state of the CommandBar is the same as the open state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility.Collapsed">
      <summary>The overflow button is never shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility.Visible">
      <summary>The overflow button is always shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter">
      <summary>Displays the overflow content of a CommandBar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter.#ctor">
      <summary>Initializes a new instance of the CommandBarOverflowPresenter class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs">
      <summary>Provides data for the ContainerContentChanging event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the ContainerContentChangingEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.InRecycleQueue">
      <summary>Gets a value that indicates whether this container is in the recycle queue of the ListViewBase and is not being used to visualize a data item.</summary>
      <returns>**true** if the container is in the recycle queue of the ListViewBase; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.Item">
      <summary>Gets the data item associated with this container.</summary>
      <returns>The data item associated with this container, or **null** if no data is associated with this container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.ItemContainer">
      <summary>Gets the UI container used to display the current data item.</summary>
      <returns>The UI container used to display the current data item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.ItemIndex">
      <summary>Gets the index in the ItemsSource of the data item associated with this container.</summary>
      <returns>The index in the ItemsSource of the data item associated with this container. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.Phase">
      <summary>Gets the number of times this container and data item pair has been called.</summary>
      <returns>The number of times this container and data item pair has been called.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.RegisterUpdateCallback(System.UInt32,Windows.Foundation.TypedEventHandler{Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs})">
      <summary>Registers the event handler to be called again during the specified phase.</summary>
      <param name="callbackPhase">The phase during which the callback should occur.</param>
      <param name="callback">The event handler function.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs.RegisterUpdateCallback(Windows.Foundation.TypedEventHandler{Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs})">
      <summary>Registers the event handler to be called again during the next phase.</summary>
      <param name="callback">The event handler function.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentControl">
      <summary>Represents a control with a single piece of content. Controls such as Button, CheckBox, and ScrollViewer directly or indirectly inherit from this class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentControl.#ctor">
      <summary>Initializes a new instance of the ContentControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.Content">
      <summary>Gets or sets the content of a ContentControl.</summary>
      <returns>An object that contains the control's content. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate">
      <summary>Gets or sets the data template that is used to display the content of the ContentControl.</summary>
      <returns>The data template that is used to display the content of the ContentControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property</summary>
      <returns>The identifier for the ContentTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateRoot">
      <summary>Gets the root element of the data template specified by the ContentTemplate property.</summary>
      <returns>The root element of the data template specified by the ContentTemplate property. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateSelector">
      <summary>Gets or sets a selection object that changes the DataTemplate to apply for content, based on processing information about the content item or its container at run time.</summary>
      <returns>A selection object that changes the DataTemplate to apply for content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateSelectorProperty">
      <summary>Identifies the ContentTemplateSelector dependency property.</summary>
      <returns>The identifier for the ContentTemplateSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the content of a ContentControl.</summary>
      <returns>The strongly typed collection of Transition style elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitionsProperty">
      <summary>Identifies the ContentTransitions dependency property.</summary>
      <returns>The identifier for the ContentTransitions dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary>Invoked when the value of the Content property changes.</summary>
      <param name="oldContent">The old value of the Content property.</param>
      <param name="newContent">The new value of the Content property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentControl.OnContentTemplateChanged(Microsoft.UI.Xaml.DataTemplate,Microsoft.UI.Xaml.DataTemplate)">
      <summary>Invoked when the value of the ContentTemplate property changes.</summary>
      <param name="oldContentTemplate">The old value of the ContentTemplate property.</param>
      <param name="newContentTemplate">The new value of the ContentTemplate property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentControl.OnContentTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector,Microsoft.UI.Xaml.Controls.DataTemplateSelector)">
      <summary>Invoked when the value of the ContentTemplateSelector property changes.</summary>
      <param name="oldContentTemplateSelector">The old value of the ContentTemplateSelector property.</param>
      <param name="newContentTemplateSelector">The new value of the ContentTemplateSelector property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialog">
      <summary>Represents a dialog box that can be customized to contain checkboxes, hyperlinks, buttons and any other XAML content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialog.#ctor">
      <summary>Initializes a new instance of the ContentDialog class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommand">
      <summary>Gets or sets the command to invoke when the close button is tapped.</summary>
      <returns>The command to invoke when the primary button is tapped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommandParameter">
      <summary>Gets or sets the parameter to pass to the command for the close button.</summary>
      <returns>The parameter to pass to the command for the close button. The default is **null.**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommandParameterProperty">
      <summary>Gets the identifier of the CloseButtonCommandParameter dependency property.</summary>
      <returns>The identifier of the CloseButtonCommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommandProperty">
      <summary>Gets the identifier of the CloseButtonCommand dependency property.</summary>
      <returns>The identifier of the CloseButtonCommand dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonStyle">
      <summary>Gets or sets the Style to apply to the dialog's close button.</summary>
      <returns>The applied style for the button, if present; otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonStyleProperty">
      <summary>Gets the identifier of the CloseButtonStyle dependency property.</summary>
      <returns>The identifier of the CloseButtonStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonText">
      <summary>Gets or sets the text to display on the close button.</summary>
      <returns>The text to display on the close button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonTextProperty">
      <summary>Gets the identifier of the CloseButtonText dependency property.</summary>
      <returns>The identifier of the CloseButtonText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.DefaultButton">
      <summary>Gets or sets a value that indicates which button on the dialog is the default action.</summary>
      <returns>A value of the enumeration. The default is **None.**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.DefaultButtonProperty">
      <summary>Gets the identifier of the DefaultButton dependency property.</summary>
      <returns>The identifier of the DefaultButton dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.FullSizeDesired">
      <summary>Gets or sets a value that indicates whether a request is being made to display the dialog full screen.</summary>
      <returns>**true** to request that the dialog is displayed full screen; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.FullSizeDesiredProperty">
      <summary>Gets the identifier of the FullSizeDesired dependency property.</summary>
      <returns>The identifier of the FullSizeDesired dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.IsPrimaryButtonEnabled">
      <summary>Gets or sets whether the dialog's primary button is enabled.</summary>
      <returns>True if the primary button of the dialog is enabled; Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.IsPrimaryButtonEnabledProperty">
      <summary>Gets the identifier of the IsPrimaryButtonEnabled dependency property.</summary>
      <returns>The identifier of the IsPrimaryButtonEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.IsSecondaryButtonEnabled">
      <summary>Gets or sets whether the dialog's secondary button is enabled.</summary>
      <returns>True if the secondary button of the dialog is enabled; Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.IsSecondaryButtonEnabledProperty">
      <summary>Gets the identifier of the IsSecondaryButtonEnabled dependency property.</summary>
      <returns>The identifier of the IsSecondaryButtonEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommand">
      <summary>Gets or sets the command to invoke when the primary button is tapped.</summary>
      <returns>The command to invoke when the primary button is tapped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommandParameter">
      <summary>Gets or sets the parameter to pass to the command for the primary button.</summary>
      <returns>The parameter to pass to the command for the primary button. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommandParameterProperty">
      <summary>Gets the identifier of the PrimaryButtonCommandParameter dependency property.</summary>
      <returns>The identifier of the PrimaryButtonCommandParameter dependency property</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommandProperty">
      <summary>Gets the identifier of the PrimaryButtonCommand dependency property.</summary>
      <returns>The identifier of the PrimaryButtonCommand dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonStyle">
      <summary>Gets or sets the Style to apply to the dialog's primary button.</summary>
      <returns>The applied style for the button, if present; otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonStyleProperty">
      <summary>Gets the identifier of the PrimaryButtonStyle dependency property.</summary>
      <returns>The identifier of the PrimaryButtonStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonText">
      <summary>Gets or sets the text to display on the primary button.</summary>
      <returns>The text to display on the primary button. To hide this button, set the text to **null** or string.empty. The default is empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonTextProperty">
      <summary>Gets the identifier of the PrimaryButtonText dependency property.</summary>
      <returns>The identifier of the PrimaryButtonText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommand">
      <summary>Gets or sets the command to invoke when the secondary button is tapped.</summary>
      <returns>The command to invoke when the secondary button is tapped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommandParameter">
      <summary>Gets or sets the parameter to pass to the command for the secondary button.</summary>
      <returns>The command parameter for the secondary button. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommandParameterProperty">
      <summary>Gets the identifier of the SecondaryButtonCommandParameter dependency property.</summary>
      <returns>The identifier of the SecondaryButtonCommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommandProperty">
      <summary>Gets the identifier of the SecondaryButtonCommand dependency property.</summary>
      <returns>The identifier of the SecondaryButtonCommand dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonStyle">
      <summary>Gets or sets the Style to apply to the dialog's secondary button.</summary>
      <returns>The applied style for the button, if present; otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonStyleProperty">
      <summary>Gets the identifier of the SecondaryButtonStyle dependency property.</summary>
      <returns>The identifier of the SecondaryButtonStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonText">
      <summary>Gets or sets the text to be displayed on the secondary button.</summary>
      <returns>The text to be displayed on the secondary button. To hide this button, set the value to **null** or **string.empty**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonTextProperty">
      <summary>Gets the identifier of the SecondaryButtonText dependency property.</summary>
      <returns>The identifier of the SecondaryButtonText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.Title">
      <summary>Gets or sets the title of the dialog.</summary>
      <returns>The title of the dialog.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.TitleProperty">
      <summary>Gets the identifier of the Title dependency property.</summary>
      <returns>The identifier of the Title dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.TitleTemplate">
      <summary>Gets or sets the title template.</summary>
      <returns>The title template.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialog.TitleTemplateProperty">
      <summary>Gets the identifier of the TitleTemplate dependency property.</summary>
      <returns>The identifier of the TitleTemplate dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonClick">
      <summary>Occurs after the close button has been tapped.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.Closed">
      <summary>Occurs after the dialog is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.Closing">
      <summary>Occurs after the dialog starts to close, but before it is closed and before the Closed event occurs.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.Opened">
      <summary>Occurs after the dialog is opened.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonClick">
      <summary>Occurs after the primary button has been tapped.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonClick">
      <summary>Occurs after the secondary button has been tapped.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialog.Hide">
      <summary>Hides the dialog.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialog.ShowAsync">
      <summary>Begins an asynchronous operation to show the dialog.</summary>
      <returns>An asynchronous operation showing the dialog. When complete, returns a ContentDialogResult.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialog.ShowAsync(Microsoft.UI.Xaml.Controls.ContentDialogPlacement)">
      <summary>Begins an asynchronous operation to show the dialog with the specified placement.</summary>
      <param name="placement">A value that specifies whether the dialog is placed in the PopupRoot or in its parent's visual tree.</param>
      <returns>An asynchronous operation showing the dialog. When complete, returns a ContentDialogResult.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogButton">
      <summary>Defines constants that specify the default button on a content dialog.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogButton.Close">
      <summary>The close button is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogButton.None">
      <summary>No button is specified as the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogButton.Primary">
      <summary>The primary button is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogButton.Secondary">
      <summary>The secondary button is the default.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogButtonClickDeferral">
      <summary>Represents a deferral that can be used by an app to respond asynchronously to a button click event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialogButtonClickDeferral.Complete">
      <summary>Notifies the system that the app has finished processing the button click event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs">
      <summary>Provides data for the button click events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs.Cancel">
      <summary>Gets or sets a value that can cancel the button click. A **true** value for Cancel cancels the default behavior.</summary>
      <returns>True to cancel the button click; Otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs.GetDeferral">
      <summary>Gets a ContentDialogButtonClickDeferral that the app can use to respond asynchronously to a button click event.</summary>
      <returns>A ContentDialogButtonClickDeferral that the app can use to respond asynchronously to a button click event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs">
      <summary>Provides data for the Closed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs.Result">
      <summary>Gets the ContentDialogResult of the button click event.</summary>
      <returns>The result of the button click event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogClosingDeferral">
      <summary>Represents a deferral that can be used by an app to respond asynchronously to the closing event of the ContentDialog.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialogClosingDeferral.Complete">
      <summary>Notifies the system that the app has finished processing the closing event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs">
      <summary>Provides data for the closing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs.Cancel">
      <summary>Gets or sets a value that can cancel the closing of the dialog.. A **true** value for Cancel cancels the default behavior.</summary>
      <returns>True to cancel the closing of the dialog; Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs.Result">
      <summary>Gets the ContentDialogResult of the closing event.</summary>
      <returns>The ContentDialogResult of the closing event.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs.GetDeferral">
      <summary>Gets a ContentDialogClosingDeferral that the app can use to respond asynchronously to the closing event.</summary>
      <returns>A ContentDialogClosingDeferral that the app can use to respond asynchronously to the closing event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs">
      <summary>Provides data for the Opened event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogPlacement">
      <summary>Defines constants that specify where in the XAML visual tree a ContentDialog is rooted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogPlacement.InPlace">
      <summary>If the dialog has a parent element, the dialog is rooted in the parent's visual tree. Otherwise, it falls back to the **Popup** behavior.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogPlacement.Popup">
      <summary>The dialog is rooted in the PopupRoot element of the XAML Window.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentDialogResult">
      <summary>Specifies identifiers to indicate the return value of a ContentDialog</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogResult.None">
      <summary>No button was tapped.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogResult.Primary">
      <summary>The primary button was tapped by the user.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentDialogResult.Secondary">
      <summary>The secondary button was tapped by the user.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentLinkChangedEventArgs">
      <summary>Provides data for the RichEditBox.ContentLinkChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentLinkChangedEventArgs.ChangeKind">
      <summary>Gets a value that indicates how the content link is changed.</summary>
      <returns>An enumeration value that indicates how the content link is changed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentLinkChangedEventArgs.ContentLinkInfo">
      <summary>Gets an object that contains information about the content link.</summary>
      <returns>An object that contains information about the content link.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentLinkChangedEventArgs.TextRange">
      <summary>Gets the text range that contains the content link.</summary>
      <returns>The text range that contains the content link.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentLinkChangeKind">
      <summary>Defines constants that specify what kind of change is being made to a ContentLink.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentLinkChangeKind.Edited">
      <summary>The content link is being changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentLinkChangeKind.Inserted">
      <summary>The content link is being added.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ContentLinkChangeKind.Removed">
      <summary>The content link is being removed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentPresenter">
      <summary>Displays the content of a ContentControl. Can also provide content presentation for non-controls. Provides a base class for specialized presenters such as ScrollContentPresenter.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentPresenter.#ctor">
      <summary>Initializes a new instance of the ContentPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.Background">
      <summary>Gets or sets the Brush to apply to the background of content handled by the ContentPresenter.</summary>
      <returns>The brush used as the background brush for the contents. The default is a null brush from a pure code perspective, but system style defaults set this to White (for **Light** theme) or Black (for **Dark** theme).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundTransition">
      <summary>Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.</summary>
      <returns>An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BorderBrush">
      <summary>Gets or sets a brush that describes the border fill of the content presenter.</summary>
      <returns>The brush that is used to fill the content presenter's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BorderThickness">
      <summary>Gets or sets the border thickness of the content presenter.</summary>
      <returns>The border thickness of the content presenter, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.CharacterSpacing">
      <summary>Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.</summary>
      <returns>The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.CharacterSpacingProperty">
      <summary>Identifies the CharacterSpacing dependency property.</summary>
      <returns>The identifier for the CharacterSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.Content">
      <summary>Gets or sets the data that is used to generate the child elements of a ContentPresenter.</summary>
      <returns>The data that is used to generate the child elements. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentProperty">
      <summary>Identifies the Content dependency property</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate">
      <summary>Gets or sets the template that is used to display the content of the control.</summary>
      <returns>A DataTemplate that defines the visualization of the content. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
      <returns>The identifier for the ContentTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplateSelector">
      <summary>Gets or sets a selection object that changes the DataTemplate to apply for content presented in the ContentPresenter, based on processing information about the content item or its container at run time.</summary>
      <returns>A selection object that changes the DataTemplate to apply for content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplateSelectorProperty">
      <summary>Identifies the ContentTemplateSelector dependency property.</summary>
      <returns>The identifier for the ContentTemplateSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to content presented by the ContentPresenter.</summary>
      <returns>The strongly typed collection of Transition style elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitionsProperty">
      <summary>Identifies the ContentTransitions dependency property.</summary>
      <returns>The identifier for the ContentTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.CornerRadius">
      <summary>Gets or sets the radius for the corners of the content presenter's border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the text content presented by the ContentPresenter.</summary>
      <returns>A FontFamily object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the FontFamily class topic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamilyProperty">
      <summary>Identifies the FontFamily  dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontSize">
      <summary>Gets or sets the font size for the text content presented by the ContentPresenter.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontSizeProperty">
      <summary>Identifies the FontSize  dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontStretch">
      <summary>Gets or sets the font stretch for the text content presented by the ContentPresenter.</summary>
      <returns>The requested font stretch, as a FontStretch constant. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontStretchProperty">
      <summary>Identifies the FontStretch  dependency property.</summary>
      <returns>The identifier for the FontStretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontStyle">
      <summary>Gets or sets the font style for the presented content.</summary>
      <returns>The requested font style, which is a FontStyle constant name. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontStyleProperty">
      <summary>Identifies the FontStyle  dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontWeight">
      <summary>Gets or sets the top-level font weight for the text content presented by the ContentPresenter.</summary>
      <returns>The requested font weight, which is a FontWeight that is obtained from one of the FontWeights property values. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.FontWeightProperty">
      <summary>Identifies the FontWeight  dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground">
      <summary>Gets or sets the Brush to apply to the text content handled by the ContentPresenter.</summary>
      <returns>The brush used as the foreground brush for the text contents. The default is a null brush from a pure code perspective, but system style defaults set this to Black (for **Light** theme) or White (for **Dark** theme).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.ForegroundProperty">
      <summary>Identifies the Foreground  dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.HorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the content.</summary>
      <returns>One of the HorizontalAlignment values.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.HorizontalContentAlignmentProperty">
      <summary>Identifies the HorizontalContentAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.LineHeight">
      <summary>Gets or sets the height of each line of text content presented by the ContentPresenter.</summary>
      <returns>The height in pixels of each line of text content. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.LineHeightProperty">
      <summary>Identifies the LineHeight  dependency property.</summary>
      <returns>The identifier for the LineHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.LineStackingStrategy">
      <summary>Gets or sets a value that indicates how a line box is determined for each line of text.</summary>
      <returns>A value that indicates how a line box is determined for each line of text. The default is **MaxHeight**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.LineStackingStrategyProperty">
      <summary>Identifies the LineStackingStrategy dependency property.</summary>
      <returns>The identifier for the LineStackingStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.MaxLines">
      <summary>Gets or sets the maximum lines of text shown.</summary>
      <returns>The maximum lines of text shown. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.MaxLinesProperty">
      <summary>Identifies the MaxLines dependency property.</summary>
      <returns>The identifier for the MaxLines dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.OpticalMarginAlignment">
      <summary>Get or sets a value that indicates how the font is modified to align with fonts of different sizes.</summary>
      <returns>A value of the enumeration that indicates how the font is modified to align at different sizes. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.OpticalMarginAlignmentProperty">
      <summary>Identifies the OpticalMarginAlignment dependency property.</summary>
      <returns>The identifier for the OpticalMarginAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.TextLineBounds">
      <summary>Gets or sets a value that indicates how the line box height is determined for each line of text displayed in the ContentPresenter.</summary>
      <returns>A value that indicates how the line box height is determined for each line of text. The default is **Full**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.TextLineBoundsProperty">
      <summary>Identifies the TextLineBounds dependency property.</summary>
      <returns>The identifier for the TextLineBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.TextWrapping">
      <summary>Gets or sets how the element wraps text.</summary>
      <returns>A value that indicates how the element wraps text. The default is **NoWrap**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
      <returns>The identifier for the TextWrapping dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.VerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the content.</summary>
      <returns>One of the VerticalAlignment values.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContentPresenter.VerticalContentAlignmentProperty">
      <summary>Identifies the VerticalContentAlignment dependency property.</summary>
      <returns>The identifier for the VerticalContentAlignment dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentPresenter.OnContentTemplateChanged(Microsoft.UI.Xaml.DataTemplate,Microsoft.UI.Xaml.DataTemplate)">
      <summary>Invoked when the value of the ContentTemplate property changes.</summary>
      <param name="oldContentTemplate">The old value of the ContentTemplate property.</param>
      <param name="newContentTemplate">The new value of the ContentTemplate property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ContentPresenter.OnContentTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector,Microsoft.UI.Xaml.Controls.DataTemplateSelector)">
      <summary>Invoked when the value of the ContentTemplateSelector property changes.</summary>
      <param name="oldContentTemplateSelector">The old value of the ContentTemplateSelector property.</param>
      <param name="newContentTemplateSelector">The new value of the ContentTemplateSelector property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContextMenuEventArgs">
      <summary>Provides event data for the **ContextMenuOpening** event that exists on several text-related UI elements.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContextMenuEventArgs.CursorLeft">
      <summary>Gets the pixel offset of the text cursor horizontal position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContextMenuEventArgs.CursorTop">
      <summary>Gets the pixel offset of the text cursor vertical position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ContextMenuEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**True** to mark the routed event handled. **False** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler">
      <summary>Represents the method that will handle the **ContextMenuOpening** event that exists on several text-related UI elements.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Control">
      <summary>Represents the base class for UI elements that use a ControlTemplate to define their appearance. Parent class for ContentControl, UserControl, ItemsControl and several practical controls.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.#ctor">
      <summary>Provides base class initialization behavior for Control derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.Background">
      <summary>Gets or sets a brush that provides the background of the control.</summary>
      <returns>The brush that provides the background of the control. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BorderBrush">
      <summary>Gets or sets a brush that describes the border fill of a control.</summary>
      <returns>The brush that is used to fill the control's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BorderThickness">
      <summary>Gets or sets the border thickness of a control.</summary>
      <returns>The border thickness of a control, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.CharacterSpacing">
      <summary>Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.</summary>
      <returns>The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.CharacterSpacingProperty">
      <summary>Identifies the CharacterSpacing dependency property.</summary>
      <returns>The identifier for the CharacterSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.CornerRadius">
      <summary>Gets or sets the radius for the corners of the control's border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey">
      <summary>Gets or sets the key that references the default style for the control. Authors of custom controls use this property to change the default for the style that their control uses.</summary>
      <returns>The key that references the default style for the control. To work correctly as part of theme style lookup, this value is expected to be a System.Type value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.DefaultStyleKeyProperty">
      <summary>Identifies the DefaultStyleKey dependency property.</summary>
      <returns>The identifier for the DefaultStyleKey dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.DefaultStyleResourceUri">
      <summary>Gets or sets the path to the resource file that contains the default style for the control.</summary>
      <returns>The path to the resource file that contains the default style for the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.DefaultStyleResourceUriProperty">
      <summary>Identifies the **DefaultStyleResourceUri** dependency property.</summary>
      <returns>The identifier for the **DefaultStyleResourceUri** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.ElementSoundMode">
      <summary>Get or sets a value that specifies a control's preference for whether sounds are played.</summary>
      <returns>A value of the enumeration that specifies a control's preference for whether sounds are played. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.ElementSoundModeProperty">
      <summary>Identifies the ElementSoundMode dependency property.</summary>
      <returns>The identifier for the ElementSoundMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FocusState">
      <summary>Gets a value that specifies whether this control has focus, and the mode by which focus was obtained.</summary>
      <returns>A value of the enumeration. A value of **Unfocused** indicates that the control does not have focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FocusStateProperty">
      <summary>Identifies the FocusState dependency property.</summary>
      <returns>The identifier for the FocusState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontFamily">
      <summary>Gets or sets the font used to display text in the control.</summary>
      <returns>The font used to display text in the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontFamilyProperty">
      <summary>Identifies the FontFamily dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontSize">
      <summary>Gets or sets the size of the text in this control.</summary>
      <returns>The size of the text in the Control, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontSizeProperty">
      <summary>Identifies the FontSize dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontStretch">
      <summary>Gets or sets the degree to which a font is condensed or expanded on the screen.</summary>
      <returns>One of the values that specifies the degree to which a font is condensed or expanded on the screen. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontStretchProperty">
      <summary>Identifies the FontStretch dependency property.</summary>
      <returns>The identifier for the FontStretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontStyle">
      <summary>Gets or sets the style in which the text is rendered.</summary>
      <returns>One of the values that specifies the style in which the text is rendered. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontStyleProperty">
      <summary>Identifies the FontStyle dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontWeight">
      <summary>Gets or sets the thickness of the specified font.</summary>
      <returns>One of the values that specifies the thickness of the specified font. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.FontWeightProperty">
      <summary>Identifies the FontWeight dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default value is a SolidColorBrush with color of Black.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.HorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the control's content.</summary>
      <returns>One of the HorizontalAlignment values. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>Identifies the HorizontalContentAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsEnabled">
      <summary>Gets or sets a value indicating whether the user can interact with the control.</summary>
      <returns>**true** if the user can interact with the control; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsEnabledProperty">
      <summary>Identifies the IsEnabled dependency property.</summary>
      <returns>The identifier for the IsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsFocusEngaged">
      <summary>Get or sets a value that indicates whether focus is constrained within the control boundaries (for game pad/remote interaction).</summary>
      <returns>**true** if focus is constrained within the control boundaries; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsFocusEngagedProperty">
      <summary>Identifies the IsFocusEngaged dependency property.</summary>
      <returns>The identifier for the IsFocusEngaged dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsFocusEngagementEnabled">
      <summary>Get or sets a value that indicates whether focus can be constrained within the control boundaries (for game pad/remote interaction).</summary>
      <returns>**true** if focus can be constrained within the control boundaries; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsFocusEngagementEnabledProperty">
      <summary>Identifies the IsFocusEngagementEnabled dependency property.</summary>
      <returns>The identifier for the IsFocusEngagementEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTabStop">
      <summary>Gets or sets a value that indicates whether a control is included in tab navigation.</summary>
      <returns>**true** if the control is included in tab navigation; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTabStopProperty">
      <summary>Identifies the IsTabStop  dependency property.</summary>
      <returns>The identifier for the IsTabStop  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTemplateFocusTargetProperty">
      <summary>Identifies the Control.IsTemplateFocusTarget XAML attached property.</summary>
      <returns>The identifier for the Control.IsTemplateFocusTarget XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTemplateKeyTipTargetProperty">
      <summary>Identifies the Control.IsTemplateKeyTipTarget  XAML attached property.</summary>
      <returns>The identifier for the Control.IsTemplateKeyTipTarget XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.Padding">
      <summary>Gets or sets the padding inside a control.</summary>
      <returns>The amount of space between the content of a Control and its Margin or Border. The default is a Thickness with values of 0 on all four sides.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.RequiresPointer">
      <summary>Gets or sets whether a UI element supports mouse mode, which emulates pointer interaction experiences with non-pointer input devices such as an Xbox gamepad or remote control.</summary>
      <returns>The pointer emulation mode. The default is **Never**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.RequiresPointerProperty">
      <summary>Identifies the RequiresPointer dependency property.</summary>
      <returns>The identifier for the RequiresPointer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.TabIndex">
      <summary>Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by pressing the Tab key.</summary>
      <returns>A value that determines the order of logical navigation for a device. The default value is MaxValue.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.TabIndexProperty">
      <summary>Identifies the TabIndex  dependency property.</summary>
      <returns>The identifier for the TabIndex  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.TabNavigation">
      <summary>Gets or sets a value that modifies how tabbing and TabIndex work for this control.</summary>
      <returns>A value of the enumeration. The default is **Local**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.TabNavigationProperty">
      <summary>Identifies the TabNavigation  dependency property.</summary>
      <returns>The identifier for the TabNavigation  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.Template">
      <summary>Gets or sets a control template. The control template defines the visual appearance of a control in UI, and is defined in XAML markup.</summary>
      <returns>The template that defines the appearance of the Control. The ControlTemplate must have exactly one root element as its content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.TemplateProperty">
      <summary>Identifies the Template  dependency property.</summary>
      <returns>The identifier for the Template  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.UseSystemFocusVisuals">
      <summary>Gets or sets a value that indicates whether the control uses focus visuals that are drawn by the system or those defined in the control template.</summary>
      <returns>**true** if the control uses focus visuals drawn by the system; **false** if the control uses focus visuals defined in the ControlTemplate. The default is **false**; see Remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.UseSystemFocusVisualsProperty">
      <summary>Identifies the UseSystemFocusVisuals dependency property.</summary>
      <returns>The identifier for the UseSystemFocusVisuals dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.VerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the control's content.</summary>
      <returns>One of the VerticalAlignment values. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.VerticalContentAlignmentProperty">
      <summary>Identifies the VerticalContentAlignment dependency property.</summary>
      <returns>The identifier for the VerticalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusDown">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (D-pad) down.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (D-pad) down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusDownProperty">
      <summary>Identifies the XYFocusDown dependency property.</summary>
      <returns>The identifier for the XYFocusDown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusLeft">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (D-pad) left.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (D-pad) left.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusLeftProperty">
      <summary>Identifies the XYFocusLeft dependency property.</summary>
      <returns>The identifier for the XYFocusLeft dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusRight">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (D-pad) right.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (D-pad) right.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusRightProperty">
      <summary>Identifies the XYFocusRight dependency property.</summary>
      <returns>The identifier for the XYFocusRight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusUp">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (D-pad) up.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (D-pad) up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Control.XYFocusUpProperty">
      <summary>Identifies the XYFocusUp dependency property.</summary>
      <returns>The identifier for the XYFocusUp dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Control.FocusDisengaged">
      <summary>Occurs when focus is released from the control boundaries (for game pad/remote interaction).</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Control.FocusEngaged">
      <summary>Occurs when focus is constrained within the control boundaries (for game pad/remote interaction).</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Control.IsEnabledChanged">
      <summary>Occurs when the IsEnabled property changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.ApplyTemplate">
      <summary>Loads the relevant control template so that its parts can be referenced.</summary>
      <returns>A value that indicates whether the visual tree was rebuilt by this call. **True** if the tree was rebuilt; **false** if the previous visual tree was retained.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Attempts to set the focus on the control.</summary>
      <param name="value">Specifies how focus was set, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the control, or focus was already on the control. **false** if the control is not focusable.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.GetIsTemplateFocusTarget(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the Control.IsTemplateFocusTarget XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The Control.IsTemplateFocusTarget XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.GetIsTemplateKeyTipTarget(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the Control.IsTemplateKeyTipTarget  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The Control.IsTemplateKeyTipTarget XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
      <summary>Retrieves the named element in the instantiated ControlTemplate visual tree.</summary>
      <param name="childName">The name of the element to find.</param>
      <returns>The named element from the template, if the element is found. Can return null if no element with name *childName* was found in the template.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnCharacterReceived(Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs)">
      <summary>Called before the CharacterReceived event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnDoubleTapped(Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
      <summary>Called before the DoubleTapped event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnDragEnter(Microsoft.UI.Xaml.DragEventArgs)">
      <summary>Called before the DragEnter event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnDragLeave(Microsoft.UI.Xaml.DragEventArgs)">
      <summary>Called before the DragLeave event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnDragOver(Microsoft.UI.Xaml.DragEventArgs)">
      <summary>Called before the DragOver event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnDrop(Microsoft.UI.Xaml.DragEventArgs)">
      <summary>Called before the Drop event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnGotFocus(Microsoft.UI.Xaml.RoutedEventArgs)">
      <summary>Called before the GotFocus event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnHolding(Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs)">
      <summary>Called before the Holding event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
      <summary>Called before the KeyDown event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnKeyUp(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
      <summary>Called before the KeyUp event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnLostFocus(Microsoft.UI.Xaml.RoutedEventArgs)">
      <summary>Called before the LostFocus event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnManipulationCompleted(Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
      <summary>Called before the ManipulationCompleted event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnManipulationDelta(Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
      <summary>Called before the ManipulationDelta event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
      <summary>Called before the ManipulationInertiaStarting event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnManipulationStarted(Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
      <summary>Called before the ManipulationStarted event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnManipulationStarting(Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
      <summary>Called before the ManipulationStarting event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerCanceled(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerCanceled event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerCaptureLost(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerCaptureLost event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerEntered(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerEntered event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerExited(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerExited event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerMoved(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerMoved event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerPressed(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerPressed event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerReleased(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerReleased event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPointerWheelChanged(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
      <summary>Called before the PointerWheelChanged event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPreviewKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
      <summary>Called before the PreviewKeyDown event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnPreviewKeyUp(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
      <summary>Called before the PreviewKeyUp event occurs.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnRightTapped(Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs)">
      <summary>Called before the RightTapped event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.OnTapped(Microsoft.UI.Xaml.Input.TappedRoutedEventArgs)">
      <summary>Called before the Tapped event occurs.</summary>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.RemoveFocusEngagement">
      <summary>Releases focus from the control boundaries for a control that has focus engagement (for game pad/remote interaction).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.SetIsTemplateFocusTarget(Microsoft.UI.Xaml.FrameworkElement,System.Boolean)">
      <summary>Sets the value of the Control.IsTemplateFocusTarget XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Control.SetIsTemplateKeyTipTarget(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the Control.IsTemplateKeyTipTarget XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ControlTemplate">
      <summary>Defines the element tree that is used as the control template for a control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ControlTemplate.#ctor">
      <summary>Initializes a new instance of the ControlTemplate class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ControlTemplate.TargetType">
      <summary>Gets or sets the type to which the ControlTemplate is applied.</summary>
      <returns>The type to which the ControlTemplate is applied. This value is usually set in XAML, not code. See Remarks.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DataTemplateSelector">
      <summary>Enables custom template selection logic at the application level.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.#ctor">
      <summary>Initializes a new instance of the DataTemplateSelector class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.GetElement(Microsoft.UI.Xaml.ElementFactoryGetArgs)">
      <summary>Creates or retrieves an existing instance of the UIElement object declared in the DataTemplate returned by SelectTemplate.</summary>
      <param name="args">An instance of ElementFactoryGetArgs.</param>
      <returns>An instance of the root UIElement declared in the selected DataTemplate or, **null** if the root of the selected DataTemplate is not a UIElement.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.RecycleElement(Microsoft.UI.Xaml.ElementFactoryRecycleArgs)">
      <summary>Recycles a UIElement object that was created using GetElement.</summary>
      <param name="args">An instance of ElementFactoryRecycleArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.SelectTemplate(System.Object)">
      <summary>Returns a specific DataTemplate for a given item.</summary>
      <param name="item">The item to return a template for.</param>
      <returns>The template to use for the given item and/or container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.SelectTemplate(System.Object,Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns a specific DataTemplate for a given item and container.</summary>
      <param name="item">The item to return a template for.</param>
      <param name="container">The parent container for the templated item.</param>
      <returns>The template to use for the given item and/or container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.SelectTemplateCore(System.Object)">
      <summary>When implemented by a derived class, returns a specific DataTemplate for a given item or container.</summary>
      <param name="item">The item to return a template for.</param>
      <returns>The template to use for the given item and/or container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DataTemplateSelector.SelectTemplateCore(System.Object,Microsoft.UI.Xaml.DependencyObject)">
      <summary>When implemented by a derived class, returns a specific DataTemplate for a given item or container.</summary>
      <param name="item">The item to return a template for.</param>
      <param name="container">The parent container for the templated item.</param>
      <returns>The template to use for the given item and/or container.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickedEventArgs">
      <summary>Provides data for the DatePicked event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickedEventArgs.#ctor">
      <summary>Initializes a new instance of the DatePickedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickedEventArgs.NewDate">
      <summary>Gets the date that was selected by the user.</summary>
      <returns>The date that was selected by the user.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickedEventArgs.OldDate">
      <summary>Gets the previous date.</summary>
      <returns>The previous date.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePicker">
      <summary>Represents a control that allows a user to pick a date value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePicker.#ctor">
      <summary>Initializes a new instance of the DatePicker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.CalendarIdentifier">
      <summary>Gets or sets the calendar system to use.</summary>
      <returns>The calendar system to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.CalendarIdentifierProperty">
      <summary>Gets the identifier for the CalendarIdentifier dependency property.</summary>
      <returns>The identifier for the CalendarIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.Date">
      <summary>Gets or sets the date currently set in the date picker.</summary>
      <returns>The date currently set in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.DateProperty">
      <summary>Gets the identifier for the Date dependency property.</summary>
      <returns>The identifier for the Date dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.DayFormat">
      <summary>Gets or sets the display format for the day value.</summary>
      <returns>The display format for the day value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.DayFormatProperty">
      <summary>Gets the identifier for the DayFormat dependency property.</summary>
      <returns>The identifier for the DayFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.DayVisible">
      <summary>Gets or sets a value that indicates whether the day selector is shown.</summary>
      <returns>**true** if the day selector is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.DayVisibleProperty">
      <summary>Gets the identifier for the DayVisible dependency property.</summary>
      <returns>The identifier for the DayVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MaxYear">
      <summary>Gets or sets the maximum Gregorian year available for picking.</summary>
      <returns>The maximum Gregorian year available for picking.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MaxYearProperty">
      <summary>Gets the identifier for the MaxYear dependency property.</summary>
      <returns>The identifier for the MaxYear dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MinYear">
      <summary>Gets or sets the minimum Gregorian year available for picking.</summary>
      <returns>The minimum Gregorian year available for picking.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MinYearProperty">
      <summary>Gets the identifier for the MinYear dependency property.</summary>
      <returns>The identifier for the MinYear dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MonthFormat">
      <summary>Gets or sets the display format for the month value.</summary>
      <returns>The display format for the month value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MonthFormatProperty">
      <summary>Gets the identifier for the MonthFormat dependency property.</summary>
      <returns>The identifier for the MonthFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MonthVisible">
      <summary>Gets or sets a value that indicates whether the month selector is shown.</summary>
      <returns>**true** if the month selector is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.MonthVisibleProperty">
      <summary>Gets the identifier for the MonthVisible dependency property.</summary>
      <returns>The identifier for the MonthVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.Orientation">
      <summary>Gets or sets a value that indicates whether the day, month, and year selectors are stacked horizontally or vertically.</summary>
      <returns>A named constant of the enumeration that indicates whether the day, month, and year selectors are stacked horizontally or vertically. The default is Horizontal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.OrientationProperty">
      <summary>Gets the identifier for the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.SelectedDate">
      <summary>Gets or sets the date currently selected in the date picker, or **null** if no date is selected.</summary>
      <returns>The date currently selected in the picker, or **null** if no date is selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.SelectedDateProperty">
      <summary>Identifies the SelectedDate dependency property.</summary>
      <returns>The identifier for the SelectedDate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.YearFormat">
      <summary>Gets or sets the display format for the year value.</summary>
      <returns>The display format for the year value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.YearFormatProperty">
      <summary>Gets the identifier for the YearFormat dependency property.</summary>
      <returns>The identifier for the YearFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.YearVisible">
      <summary>Gets or sets a value that indicates whether the year selector is shown.</summary>
      <returns>**true** if the year selector is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePicker.YearVisibleProperty">
      <summary>Gets the identifier for the YearVisible dependency property.</summary>
      <returns>The identifier for the YearVisible dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.DatePicker.DateChanged">
      <summary>Occurs when the date value is changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.DatePicker.SelectedDateChanged">
      <summary>Occurs when the date value is changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickerFlyout">
      <summary>Represents a control that allows a user to pick a date.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickerFlyout.#ctor">
      <summary>Initializes a new instance of the DatePickerFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.CalendarIdentifier">
      <summary>Gets or sets the calendar system to use.</summary>
      <returns>The name of the calendar system to use. For a list of supported calendar systems, see CalendarIdentifiers.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.CalendarIdentifierProperty">
      <summary>Gets the identifier for the CalendarIdentifier dependency property.</summary>
      <returns>The identifier for the CalendarIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.Date">
      <summary>Gets or sets the date currently set in the date picker.</summary>
      <returns>The date currently set in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DateProperty">
      <summary>Gets the identifier for the Date dependency property.</summary>
      <returns>The identifier for the Date dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DayFormat">
      <summary>Gets or sets the display format for the day value.</summary>
      <returns>The display format for the day value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DayFormatProperty">
      <summary>Identifies the DayFormat dependency property.</summary>
      <returns>The identifier for the DayFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DayVisible">
      <summary>Gets or sets a value that indicates whether the day selector is shown.</summary>
      <returns>True if the day selector is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DayVisibleProperty">
      <summary>Gets the identifier for the DayVisible dependency property.</summary>
      <returns>The identifier for the DayVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MaxYear">
      <summary>Gets or sets the maximum Gregorian year available for picking.</summary>
      <returns>The maximum Gregorian year available for picking.S</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MaxYearProperty">
      <summary>Gets the identifier for the MaxYear dependency property.</summary>
      <returns>The identifier for the MaxYear dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MinYear">
      <summary>Gets or sets the minimum Gregorian year available for picking.</summary>
      <returns>The minimum Gregorian year available for picking.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MinYearProperty">
      <summary>Gets the identifier for the MinYear dependency property.</summary>
      <returns>The identifier for the MinYear dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MonthFormat">
      <summary>Gets or sets the display format for the month value.</summary>
      <returns>The display format for the month value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MonthFormatProperty">
      <summary>Identifies the MonthFormat dependency property.</summary>
      <returns>The identifier for the MonthFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MonthVisible">
      <summary>Gets or sets a value that indicates whether the month selector is shown.</summary>
      <returns>True if the month selector is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.MonthVisibleProperty">
      <summary>Gets the identifier for the MonthVisible dependency property.</summary>
      <returns>The identifier for the MonthVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.YearFormat">
      <summary>Gets or sets the display format for the year value.</summary>
      <returns>The display format for the year value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.YearFormatProperty">
      <summary>Identifies the YearFormat dependency property.</summary>
      <returns>The identifier for the YearFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.YearVisible">
      <summary>Gets or sets a value that indicates whether the year selector is shown.</summary>
      <returns>True if the year selector is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyout.YearVisibleProperty">
      <summary>Gets the identifier for the YearVisible dependency property.</summary>
      <returns>The identifier for the YearVisible dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.DatePickerFlyout.DatePicked">
      <summary>Occurs when a date has been picked by the user.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickerFlyout.ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Begins an asynchronous operation to show the date picker placed in relation to the specified element.</summary>
      <param name="target">The element to use as the flyout's placement target.</param>
      <returns>An asynchronous operation</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem">
      <summary>Represents the container for an item in the DatePickerFlyout control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.PrimaryText">
      <summary>Gets or sets the primary text of the item.</summary>
      <returns>The primary text of the item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.PrimaryTextProperty">
      <summary>Identifies the PrimaryText dependency property.</summary>
      <returns>The identifier for the PrimaryText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.SecondaryText">
      <summary>Gets or sets the secondary text of the item.</summary>
      <returns>The secondary text of the item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.SecondaryTextProperty">
      <summary>Identifies the SecondaryText dependency property.</summary>
      <returns>The identifier for the SecondaryText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.Type">
      <summary>Gets the type of the item.</summary>
      <returns>The type of the item, specified as a TypeName wrapper.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.GetCustomProperty(System.String)">
      <summary>Retrieves an ICustomProperty object by specifying a property name.</summary>
      <param name="name">The name of the property.</param>
      <returns>The custom property support object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.GetIndexedProperty(System.String,Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Retrieves a custom property's ICustomProperty support object by specifying a property name and the type of the indexed collection.</summary>
      <param name="name">The name of the custom property.</param>
      <param name="type">The type of the indexed collection, specified as a TypeName (for Visual C++ component extensions (C++/CX)) or System.Type (for C#/VB).</param>
      <returns>The returned support object for the custom property, or **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem.GetStringRepresentation">
      <summary>Provides support for "GetStringFromObject" and/or "ToString" logic on the assumption that the implementation supports System.Object. This logic might be accessed by features or services such as generating UI Automation values based on data content.</summary>
      <returns>The provided string.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickerFlyoutPresenter">
      <summary>Represents a control to allow a user to pick a date.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutPresenter.IsDefaultShadowEnabled">
      <summary>Gets or sets a value that indicates whether the default shadow effect is shown.</summary>
      <returns>**true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerFlyoutPresenter.IsDefaultShadowEnabledProperty">
      <summary>Identifies the IsDefaultShadowEnabled dependency property.</summary>
      <returns>The identifier for the IsDefaultShadowEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs">
      <summary>Provides event data for the DatePicker.SelectedDateChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs.NewDate">
      <summary>Gets the new date selected in the picker.</summary>
      <returns>The new date selected in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs.OldDate">
      <summary>Gets the date previously selected in the picker.</summary>
      <returns>The date previously selected in the picker.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs">
      <summary>Provides event data for the DatePicker.DateChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs.NewDate">
      <summary>Gets the new date selected in the picker.</summary>
      <returns>The new date selected in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs.OldDate">
      <summary>Gets the date previously selected in the picker.</summary>
      <returns>The date previously selected in the picker.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators">
      <summary>Defines constants that specify which keyboard shortcuts for formatting are disabled in a RichEditBox.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators.All">
      <summary>All keyboard shortcuts are disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators.Bold">
      <summary>The keyboard shortcut for bold (Ctrl+B) is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators.Italic">
      <summary>The keyboard shortcut for italic (Ctrl+I) is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators.None">
      <summary>No keyboard shortcuts are disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators.Underline">
      <summary>The keyboard shortcut for underline (Ctrl+U) is disabled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs">
      <summary>Provides event data for the DragItemsCompleted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs.DropResult">
      <summary>Gets a value that indicates what operation was performed on the dragged data, and whether it was successful.</summary>
      <returns>A value of the enumeration that indicates what operation was performed on the dragged data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs">
      <summary>Provides event data for the DragItemsStarting event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs.#ctor">
      <summary>Initializes a new instance of the DragItemsStartingEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the item drag action should be canceled.</summary>
      <returns>**True** to cancel the item drag action; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs.Data">
      <summary>Gets the data payload associated with an items drag action.</summary>
      <returns>The data payload.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler">
      <summary>Represents the method that will handle the DragItemsStarting event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DropDownButton">
      <summary>Represents a button with a chevron intended to open a menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DropDownButton.#ctor">
      <summary>Initializes a new instance of the DropDownButton class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer">
      <summary>Exposes DropDownButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.DropDownButton)">
      <summary>Initializes a new instance of the DropDownButtonAutomationPeer class.</summary>
      <param name="owner">The DropDownButton control instance to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer.Collapse">
      <summary>Hides the control's drop down menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer.Expand">
      <summary>Displays the control's drop down menu.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs">
      <summary>Provides data for the CommandBar.DynamicOverflowItemsChanging event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the DynamicOverflowItemsChangingEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs.Action">
      <summary>Gets a value that indicates whether items were added to or removed from the CommandBar overflow menu.</summary>
      <returns>A value that indicates whether items were added to or removed from the CommandBar overflow menu.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlipView">
      <summary>Represents an items control that displays one item at a time, and enables "flip" behavior for traversing its collection of items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlipView.#ctor">
      <summary>Initializes a new instance of the FlipView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlipView.UseTouchAnimationsForAllNavigation">
      <summary>Gets or sets a value that indicates whether transition animations are always used whether the navigation is touch-based, button-based or programmatic.</summary>
      <returns>**true** if transition animations are always used; **false** if transition animations are used only for touch navigation. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlipView.UseTouchAnimationsForAllNavigationProperty">
      <summary>Identifies the UseTouchAnimationsForAllNavigation dependency property.</summary>
      <returns>The identifier for the UseTouchAnimationsForAllNavigation dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlipViewItem">
      <summary>Represents the container for an item in a FlipView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlipViewItem.#ctor">
      <summary>Initializes a new instance of the FlipViewItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Flyout">
      <summary>Represents a control that displays lightweight UI that is either information, or requires user interaction. Unlike a dialog, a Flyout can be light dismissed by clicking or tapping outside of it, pressing the device’s back button, or pressing the ‘Esc’ key.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Flyout.#ctor">
      <summary>Initializes a new instance of the Flyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Flyout.Content">
      <summary>Gets or sets the content of the Flyout.</summary>
      <returns>The content of the Flyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Flyout.ContentProperty">
      <summary>Gets the identifier for the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Flyout.FlyoutPresenterStyle">
      <summary>Gets or sets the Style applied to the Flyout content.</summary>
      <returns>The applied Style for the Flyout content, if present; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Flyout.FlyoutPresenterStyleProperty">
      <summary>Gets the identifier for the FlyoutPresenterStyle dependency property.</summary>
      <returns>The identifier for the FlyoutPresenterStyle dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlyoutPresenter">
      <summary>Displays the content of a Flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlyoutPresenter.#ctor">
      <summary>Initializes a new instance of the FlyoutPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlyoutPresenter.IsDefaultShadowEnabled">
      <summary>Gets or sets a value that indicates whether the default shadow effect is shown.</summary>
      <returns>**true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlyoutPresenter.IsDefaultShadowEnabledProperty">
      <summary>Identifies the IsDefaultShadowEnabled dependency property.</summary>
      <returns>The identifier for the IsDefaultShadowEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs">
      <summary>Provides data for the FocusDisengaged event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs">
      <summary>Provides data for the FocusEngaged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FontIcon">
      <summary>Represents an icon that uses a glyph from the specified font.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FontIcon.#ctor">
      <summary>Initializes a new instance of the FontIcon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontFamily">
      <summary>Gets or sets the font used to display the icon glyph.</summary>
      <returns>The font used to display the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontFamilyProperty">
      <summary>Gets the identifier for the FontFamily dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontSize">
      <summary>Gets or sets the size of the icon glyph.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontSizeProperty">
      <summary>Gets the identifier for the FontSize dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontStyle">
      <summary>Gets or sets the font style for the icon glyph.</summary>
      <returns>A named constant of the enumeration that specifies the style in which the icon glyph is rendered. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontStyleProperty">
      <summary>Gets the identifier for the FontStyle dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontWeight">
      <summary>Gets or sets the thickness of the icon glyph.</summary>
      <returns>A value that specifies the thickness of the icon glyph. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.FontWeightProperty">
      <summary>Gets the identifier for the FontWeight dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.Glyph">
      <summary>Gets or sets the character code that identifies the icon glyph.</summary>
      <returns>The hexadecimal character code for the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.GlyphProperty">
      <summary>Gets the identifier for the Glyph dependency property.</summary>
      <returns>The identifier for the Glyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.MirroredWhenRightToLeft">
      <summary>Gets or sets a value that indicates whether the icon is mirrored when the FlowDirection is **RightToLeft**.</summary>
      <returns>**true** if the icon is mirrored when the FlowDirection is FlowDirection.RightToLeft; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIcon.MirroredWhenRightToLeftProperty">
      <summary>Identifies the MirroredWhenRightToLeft dependency property.</summary>
      <returns>The identifier for the MirroredWhenRightToLeft dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FontIconSource">
      <summary>Represents an icon source that uses a glyph from the specified font.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FontIconSource.#ctor">
      <summary>Initializes a new instance of the FontIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontFamily">
      <summary>Gets or sets the font used to display the icon glyph.</summary>
      <returns>The font used to display the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontFamilyProperty">
      <summary>Gets the identifier for the FontFamily dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontSize">
      <summary>Gets or sets the size of the icon glyph.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontSizeProperty">
      <summary>Gets the identifier for the FontSize dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontStyle">
      <summary>Gets or sets the font style for the icon glyph.</summary>
      <returns>A named constant of the enumeration that specifies the style in which the icon glyph is rendered. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontStyleProperty">
      <summary>Gets the identifier for the FontStyle dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontWeight">
      <summary>Gets or sets the thickness of the icon glyph.</summary>
      <returns>A value that specifies the thickness of the icon glyph. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontWeightProperty">
      <summary>Gets the identifier for the FontWeight dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.Glyph">
      <summary>Gets or sets the character code that identifies the icon glyph.</summary>
      <returns>The hexadecimal character code for the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.GlyphProperty">
      <summary>Gets the identifier for the Glyph dependency property.</summary>
      <returns>The identifier for the Glyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabled">
      <summary>Gets or sets a value that indicates whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabledProperty">
      <summary>Gets the identifier for the IsTextScaleFactorEnabled dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeft">
      <summary>Gets or sets a value that indicates whether the icon is mirrored when its containing element's FlowDirection is **RightToLeft**.</summary>
      <returns>**true** if the icon is mirrored when the FlowDirection is FlowDirection.RightToLeft; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeftProperty">
      <summary>Gets the identifier for the MirroredWhenRightToLeft dependency property.</summary>
      <returns>The identifier for the MirroredWhenRightToLeft dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Frame">
      <summary>Displays Page instances, supports navigation to new pages, and maintains a navigation history to support forward and backward navigation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.#ctor">
      <summary>Initializes a new instance of the Frame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.BackStack">
      <summary>Gets a collection of PageStackEntry instances representing the backward navigation history of the Frame.</summary>
      <returns>The backward navigation stack.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.BackStackDepth">
      <summary>Gets the number of entries in the navigation back stack.</summary>
      <returns>The number of entries in the navigation back stack.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.BackStackDepthProperty">
      <summary>Identifies the BackStackDepth dependency property.</summary>
      <returns>The identifier for the BackStackDepth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.BackStackProperty">
      <summary>Identifies the BackStack dependency property.</summary>
      <returns>The identifier for the BackStack dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CacheSize">
      <summary>Gets or sets the number of pages in the navigation history that can be cached for the frame.</summary>
      <returns>The number of pages that can be in the navigation history.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CacheSizeProperty">
      <summary>Identifies the CacheSize dependency property.</summary>
      <returns>The identifier for the CacheSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
      <returns>**true** if there is at least one entry in back navigation history; **false** if there are no entries in back navigation history or the Frame does not own its own navigation history.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CanGoBackProperty">
      <summary>Identifies the CanGoBack dependency property.</summary>
      <returns>The identifier for the CanGoBack dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
      <returns>**true** if there is at least one entry in forward navigation history; **false** if there are no entries in forward navigation history or the Frame does not own its own navigation history.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CanGoForwardProperty">
      <summary>Identifies the CanGoForward dependency property.</summary>
      <returns>The identifier for the CanGoForward dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageType">
      <summary>Gets a type reference for the content that is currently displayed.</summary>
      <returns>A type reference for the content that is currently displayed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageTypeProperty">
      <summary>Identifies the CurrentSourcePageType dependency property.</summary>
      <returns>The identifier for the CurrentSourcePageType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.ForwardStack">
      <summary>Gets a collection of PageStackEntry instances representing the forward navigation history of the Frame.</summary>
      <returns>The forward navigation stack.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.ForwardStackProperty">
      <summary>Identifies the ForwardStack dependency property.</summary>
      <returns>The identifier for the ForwardStack dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabled">
      <summary>Gets or sets a value that indicates whether navigation is recorded in the Frame's ForwardStack or BackStack.</summary>
      <returns>**true** if navigation is recorded in the Frame's ForwardStack or BackStack; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabledProperty">
      <summary>Identifies the IsNavigationStackEnabled dependency property.</summary>
      <returns>The identifier for the IsNavigationStackEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.SourcePageType">
      <summary>Gets or sets a type reference of the current content, or the content that should be navigated to.</summary>
      <returns>A type reference for the current content, or the content to navigate to.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Frame.SourcePageTypeProperty">
      <summary>Identifies the SourcePageType dependency property.</summary>
      <returns>The identifier for the SourcePageType dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Frame.Navigated">
      <summary>Occurs when the content that is being navigated to has been found and is available from the Content property, although it may not have completed loading.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Frame.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Frame.NavigationFailed">
      <summary>Occurs when an error is raised while navigating to the requested content.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Frame.NavigationStopped">
      <summary>Occurs when </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.GetNavigationState">
      <summary>Serializes the Frame navigation history into a string.</summary>
      <returns>The string-form serialized navigation history. See Remarks.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.GoBack">
      <summary>Navigates to the most recent item in back navigation history, if a Frame manages its own navigation history.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.GoBack(Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
      <summary>Navigates to the most recent item in back navigation history, if a Frame manages its own navigation history, and specifies the animated transition to use.</summary>
      <param name="transitionInfoOverride">Info about the animated transition to use.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.GoForward">
      <summary>Navigates to the most recent item in forward navigation history, if a Frame manages its own navigation history.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.Navigate(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Causes the Frame to load content represented by the specified Page.</summary>
      <param name="sourcePageType">The page to navigate to, specified as a type reference to its partial class type. (A type reference is given as System.Type for Microsoft .NET, or a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <returns>**false** if a NavigationFailed event handler has set Handled to **true**; otherwise, **true**. See Remarks for more info.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.Navigate(Microsoft.UI.Xaml.Interop.TypeName,System.Object)">
      <summary>Causes the Frame to load content represented by the specified Page, also passing a parameter to be interpreted by the target of the navigation.</summary>
      <param name="sourcePageType">The page to navigate to, specified as a type reference to its partial class type. (A type reference is given as System.Type for Microsoft .NET, or a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">The navigation parameter to pass to the target page; must have a basic type (string, char, numeric, or GUID) to support parameter serialization using GetNavigationState.</param>
      <returns>**false** if a NavigationFailed event handler has set Handled to **true**; otherwise, **true**. See Remarks for more info.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.Navigate(Microsoft.UI.Xaml.Interop.TypeName,System.Object,Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
      <summary>Causes the Frame to load content represented by the specified Page -derived data type, also passing a parameter to be interpreted by the target of the navigation, and a value indicating the animated transition to use.</summary>
      <param name="sourcePageType">The page to navigate to, specified as a type reference to its partial class type. (A type reference is given as System.Type for Microsoft .NET, or a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">The navigation parameter to pass to the target page; must have a basic type (string, char, numeric, or GUID) to support parameter serialization using GetNavigationState.</param>
      <param name="infoOverride">Info about the animated transition.</param>
      <returns>**false** if a NavigationFailed event handler has set Handled to **true**; otherwise, **true**. See Remarks for more info.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.NavigateToType(Microsoft.UI.Xaml.Interop.TypeName,System.Object,Microsoft.UI.Xaml.Navigation.FrameNavigationOptions)">
      <summary>Causes the Frame to load content represented by the specified Page, also passing a parameter to be interpreted by the target of the navigation.</summary>
      <param name="sourcePageType">The page to navigate to, specified as a type reference to its partial class type. (A type reference is given as System.Type for Microsoft .NET, or a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">The navigation parameter to pass to the target page; must have a basic type (string, char, numeric, or GUID) to support parameter serialization using GetNavigationState.</param>
      <param name="navigationOptions">Options for the navigation, including whether it is recorded in the navigation stack and what transition animation is used.</param>
      <returns>**false** if a NavigationFailed event handler has set Handled to **true**; otherwise, **true**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.SetNavigationState(System.String)">
      <summary>Reads and restores the navigation history of a Frame from a provided serialization string.</summary>
      <param name="navigationState">The serialization string that supplies the restore point for navigation history.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Frame.SetNavigationState(System.String,System.Boolean)">
      <summary>Reads and restores the navigation history of a Frame from a provided serialization string.</summary>
      <param name="navigationState">The serialization string that supplies the restore point for navigation history.</param>
      <param name="suppressNavigate">**true** to restore navigation history without navigating to the current page; otherwise, **false**.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Grid">
      <summary>Defines a flexible grid area that consists of columns and rows. Child elements of the Grid are measured and arranged according to their row/column assignments (set by using Grid.Row and Grid.Column attached properties) and other logic.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.#ctor">
      <summary>Initializes a new instance of the Grid class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BorderBrush">
      <summary>Gets or sets a brush that describes the border fill of the panel.</summary>
      <returns>The brush that is used to fill the panel's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BorderThickness">
      <summary>Gets or sets the border thickness of the panel.</summary>
      <returns>The border thickness of the panel, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions">
      <summary>Gets a list of ColumnDefinition objects defined on this instance of Grid.</summary>
      <returns>A list of ColumnDefinition objects defined on this instance of Grid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.ColumnProperty">
      <summary>Identifies the Grid.Column XAML attached property.</summary>
      <returns>The identifier for the Grid.Column XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.ColumnSpacing">
      <summary>Gets or sets the uniform distance (in pixels) between grid columns.</summary>
      <returns>The uniform distance (in pixels) between grid columns.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.ColumnSpacingProperty">
      <summary>Identifies the ColumnSpacing dependency property.</summary>
      <returns>The identifier for the ColumnSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.ColumnSpanProperty">
      <summary>Identifies the Grid.ColumnSpan XAML attached property.</summary>
      <returns>The identifier for the Grid.ColumnSpan XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.CornerRadius">
      <summary>Gets or sets the radius for the corners of the panel's border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.RowDefinitions">
      <summary>Gets a list of RowDefinition objects defined on this instance of Grid.</summary>
      <returns>A list of RowDefinition objects defined on this instance of Grid.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.RowProperty">
      <summary>Identifies the Grid.Row XAML attached property.</summary>
      <returns>The identifier for the Grid.Row XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.RowSpacing">
      <summary>Gets or sets the uniform distance (in pixels) between grid rows.</summary>
      <returns>The uniform distance (in pixels) between grid rows.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.RowSpacingProperty">
      <summary>Identifies the RowSpacing dependency property.</summary>
      <returns>The identifier for the RowSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Grid.RowSpanProperty">
      <summary>Identifies the Grid.RowSpan XAML attached property.</summary>
      <returns>The identifier for the Grid.RowSpan XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.GetColumn(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the Grid.Column XAML attached property from the specified FrameworkElement.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the Grid.Column XAML attached property on the target element. This is a zero-based index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.GetColumnSpan(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the Grid.ColumnSpan XAML attached property from the specified FrameworkElement.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the Grid.ColumnSpan XAML attached property on the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.GetRow(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the Grid.Row XAML attached property from the specified FrameworkElement.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the Grid.Row XAML attached property on the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.GetRowSpan(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the value of the Grid.RowSpan XAML attached property from the specified FrameworkElement.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the Grid.RowSpan XAML attached property on the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.SetColumn(Microsoft.UI.Xaml.FrameworkElement,System.Int32)">
      <summary>Sets the value of the Grid.Column XAML attached property on the specified FrameworkElement.</summary>
      <param name="element">The target element on which to set the Grid.Column XAML attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.SetColumnSpan(Microsoft.UI.Xaml.FrameworkElement,System.Int32)">
      <summary>Sets the value of the Grid.ColumnSpan XAML attached property on the specified FrameworkElement.</summary>
      <param name="element">The element on which to set the Grid.ColumnSpan XAML attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.SetRow(Microsoft.UI.Xaml.FrameworkElement,System.Int32)">
      <summary>Sets the value of the Grid.Row XAML attached property on the specified FrameworkElement.</summary>
      <param name="element">The target element on which to set the Grid.Row XAML attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Grid.SetRowSpan(Microsoft.UI.Xaml.FrameworkElement,System.Int32)">
      <summary>Sets the value of the Grid.RowSpan XAML attached property on the specified FrameworkElement.</summary>
      <param name="element">The target element on which to set the Grid.RowSpan XAML attached property.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GridView">
      <summary>Represents a control that displays data items in rows and columns.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GridView.#ctor">
      <summary>Initializes a new instance of the GridView class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GridViewHeaderItem">
      <summary>Represents items in the header for grouped data inside a GridView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GridViewHeaderItem.#ctor">
      <summary>Initializes a new instance of the GridViewHeaderItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GridViewItem">
      <summary>Represents the container for an item in a GridView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GridViewItem.#ctor">
      <summary>Initializes a new instance of the GridViewItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GridViewItem.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a GridViewItem.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GroupItem">
      <summary>Represents the root element for a subtree that is created for a group.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GroupItem.#ctor">
      <summary>Initializes a new instance of the GroupItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GroupStyle">
      <summary>Describes how to display the grouped items in a collection, such as the collection from GroupItems.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GroupStyle.#ctor">
      <summary>Initializes a new instance of the GroupStyle class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyle">
      <summary>Gets or sets the style that is applied to the GroupItem generated for each item.</summary>
      <returns>The style that is applied to the GroupItem generated for each item. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector referenced by this property returns a style to apply to each generated GroupItem.</summary>
      <returns>An object that derives from StyleSelector. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.HeaderContainerStyle">
      <summary>Gets or sets the style that is applied to the header for each item.</summary>
      <returns>The style that is applied to the header for each item. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the group header.</summary>
      <returns>A DataTemplate object that is used to display the group header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector returns different DataTemplate values to use for the header area of group item content.</summary>
      <returns>An object that derives from DataTemplateSelector. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.HidesIfEmpty">
      <summary>Gets or sets a value that indicates whether items corresponding to empty groups should be displayed.</summary>
      <returns>**True** to not display empty groups; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.GroupStyle.Panel">
      <summary>Gets or sets a template that creates the panel used to lay out the items.</summary>
      <returns>An ItemsPanelTemplate object that creates the panel used to layout the items.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.GroupStyle.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.GroupStyleSelector">
      <summary>Enables custom group style selection logic as a function of the parent group and its level.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GroupStyleSelector.#ctor">
      <summary>Initializes a new instance of the GroupStyleSelector class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GroupStyleSelector.SelectGroupStyle(System.Object,System.UInt32)">
      <summary>Returns a specific GroupStyle for a given group and level.</summary>
      <param name="group">The group to return a GroupStyle for.</param>
      <param name="level">The level of nesting for the specified group.</param>
      <returns>TheGroupStyle to use when this GroupStyleSelector is invoked in an application.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.GroupStyleSelector.SelectGroupStyleCore(System.Object,System.UInt32)">
      <summary>When implemented by a derived class, returns a specific GroupStyle for a given group and level.</summary>
      <param name="group">The group to return a GroupStyle for.</param>
      <param name="level">The level of nesting for the specified group.</param>
      <returns>The GroupStyle to use for the specified group and level.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HandwritingPanelClosedEventArgs">
      <summary>Provides event data for the HandwritingView.Closed event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HandwritingPanelOpenedEventArgs">
      <summary>Provides event data for the HandwritingView.Opened event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment">
      <summary>Defines constants that specify where the handwriting view panel is anchored to the control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.Auto">
      <summary>The system determines the best place to anchor the handwriting view panel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.BottomLeft">
      <summary>The handwriting view panel is anchored to the bottom left corner of the control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.BottomRight">
      <summary>The handwriting view panel is anchored to the bottom right corner of the control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.TopLeft">
      <summary>The handwriting view panel is anchored to the top left corner of the control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.TopRight">
      <summary>The handwriting view panel is anchored to the top right corner of the control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HandwritingView">
      <summary>Represents a Windows Ink input surface for text input controls.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HandwritingView.#ctor">
      <summary>Initializes a new instance of the HandwritingView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.AreCandidatesEnabled">
      <summary>Gets or sets a value that specifies whether auto-completion candidates are shown as the use writes.</summary>
      <returns>**true** if auto-completion candidates are shown as the use writes; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.AreCandidatesEnabledProperty">
      <summary>Identifies the AreCandidatesEnabled dependency property.</summary>
      <returns>The identifier for the AreCandidatesEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.IsOpen">
      <summary>Gets a value that indicates whether the handwriting view panel is open.</summary>
      <returns>**true** if the handwriting view panel is open; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
      <returns>The identifier for the IsOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.PlacementAlignment">
      <summary>Gets or sets a value that specifies the anchor point used to place the handwriting view over the control.</summary>
      <returns>An enunmeration value that specifies the anchor point used to place the handwriting view. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.PlacementAlignmentProperty">
      <summary>Identifies the PlacementAlignment dependency property.</summary>
      <returns>The identifier for the PlacementAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.PlacementTarget">
      <summary>Gets or sets the visual element or control that the handwriting view should be positioned in relation to when opened.</summary>
      <returns>The visual element or control that the handwriting view should be positioned in relation to when opened. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HandwritingView.PlacementTargetProperty">
      <summary>Identifies the PlacementTarget dependency property.</summary>
      <returns>The identifier for the PlacementTarget dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.HandwritingView.Closed">
      <summary>Occurs when the handwriting view panel is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.HandwritingView.Opened">
      <summary>Occurs when the handwriting view panel is opened.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HandwritingView.TryClose">
      <summary>Attempts to close the handwriting view panel.</summary>
      <returns>**true** if the handwriting view panel closed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HandwritingView.TryOpen">
      <summary>Attempts to open the handwriting view panel.</summary>
      <returns>**true** if the handwriting view panel opened; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Hub">
      <summary>**For Windows 10 and later: We recommend against using this control; use one of the other navigation controls instead. For a list, see the Navigation basics article.** Represents a control that displays groups of content in a panning view.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.#ctor">
      <summary>Initializes a new instance of the Hub class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.DefaultSectionIndex">
      <summary>Gets or sets the index of the hub section to show first when the Hub is initialized.</summary>
      <returns>The index of the hub section to show first when the Hub is initialized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.DefaultSectionIndexProperty">
      <summary>Identifies the DefaultSectionIndex dependency property.</summary>
      <returns>The identifier for the DefaultSectionIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.Header">
      <summary>Gets or sets the content for the hub header.</summary>
      <returns>The content of the hub header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the hub header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.IsActiveView">
      <summary>Gets or sets a value that indicates whether the Hub instance is the active view in its owning SemanticZoom.</summary>
      <returns>**true** if the Hub is the active view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.IsActiveViewProperty">
      <summary>Identifies the IsActiveView dependency property.</summary>
      <returns>The identifier for the IsActiveView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.IsZoomedInView">
      <summary>Gets or sets a value that indicates whether the Hub instance is the zoomed-in view in its owning SemanticZoom.</summary>
      <returns>**true** if the Hub is the zoomed-in view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.IsZoomedInViewProperty">
      <summary>Identifies the IsZoomedInView dependency property.</summary>
      <returns>The identifier for the IsZoomedInView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.Orientation">
      <summary>Gets or sets the orientation of a Hub.</summary>
      <returns>One of the Orientation values. The default is **Horizontal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.SectionHeaders">
      <summary>Gets a collection of the headers of the hub sections.</summary>
      <returns>The headers of the hub sections. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.Sections">
      <summary>Gets all the hub sections in the Hub.</summary>
      <returns>All the hub sections in the Hub. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.SectionsInView">
      <summary>Gets the hub sections currently on the screen.</summary>
      <returns>The hub sections currently on the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.SemanticZoomOwner">
      <summary>Gets or sets the SemanticZoom instance that hosts the Hub.</summary>
      <returns>The SemanticZoom instance that hosts this Hub, or **null** if the Hub is not hosted in a SemanticZoom control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Hub.SemanticZoomOwnerProperty">
      <summary>Identifies the SemanticZoomOwner dependency property.</summary>
      <returns>The identifier for the SemanticZoomOwner dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Hub.SectionHeaderClick">
      <summary>Occurs when a section header is clicked and the section's IsHeaderInteractive property is **true**.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Hub.SectionsInViewChanged">
      <summary>Occurs when the SectionsInView collection changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.CompleteViewChange">
      <summary>Changes related aspects of presentation when the overall view for a SemanticZoom changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.CompleteViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations that are related to a view change when the Hub instance is the source view and the new view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.CompleteViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations that are related to a view change when the Hub instance is the destination view and the source view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.InitializeViewChange">
      <summary>Initializes the changes to related aspects of presentation (such as scrolling UI or state) when the overall view for a SemanticZoom is about to change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.MakeVisible(Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Forces content in the view to scroll until the item that's specified by SemanticZoomLocation is visible. Also focuses the item if it finds the item.</summary>
      <param name="item">The item in the view to scroll to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.ScrollToSection(Microsoft.UI.Xaml.Controls.HubSection)">
      <summary>Scrolls the hub to bring the specified hub section into view.</summary>
      <param name="section">The hub section to bring into view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.StartViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations that are related to a view change when the Hub instance is the source view and the pending destination view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Hub.StartViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations that are related to a view change when the source view is a different view and the pending destination view is the Hub instance.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HubSection">
      <summary>Represents a single group of content in a Hub.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSection.#ctor">
      <summary>Initializes a new instance of the HubSection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.ContentTemplate">
      <summary>Gets or sets the data template that is used to display the content of the HubSection.</summary>
      <returns>The data template that is used to display the content of the HubSection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
      <returns>The identifier for the ContentTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.Header">
      <summary>Gets or sets the content for the hub section header.</summary>
      <returns>The content of the section header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the hub section header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.IsHeaderInteractive">
      <summary>Gets or sets a value that indicates whether the section header raises a SectionHeaderClick event on its containing Hub.</summary>
      <returns>**true** if the section header raises a SectionHeaderClick event; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSection.IsHeaderInteractiveProperty">
      <summary>Identifies the IsHeaderInteractive dependency property.</summary>
      <returns>The identifier for the IsHeaderInteractive dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HubSectionCollection">
      <summary>Represents an ordered collection of HubSection objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSectionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.Append(Microsoft.UI.Xaml.Controls.HubSection)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The item value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.HubSection[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.IndexOf(Microsoft.UI.Xaml.Controls.HubSection,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item, if it is found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.HubSection)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.ReplaceAll(Microsoft.UI.Xaml.Controls.HubSection[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.HubSection)">
      <summary>Sets the value at the specified index to the item value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs">
      <summary>Provides data for the Hub.SectionHeaderClick event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs.#ctor">
      <summary>Initializes a new instance of the HubSectionHeaderClickEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs.Section">
      <summary>Gets the HubSection for the header that was clicked.</summary>
      <returns>The HubSection for the header that was clicked.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler">
      <summary>Represents the method that will handle a Hub.SectionHeaderClick event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.HyperlinkButton">
      <summary>Represents a button control that functions as a hyperlink.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.HyperlinkButton.#ctor">
      <summary>Initializes a new instance of the HyperlinkButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HyperlinkButton.NavigateUri">
      <summary>Gets or sets the Uniform Resource Identifier (URI) to navigate to when the HyperlinkButton is clicked.</summary>
      <returns>The Uniform Resource Identifier (URI) to navigate to when the HyperlinkButton is clicked.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.HyperlinkButton.NavigateUriProperty">
      <summary>Identifies the NavigateUri dependency property.</summary>
      <returns>The identifier for the NavigateUri dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ICommandBarElement">
      <summary>Defines the compact view for command bar elements.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ICommandBarElement.IsCompact">
      <summary>Gets or sets a value that indicates whether the element is shown with no label and reduced padding.</summary>
      <returns>**true** if the element is shown in its compact state; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ICommandBarElement2">
      <summary>Defines members to manage the command bar overflow menu.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ICommandBarElement2.DynamicOverflowOrder">
      <summary>Gets or sets the order in which this item is moved to the CommandBar overflow menu.</summary>
      <returns>The order in which this item is moved to the overflow menu relative to other items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ICommandBarElement2.IsInOverflow">
      <summary>Gets a value that indicates whether this item is in the overflow menu.</summary>
      <returns>**true** if this item is in the overflow menu; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IconElement">
      <summary>Represents the base class for an icon UI element.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconElement.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default is **null**, (a null brush) which is evaluated as Transparent for rendering. However, this value is typically set by a default system resource at runtime, which is tied to the active theme and other settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconElement.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IconSource">
      <summary>Represents the base class for an icon source.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSource.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default is **null**, (a null brush) which is evaluated as Transparent for rendering. However, this value is typically set by a default system resource at runtime, which is tied to the active theme and other settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSource.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IconSourceElement">
      <summary>Represents an icon that uses an IconSource as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IconSourceElement.#ctor">
      <summary>Initializes a new instance of the IconSourceElement class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource">
      <summary>Gets or sets the IconSource used as the icon content.</summary>
      <returns>The IconSource used as the icon content. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSourceElement.IconSourceProperty">
      <summary>Identifies the IconSource dependency property.</summary>
      <returns>The identifier for the IconSource dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IInsertionPanel">
      <summary>Provides methods to let an item be inserted between other items in a drag-and-drop operation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IInsertionPanel.GetInsertionIndexes(Windows.Foundation.Point,System.Int32@,System.Int32@)">
      <summary>Returns the index values of the items that the specified point is between.</summary>
      <param name="position">The point for which to get insertion indexes.</param>
      <param name="first">The index of the item before the specified point.</param>
      <param name="second">The index of the item after the specified point.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IItemContainerMapping">
      <summary>Provides methods that let an ItemsControl map data items to UI containers.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IItemContainerMapping.ContainerFromIndex(System.Int32)">
      <summary>Returns the container for the item at the specified index within the ItemCollection.</summary>
      <param name="index">The index of the item to retrieve.</param>
      <returns>The container for the item at the specified index within the item collection, if the item has a container; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IItemContainerMapping.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <param name="item">The item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IItemContainerMapping.IndexFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the index to the item that has the specified, generated container.</summary>
      <param name="container">The generated container to retrieve the item index for.</param>
      <returns>The index to the item that corresponds to the specified generated container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IItemContainerMapping.ItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Image">
      <summary>Represents a control that displays an image. The image source is specified by referring to an image file, using several supported formats. The image source can also be set with a stream. See Remarks for the list of supported image source formats.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Image.#ctor">
      <summary>Initializes a new instance of the Image class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.NineGrid">
      <summary>Gets or sets a value for a nine-grid metaphor that controls how the image can be resized. The nine-grid metaphor enables you to stretch edges and corners of an image differently than its center. See Remarks for more info and an illustration.</summary>
      <returns>A Thickness value that sets the **Left**, **Top**, **Right**, **Bottom** measurements for the nine-grid resizing metaphor.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.NineGridProperty">
      <summary>Identifies the NineGrid dependency property.</summary>
      <returns>The identifier for the NineGrid dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.PlayToSource">
      <summary>Gets the information that is transmitted if the Image is used for a Play To scenario.</summary>
      <returns>A reference object that carries the Play To source information.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.PlayToSourceProperty">
      <summary>Identifies the PlayToSource dependency property.</summary>
      <returns>The identifier for the PlayToSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.Source">
      <summary>Gets or sets the source for the image.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.SourceProperty">
      <summary>Identifies the Source  dependency property.</summary>
      <returns>The identifier for the Source  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.Stretch">
      <summary>Gets or sets a value that describes how an Image should be stretched to fill the destination rectangle.</summary>
      <returns>A value of the Stretch enumeration that specifies how the source image is rendered, if the Height and/or Width of the Image are not explicitly specified. The default value is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Image.StretchProperty">
      <summary>Identifies the Stretch  dependency property.</summary>
      <returns>The identifier for the Stretch  dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Image.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Image.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the natural size of the image source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Image.GetAlphaMask">
      <summary>Returns a mask that represents the alpha channel of an image as a CompositionBrush.</summary>
      <returns>A mask that represents the alpha channel of an image.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Image.GetAsCastingSource">
      <summary>Returns the image as a CastingSource.</summary>
      <returns>The image as a CastingSource.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.INavigate">
      <summary>Defines the navigation action for navigation hosts and navigation initiators.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.INavigate.Navigate(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Causes the navigation host to load content that is specified by a type reference.</summary>
      <param name="sourcePageType">A type reference for the content to load.</param>
      <returns>**true** if the navigation host can navigate according to its settings; otherwise, **false**. </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger">
      <summary>Defines constants that specify list view incremental loading behavior (IncrementalLoadingTrigger property).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger.Edge">
      <summary>Uses an "edge" offset for incremental loading visual behavior, and enables the list view to notify the scroll host of incremental load per interaction with other settings (IncrementalLoadingThreshold, DataFetchSize ).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger.None">
      <summary>Incremental loading does not occur.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkCanvas">
      <summary>Defines an area that receives and displays all pen input as either an ink stroke or an erase stroke (input from an eraser tip, or the pen tip when modified with an erase button).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkCanvas.#ctor">
      <summary>Initializes a new instance of the InkCanvas class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkCanvas.InkPresenter">
      <summary>Gets the underlying InkPresenter object associated with the InkCanvas.</summary>
      <returns>The underlying InkPresenter object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbar">
      <summary>Represents a Universal Windows app control containing a customizable and extensible collection of buttons that activate ink-related features in an associated InkCanvas.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbar.#ctor">
      <summary>Initializes a new instance of the InkToolbar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.ActiveTool">
      <summary>Gets or sets the currently selected feature in the "tools" group of the InkToolbar (see remarks).</summary>
      <returns>The currently selected feature. By default, this is the first button on the InkToolbar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.ActiveToolProperty">
      <summary>Identifies the ActiveTool dependency property.</summary>
      <returns>The identifier for the ActiveTool dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.ButtonFlyoutPlacement">
      <summary>Gets or sets the location of ink stroke configuration flyout relative to the InkToolbar.</summary>
      <returns>The location of the flyout relative to the ink toolbar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.ButtonFlyoutPlacementProperty">
      <summary>Identifies the ButtonFlyoutPlacement dependency property.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.Children">
      <summary>Gets the collection of custom buttons displayed on the InkToolbar.</summary>
      <returns>A collection of InkToolbar custom buttons.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.ChildrenProperty">
      <summary>Identifies the Children dependency property.</summary>
      <returns>The identifier for the Children dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.InitialControls">
      <summary>Gets or sets the collection of built-in buttons added to the InkToolbar at initialization.</summary>
      <returns>The collection of built-in buttons to add to the InkToolbar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.InitialControlsProperty">
      <summary>Identifies the InitialControls dependency property.</summary>
      <returns>The identifier for the InitialControls dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.InkDrawingAttributes">
      <summary>Gets the InkStroke properties specified through the InkToolbar.</summary>
      <returns>The InkStroke properties.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.InkDrawingAttributesProperty">
      <summary>Identifies the InkDrawingAttributes dependency property.</summary>
      <returns>The identifier for the InkDrawingAttributes dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.IsRulerButtonChecked">
      <summary>Gets or sets the state of the InkToolbarRulerButton (and associated tool) to on or off.</summary>
      <returns>**true** if the ruler button is selected and the ruler is active; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.IsRulerButtonCheckedProperty">
      <summary>Identifies the IsRulerButtonChecked dependency property.</summary>
      <returns>The identifier for the IsRulerButtonChecked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.IsStencilButtonChecked">
      <summary>Gets or sets the state of the InkToolbarStencilButton (and associated tool) to on or off.</summary>
      <returns>**true** if the stencil button is selected and the stencil is active; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.IsStencilButtonCheckedProperty">
      <summary>Identifies the IsStencilButtonChecked dependency property.</summary>
      <returns>The identifier for the IsStencilButtonChecked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.Orientation">
      <summary>Gets or sets the orientation of the InkToolbar.</summary>
      <returns>The different orientations that ink toolbar can have.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.OrientationProperty">
      <summary>Identifies the InkToolbar.Orientation dependency property.</summary>
      <returns>The identifier for the InkToolbar.Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.TargetInkCanvas">
      <summary>Gets or sets the InkCanvas control associated with the InkToolbar.</summary>
      <returns>The InkCanvas control to associate with the InkToolbar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.TargetInkCanvasProperty">
      <summary>Identifies the TargetInkCanvas dependency property.</summary>
      <returns>The identifier for the TargetInkCanvas dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.TargetInkPresenter">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbar.TargetInkPresenterProperty">
      <summary>Identifies the TargetInkPresenter dependency property.</summary>
      <returns>The identifier for the TargetInkPresenter dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbar.ActiveToolChanged">
      <summary>Occurs when the currently selected feature in the RadioButton group of the InkToolbar is changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbar.EraseAllClicked">
      <summary>Occurs when "Erase All  Ink" is selected from the flyout for the InkToolbarEraserButton on the InkToolbar.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbar.InkDrawingAttributesChanged">
      <summary>Occurs when any InkDrawingAttributes are changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbar.IsRulerButtonCheckedChanged">
      <summary>Occurs when the toggled state of the InkToolbarRulerButton changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbar.IsStencilButtonCheckedChanged">
      <summary>Occurs when the toggled state of the InkToolbaStencilButton changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbar.GetMenuButton(Microsoft.UI.Xaml.Controls.InkToolbarMenuKind)">
      <summary>Retrieves a reference to an InkToolbarMenuButton object from the menu button group of the InkToolbar.</summary>
      <param name="menu">Indicates the type of InkToolbarMenuButton to retrieve.</param>
      <returns>The InkToolbarMenuButton specified.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbar.GetToggleButton(Microsoft.UI.Xaml.Controls.InkToolbarToggle)">
      <summary>Retrieves a reference to an InkToolbarToggleButton object from the toggle button group of the InkToolbar.</summary>
      <param name="tool">Indicates the type of InkToolbarToggleButton to retrieve.</param>
      <returns>The InkToolbarToggleButton specified.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbar.GetToolButton(Microsoft.UI.Xaml.Controls.InkToolbarTool)">
      <summary>Retrieves a reference to one of the following objects from the radio button group of the InkToolbar.</summary>
      <param name="tool">Indicates the type of InkToolbarToolButton to retrieve.</param>
      <returns>The InkToolbarToolButton specified, or **null** if the button has not been added to the InkToolbar.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarBallpointPenButton">
      <summary>Represents an InkToolbar button that activates the built-in ballpoint pen.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarBallpointPenButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarBallpointPenButton class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement">
      <summary>Specifies the location of the ink stroke configuration flyout relative to the InkToolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Auto">
      <summary>The system determines which edge of the ink toolbar to align the flyout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Bottom">
      <summary>Flyout is aligned to the bottom edge of the ink toolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Left">
      <summary>Flyout is aligned to the left edge of the ink toolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Right">
      <summary>Flyout is aligned to the right edge of the ink toolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Top">
      <summary>Flyout is aligned to the top edge of the ink toolbar.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarCustomPen">
      <summary>Represents an InkToolbar pen for which the ink color palette and pen tip properties, such as shape, rotation, and size, are defined by the host app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomPen.#ctor">
      <summary>Initializes a new instance of the InkToolbarCustomPen class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomPen.CreateInkDrawingAttributes(Microsoft.UI.Xaml.Media.Brush,System.Double)">
      <summary>Retrieves the InkToolbarCustomPen attributes used for an InkToolbarPenConfigurationControl.</summary>
      <param name="brush">The brush used to draw the stroke. The default is 0 (Black ).</param>
      <param name="strokeWidth">The width of the stroke. The default is 0.</param>
      <returns>The attributes applied to the InkStroke when it is drawn.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomPen.CreateInkDrawingAttributesCore(Microsoft.UI.Xaml.Media.Brush,System.Double)">
      <summary>When overridden in a derived class, retrieves an InkDrawingAttributes object used to specify the ConfigurationContent for an InkToolbarCustomPen.</summary>
      <param name="brush">The brush used to draw the stroke. The default is 0 (Black ).</param>
      <param name="strokeWidth">The width of the stroke. The default is 0.</param>
      <returns>The attributes applied to the InkStroke when it is drawn.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton">
      <summary>Represents an InkToolbar button that activates a pen for which the ink color palette and pen tip properties, such as shape, rotation, and size, are defined by the host app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarCustomPenButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton.ConfigurationContent">
      <summary>Gets or sets the content of an optional ink stroke configuration flyout associated with the InkToolbarCustomPenButton.</summary>
      <returns>The contents of the flyout. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton.ConfigurationContentProperty">
      <summary>Identifies the ConfigurationContent dependency property.</summary>
      <returns>The identifier for the ConfigurationContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton.CustomPen">
      <summary>Gets or sets the InkToolbarCustomPen associated with the InkToolbarCustomPenButton.</summary>
      <returns>The InkToolbarCustomPen that is enabled or disabled by the InkToolbarCustomPenButton.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomPenButton.CustomPenProperty">
      <summary>Identifies the CustomPen dependency property.</summary>
      <returns>The identifier for the CustomPen dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarCustomToggleButton">
      <summary>Represents an InkToolbar button that sets the state of an app-defined feature to on or off. When turned on, the feature works in conjunction with the active tool.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomToggleButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarCustomToggleButton class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarCustomToolButton">
      <summary>Represents an InkToolbar button that invokes a non-pen tool, defined by the host app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarCustomToolButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarCustomToolButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomToolButton.ConfigurationContent">
      <summary>Gets or sets the content of an optional ink stroke configuration flyout associated with the InkToolbarCustomToolButton.</summary>
      <returns>The contents of the flyout. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarCustomToolButton.ConfigurationContentProperty">
      <summary>Identifies the ConfigurationContent dependency property.</summary>
      <returns>The identifier for the ConfigurationContent dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarEraserButton">
      <summary>Represents an InkToolbar button that activates the built-in eraser tool.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarEraserButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarEraserButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarEraserButton.IsClearAllVisible">
      <summary>Gets or sets whether the "Erase all ink" button is visible.</summary>
      <returns>**true** if visible. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarEraserButton.IsClearAllVisibleProperty">
      <summary>Identifies the IsClearAllVisible dependency property.</summary>
      <returns>The identifier for the IsClearAllVisible dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem">
      <summary>Represents an InkToolbar button on a flyout. This item can be a basic button, a radio button, a radio toggle button, or a check box.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.#ctor">
      <summary>Initializes a new instance of the InkToolbarFlyoutItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.IsChecked">
      <summary>Gets or sets whether the flyout item is checked.</summary>
      <returns>**true** if checked. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.IsCheckedProperty">
      <summary>Identifies the IsChecked dependency property.</summary>
      <returns>The identifier for the IsChecked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.Kind">
      <summary>Gets or sets the type of button to use on the flyout.</summary>
      <returns>The type of button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.KindProperty">
      <summary>Identifies the Kind dependency property.</summary>
      <returns>The identifier for the Kind dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.Checked">
      <summary>Occurs when the flyout item is checked.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItem.Unchecked">
      <summary>Occurs when the flyout item is unchecked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItemKind">
      <summary>Specifies the types of buttons that can be used on an InkToolbar flyout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItemKind.Check">
      <summary>A check box.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItemKind.Radio">
      <summary>A basic radio button.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItemKind.RadioCheck">
      <summary>A radio button that can be toggled on or off.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarFlyoutItemKind.Simple">
      <summary>A basic button.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarHighlighterButton">
      <summary>Represents an InkToolbar toggle button control that activates the built-in highlighter pen.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarHighlighterButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarHighlighterButton class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarInitialControls">
      <summary>Defines constants that specify the built-in buttons (InitialControls ) added to an InkToolbar at initialization.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarInitialControls.All">
      <summary>All built-in buttons are added.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarInitialControls.AllExceptPens">
      <summary>All built-in, non-pen buttons are added:</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarInitialControls.None">
      <summary>No built-in buttons are added.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarInitialControls.PensOnly">
      <summary>All built-in pen buttons are added:</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs">
      <summary>Provides data for the IsStencilButtonCheckedChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the InkToolbarIsStencilButtonCheckedChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs.StencilButton">
      <summary>Gets the button for the selected stencil.</summary>
      <returns>The stencil button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs.StencilKind">
      <summary>Gets the type of stencil.</summary>
      <returns>The type of stencil.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarMenuButton">
      <summary>Represents an InkToolbar button that invokes a menu of tools, defined by the host app.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarMenuButton.IsExtensionGlyphShown">
      <summary>Gets or sets whether an extension glyph is shown on the menu button.</summary>
      <returns>**true** if the glyph is shown. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarMenuButton.IsExtensionGlyphShownProperty">
      <summary>Identifies the IsExtensionGlyphShown dependency property.</summary>
      <returns>The identifier for the IsExtensionGlyphShown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarMenuButton.MenuKind">
      <summary>Gets the type of menu button.</summary>
      <returns>The type of menu button.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarMenuKind">
      <summary>Specifies the types of menu buttons that can be added to an InkToolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarMenuKind.Stencil">
      <summary>Stencil menu button.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarPenButton">
      <summary>Provides a base class for all built-in and custom pen buttons on an InkToolbar.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.MaxStrokeWidth">
      <summary>Gets or sets the maximum possible Size of an ink stroke.</summary>
      <returns>The maximum possible width of the ink stroke. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.MaxStrokeWidthProperty">
      <summary>Identifies the MaxStrokeWidth dependency property.</summary>
      <returns>The identifier for the MaxStrokeWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.MinStrokeWidth">
      <summary>Gets or sets the minimum possible Size of an ink stroke.</summary>
      <returns>The maximum possible width of the ink stroke. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.MinStrokeWidthProperty">
      <summary>Identifies the MinStrokeWidth dependency property.</summary>
      <returns>The identifier for the MinStrokeWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.Palette">
      <summary>Gets or sets the collection of brushes available on the ink stroke configuration flyout associated with the InkToolbarPenButton. An "extension glyph" is displayed on the button to indicate the existence of the flyout.</summary>
      <returns>A collection of Brush objects that describe various properties of the ink stroke. The default is 0 (empty).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.PaletteProperty">
      <summary>Identifies the Palette dependency property.</summary>
      <returns>The identifier for the Palette dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrush">
      <summary>Gets the brush used to draw the ink stroke.</summary>
      <returns>The brush used to draw the ink stroke. The default value is 0 (Black ).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrushIndex">
      <summary>Gets or sets the selected brush in the Palette.</summary>
      <returns>The index of the brush in the Palette. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrushIndexProperty">
      <summary>Identifies the SelectedBrushIndex dependency property.</summary>
      <returns>The identifier for the SelectedBrushIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrushProperty">
      <summary>Identifies the SelectedBrush dependency property.</summary>
      <returns>The identifier for the SelectedBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedStrokeWidth">
      <summary>Gets or sets the value that specifies the Size of the pen tip used to draw the ink stroke.</summary>
      <returns>The width used to specify the Size of the pen tip. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenButton.SelectedStrokeWidthProperty">
      <summary>Identifies the SelectedStrokeWidth dependency property.</summary>
      <returns>The identifier for the SelectedStrokeWidth dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarPencilButton">
      <summary>Represents an InkToolbar toggle button control that activates the built-in pencil.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarPencilButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarPencilButton class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarPenConfigurationControl">
      <summary>Represents an object used to configure an optional flyout associated with an InkToolbarCustomPenButton. An "extension glyph" is displayed on the button to indicate the existence of the flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarPenConfigurationControl.#ctor">
      <summary>Initializes a new instance of the InkToolbarPenConfigurationControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenConfigurationControl.PenButton">
      <summary>Gets the InkToolbarPenButton from which to derive the ConfigurationContent for the optional flyout.</summary>
      <returns>The base pen from which ConfigurationContent is derived.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarPenConfigurationControl.PenButtonProperty">
      <summary>Identifies the PenButton dependency property.</summary>
      <returns>The identifier for the PenButton dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarRulerButton">
      <summary>Represents an InkToolbar button that sets the state of the built-in ruler tool to on or off.</summary>
      <deprecated type="deprecate">InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.</deprecated>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarRulerButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarRulerButton class.</summary>
      <deprecated type="deprecate">InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.</deprecated>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarRulerButton.Ruler">
      <summary>Gets the stencil associated with the InkToolbarRulerButton.</summary>
      <returns>The stencil associated with the InkToolbarRulerButton.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarRulerButton.RulerProperty">
      <summary>Identifies the Ruler dependency property.</summary>
      <returns>The identifier for the Ruler dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton">
      <summary>Represents an InkToolbar button that sets the state of stencil tool to on or off.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.#ctor">
      <summary>Initializes a new instance of the InkToolbarStencilButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.IsProtractorItemVisible">
      <summary>Gets or sets whether the built-in protractor stencil button is visible.</summary>
      <returns>**true** if visible. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.IsProtractorItemVisibleProperty">
      <summary>Identifies the IsProtractorItemVisible dependency property.</summary>
      <returns>The identifier for the IsProtractorItemVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.IsRulerItemVisible">
      <summary>Gets or sets whether the built-in ruler stencil button is visible.</summary>
      <returns>**true** if visible. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.IsRulerItemVisibleProperty">
      <summary>Identifies the IsRulerItemVisible dependency property.</summary>
      <returns>The identifier for the IsRulerItemVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.Protractor">
      <summary>Gets a reference to the protractor tool of the InkPresenter object.</summary>
      <returns>The protractor tool.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.ProtractorProperty">
      <summary>Identifies the Protractor dependency property.</summary>
      <returns>The identifier for the Protractor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.Ruler">
      <summary>Gets a reference to the ruler tool of the InkPresenter object.</summary>
      <returns>The ruler tool.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.RulerProperty">
      <summary>Identifies the Ruler dependency property.</summary>
      <returns>The identifier for the Ruler dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.SelectedStencil">
      <summary>Gets or sets the selected stencil button.</summary>
      <returns>The selected stencil button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarStencilButton.SelectedStencilProperty">
      <summary>Identifies the SelectedStencil dependency property.</summary>
      <returns>The identifier for the SelectedStencil dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarStencilKind">
      <summary>Specifies the types of InkToolbar stencils.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarStencilKind.Protractor">
      <summary>A protractor for drawing arcs and curves</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarStencilKind.Ruler">
      <summary>A straight rule for drawing straight lines.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarToggle">
      <summary>Defines constants that specify the button types exposed in the toggle button group of an InkToolbar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarToggle.Custom">
      <summary>A toggle button for a custom tool.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarToggle.Ruler">
      <summary>A toggle button for a stencil tool.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarToggleButton">
      <summary>Represents an object that provides infrastructure for both built-in and custom toggle buttons on an InkToolbar.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarToggleButton.ToggleKind">
      <summary>Gets the type of built-in or custom tool associated with the InkToolbarToggleButton.</summary>
      <returns>The type of tool.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarTool">
      <summary>Defines constants that specify the type of built-in or custom tool associated with the InkToolbarToolButton.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.BallpointPen">
      <summary>A pen tool that renders a solid, opaque stroke, with the stroke size dependent on the pen pressure detected (default size is 2x2 pixels).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.CustomPen">
      <summary>A custom pen tool.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.CustomTool">
      <summary>A custom non-pen tool.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.Eraser">
      <summary>A pen tool that deletes any ink strokes that intersect with the erase stroke.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.Highlighter">
      <summary>A pen tool that renders a semi-transparent highlighter overlay stroke.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.InkToolbarTool.Pencil">
      <summary>A pen tool that renders a soft-edged, semi-transparent stroke that can be layered for shading effects. The stroke opacity is dependent on the pen pressure detected.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.InkToolbarToolButton">
      <summary>Provides a base class for all built-in and custom buttons on an InkToolbar.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarToolButton.IsExtensionGlyphShown">
      <summary>Gets or sets whether a glyph is shown on the InkToolbarToolButton to indicate the presence of an ink stroke configuration flyout.</summary>
      <returns>**true** if the glyph is shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarToolButton.IsExtensionGlyphShownProperty">
      <summary>Identifies the IsExtensionGlyphShown dependency property.</summary>
      <returns>The identifier for the IsExtensionGlyphShown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.InkToolbarToolButton.ToolKind">
      <summary>Gets the type of built-in or custom tool associated with the InkToolbarToolButton.</summary>
      <returns>The type of tool.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IScrollAnchorProvider">
      <summary>Specifies a contract for a scrolling control that supports scroll anchoring.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IScrollAnchorProvider.CurrentAnchor">
      <summary>The currently chosen anchor element to use for scroll anchoring.</summary>
      <returns>The most recently chosen UIElement for scroll anchoring after a layout pass, or **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IScrollAnchorProvider.RegisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <summary>Registers a UIElement as a potential scroll anchor candidate.</summary>
      <param name="element">A UIElement within the subtree of the IScrollAnchorProvider.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IScrollAnchorProvider.UnregisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <summary>Unregisters a UIElement as a potential scroll anchor candidate.</summary>
      <param name="element">A UIElement within the subtree of the IScrollAnchorProvider.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation">
      <summary>Communicates the info needed for a view to serve as one of the two possible views (ZoomedOutView or ZoomedInView ) of a SemanticZoom.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.IsActiveView">
      <summary>Gets or sets a value that indicates whether the implementing view is the active view.</summary>
      <returns>**true** if the implementing view is the active view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.IsZoomedInView">
      <summary>Gets or sets a value that indicates whether the implementing view is the semantically more complete zoomed-in view.</summary>
      <returns>**true** if the implementing view is the zoomed-in view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.SemanticZoomOwner">
      <summary>Gets or sets the SemanticZoom owner that hosts the implementing view.</summary>
      <returns>The SemanticZoom that hosts this view. </returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.CompleteViewChange">
      <summary>Changes related aspects of presentation (such as scrolling UI or state) when the overall view for a SemanticZoom changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.CompleteViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations related to a view change when the implementing view is the source view and the new view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.CompleteViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations related to a view change when the implementing view is the destination view and the source view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.InitializeViewChange">
      <summary>Initializes the changes to related aspects of presentation (such as scrolling UI or state) when the overall view for a SemanticZoom is about to change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.MakeVisible(Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Forces content in the view to scroll until the item specified by SemanticZoomLocation is visible. Also focuses that item if found.</summary>
      <param name="item">The item in the view to scroll to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.StartViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations related to a view change when the implementing view is the source view and the pending destination view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISemanticZoomInformation.StartViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations related to a view change when the source view is a different view and the pending destination view is the implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs">
      <summary>Provides event data for the **IsTextTrimmedChanged** event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemClickEventArgs">
      <summary>Provides event data for the ItemClick event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemClickEventArgs.#ctor">
      <summary>Initializes a new instance of the ItemClickEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemClickEventArgs.ClickedItem">
      <summary>Gets a reference to the clicked item.</summary>
      <returns>The clicked item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemClickEventHandler">
      <summary>Represents the method that will handle an ItemClick event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemCollection">
      <summary>Holds the list of items that represent the content of an ItemsControl.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemCollection.VectorChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.Append(System.Object)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The item value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.GetMany(System.UInt32,System.Object[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.IndexOf(System.Object,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item, if it is found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.InsertAt(System.UInt32,System.Object)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.ReplaceAll(System.Object[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemCollection.SetAt(System.UInt32,System.Object)">
      <summary>Sets the value at the specified index to the item value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemContainerGenerator">
      <summary>Provides mappings between the items of an ItemsControl and their container elements.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>Occurs when the contents of the items collection changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>Returns the container for the item at the specified index within the ItemCollection.</summary>
      <deprecated type="deprecate">ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.</deprecated>
      <param name="index">The index of the item to retrieve.</param>
      <returns>The container for the item at the specified index within the item collection, if the item has a container; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <deprecated type="deprecate">ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.</deprecated>
      <param name="item">The item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and indicates whether the container element has been newly generated (realized).</summary>
      <param name="isNewlyRealized">**true** if the returned DependencyObject is newly generated (realized); otherwise, **false**.</param>
      <returns>A DependencyObject that is the container element that is used to display the next item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>Gets the generated position of the item at the specified index.</summary>
      <param name="itemIndex">The index of the item to retrieve the position of.</param>
      <returns>The position of the item as generated by the ItemContainerGenerator.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.GetItemContainerGeneratorForPanel(Microsoft.UI.Xaml.Controls.Panel)">
      <summary>Returns the ItemContainerGenerator that is appropriate for use by the specified panel.</summary>
      <param name="panel">The panel for which to return an appropriate ItemContainerGenerator.</param>
      <returns>An ItemContainerGenerator appropriate for use by the specified panel.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.IndexFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the index to the item that has the specified, generated container.</summary>
      <deprecated type="deprecate">IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.</deprecated>
      <param name="container">The generated container to retrieve the item index for.</param>
      <returns>The index to the item that corresponds to the specified generated container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.IndexFromGeneratorPosition(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified GeneratorPosition.</summary>
      <param name="position">The GeneratorPosition for the desired index.</param>
      <returns>The index that maps to the specified GeneratorPosition.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <deprecated type="deprecate">ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.</deprecated>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.PrepareItemContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Typically, *container* is the result of the previous call to GenerateNext.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.Recycle(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
      <param name="position">The zero-based index of the first element to reuse. *position* must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at *position*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.Remove(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Removes one or more generated (realized) items.</summary>
      <param name="position">The index of the element to remove. *position* must refer to a previously generated (realized) item, which means its offset must be zero.</param>
      <param name="count">The number of elements to remove, starting at *position*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.StartAt(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition,Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified GeneratorPosition and moving in the specified GeneratorDirection. This method also controls whether or not to start at a generated (realized) item.</summary>
      <param name="position">A GeneratorPosition that specifies the position of the item to start generating items at.</param>
      <param name="direction">Specifies the position of the item to start generating items at.</param>
      <param name="allowStartAtRealizedItem">Specifies whether to start at a generated (realized) item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemContainerGenerator.Stop">
      <summary>Disposes the ItemContainerGenerator. </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsControl">
      <summary>Represents a control that can be used to present a collection of items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.#ctor">
      <summary>Initializes a new instance of the ItemsControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.DisplayMemberPath">
      <summary>Gets or sets the name or path of the property that is displayed for each data item.</summary>
      <returns>The name or path of the property that is displayed for each the data item in the control. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>Identifies the DisplayMemberPath dependency property.</summary>
      <returns>The identifier for the DisplayMemberPath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyle">
      <summary>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</summary>
      <returns>A collection of GroupStyle objects that define the appearance of each level of groups.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyleSelector">
      <summary>Gets or sets a reference to a custom GroupStyleSelector logic class. The GroupStyleSelector returns different GroupStyle values to use for content based on the characteristics of that content.</summary>
      <returns>A reference to a custom GroupStyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyleSelectorProperty">
      <summary>Identifies the GroupStyleSelector dependency property.</summary>
      <returns>The identifier for the GroupStyleSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.IsGrouping">
      <summary>Gets a value that indicates whether the control is using grouping.</summary>
      <returns>**true** if a control is using grouping; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.IsGroupingProperty">
      <summary>Identifies the IsGrouping dependency property.</summary>
      <returns>The identifier for the IsGrouping dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerGenerator">
      <summary>Gets the ItemContainerGenerator associated with this ItemsControl.</summary>
      <returns>The ItemContainerGenerator associated with this ItemsControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers.</summary>
      <returns>The style applied to the item containers. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
      <returns>The identifier for the ItemContainerStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.</summary>
      <returns>A custom StyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
      <returns>The identifier for the ItemContainerStyleSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the item containers of an ItemsControl.</summary>
      <returns>The collection of Transition style elements that apply to the item containers of an ItemsControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitionsProperty">
      <summary>Identifies the ItemContainerTransitions dependency property.</summary>
      <returns>The identifier for the ItemContainerTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.Items">
      <summary>Gets the collection used to generate the content of the control.</summary>
      <returns>The collection that is used to generate the content of the control, if it exists; otherwise, null. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
      <returns>An ItemsPanelTemplate that defines the panel to use for the layout of the items. The default value for the ItemsControl is an ItemsPanelTemplate that specifies a StackPanel.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanelProperty">
      <summary>Identifies the ItemsPanel dependency property.</summary>
      <returns>The identifier for the ItemsPanel dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanelRoot">
      <summary>Gets the Panel specified by ItemsPanel.</summary>
      <returns>The Panel specified by ItemsPanel. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the ItemsControl.</summary>
      <returns>The object that is used to generate the content of the ItemsControl. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each item.</summary>
      <returns>The template that specifies the visualization of the data objects. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.</summary>
      <returns>A reference to a custom DataTemplateSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplateSelectorProperty">
      <summary>Identifies the ItemTemplateSelector dependency property.</summary>
      <returns>The identifier for the ItemTemplateSelector dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.ClearContainerForItemOverride(Microsoft.UI.Xaml.DependencyObject,System.Object)">
      <summary>Undoes the effects of the PrepareContainerForItemOverride method.</summary>
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.ContainerFromIndex(System.Int32)">
      <summary>Returns the container for the item at the specified index within the ItemCollection.</summary>
      <param name="index">The index of the item to retrieve.</param>
      <returns>The container for the item at the specified index within the item collection, if the item has a container; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <param name="item">The item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.GetItemsOwner(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the ItemsControl that the specified element hosts items for.</summary>
      <param name="element">The host element.</param>
      <returns>The ItemsControl that the specified element hosts items for, or null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.GroupHeaderContainerFromItemContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the group header container that corresponds to the specified container element.</summary>
      <param name="itemContainer">The container element to return the group header container for.</param>
      <returns>The group header container associated with the specified item container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.IndexFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the index to the item that has the specified, generated container.</summary>
      <param name="container">The generated container to retrieve the item index for.</param>
      <returns>The index to the item that corresponds to the specified generated container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>**true** if the item is (or is eligible to be) its own container; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.ItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.ItemsControlFromItemContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the ItemsControl that owns the specified container element.</summary>
      <param name="container">The container element to return the ItemsControl for.</param>
      <returns>The ItemsControl that owns the specified container element; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnGroupStyleSelectorChanged(Microsoft.UI.Xaml.Controls.GroupStyleSelector,Microsoft.UI.Xaml.Controls.GroupStyleSelector)">
      <summary>Invoked when the value of the GroupStyleSelector property changes.</summary>
      <param name="oldGroupStyleSelector">The previous value of the GroupStyleSelector property.</param>
      <param name="newGroupStyleSelector">The current value of the GroupStyleSelector property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnItemContainerStyleChanged(Microsoft.UI.Xaml.Style,Microsoft.UI.Xaml.Style)">
      <summary>Invoked when the value of the ItemContainerStyle property changes.</summary>
      <param name="oldItemContainerStyle">The previous value of the ItemContainerStyle property.</param>
      <param name="newItemContainerStyle">The current value of the ItemContainerStyle property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(Microsoft.UI.Xaml.Controls.StyleSelector,Microsoft.UI.Xaml.Controls.StyleSelector)">
      <summary>Invoked when the value of the ItemContainerStyleSelector property changes.</summary>
      <param name="oldItemContainerStyleSelector">The previous value of the ItemContainerStyleSelector property.</param>
      <param name="newItemContainerStyleSelector">The current value of the ItemContainerStyleSelector property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnItemsChanged(System.Object)">
      <summary>Invoked when the value of the Items property changes.</summary>
      <param name="e">Event data. Not specifically typed in the current implementation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnItemTemplateChanged(Microsoft.UI.Xaml.DataTemplate,Microsoft.UI.Xaml.DataTemplate)">
      <summary>Invoked when the value of the ItemTemplate property changes.</summary>
      <param name="oldItemTemplate">The previous value of the ItemTemplate property.</param>
      <param name="newItemTemplate">The current value of the ItemTemplate property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.OnItemTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector,Microsoft.UI.Xaml.Controls.DataTemplateSelector)">
      <summary>Invoked when the value of the ItemTemplateSelector property changes.</summary>
      <param name="oldItemTemplateSelector">The previous value of the ItemTemplateSelector property.</param>
      <param name="newItemTemplateSelector">The current value of the ItemTemplateSelector property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsControl.PrepareContainerForItemOverride(Microsoft.UI.Xaml.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The element that's used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsPanelTemplate">
      <summary>Specifies the panel that the ItemsPresenter creates for the layout of the items of an ItemsControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsPanelTemplate.#ctor">
      <summary>Initializes a new instance of the ItemsPanelTemplate class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs">
      <summary>Provides data for the ItemsPicked event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs.#ctor">
      <summary>Initializes a new instance of the ItemsPickedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs.AddedItems">
      <summary>Gets the collection of items that were selected by the user.</summary>
      <returns>The collection of items that were selected by the user.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs.RemovedItems">
      <summary>Gets the collection of items that were unselected.</summary>
      <returns>The collection of items that were unselected.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsPresenter">
      <summary>Specifies where items are placed in a control, usually an ItemsControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsPresenter.#ctor">
      <summary>Initializes a new instance of the ItemsPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that indicates whether the horizontal snap points for the ItemsPresenter are equidistant from each other.</summary>
      <returns>**True** if the horizontal snap points for the ItemsPresenter are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.AreVerticalSnapPointsRegular">
      <summary>Gets a value that indicates whether the vertical snap points for the ItemsPresenter are equidistant from each other.</summary>
      <returns>**True** if the vertical snap points for the ItemsPresenter are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.Footer">
      <summary>Gets or sets the content for the items footer.</summary>
      <returns>The content of the items footer. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterProperty">
      <summary>Identifies the Footer dependency property.</summary>
      <returns>The identifier for the Footer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the items header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTemplateProperty">
      <summary>Identifies the FooterTemplate dependency property.</summary>
      <returns>The identifier for the FooterTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the footer of an ItemsPresenter.</summary>
      <returns>The collection of Transition style elements that apply to the footer of an ItemsPresenter.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTransitionsProperty">
      <summary>Identifies the FooterTransitions dependency property.</summary>
      <returns>The identifier for the FooterTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.Header">
      <summary>Gets or sets the content for the items header.</summary>
      <returns>The content of the items header. The default value is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the items header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the header of an ItemsPresenter.</summary>
      <returns>The collection of Transition style elements that apply to the header of an ItemsPresenter.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTransitionsProperty">
      <summary>Identifies the HeaderTransitions dependency property.</summary>
      <returns>The identifier for the HeaderTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.Padding">
      <summary>Gets or sets the distance between the ItemsPresenter and its child objects.</summary>
      <returns>The dimensions of the space between the presenter and its children as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsPresenter.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsPresenter.HorizontalSnapPointsChanged">
      <summary>Occurs when the horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsPresenter.VerticalSnapPointsChanged">
      <summary>Occurs when the vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsPresenter.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns a read-only collection of numbers that represent the snap points for the specified orientation.</summary>
      <param name="orientation">The orientation of the requested snap points.</param>
      <param name="alignment">The alignment used by the caller when applying the requested snap points.</param>
      <returns>A read-only collection of numbers that represent the snap points for the specified orientation, or an empty collection when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsPresenter.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Returns an original offset and interval for equidistant snap points for the specified orientation.</summary>
      <param name="orientation">The orientation of the requested snap points.</param>
      <param name="alignment">The alignment used by the caller when applying the requested snap points.</param>
      <param name="offset">The offset of the first snap point.</param>
      <returns>The interval between equidistant snap points for the specified orientation or 0 when no snap points are present.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsStackPanel">
      <summary>Arranges child elements of an ItemsControl into a single line that can be oriented horizontally or vertically. Supports pixel-based UI virtualization and grouped layouts.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsStackPanel.#ctor">
      <summary>Initializes a new instance of the ItemsStackPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.AreStickyGroupHeadersEnabled">
      <summary>Gets or sets a value that specifies whether a group header moves with the group when the group is panned vertically.</summary>
      <returns>**true** if the group header moves with the group when the group is panned vertically; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.AreStickyGroupHeadersEnabledProperty">
      <summary>Identifies the AreStickyGroupHeadersEnabled dependency property.</summary>
      <returns>The identifier for the AreStickyGroupHeadersEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.CacheLength">
      <summary>Gets or sets the size of the buffers for items outside the viewport, in multiples of the viewport size.</summary>
      <returns>The size of the buffers for items outside the viewport, in multiples of the viewport size. The default is 4.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.CacheLengthProperty">
      <summary>Identifies the CacheLength dependency property.</summary>
      <returns>The identifier for the CacheLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.FirstCacheIndex">
      <summary>Gets the index in the data collection of the first item in the cache.</summary>
      <returns>The index in the data collection of the first item in the cache. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.FirstVisibleIndex">
      <summary>Gets the index in the data collection of the first item on the screen. Partially visible items are considered to be on screen.</summary>
      <returns>The index in the data collection of the first item on the screen. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupHeaderPlacement">
      <summary>Gets or sets a value that specifies where group headers are positioned in relation to the group.</summary>
      <returns>An enumeration value that specifies where group headers are positioned in relation to the group. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupHeaderPlacementProperty">
      <summary>Identifies the GroupHeaderPlacement dependency property.</summary>
      <returns>The identifier for the GroupHeaderPlacement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupPadding">
      <summary>Gets or sets the amount of space around a group.</summary>
      <returns>The amount of space around a group as a Thickness value. Thickness is a structure that stores dimension values using pixel measures. The default is a uniform Thickness of 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupPaddingProperty">
      <summary>Identifies the GroupPadding dependency property.</summary>
      <returns>The identifier for the GroupPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.ItemsUpdatingScrollMode">
      <summary>Gets or sets a value that specifies scrolling behavior when the ItemsSource is updated.</summary>
      <returns>A value of the enumeration. The default is **KeepItemsInView**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.LastCacheIndex">
      <summary>Gets the index in the data collection of the last item in the cache.</summary>
      <returns>The index in the data collection of the last item in the cache. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.LastVisibleIndex">
      <summary>Gets the index in the data collection of the last item on the screen. Partially visible items are considered to be on screen.</summary>
      <returns>The index in the data collection of the last item on the screen. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.Orientation">
      <summary>Gets or sets the dimension by which child elements are stacked.</summary>
      <returns>One of the enumeration values that specifies the orientation of child elements. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsStackPanel.ScrollingDirection">
      <summary>Gets a value that indicates whether items are panning forward or backward, or aren't panning.</summary>
      <returns>An enumeration value that indicates whether the items are panning **Forward** or **Backward**, or **None** if the items are not panning.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode">
      <summary>Defines constants that specify the scrolling behavior of items while updating.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode.KeepItemsInView">
      <summary>Adjusts the scroll offset to keep the first visible item in the viewport when items are added to the ItemsSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode.KeepLastItemInView">
      <summary>Adjusts the scroll offset to keep the last visible item in the viewport when items are added to the ItemsSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode.KeepScrollOffset">
      <summary>Maintains the scroll offset relative to the beginning of the list, forcing items in the viewport to move down when items are added to the ItemsSource.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsWrapGrid">
      <summary>Positions child elements sequentially from left to right or top to bottom in an ItemsControl that shows multiple items. When elements extend beyond the container edge, elements are positioned in the next row or column. Supports pixel-based UI virtualization and grouped layouts.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.#ctor">
      <summary>Initializes a new instance of the ItemsWrapGrid class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.AreStickyGroupHeadersEnabled">
      <summary>Gets or sets a value that specifies whether a group header moves with the group when the group is panned vertically.</summary>
      <returns>**true** if the group header moves with the group when the group is panned vertically; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.AreStickyGroupHeadersEnabledProperty">
      <summary>Identifies the AreStickyGroupHeadersEnabled dependency property.</summary>
      <returns>The identifier for the AreStickyGroupHeadersEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.CacheLength">
      <summary>Gets or sets the size of the buffers for items outside the viewport, in multiples of the viewport size.</summary>
      <returns>The size of the buffers for items outside the viewport, in multiples of the viewport size. The default is 4.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.CacheLengthProperty">
      <summary>Identifies the CacheLength dependency property.</summary>
      <returns>The identifier for the CacheLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.FirstCacheIndex">
      <summary>Gets the index in the data collection of the first item in the cache.</summary>
      <returns>The index in the data collection of the first item in the cache. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.FirstVisibleIndex">
      <summary>Gets the index in the data collection of the first item on the screen. Partially visible items are considered to be on screen.</summary>
      <returns>The index in the data collection of the first item on the screen. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupHeaderPlacement">
      <summary>Gets or sets a value that specifies where group headers are positioned in relation to the group.</summary>
      <returns>An enumeration value that specifies where group headers are positioned in relation to the group. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupHeaderPlacementProperty">
      <summary>Identifies the GroupHeaderPlacement dependency property.</summary>
      <returns>The identifier for the GroupHeaderPlacement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupPadding">
      <summary>Gets or sets the amount of space around a group.</summary>
      <returns>The amount of space around a group as a Thickness value. Thickness is a structure that stores dimension values using pixel measures. The default is a uniform Thickness of 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupPaddingProperty">
      <summary>Identifies the GroupPadding dependency property.</summary>
      <returns>The identifier for the GroupPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemHeight">
      <summary>Gets or sets the height of the layout area for each item that is contained in an ItemsWrapGrid.</summary>
      <returns>The height of the layout area for each item that is contained in an ItemsWrapGrid. The default is **Double.NaN**, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemHeightProperty">
      <summary>Identifies the ItemHeight dependency property.</summary>
      <returns>The identifier for the ItemHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemWidth">
      <summary>Gets or sets the width of the layout area for each item that is contained in an ItemsWrapGrid.</summary>
      <returns>The width of the layout area for each item that is contained in an ItemsWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemWidthProperty">
      <summary>Identifies the ItemWidth dependency property.</summary>
      <returns>The identifier for the ItemWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.LastCacheIndex">
      <summary>Gets the index in the data collection of the last item in the cache.</summary>
      <returns>The index in the data collection of the last item in the cache. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.LastVisibleIndex">
      <summary>Gets the index in the data collection of the last item on the screen. Partially visible items are considered to be on screen.</summary>
      <returns>The index in the data collection of the last item on the screen. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.MaximumRowsOrColumns">
      <summary>Gets or sets a value that influences the wrap point, also accounting for Orientation.</summary>
      <returns>The maximum rows or columns that this ItemsWrapGrid should present before it introduces wrapping to the layout. The default is -1, which is a special value that indicates no maximum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.MaximumRowsOrColumnsProperty">
      <summary>Identifies the MaximumRowsOrColumns dependency property.</summary>
      <returns>The identifier for the MaximumRowsOrColumns dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.Orientation">
      <summary>Gets or sets the dimension by which child elements are stacked.</summary>
      <returns>One of the enumeration values that specifies the orientation of child elements. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ScrollingDirection">
      <summary>Gets a value that indicates whether items are panning forward or backward, or aren't panning.</summary>
      <returns>An enumeration value that indicates whether the items are panning **Forward** or **Backward**, or **None** if the items are not panning.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.LightDismissOverlayMode">
      <summary>Defines constants that specify whether the area outside of a *light-dismiss* UI is darkened.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.LightDismissOverlayMode.Auto">
      <summary>The device-family the app is running on determines whether the area outside of a *light-dismiss* UI is darkened.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.LightDismissOverlayMode.Off">
      <summary>The area outside of a *light-dismiss* UI is not darkened for all device families.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.LightDismissOverlayMode.On">
      <summary>The area outside of a *light-dismiss* UI is darkened for all device families.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListBox">
      <summary>Presents a list of items the user can select from.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListBox.#ctor">
      <summary>Initializes a new instance of the ListBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListBox.SelectedItems">
      <summary>Gets the list of currently selected items for the ListBox control.</summary>
      <returns>The list of currently selected items for the ListBox control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListBox.SelectionMode">
      <summary>Gets or sets the selection behavior for the ListBox control.</summary>
      <returns>One of the SelectionMode values.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListBox.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
      <returns>The identifier for the SelectionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListBox.SingleSelectionFollowsFocus">
      <summary>Gets or sets a value that indicates whether item selection changes when keyboard focus changes.</summary>
      <returns>**true** if item selection changes when keyboard focus changes; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListBox.SingleSelectionFollowsFocusProperty">
      <summary>Identifies the SingleSelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SingleSelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>Causes the object to scroll into view.</summary>
      <param name="item">The object to scroll to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListBox.SelectAll">
      <summary>Selects all the items in the ListBox control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListBoxItem">
      <summary>Represents the container for an item in a ListBox control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListBoxItem.#ctor">
      <summary>Initializes a new instance of the ListBoxItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListPickerFlyout">
      <summary>Represents a control that allows a user to pick one or more items from a list. See Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListPickerFlyout.#ctor">
      <summary>Initializes a new instance of the ListPickerFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.DisplayMemberPath">
      <summary>Gets or sets the name or path of the property that is displayed for each data item</summary>
      <returns>The name or path of the property that is displayed for each the data item in the control. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.DisplayMemberPathProperty">
      <summary>Identifies the DisplayMemberPath dependency property.</summary>
      <returns>The identifier for the DisplayMemberPath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the control.</summary>
      <returns>The object that is used to generate the content of the control. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each item.</summary>
      <returns>The template that specifies the visualization of the data objects. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedIndex">
      <summary>Gets or sets the index of the selected item.</summary>
      <returns>The index of the selected item. The default is -1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
      <returns>The identifier for the SelectedIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The selected item. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>Identifies the SelectedItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedItems">
      <summary>Gets the list of currently selected items.</summary>
      <returns>The list of currently selected items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedValue">
      <summary>Gets or sets the value of the selected item, obtained by using the SelectedValuePath</summary>
      <returns>The value of the selected item, obtained by using the SelectedValuePath, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedValuePath">
      <summary>Gets or sets the property path that is used to get the SelectedValue property of the SelectedItem property.</summary>
      <returns>The property path that is used to get the SelectedValue property of the SelectedItem property. The default is String.Empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedValuePathProperty">
      <summary>Identifies the SelectedValuePath dependency property.</summary>
      <returns>The identifier for the SelectedValuePath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectedValueProperty">
      <summary>Identifies the SelectedValue dependency property.</summary>
      <returns>The identifier for the SelectedValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectionMode">
      <summary>Gets or sets the selection mode of the picker.</summary>
      <returns>The selection mode of the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListPickerFlyout.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
      <returns>The identifier of the SelectionMode dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ItemsPicked">
      <summary>Occurs when the user has selected items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListPickerFlyout.ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Begins an asynchronous operation to show the flyout placed in relation to the specified element.</summary>
      <param name="target">The element to use as the flyout's placement target.</param>
      <returns>An asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListPickerFlyoutPresenter">
      <summary>Represents a control that allows a user to pick one or more items from a list. (Not recommended for Universal Windows Platform (UWP) app. See Flyout.)</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode">
      <summary>Defines constants that specify the selection mode of a ListPickerFlyout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode.Multiple">
      <summary>The user can select multiple items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode.Single">
      <summary>A user can select only one item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListView">
      <summary>Represents a control that displays data items in a vertical stack.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListView.#ctor">
      <summary>Initializes a new instance of the ListView class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewBase">
      <summary>Provides the infrastructure for the ListView and GridView classes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.#ctor">
      <summary>Provides base-class initialization behavior for classes that are derived from the ListViewBase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItems">
      <summary>Gets or sets a value that indicates whether items in the view can be dragged as data payload.</summary>
      <returns>**True** if items in the view can be dragged as data payload; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItemsProperty">
      <summary>Identifies the CanDragItems dependency property.</summary>
      <returns>The identifier for the CanDragItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItems">
      <summary>Gets or sets a value that indicates whether items in the view can be reordered through user interaction.</summary>
      <returns>**True** if items in the view can be reordered through user interaction; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItemsProperty">
      <summary>Identifies the CanReorderItems dependency property.</summary>
      <returns>The identifier for the CanReorderItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.DataFetchSize">
      <summary>Gets or sets the amount of data to fetch for virtualizing/prefetch operations.</summary>
      <returns>The amount of data to fetch per interval, in pages. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.DataFetchSizeProperty">
      <summary>Identifies the DataFetchSize dependency property.</summary>
      <returns>The identifier for the DataFetchSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.Footer">
      <summary>Gets or sets the content for the list footer.</summary>
      <returns>The content of the list footer. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.FooterProperty">
      <summary>Identifies the Footer dependency property.</summary>
      <returns>The identifier for the Footer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.FooterTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the view footer.</summary>
      <returns>The template that specifies the visualization of the footer object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.FooterTemplateProperty">
      <summary>Identifies the FooterTemplate dependency property.</summary>
      <returns>The identifier for the FooterTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.FooterTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the view footer.</summary>
      <returns>The collection of Transition style elements that apply to the list footer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.FooterTransitionsProperty">
      <summary>Identifies the FooterTransitions dependency property.</summary>
      <returns>The identifier for the FooterTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.Header">
      <summary>Gets or sets the content for the list header.</summary>
      <returns>The content of the list header. The default value is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the view header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the view header.</summary>
      <returns>The collection of Transition style elements that apply to the list header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTransitionsProperty">
      <summary>Identifies the HeaderTransitions dependency property.</summary>
      <returns>The identifier for the HeaderTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingThreshold">
      <summary>Gets or sets the threshold range that governs when the ListViewBase class will begin to prefetch more items.</summary>
      <returns>The loading threshold, in terms of pages.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingThresholdProperty">
      <summary>Identifies the IncrementalLoadingThreshold dependency property.</summary>
      <returns>The identifier for the IncrementalLoadingThreshold dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingTrigger">
      <summary>Gets or sets a value that indicates the conditions for prefetch operations by the ListViewBase class.</summary>
      <returns>An enumeration value that indicates the conditions that trigger prefetch operations. The default is **Edge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingTriggerProperty">
      <summary>Identifies the IncrementalLoadingTrigger dependency property.</summary>
      <returns>The identifier for the IncrementalLoadingTrigger dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsActiveView">
      <summary>Gets or sets a value that indicates whether the ListViewBase instance is the active view in its owning SemanticZoom.</summary>
      <returns>**true** if the ListViewBase is the active view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsActiveViewProperty">
      <summary>Identifies the IsActiveView dependency property.</summary>
      <returns>The identifier for the IsActiveView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabled">
      <summary>Gets or sets a value that indicates whether items in the view fire an ItemClick event in response to interaction.</summary>
      <returns>**true** if interaction fires an ItemClick event; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabledProperty">
      <summary>Identifies the IsItemClickEnabled dependency property.</summary>
      <returns>The identifier for the IsItemClickEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsMultiSelectCheckBoxEnabled">
      <summary>Gets or sets a value that indicates whether a check box is shown to enable multi-selection.</summary>
      <returns>**true** if a check box is shown to enable multi-selection; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsMultiSelectCheckBoxEnabledProperty">
      <summary>Get the identifier for the IsMultiSelectCheckBoxEnabled dependency property.</summary>
      <returns>The identifier for the IsMultiSelectCheckBoxEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsSwipeEnabled">
      <summary>Gets or sets a value that indicates whether the view supports discrete input processing for a *swipe* interaction.</summary>
      <returns>**true** if discrete input processing for *swipe* interactions is enabled; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsSwipeEnabledProperty">
      <summary>Identifies the IsSwipeEnabled dependency property.</summary>
      <returns>The identifier for the IsSwipeEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsZoomedInView">
      <summary>Gets or sets a value that indicates whether the ListViewBase instance is the zoomed-in view in its owning SemanticZoom.</summary>
      <returns>**true** if the ListViewBase is the zoomed-in view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.IsZoomedInViewProperty">
      <summary>Identifies the IsZoomedInView dependency property.</summary>
      <returns>The identifier for the IsZoomedInView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.ReorderMode">
      <summary>Gets or sets the reorder behavior for a ListViewBase instance. When **Enabled**, unsorted and ungrouped lists can be reordered by user manipulation.</summary>
      <returns>One of the ListViewReorderMode enumeration values. The default is **Disabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.ReorderModeProperty">
      <summary>Identifies the ReorderMode dependency property.</summary>
      <returns>The identifier for the ReorderMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SelectedItems">
      <summary>Gets the currently selected items.</summary>
      <returns>A collection of the currently selected items. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SelectedRanges">
      <summary>Gets a collection of ItemIndexRange objects that describe the currently selected items in the list.</summary>
      <returns>The collection of ItemIndexRange objects that describe the currently selected items in the list. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SelectionMode">
      <summary>Gets or sets the selection behavior for a ListViewBase instance.</summary>
      <returns>One of the ListViewSelectionMode enumeration values. The default is **Single** selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
      <returns>The identifier for the SelectionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SemanticZoomOwner">
      <summary>Gets or sets the SemanticZoom instance that hosts the ListViewBase.</summary>
      <returns>The SemanticZoom instance that hosts this view, or **null** if the view is not hosted in a SemanticZoom control. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SemanticZoomOwnerProperty">
      <summary>Identifies the SemanticZoomOwner dependency property.</summary>
      <returns>The identifier for the SemanticZoomOwner dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.ShowsScrollingPlaceholders">
      <summary>Gets or sets a value that indicates whether the view shows placeholder UI for items during scrolling.</summary>
      <returns>**true** if the view shows placeholder UI for items during scrolling; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.ShowsScrollingPlaceholdersProperty">
      <summary>Identifies the ShowsScrollingPlaceholders dependency property.</summary>
      <returns>The identifier for the ShowsScrollingPlaceholders dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SingleSelectionFollowsFocus">
      <summary>Gets or sets a value that indicates whether item selection changes when keyboard focus changes.</summary>
      <returns>**true** if item selection changes when keyboard focus changes; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewBase.SingleSelectionFollowsFocusProperty">
      <summary>Identifies the SingleSelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SingleSelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.ChoosingGroupHeaderContainer">
      <summary>Occurs when an item container is to be chosen for a data group.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.ChoosingItemContainer">
      <summary>Occurs when an item container is to be chosen for a data item.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.ContainerContentChanging">
      <summary>Occurs when the data item associated with a UI container changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.DragItemsCompleted">
      <summary>Occurs when a drag operation that involves one of the items in the view is ended. In order to receive this event, set the **CanDragItems** property to **True**.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.DragItemsStarting">
      <summary>Occurs when a drag operation that involves one of the items in the view is initiated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ListViewBase.ItemClick">
      <summary>Occurs when an item in the list view receives an interaction, and the IsItemClickEnabled property is **true**.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.CompleteViewChange">
      <summary>Changes related aspects of presentation when the overall view for a SemanticZoom changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.CompleteViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations that are related to a view change when the ListViewBase instance is the source view and the new view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.CompleteViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Completes item-wise operations that are related to a view change when the ListViewBase instance is the destination view and the source view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.DeselectRange(Microsoft.UI.Xaml.Data.ItemIndexRange)">
      <summary>Deselects a block of items described by the ItemIndexRange.</summary>
      <param name="itemIndexRange">Information about the range of items, including the index of the first and last items in the range, and the number of items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.InitializeViewChange">
      <summary>Initializes the changes to related aspects of presentation (such as scrolling UI or state) when the overall view for a SemanticZoom is about to change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.IsDragSource">
      <summary>Returns a value that indicates whether the list view is both the drag source and drop target in a drag-and-drop operation.</summary>
      <returns>**true** if the list view is both the drag source and drop target; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.LoadMoreItemsAsync">
      <summary>Initiates the asynchronous request to load more data items, in accordance with the active incremental loading settings.</summary>
      <returns>When the operation completes, returns a LoadMoreItemsResult payload.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.MakeVisible(Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Forces content in the view to scroll until the item that's specified by SemanticZoomLocation is visible. Also focuses the item if it finds the item.</summary>
      <param name="item">The item in the view to scroll to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.PrepareConnectedAnimation(System.String,System.Object,System.String)">
      <summary>Returns a connected animation that's associated with the specified key, data item, and source element.</summary>
      <param name="key">The key for the animation.</param>
      <param name="item">The data item that is animated out of view.</param>
      <param name="elementName">The name of the element in the ItemTemplate that provides the animated visual.</param>
      <returns>The animation with the specified key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.ScrollIntoView(System.Object)">
      <summary>Scrolls the list to bring the specified data item into view.</summary>
      <param name="item">The data item to bring into view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.ScrollIntoView(System.Object,Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment)">
      <summary>Scrolls the list to bring the specified data item into view with the specified alignment.</summary>
      <param name="item">The data item to bring into view.</param>
      <param name="alignment">An enumeration value that specifies whether the item uses **Default** or **Leading** alignment.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.SelectAll">
      <summary>Selects all the items in a view.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.SelectRange(Microsoft.UI.Xaml.Data.ItemIndexRange)">
      <summary>Selects a block of items described by the ItemIndexRange.</summary>
      <param name="itemIndexRange">Information about the range of items, including the index of the first and last items in the range, and the number of items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.SetDesiredContainerUpdateDuration(Windows.Foundation.TimeSpan)">
      <summary>Sets the maximum target time between two render passes when a ListViewBase is updating its UI with data items during initial load or scrolling.</summary>
      <param name="duration">The maximum target time between two render passes.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.StartViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations that are related to a view change when the ListViewBase instance is the source view and the pending destination view is a potentially different implementing view.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.StartViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation,Microsoft.UI.Xaml.Controls.SemanticZoomLocation)">
      <summary>Initializes item-wise operations that are related to a view change when the source view is a different view and the pending destination view is the ListViewBase instance.</summary>
      <param name="source">The view item as represented in the source view.</param>
      <param name="destination">The view item as represented in the destination view.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewBase.TryStartConnectedAnimationAsync(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation,System.Object,System.String)">
      <summary>Attempts to start the animation.</summary>
      <param name="animation">The animation to start.</param>
      <param name="item">The data item that is animated into view.</param>
      <param name="elementName">The name of the element in the ItemTemplate that provides the animated visual.</param>
      <returns>**true** if the animation started; **false** if the animation has already been started, if it is no longer active, or if the destination element is the same as the source element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem">
      <summary>Provides the infrastructure for the ListViewHeaderItem and GridViewHeaderItem classes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewHeaderItem">
      <summary>Represents items in the header for grouped data inside a ListView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewHeaderItem.#ctor">
      <summary>Initializes a new instance of the ListViewHeaderItem class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewItem">
      <summary>Represents the container for an item in a ListView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewItem.#ctor">
      <summary>Initializes a new instance of the ListViewItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ListViewItem.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when you're defining templates for a ListViewItem class.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewItemToKeyHandler">
      <summary>Represents the method that will handle callback for the GetRelativeScrollPosition method.</summary>
      <returns>The key of the item.</returns>
      <param name="item">The ListView item.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewKeyToItemHandler">
      <summary>Represents the asynchronous method that will handle callback for the SetRelativeScrollPositionAsync method.</summary>
      <returns>An asynchronous operation that, upon successful completion, returns the ListView item represented by the specified key.</returns>
      <param name="key">The key of the ListView item.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper">
      <summary>Represents a helper class to save and retrieve the relative scroll position of the ListView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper.GetRelativeScrollPosition(Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ListViewItemToKeyHandler)">
      <summary>Retrieves the relative scroll position of the ListView.</summary>
      <param name="listViewBase">The ListView object.</param>
      <param name="itemToKeyHandler">The method that will handle the retrieval of the item key.</param>
      <returns>The relative scroll position of the ListView.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper.SetRelativeScrollPositionAsync(Microsoft.UI.Xaml.Controls.ListViewBase,System.String,Microsoft.UI.Xaml.Controls.ListViewKeyToItemHandler)">
      <summary>Begins an asynchronous action to set the relative scroll position of the ListView.</summary>
      <param name="listViewBase">The ListView.</param>
      <param name="relativeScrollPosition">The relative scroll position of the ListView.</param>
      <param name="keyToItemHandler">The method that will handle the retrieval of the ListView item given the key.</param>
      <returns>An asynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewReorderMode">
      <summary>Defines constants that specify the reorder mode of a ListView or GridView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewReorderMode.Disabled">
      <summary>A user can't reorder the list.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewReorderMode.Enabled">
      <summary>A user can reorder the list.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ListViewSelectionMode">
      <summary>Defines constants that specify the selection mode of a ListView or GridView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewSelectionMode.Extended">
      <summary>The user can select multiple items by entering a special mode, for example when depressing a modifier key.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewSelectionMode.Multiple">
      <summary>The user can select multiple items without entering a special mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewSelectionMode.None">
      <summary>A user can't select items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ListViewSelectionMode.Single">
      <summary>A user can select a single item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MediaElement">
      <summary>Represents an object that renders audio and video to the display. See Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.#ctor">
      <summary>Instantiates a new instance of the MediaElement class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.ActualStereo3DVideoPackingMode">
      <summary>Gets an enumeration value that determines the current value of stereo 3-D video frame-packing mode, accounting for other factors such as whether the media engine is ready for use.</summary>
      <returns>A value of the enumeration. May be **None** if media engine is not ready for use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.ActualStereo3DVideoPackingModeProperty">
      <summary>Identifies the ActualStereo3DVideoPackingMode dependency property.</summary>
      <returns>The identifier for the ActualStereo3DVideoPackingMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AreTransportControlsEnabled">
      <summary>Gets or sets a value that determines whether the standard transport controls are enabled.</summary>
      <returns>**true** if the standard transport controls are enabled; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AreTransportControlsEnabledProperty">
      <summary>Identifies the AreTransportControlsEnabled dependency property.</summary>
      <returns>The identifier for the AreTransportControlsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AspectRatioHeight">
      <summary>Gets the height portion of the native aspect ratio of the media.</summary>
      <returns>The height portion of the native aspect ratio of the media. This value holds meaning only when you compare it with the value for the AspectRatioWidth property; the two properties together describe the aspect ratio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AspectRatioHeightProperty">
      <summary>Identifies the AspectRatioHeight  dependency property.</summary>
      <returns>The identifier for the AspectRatioHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AspectRatioWidth">
      <summary>Gets the width portion of the native aspect ratio of the media.</summary>
      <returns>The width portion of the native aspect ratio of the media. This value holds meaning only when you compare it with the value for the AspectRatioHeight property; the two properties together describe the aspect ratio.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AspectRatioWidthProperty">
      <summary>Identifies the AspectRatioWidth  dependency property.</summary>
      <returns>The identifier for the AspectRatioWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioCategory">
      <summary>Gets or sets a value that describes the purpose of the audio information in an audio stream.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioCategoryProperty">
      <summary>Identifies the AudioCategory dependency property.</summary>
      <returns>The identifier for the AudioCategory dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioDeviceType">
      <summary>Gets or sets a value that describes the primary usage of the device that is being used to play back audio.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioDeviceTypeProperty">
      <summary>Identifies the AudioDeviceType dependency property.</summary>
      <returns>The identifier for the AudioDeviceType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioStreamCount">
      <summary>Gets the number of audio streams that exist in the current media file.</summary>
      <returns>The number of audio streams that exist in the source media file. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioStreamCountProperty">
      <summary>Identifies the AudioStreamCount dependency property.</summary>
      <returns>The identifier for the AudioStreamCount dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioStreamIndex">
      <summary>Gets or sets the index of the audio stream that plays along with the video component. The collection of audio streams is composed at run time and represents all audio streams that are available in the media file.</summary>
      <returns>The index in the media file of the audio component that plays along with the video component. The index can be unspecified, in which case the value is null. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AudioStreamIndexProperty">
      <summary>Identifies the AudioStreamIndex dependency property.</summary>
      <returns>The identifier for the AudioStreamIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AutoPlay">
      <summary>Gets or sets a value that indicates whether media will begin playback automatically when the Source property is set.</summary>
      <returns>**true** if playback is automatic; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.AutoPlayProperty">
      <summary>Identifies the AutoPlay dependency property.</summary>
      <returns>The identifier for the AutoPlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Balance">
      <summary>Gets or sets a ratio of volume across stereo speakers.</summary>
      <returns>The ratio of volume across speakers in the range between -1 and 1. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.BalanceProperty">
      <summary>Identifies the Balance  dependency property.</summary>
      <returns>The identifier for the Balance dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.BufferingProgress">
      <summary>Gets a value that indicates the current buffering progress.</summary>
      <returns>The amount of buffering that is completed for media content. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.BufferingProgressProperty">
      <summary>Identifies the BufferingProgress dependency property.</summary>
      <returns>The identifier for the BufferingProgress dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CanPause">
      <summary>Gets a value that indicates whether media can be paused if the Pause method is called.</summary>
      <returns>**true** if the media can be paused; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CanPauseProperty">
      <summary>Identifies the CanPause dependency property.</summary>
      <returns>The identifier for the CanPause dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CanSeek">
      <summary>Gets a value that indicates whether media can be repositioned by setting the value of the Position property.</summary>
      <returns>**true** if the media can be repositioned; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CanSeekProperty">
      <summary>Identifies the CanSeek dependency property.</summary>
      <returns>The identifier for the CanSeek dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CurrentState">
      <summary>Gets the status of this MediaElement.</summary>
      <returns>The current state of this MediaElement. The state can be one of the following (as defined in the MediaElementState enumeration): **Buffering**, **Closed**, **Opening**, **Paused**, **Playing**, or **Stopped**. The default value is **Closed**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.CurrentStateProperty">
      <summary>Identifies the CurrentState dependency property.</summary>
      <returns>The identifier for the CurrentState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DefaultPlaybackRate">
      <summary>Gets or sets the default playback rate for the media engine. The playback rate applies when the user isn't using fast forward or reverse.</summary>
      <returns>The default playback rate. The default is 1.0, which indicates normal playback speed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DefaultPlaybackRateProperty">
      <summary>Identifies the DefaultPlaybackRate  dependency property.</summary>
      <returns>The identifier for the DefaultPlaybackRate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DownloadProgress">
      <summary>Gets a value that indicates the amount of download completed for content located on a remote server.</summary>
      <returns>A value that indicates the amount of download completed for content that is located on a remote server. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DownloadProgressOffset">
      <summary>Gets the offset of download progress, which is relevant in seek-ahead scenarios.</summary>
      <returns>The offset of download progress.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DownloadProgressOffsetProperty">
      <summary>Identifies the DownloadProgressOffset dependency property.</summary>
      <returns>The identifier for the DownloadProgressOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.DownloadProgressProperty">
      <summary>Identifies the DownloadProgress dependency property.</summary>
      <returns>The identifier for the DownloadProgress dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsAudioOnly">
      <summary>Gets a value that reports whether the current source media is an audio-only media file.</summary>
      <returns>**true** if the current source media is audio-only, otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsAudioOnlyProperty">
      <summary>Identifies the IsAudioOnly dependency property.</summary>
      <returns>The identifier for the IsAudioOnly dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsFullWindow">
      <summary>Gets a value that specifies if the MediaElement is rendering in full window mode. Setting this property enables or disables full window rendering.</summary>
      <returns>**true** if the MediaElement is in full window mode; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsFullWindowProperty">
      <summary>Identifies the IsFullWindow dependency property.</summary>
      <returns>The identifier for the IsFullWindow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsLooping">
      <summary>Gets or sets a value that describes whether the media source currently loaded in the media engine should automatically set the position to the media start after reaching its end.</summary>
      <returns>**true** to loop the media and play continuously. **false** to not loop the media automatically. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsLoopingProperty">
      <summary>Identifies the IsLooping dependency property.</summary>
      <returns>The identifier for the IsLooping dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsMuted">
      <summary>Gets or sets a value indicating whether the audio is muted.</summary>
      <returns>**true** if audio is muted; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsMutedProperty">
      <summary>Identifies the IsMuted  dependency property.</summary>
      <returns>The identifier for the IsMuted dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsStereo3DVideo">
      <summary>Gets a value that reports whether the current source media is a stereo 3-D video media file.</summary>
      <returns>**true** if the current source media is stereo 3-D video, otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.IsStereo3DVideoProperty">
      <summary>Identifies the IsStereo3DVideo dependency property.</summary>
      <returns>The identifier for the IsStereo3DVideo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Markers">
      <summary>Gets the collection of timeline markers associated with the currently loaded media file.</summary>
      <returns>The collection of timeline markers (represented as TimelineMarker objects) associated with the currently loaded media file. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalDuration">
      <summary>Gets the duration of the media file currently opened.</summary>
      <returns>The natural duration of the media. The default value is a Duration structure that evaluates as Automatic, which is the value held if you query this property before MediaOpened.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalDurationProperty">
      <summary>Identifies the NaturalDuration dependency property.</summary>
      <returns>The identifier for the NaturalDuration dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalVideoHeight">
      <summary>Gets the height of the video associated with the media.</summary>
      <returns>The height of the video that is associated with the media, in pixels. Audio files return 0. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalVideoHeightProperty">
      <summary>Identifies the NaturalVideoHeight dependency property.</summary>
      <returns>The identifier for the NaturalVideoHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalVideoWidth">
      <summary>Gets the width of the video associated with the media.</summary>
      <returns>The width of the video associated with the media. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.NaturalVideoWidthProperty">
      <summary>Identifies the NaturalVideoWidth dependency property.</summary>
      <returns>The identifier for the NaturalVideoWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlaybackRate">
      <summary>Gets or sets the playback rate ratio for the media engine.</summary>
      <returns>The playback rate ratio for the media. A value of 1.0 is the normal playback speed. Value can be negative to play backwards.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlaybackRateProperty">
      <summary>Identifies the PlaybackRate  dependency property.</summary>
      <returns>The identifier for the PlaybackRate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlayToPreferredSourceUri">
      <summary>Gets or sets the path to the preferred media source which enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.</summary>
      <returns>The path to the preferred media source.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlayToPreferredSourceUriProperty">
      <summary>Identifies the PlayToPreferredSourceUri dependency property.</summary>
      <returns>The identifier for the PlayToPreferredSourceUri dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlayToSource">
      <summary>Gets the information that is transmitted if the MediaElement is used for a "PlayTo" scenario.</summary>
      <returns>A reference object that carries the "PlayTo" source information.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PlayToSourceProperty">
      <summary>Identifies the PlayToSource dependency property.</summary>
      <returns>The identifier for the PlayToSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Position">
      <summary>Gets or sets the current position of progress through the media's playback time.</summary>
      <returns>The amount of time since the beginning of the media. The default is a **TimeSpan** with value "0:0:0".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PositionProperty">
      <summary>Identifies the Position dependency property.</summary>
      <returns>The identifier the Position dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PosterSource">
      <summary>Gets or sets the image source that is used for a placeholder image during MediaElement loading transition states.</summary>
      <returns>An image source for a transition ImageBrush that is applied to the MediaElement content area.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.PosterSourceProperty">
      <summary>Identifies the PosterSource dependency property.</summary>
      <returns>The identifier for the PosterSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.ProtectionManager">
      <summary>Gets or sets the dedicated object for media content protection that is associated with this MediaElement.</summary>
      <returns>The dedicated object for media content protection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.ProtectionManagerProperty">
      <summary>Identifies the ProtectionManager dependency property.</summary>
      <returns>The identifier for the ProtectionManager dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.RealTimePlayback">
      <summary>Gets or sets a value that configures the MediaElement for real-time communications scenarios.</summary>
      <returns>**true** to configure for real-time communications. **false** to not configure the MediaElement for real-time communications.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.RealTimePlaybackProperty">
      <summary>Identifies the RealTimePlayback dependency property.</summary>
      <returns>The identifier for the RealTimePlayback dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Source">
      <summary>Gets or sets a media source on the MediaElement.</summary>
      <returns>The source of the element, as an object describing a Uniform Resource Identifier (URI). The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.SourceProperty">
      <summary>Identifies the Source  dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Stereo3DVideoPackingMode">
      <summary>Gets or sets an enumeration value that determines the stereo 3-D video frame-packing mode for the current media source.</summary>
      <returns>A value of the enumeration. See Remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Stereo3DVideoPackingModeProperty">
      <summary>Identifies the Stereo3DVideoPackingMode dependency property.</summary>
      <returns>The identifier for the Stereo3DVideoPackingMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Stereo3DVideoRenderMode">
      <summary>Gets or sets an enumeration value that determines the stereo 3-D video render mode for the current media source.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Stereo3DVideoRenderModeProperty">
      <summary>Identifies the Stereo3DVideoRenderMode dependency property.</summary>
      <returns>The identifier for the Stereo3DVideoRenderMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Stretch">
      <summary>Gets or sets a value that describes how an MediaElement should be stretched to fill the destination rectangle.</summary>
      <returns>A value of the Stretch enumeration that specifies how the source visual media is rendered. The default value is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.TransportControls">
      <summary>Gets or sets the transport controls for the media.</summary>
      <returns>The transport controls for the media.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.Volume">
      <summary>Gets or sets the media's volume.</summary>
      <returns>The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaElement.VolumeProperty">
      <summary>Identifies the Volume  dependency property.</summary>
      <returns>The identifier for the Volume dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.BufferingProgressChanged">
      <summary>Occurs when the BufferingProgress property changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.CurrentStateChanged">
      <summary>Occurs when the value of the CurrentState property changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.DownloadProgressChanged">
      <summary>Occurs when the DownloadProgress property has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.MarkerReached">
      <summary>Occurs when a timeline marker is encountered during media playback.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.MediaEnded">
      <summary>Occurs when the MediaElement finishes playing audio or video.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.MediaFailed">
      <summary>Occurs when there is an error associated with the media Source.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.MediaOpened">
      <summary>Occurs when the media stream has been validated and opened, and the file headers have been read.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.PartialMediaFailureDetected">
      <summary>Occurs when one or more streams fails to decode in content containing multiple streams.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.RateChanged">
      <summary>Occurs when PlaybackRate or DefaultPlaybackRate value changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.SeekCompleted">
      <summary>Occurs when the seek point of a requested seek operation is ready for playback. </summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaElement.VolumeChanged">
      <summary>Occurs when the value of the Volume property changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.AddAudioEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)">
      <summary>Applies an audio effect to playback. Takes effect for the next source that is set on this MediaElement.</summary>
      <param name="effectID">The identifier for the desired effect.</param>
      <param name="effectOptional">**true** if the effect shouldn't block playback when the effect can't be used at run time. **false** if the effect should block playback when the effect can't be used at run time.</param>
      <param name="effectConfiguration">A property set that transmits property values to specific effects as selected by *effectID*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.AddVideoEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)">
      <summary>Applies a video effect to playback. Takes effect for the next source that is set on this MediaElement.</summary>
      <param name="effectID">The identifier for the desired effect.</param>
      <param name="effectOptional">**true** if the effect shouldn't block playback when the effect can't be used at run time. **false** if the effect should block playback when the effect can't be used at run time.</param>
      <param name="effectConfiguration">A property set that transmits property values to specific effects as selected by *effectID*.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.CanPlayType(System.String)">
      <summary>Returns an enumeration value that describes the likelihood that the current MediaElement and its client configuration can play that media source.</summary>
      <param name="type">A string that describes the desired type as a MIME string.</param>
      <returns>A value of the enumeration that describes the likelihood that the current media engine can play the source.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.GetAsCastingSource">
      <summary>Returns the media element as a CastingSource.</summary>
      <returns>The media element as a CastingSource.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.GetAudioStreamLanguage(Windows.Foundation.IReference{System.Int32})">
      <summary>Returns the RFC 1766 language for the specified audio stream.</summary>
      <param name="index">The index of the stream to get the language for.</param>
      <returns>The RFC 1766 language for the specified audio stream, expressed as a string (for example, "en-us").</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.Pause">
      <summary>Pauses media at the current position.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.Play">
      <summary>Plays media from the current position.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.RemoveAllEffects">
      <summary>Removes all effects for the next source set for this MediaElement.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.SetMediaStreamSource(Windows.Media.Core.IMediaSource)">
      <summary>Sets the Source of the MediaElement to the specified MediaStreamSource.</summary>
      <param name="source">The media source.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.SetPlaybackSource(Windows.Media.Playback.IMediaPlaybackSource)">
      <summary>Sets the source of the MediaElement to the specified media playback source.</summary>
      <param name="source">The media playback source.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.SetSource(Windows.Storage.Streams.IRandomAccessStream,System.String)">
      <summary>Sets the Source property using the specified stream and MIME type.</summary>
      <param name="stream">The stream that contains the media to load.</param>
      <param name="mimeType">The MIME type of the media resource, expressed as the string form typically seen in HTTP headers and requests. The empty string "" can be passed in as the *mimeType* value if the MIME type is unknown.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaElement.Stop">
      <summary>Stops and resets media to be played from the beginning.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MediaPlayerElement">
      <summary>Represents an object that uses a MediaPlayer to render audio and video to the display.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaPlayerElement.#ctor">
      <summary>Initializes a new instance of the MediaPlayerElement class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.AreTransportControlsEnabled">
      <summary>Gets or sets a value that determines whether the standard transport controls are enabled.</summary>
      <returns>**true** if the standard transport controls are enabled; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.AreTransportControlsEnabledProperty">
      <summary>Identifies the AreTransportControlsEnabled dependency property.</summary>
      <returns>The identifier for the AreTransportControlsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlay">
      <summary>Gets or sets a value that indicates whether media will begin playback automatically when the Source property is set.</summary>
      <returns>**true** if playback is automatic; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlayProperty">
      <summary>Identifies the AutoPlay dependency property.</summary>
      <returns>The identifier for the AutoPlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindow">
      <summary>Gets or sets a value that specifies if the MediaPlayerElement is rendering in full window mode.</summary>
      <returns>**true** if the MediaPlayerElement is in full window mode; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindowProperty">
      <summary>Identifies the IsFullWindow dependency property.</summary>
      <returns>The identifier for the IsFullWindow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.MediaPlayer">
      <summary>Gets the MediaPlayer instance used to render media.</summary>
      <returns>The MediaPlayer instance used to render media.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.MediaPlayerProperty">
      <summary>Identifies the MediaPlayer dependency property.</summary>
      <returns>The identifier for the MediaPlayer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource">
      <summary>Gets or sets the image source that is used for a placeholder image during MediaPlayerElement loading transition states.</summary>
      <returns>An image source for a transition ImageBrush that is applied to the MediaPlayerElement content area.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSourceProperty">
      <summary>Identifies the PosterSource dependency property.</summary>
      <returns>The identifier for the PosterSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.Source">
      <summary>Gets or sets a media source on the MediaPlayerElement.</summary>
      <returns>The source of the media. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.SourceProperty">
      <summary>Identifies the Source dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.Stretch">
      <summary>Gets or sets a value that describes how an MediaPlayerElement should be stretched to fill the destination rectangle.</summary>
      <returns>A value of the Stretch enumeration that specifies how the source visual media is rendered. The default value is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerElement.TransportControls">
      <summary>Gets or sets the transport controls for the media.</summary>
      <returns>The transport controls for the media.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaPlayerElement.SetMediaPlayer(Windows.Media.Playback.MediaPlayer)">
      <summary>Sets the MediaPlayer instance used to render media.</summary>
      <param name="mediaPlayer">The new MediaPlayer instance used to render media.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter">
      <summary>Represents an object that displays a MediaPlayer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.#ctor">
      <summary>Initializes a new instance of the MediaPlayerPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.IsFullWindow">
      <summary>Gets or sets a value that specifies if the MediaPlayerPresenter is rendering in full window mode.</summary>
      <returns>**true** if the MediaPlayerPresenter is in full window mode; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.IsFullWindowProperty">
      <summary>Identifies the IsFullWindow dependency property.</summary>
      <returns>The identifier for the IsFullWindow dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.MediaPlayer">
      <summary>Gets or sets the MediaPlayer instance used to render media.</summary>
      <returns>The MediaPlayer instance used to render media.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.MediaPlayerProperty">
      <summary>Identifies the MediaPlayer dependency property.</summary>
      <returns>The identifier for the MediaPlayer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.Stretch">
      <summary>Gets or sets a value that describes how an MediaPlayerPresenter should be stretched to fill the destination rectangle.</summary>
      <returns>A value of the Stretch enumeration that specifies how the source visual media is rendered. The default value is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MediaTransportControls">
      <summary>Represents the playback controls for a media player element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaTransportControls.#ctor">
      <summary>Initializes a new instance of the MediaTransportControls class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.FastPlayFallbackBehaviour">
      <summary>Gets or sets a value that specifies how the fast-forward/fast-rewind buttons behave.</summary>
      <returns>A value of the enumeration that specifies how the fast-forward/fast-rewind buttons behave.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.FastPlayFallbackBehaviourProperty">
      <summary>Identifies the FastPlayFallbackBehaviour dependency property.</summary>
      <returns>The identifier for the FastPlayFallbackBehaviour dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompact">
      <summary>Gets or sets a value that indicates whether transport controls are shown on one row instead of two.</summary>
      <returns>**true** if the transport controls are shown in one row; **false** if the transport controls are shown in two rows. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayButtonVisible">
      <summary>Gets or sets a value that indicates whether the compact overlay button is shown.</summary>
      <returns>**true** to show the compact overlay button. **false** to hide the compact overlay button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayButtonVisibleProperty">
      <summary>Identifies the IsCompactOverlayButtonVisible dependency property.</summary>
      <returns>The identifier for the IsCompactOverlayButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayEnabled">
      <summary>Gets or sets a value that indicates whether a user can enter compact overlay mode.</summary>
      <returns>**true** to allow the user to enter compact overlay mode; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayEnabledProperty">
      <summary>Identifies the IsCompactOverlayEnabled dependency property.</summary>
      <returns>The identifier for the IsCompactOverlayEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompactProperty">
      <summary>Identifies the IsCompact  dependency property.</summary>
      <returns>The identifier for the IsCompact   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardButtonVisible">
      <summary>Gets or sets a value that indicates whether the fast forward button is shown.</summary>
      <returns>**true** to show the fast forward button. **false** to hide the fast forward button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardButtonVisibleProperty">
      <summary>Identifies the IsFastForwardButtonVisible dependency property.</summary>
      <returns>The identifier for the IsFastForwardButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardEnabled">
      <summary>Gets or sets a value that indicates whether a user can fast forward the media.</summary>
      <returns>**true** to allow the user to fast forward; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardEnabledProperty">
      <summary>Identifies the IsFastForwardEnabled dependency property.</summary>
      <returns>The identifier for the IsFastForwardEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindButtonVisible">
      <summary>Gets or sets a value that indicates whether the rewind button is shown.</summary>
      <returns>**true** to show the rewind button. **false** to hide the rewind button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindButtonVisibleProperty">
      <summary>Identifies the IsFastRewindButtonVisible dependency property.</summary>
      <returns>The identifier for the IsFastRewindButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindEnabled">
      <summary>Gets or sets a value that indicates whether a user can rewind the media.</summary>
      <returns>**true** to allow the user to rewind; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindEnabledProperty">
      <summary>Identifies the IsFastRewindEnabled dependency property.</summary>
      <returns>The identifier for the IsFastRewindEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFullWindowButtonVisible">
      <summary>Gets or sets a value that indicates whether the full screen button is shown.</summary>
      <returns>**true** to show the full screen button. **false** to hide the full screen button. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFullWindowButtonVisibleProperty">
      <summary>Identifies the IsFullWindowButtonVisible dependency property.</summary>
      <returns>The identifier for the IsFullWindowButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFullWindowEnabled">
      <summary>Gets or sets a value that indicates whether a user can play the media in full-screen mode.</summary>
      <returns>**true** to allow the user to play the media in full-screen mode; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFullWindowEnabledProperty">
      <summary>Identifies the IsFullWindowEnabled dependency property.</summary>
      <returns>The identifier for the IsFullWindowEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsNextTrackButtonVisible">
      <summary>Gets or sets a value that indicates whether the next track button is shown.</summary>
      <returns>**true** to show the next track button. **false** to hide the next track button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsNextTrackButtonVisibleProperty">
      <summary>Identifies the IsNextTrackButtonVisible dependency property.</summary>
      <returns>The identifier for the IsNextTrackButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateButtonVisible">
      <summary>Gets or sets a value that indicates whether the playback rate button is shown.</summary>
      <returns>**true** to show the playback rate button. **false** to hide the playback rate button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateButtonVisibleProperty">
      <summary>Identifies the IsPlaybackRateButtonVisible dependency property.</summary>
      <returns>The identifier for the IsPlaybackRateButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateEnabled">
      <summary>Gets or sets a value that indicates whether a user can adjust the playback rate of the media.</summary>
      <returns>**true** to allow the user to adjust the playback rate; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateEnabledProperty">
      <summary>Identifies the IsPlaybackRateEnabled dependency property.</summary>
      <returns>The identifier for the IsPlaybackRateEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPreviousTrackButtonVisible">
      <summary>Gets or sets a value that indicates whether the previous track button is shown.</summary>
      <returns>**true** to show the previous track button. **false** to hide the previous track button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPreviousTrackButtonVisibleProperty">
      <summary>Identifies the IsPreviousTrackButtonVisible dependency property.</summary>
      <returns>The identifier for the IsPreviousTrackButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatButtonVisible">
      <summary>Gets or sets a value that indicates whether the repeat button is shown.</summary>
      <returns>**true** to show the repeat button. **false** to hide the repeat button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatButtonVisibleProperty">
      <summary>Identifies the IsRepeatButtonVisible dependency property.</summary>
      <returns>The identifier for the IsRepeatButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatEnabled">
      <summary>Gets or sets a value that indicates whether a user repeat the playback of the media.</summary>
      <returns>**true** to allow the user to repeat the media; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatEnabledProperty">
      <summary>Identifies the IsRepeatEnabled dependency property.</summary>
      <returns>The identifier for the IsRepeatEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekBarVisible">
      <summary>Gets or sets a value that indicates whether the seek bar is shown.</summary>
      <returns>**true** to show the seek bar. **false** to hide the seek bar. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekBarVisibleProperty">
      <summary>Identifies the IsSeekBarVisible dependency property.</summary>
      <returns>The identifier for the IsSeekBarVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekEnabled">
      <summary>Gets or sets a value that indicates whether a user can use the seek bar to find a location in the media.</summary>
      <returns>**true** to allow the user to use the seek bar to find a location; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekEnabledProperty">
      <summary>Identifies the IsSeekEnabled dependency property.</summary>
      <returns>The identifier for the IsSeekEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardButtonVisible">
      <summary>Gets or sets a value that indicates whether the skip backward button is shown.</summary>
      <returns>**true** to show the skip backward button. **false** to hide the skip backward button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardButtonVisibleProperty">
      <summary>Identifies the IsSkipBackwardButtonVisible dependency property.</summary>
      <returns>The identifier for the IsSkipBackwardButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardEnabled">
      <summary>Gets or sets a value that indicates whether a user can skip backward in the media.</summary>
      <returns>**true** to allow the user to skip backward; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardEnabledProperty">
      <summary>Identifies the IsSkipBackwardEnabled dependency property.</summary>
      <returns>The identifier for the IsSkipBackwardEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardButtonVisible">
      <summary>Gets or sets a value that indicates whether the skip forward button is shown.</summary>
      <returns>**true** to show the skip forward button. **false** to hide the skip forward button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardButtonVisibleProperty">
      <summary>Identifies the IsSkipForwardButtonVisible dependency property.</summary>
      <returns>The identifier for the IsSkipForwardButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardEnabled">
      <summary>Gets or sets a value that indicates whether a user can skip forward in the media.</summary>
      <returns>**true** to allow the user to skip forward; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardEnabledProperty">
      <summary>Identifies the IsSkipForwardEnabled dependency property.</summary>
      <returns>The identifier for the IsSkipForwardEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopButtonVisible">
      <summary>Gets or sets a value that indicates whether the stop button is shown.</summary>
      <returns>**true** to show the stop button. **false** to hide the stop button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopButtonVisibleProperty">
      <summary>Identifies the IsStopButtonVisible dependency property.</summary>
      <returns>The identifier for the IsStopButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopEnabled">
      <summary>Gets or sets a value that indicates whether a user can stop the media playback.</summary>
      <returns>**true** to allow the user to stop playback; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopEnabledProperty">
      <summary>Identifies the IsStopEnabled dependency property.</summary>
      <returns>The identifier for the IsStopEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeButtonVisible">
      <summary>Gets or sets a value that indicates whether the volume button is shown.</summary>
      <returns>**true** to show the volume button. **false** to hide the volume button. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeButtonVisibleProperty">
      <summary>Identifies the IsVolumeButtonVisible dependency property.</summary>
      <returns>The identifier for the IsVolumeButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeEnabled">
      <summary>Gets or sets a value that indicates whether a user can adjust the volume of the media.</summary>
      <returns>**true** to allow the user to adjust the volume; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeEnabledProperty">
      <summary>Identifies the IsVolumeEnabled dependency property.</summary>
      <returns>The identifier for the IsVolumeEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomButtonVisible">
      <summary>Gets or sets a value that indicates whether the zoom button is shown.</summary>
      <returns>**true** to show the zoom button. **false** to hide the zoom button. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomButtonVisibleProperty">
      <summary>Identifies the IsZoomButtonVisible dependency property.</summary>
      <returns>The identifier for the IsZoomButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomEnabled">
      <summary>Gets or sets a value that indicates whether a user can zoom the media.</summary>
      <returns>**true** to allow the user to zoom; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomEnabledProperty">
      <summary>Identifies the IsZoomEnabled dependency property.</summary>
      <returns>The identifier for the IsZoomEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.ShowAndHideAutomatically">
      <summary>Gets or sets a value that indicates whether the controls are shown and hidden automatically.</summary>
      <returns>**true** if the controls are shown and hidden automatically; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControls.ShowAndHideAutomaticallyProperty">
      <summary>Identifies the ShowAndHideAutomatically dependency property.</summary>
      <returns>The identifier for the ShowAndHideAutomatically dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MediaTransportControls.ThumbnailRequested">
      <summary>Occurs whenever the app needs to display a thumbnail adjacent to the seek bar when the user performs a seek operation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaTransportControls.Hide">
      <summary>Hides the transport controls if they're shown.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaTransportControls.Show">
      <summary>Shows the tranport controls if they're hidden.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper">
      <summary>Provides properties and methods to customize media transport controls.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper.DropoutOrderProperty">
      <summary>Identifies the MediaTransportControlsHelper.DropoutOrder  XAML attached property.</summary>
      <returns>The identifier for the MediaTransportControlsHelper.DropoutOrder  XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper.GetDropoutOrder(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the MediaTransportControlsHelper.DropoutOrder  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The value to set. (The dropout priority of the control relative to other transport controls.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper.SetDropoutOrder(Microsoft.UI.Xaml.UIElement,Windows.Foundation.IReference{System.Int32})">
      <summary>Sets the value of the MediaTransportControlsHelper.DropoutOrder  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The dropout priority of the control relative to other transport controls.)</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBar">
      <summary>Represents a specialized container that presents a set of menus in a horizontal row, typically at the top of an app window.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBar.#ctor">
      <summary>Initializes a new instance of the MenuBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBar.Items">
      <summary>Gets the collection of top-level menu items.</summary>
      <returns>The collection of top-level menu items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBar.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBarItem">
      <summary>Represents a top-level menu in a MenuBar control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBarItem.#ctor">
      <summary>Initializes a new instance of the MenuBarItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.Items">
      <summary>Gets the collection of commands in a MenuBar menu.</summary>
      <returns>The collection of commands in a MenuBar menu.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.Title">
      <summary>Gets or sets the text label for a MenuBar menu.</summary>
      <returns>The text label for this menu. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
      <returns>The identifier for the Title dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBarItemFlyout">
      <summary>Represents the flyout of a MenuBar item.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBarItemFlyout.#ctor">
      <summary>Initializes a new instance of the MenuBarItemFlyout class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyout">
      <summary>Represents a flyout that displays a menu of commands.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyout.#ctor">
      <summary>Initializes a new instance of the MenuFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyout.Items">
      <summary>Gets the collection used to generate the content of the menu.</summary>
      <returns>The collection that is used to generate the content of the menu, if it exists; otherwise, **null**. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyout.MenuFlyoutPresenterStyle">
      <summary>Gets or sets the style that is used when rendering the MenuFlyout.</summary>
      <returns>The style that is used when rendering the MenuFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyout.MenuFlyoutPresenterStyleProperty">
      <summary>Identifies the MenuFlyoutPresenterStyle dependency property.</summary>
      <returns>The identifier for the MenuFlyoutPresenterStyle dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyout.ShowAt(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Point)">
      <summary>Shows the flyout placed at the specified offset in relation to the specified target element.</summary>
      <param name="targetElement">The element to use as the flyout's placement target.</param>
      <param name="point">The point at which to offset the flyout from the specified target element.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyoutItem">
      <summary>Represents a command in a MenuFlyout control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.#ctor">
      <summary>Initializes a new instance of the MenuFlyoutItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Command">
      <summary>Gets or sets the command to invoke when the item is pressed.</summary>
      <returns>The command to invoke when the item is pressed. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CommandParameter">
      <summary>Gets or sets the parameter to pass to the Command property.</summary>
      <returns>The parameter to pass to the Command property. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Icon">
      <summary>Gets or sets the graphic content of the menu flyout item.</summary>
      <returns>The graphic content of the menu flyout item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.IconProperty">
      <summary>Identifies the **Icon** dependency property.</summary>
      <returns>The identifier for the **Icon** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.KeyboardAcceleratorTextOverride">
      <summary>Gets or sets a string that overrides the default key combination string associated with a keyboard accelerator.</summary>
      <returns>The string to replace the default key combination string. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.KeyboardAcceleratorTextOverrideProperty">
      <summary>Identifies the MenuFlyoutItem.KeyboardAcceleratorTextOverride dependency property.</summary>
      <returns>The identifier for the MenuFlyoutItem.KeyboardAcceleratorTextOverride dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a MenuFlyoutItem control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Text">
      <summary>Gets or sets the text content of a MenuFlyoutItem.</summary>
      <returns>A string that specifies the text content of this MenuFlyoutItem. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Click">
      <summary>Occurs when a menu item is clicked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase">
      <summary>Represents the base class for items in a MenuFlyout control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter">
      <summary>Displays the content of a MenuFlyout control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.#ctor">
      <summary>Initializes a new instance of the MenuFlyoutPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.IsDefaultShadowEnabled">
      <summary>Gets or sets a value that indicates whether the default shadow effect is shown.</summary>
      <returns>**true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.IsDefaultShadowEnabledProperty">
      <summary>Identifies the IsDefaultShadowEnabled dependency property.</summary>
      <returns>The identifier for the IsDefaultShadowEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as TemplateBinding sources when defining templates for a MenuFlyoutPresenter control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator">
      <summary>Represents a horizontal line that separates items in an MenuFlyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator.#ctor">
      <summary>Initializes a new instance of the MenuFlyoutSeparator class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem">
      <summary>Represents a menu item that displays a sub-menu in a MenuFlyout control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.#ctor">
      <summary>Initializes a new instance of the MenuFlyoutSubItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Icon">
      <summary>Gets or sets the graphic content of the menu flyout subitem.</summary>
      <returns>The graphic content of the menu flyout subitem.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.IconProperty">
      <summary>Identifies the **Icon** dependency property.</summary>
      <returns>The identifier for the **Icon** dependency property</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Items">
      <summary>Gets the collection used to generate the content of the sub-menu.</summary>
      <returns>The collection that is used to generate the content of the sub-menu, if it exists; otherwise, **null**. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Text">
      <summary>Gets or sets the text content of a MenuFlyoutSubItem.</summary>
      <returns>A string that specifies the text content of this MenuFlyoutSubItem. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationView">
      <summary>Represents a container that enables navigation of app content. It has a header, a view for the main content, and a menu pane for navigation commands.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.#ctor">
      <summary>Initializes a new instance of the NavigationView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader">
      <summary>Gets or sets a value that indicates whether the header is always visible.</summary>
      <returns>**true** if the header is always visible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeaderProperty">
      <summary>Identifies the AlwaysShowHeader dependency property.</summary>
      <returns>The identifier for the AlwaysShowHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox">
      <summary>Gets or sets an AutoSuggestBox to be displayed in the NavigationView.</summary>
      <returns>An AutoSuggestBox box to be displayed in the NavigationView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBoxProperty">
      <summary>Identifies the AutoSuggestBox dependency property.</summary>
      <returns>The identifier for the AutoSuggestBox dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth">
      <summary>Gets or sets the minimum window width at which the NavigationView enters Compact display mode.</summary>
      <returns>The minimum window width at which the NavigationView enters Compact display mode. The default is 641 pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidthProperty">
      <summary>Identifies the CompactModeThresholdWidth dependency property.</summary>
      <returns>The identifier for the CompactModeThresholdWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength">
      <summary>Gets or sets the width of the NavigationView pane in its compact display mode.</summary>
      <returns>The width of the pane in its compact display mode. The default is 48 device-independent pixel (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLengthProperty">
      <summary>Identifies the CompactPaneLength dependency property.</summary>
      <returns>The identifier for the CompactPaneLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay">
      <summary>Gets or sets a UI element that is shown at the top of the control, below the pane if PaneDisplayMode is Top.</summary>
      <returns>The element that is shown at the top of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlayProperty">
      <summary>Identifies the ContentOverlay dependency property.</summary>
      <returns>The identifier for the ContentOverlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode">
      <summary>Gets a value that specifies how the pane and content areas of a NavigationView are being shown.</summary>
      <returns>A value of the enumeration that specifies how the pane and content areas of a NavigationView are being shown.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.DisplayModeProperty">
      <summary>Identifies the DisplayMode dependency property.</summary>
      <returns>The identifier for the DisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth">
      <summary>Gets or sets the minimum window width at which the NavigationView enters **Expanded** display mode.</summary>
      <returns>The minimum window width at which the NavigationView enters **Expanded** display mode. The default is 1008 pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidthProperty">
      <summary>Identifies the ExpandedModeThresholdWidth dependency property.</summary>
      <returns>The identifier for the ExpandedModeThresholdWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.Header">
      <summary>Gets or sets the header content.</summary>
      <returns>The header content for the NavigationView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the control's header.</summary>
      <returns>The DataTemplate used to display the control's header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible">
      <summary>Gets or sets a value that indicates whether the back button is enabled or disabled.</summary>
      <returns>A value of the enumeration that specifies the visibility of the NavigationView back button. The default is "Auto".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisibleProperty">
      <summary>Identifies the IsBackButtonVisible dependency property.</summary>
      <returns>The identifier for the IsBackButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled">
      <summary>Gets or sets a value that indicates whether the back button is enabled or disabled.</summary>
      <returns>**true** if the back button is enabled; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabledProperty">
      <summary>Identifies the IsBackEnabled dependency property.</summary>
      <returns>The identifier for the IsBackEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen">
      <summary>Gets or sets a value that specifies whether the NavigationView pane is expanded to its full width.</summary>
      <returns>**true** if the pane is expanded to its full width; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpenProperty">
      <summary>Identifies the IsPaneOpen dependency property.</summary>
      <returns>The identifier for the IsPaneOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible">
      <summary>Gets or sets a value that indicates whether the menu toggle button is shown.</summary>
      <returns>**true** if the menu button is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisibleProperty">
      <summary>Identifies the IsPaneToggleButtonVisible dependency property.</summary>
      <returns>The identifier for the IsPaneToggleButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible">
      <summary>Gets or sets a value that determines whether the pane is shown.</summary>
      <returns>**true** is the pane is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisibleProperty">
      <summary>Identifies the IsPaneVisible dependency property.</summary>
      <returns>The identifier for the IsPaneVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible">
      <summary>Gets or sets a value that indicates whether the settings button is shown.</summary>
      <returns>**true** if the settings button is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisibleProperty">
      <summary>Identifies the IsSettingsVisible dependency property.</summary>
      <returns>The identifier for the IsSettingsVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the menu item containers.</summary>
      <returns>The style applied to the item containers. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleProperty">
      <summary>Identifies the MenuItemContainerStyle dependency property.</summary>
      <returns>The identifier for the MenuItemContainerStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.</summary>
      <returns>A custom StyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelectorProperty">
      <summary>Identifies the MenuItemContainerStyleSelector dependency property.</summary>
      <returns>The identifier for the MenuItemContainerStyleSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItems">
      <summary>Gets the collection of menu items displayed in the NavigationMenu.</summary>
      <returns>The collection of menu items displayed in the NavigationMenu. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsProperty">
      <summary>Identifies the MenuItems dependency property.</summary>
      <returns>The identifier for the MenuItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource">
      <summary>Gets or sets an object source used to generate the content of the NavigationView menu.</summary>
      <returns>The object that is used to generate the content of the NavigationView menu. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSourceProperty">
      <summary>Identifies the MenuItemsSource dependency property.</summary>
      <returns>The identifier for the MenuItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each menu item.</summary>
      <returns>The template that specifies the visualization of the menu data objects. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateProperty">
      <summary>Identifies the MenuItemTemplate dependency property.</summary>
      <returns>The identifier for the MenuItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.</summary>
      <returns>A reference to a custom DataTemplateSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelectorProperty">
      <summary>Identifies the MenuItemTemplateSelector dependency property.</summary>
      <returns>The identifier for the MenuItemTemplateSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength">
      <summary>Gets or sets the width of the NavigationView pane when it's fully expanded.</summary>
      <returns>The width of the NavigationView pane when it's fully expanded. The default is 320 device-independent pixel (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLengthProperty">
      <summary>Identifies the OpenPaneLength dependency property.</summary>
      <returns>The identifier for the OpenPaneLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode">
      <summary>Gets or sets a value that indicates what text label is shown for the overflow menu.</summary>
      <returns>A value of the enumeration that indicates what text label is shown for the overflow menu. The default is **MoreLabel**, which shows the text "More".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelModeProperty">
      <summary>Identifies the OverflowLabelMode dependency property.</summary>
      <returns>The identifier for the OverflowLabelMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent">
      <summary>Gets or sets a UI element that is shown in the NavigationView pane.</summary>
      <returns>The element that is shown in the NavigationView pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContentProperty">
      <summary>Identifies the PaneCustomContent dependency property.</summary>
      <returns>The identifier for the PaneCustomContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode">
      <summary>Gets or sets a value that indicates how and where the NavigationView pane is shown.</summary>
      <returns>A value of the enumeration that indicates how and where the NavigationView pane is shown. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty">
      <summary>Identifies the PaneDisplayMode dependency property.</summary>
      <returns>The identifier for the PaneDisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter">
      <summary>Gets or sets the content for the pane footer.</summary>
      <returns>The content of the pane footer. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneFooterProperty">
      <summary>Identifies the PaneFooter dependency property.</summary>
      <returns>The identifier for the PaneFooter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader">
      <summary>Gets or sets the content for the pane header.</summary>
      <returns>The content of the pane header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneHeaderProperty">
      <summary>Identifies the PaneHeader dependency property.</summary>
      <returns>The identifier for the PaneHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle">
      <summary>Gets or sets the label adjacent to the menu icon when the NavigationView pane is open.</summary>
      <returns>The label adjacent to the menu icon when the pane is open. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneTitleProperty">
      <summary>Identifies the PaneTitle dependency property.</summary>
      <returns>The identifier for the PaneTitle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle">
      <summary>Gets or sets the Style that defines the look of the menu toggle button.</summary>
      <returns>The Style that defines the look of the menu toggle button. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyleProperty">
      <summary>Identifies the PaneToggleButtonStyle dependency property.</summary>
      <returns>The identifier for the PaneToggleButtonStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The selected item. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>The identifier for the SelectedItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus">
      <summary>Gets or sets a value that indicates whether item selection changes when keyboard focus changes.</summary>
      <returns>A value of the enumeration that indicates whether selection changes when keyboard focus changes. The default is **Disabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocusProperty">
      <summary>Identifies the SelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem">
      <summary>Gets the navigation item that represents the entry point to app settings.</summary>
      <returns>The item that represents the entry point to app settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SettingsItemProperty">
      <summary>Identifies the SettingsItem dependency property.</summary>
      <returns>The identifier for the SettingsItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled">
      <summary>Gets or sets a value that indicates when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView.</summary>
      <returns>A value of the enumeration that indicates when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView. The default is **Never**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabledProperty">
      <summary>Identifies the ShoulderNavigationEnabled dependency property.</summary>
      <returns>The identifier for the ShoulderNavigationEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a NavigationView control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettingsProperty">
      <summary>Identifies the TemplateSettings dependency property.</summary>
      <returns>The identifier for the TemplateSettings dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.BackRequested">
      <summary>Occurs when the back button receives an interaction such as a click or tap.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.DisplayModeChanged">
      <summary>Occurs when the DisplayMode property changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.ItemInvoked">
      <summary>Occurs when an item in the menu receives an interaction such as a click or tap.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneClosed">
      <summary>Occurs when the NavigationView pane is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneClosing">
      <summary>Occurs when the NavigationView pane is closing.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneOpened">
      <summary>Occurs when the NavigationView pane is opened.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneOpening">
      <summary>Occurs when the NavigationView pane is opening.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.ContainerFromMenuItem(System.Object)">
      <summary>Returns the container corresponding to the specified menu item.</summary>
      <param name="item">The menu item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified menu item, if the item has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible">
      <summary>Defines constants that specify whether the back button is visible in NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto">
      <summary>The system chooses whether or not to display the back button, depending on the device/form factor. On phones, tablets, desktops, and hubs, the back button is visible. On Xbox/TV, the back button is collapsed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed">
      <summary>Do not display the back button in NavigationView, and do not reserve space for it in layout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible">
      <summary>Display the back button in NavigationView.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs">
      <summary>Provides event data for the NavigationView.BackRequested event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode">
      <summary>Defines constants that specify how the pane is shown in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact">
      <summary>The pane always shows as a narrow sliver which can be opened to full width.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded">
      <summary>The pane stays open alongside the content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal">
      <summary>Only the menu button remains fixed. The pane shows and hides as needed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs">
      <summary>Provides data for the NavigationView.DisplayModeChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs.DisplayMode">
      <summary>Gets the new display mode.</summary>
      <returns>The new display mode.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItem">
      <summary>Represents the container for an item in a NavigationView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItem.#ctor">
      <summary>Initializes a new instance of the NavigationViewItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength">
      <summary>Gets the CompactPaneLength of the NavigationView that hosts this item.</summary>
      <returns>The CompactPaneLength of the NavigationView that hosts this item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLengthProperty">
      <summary>Identifies the CompactPaneLength dependency property.</summary>
      <returns>The identifier for the CompactPaneLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon">
      <summary>Gets or sets the icon to show next to the menu item text.</summary>
      <returns>The icon to show next to the menu item text. The default in **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
      <returns>The identifier for the Icon dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked">
      <summary>Gets or sets a value that indicates whether invoking a navigation menu item also selects it.</summary>
      <returns>**true** if invoking a navigation menu item also selects it; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvokedProperty">
      <summary>Identifies the SelectsOnInvoked dependency property.</summary>
      <returns>The identifier for the SelectsOnInvoked dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemBase">
      <summary>Base class for NavigationView menu items.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemHeader">
      <summary>Represents a header for a group of menu items in a NavigationMenu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemHeader.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemHeader class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs">
      <summary>Provides event data for the NavigationView.ItemInvoked event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemInvokedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.InvokedItem">
      <summary>Gets a reference to the invoked item.</summary>
      <returns>The invoked item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.InvokedItemContainer">
      <summary>Gets the container for the invoked item.</summary>
      <returns>The container for the invoked item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.IsSettingsInvoked">
      <summary>Gets a value that indicates whether the **InvokedItem** is the menu item for Settings.</summary>
      <returns>**true** if the **InvokedItem** is the menu item for Settings; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.RecommendedNavigationTransitionInfo">
      <summary>Gets the navigation transition recommended for the direction of the navigation.</summary>
      <returns>The navigation transition recommended for the direction of the navigation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator">
      <summary>Represents a line that separates menu items in a NavigationMenu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemSeparator class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewList">
      <summary>Represents a control that displays menu items in a NavigationView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewList.#ctor">
      <summary>Initializes a new instance of the NavigationViewList class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode">
      <summary>Defines constants that specify the label for the overflow button in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel">
      <summary>The text label "More" is shown next to the chevron.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel">
      <summary>No text label is shown, only a chevron.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs">
      <summary>Provides data for the NavigationView.PaneClosing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>**true** to cancel the event; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode">
      <summary>Defines constants that specify how and where the NavigationView pane is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto">
      <summary>The pane is shown on the left side of the control, and changes between minimal, compact, and full states depending on the width of the window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left">
      <summary>The pane is shown on the left side of the control in its fully open state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact">
      <summary>The pane is shown on the left side of the control. Only the pane icons are shown by default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal">
      <summary>The pane is shown on the left side of the control. Only the pane menu button is shown by default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top">
      <summary>The pane is shown at the top of the control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs">
      <summary>Provides data for the NavigationView.SelectionChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.IsSettingsSelected">
      <summary>Gets a value that indicates whether the **SelectedItem** is the menu item for Settings.</summary>
      <returns>**true** if the **SelectedItem** is the menu item for Settings; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.RecommendedNavigationTransitionInfo">
      <summary>Gets the navigation transition recommended for the direction of the navigation.</summary>
      <returns>The navigation transition recommended for the direction of the navigation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.SelectedItem">
      <summary>Gets the newly selected menu item.</summary>
      <returns>The newly selected menu item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.SelectedItemContainer">
      <summary>Gets the container for the selected item.</summary>
      <returns>The container for the selected item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus">
      <summary>Defines constants that specify whether item selection changes when keyboard focus changes in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled">
      <summary>Selection does not change when keyboard focus changes.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled">
      <summary>Selection changes when keyboard focus changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled">
      <summary>Defines constants that specify when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always">
      <summary>Gamepad bumpers always navigate the top-level navigation items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never">
      <summary>Gamepad bumpers never navigate the top-level navigation items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus">
      <summary>Gamepad bumpers navigate the top-level navigation items when the SelectionFollowsFocus property is **Enabled**.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a NavigationView. Not intended for general use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.#ctor">
      <summary>Initializes a new instance of the NavigationViewTemplateSettings class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.BackButtonVisibility">
      <summary>Gets the visibility of the back button.</summary>
      <returns>The visibility of the back button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.BackButtonVisibilityProperty">
      <summary>Identifies the BackButtonVisibility dependency property.</summary>
      <returns>The identifier for the BackButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.LeftPaneVisibility">
      <summary>Gets the visibility of the left pane.</summary>
      <returns>The visibility of the left pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.LeftPaneVisibilityProperty">
      <summary>Identifies the LeftPaneVisibility dependency property.</summary>
      <returns>The identifier for the LeftPaneVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.OverflowButtonVisibility">
      <summary>Gets the visibility of the overflow button.</summary>
      <returns>The visibility of the overflow button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.OverflowButtonVisibilityProperty">
      <summary>Identifies the OverflowButtonVisibility dependency property.</summary>
      <returns>The identifier for the OverflowButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.PaneToggleButtonVisibility">
      <summary>Gets the visibility of the pane toggle button.</summary>
      <returns>The visibility of the pane toggle button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.PaneToggleButtonVisibilityProperty">
      <summary>Identifies the PaneToggleButtonVisibility dependency property.</summary>
      <returns>The identifier for the PaneToggleButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.SingleSelectionFollowsFocus">
      <summary>Gets the SelectionFollowsFocus value.</summary>
      <returns>The SelectionFollowsFocus value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.SingleSelectionFollowsFocusProperty">
      <summary>Identifies the SingleSelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SingleSelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPadding">
      <summary>Gets the padding value of the top pane.</summary>
      <returns>The padding value of the top pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaddingProperty">
      <summary>Identifies the TopPadding dependency property.</summary>
      <returns>The identifier for the TopPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaneVisibility">
      <summary>Gets the visibility of the top pane.</summary>
      <returns>The visibility of the top pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaneVisibilityProperty">
      <summary>Identifies the TopPaneVisibility dependency property.</summary>
      <returns>The identifier for the TopPaneVisibility dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Orientation">
      <summary>Defines constants that specify the different orientations that a control or layout can have.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Orientation.Horizontal">
      <summary>The control or layout should be horizontally oriented.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Orientation.Vertical">
      <summary>The control or layout should be vertically oriented.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Page">
      <summary>Represents content that a Frame control can navigate to.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Page.#ctor">
      <summary>Initializes a new instance of the Page class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.BottomAppBar">
      <summary>Gets a reference to an AppBar displayed at the bottom of the page, if any.</summary>
      <returns>A reference to an AppBar displayed at the bottom of the page, or **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.BottomAppBarProperty">
      <summary>Identifies the BottomAppBar dependency property.</summary>
      <returns>The identifier for the BottomAppBar dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.Frame">
      <summary>Gets the controlling Frame for the Page content.</summary>
      <returns>The controlling Frame for the Page content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.FrameProperty">
      <summary>Identifies the Frame dependency property.</summary>
      <returns>The identifier for the Frame dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.NavigationCacheMode">
      <summary>Gets or sets the navigation mode that indicates whether this Page is cached, and the period of time that the cache entry should persist.</summary>
      <returns>A value of the enumeration. The default is **Disabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.TopAppBar">
      <summary>Gets a reference to an AppBar displayed at the top of the page, if any.</summary>
      <returns>A reference to an AppBar displayed at the top of the page, or **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Page.TopAppBarProperty">
      <summary>Identifies the TopAppBar dependency property.</summary>
      <returns>The identifier for the TopAppBar dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Page.OnNavigatedFrom(Microsoft.UI.Xaml.Navigation.NavigationEventArgs)">
      <summary>Invoked immediately after the Page is unloaded and is no longer the current source of a parent Frame.</summary>
      <param name="e">Event data that can be examined by overriding code. The event data is representative of the navigation that has unloaded the current Page.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Page.OnNavigatedTo(Microsoft.UI.Xaml.Navigation.NavigationEventArgs)">
      <summary>Invoked when the Page is loaded and becomes the current source of a parent Frame.</summary>
      <param name="e">Event data that can be examined by overriding code. The event data is representative of the pending navigation that will load the current Page. Usually the most relevant property to examine is Parameter.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Page.OnNavigatingFrom(Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
      <summary>Invoked immediately before the Page is unloaded and is no longer the current source of a parent Frame.</summary>
      <param name="e">Event data that can be examined by overriding code. The event data is representative of the navigation that will unload the current Page unless canceled. The navigation can potentially be canceled by setting Cancel.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Panel">
      <summary>Provides a base class for all Panel elements. Use Panel elements to position and arrange child objects in a UI page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Panel.#ctor">
      <summary>Provides base class initialization behavior for Panel derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.Background">
      <summary>Gets or sets a Brush that fills the panel content area.</summary>
      <returns>The brush that fills the panel content area. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.BackgroundProperty">
      <summary>Identifies the Background  dependency property.</summary>
      <returns>The identifier for the Background  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.BackgroundTransition">
      <summary>Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.</summary>
      <returns>An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.Children">
      <summary>Gets the collection of child elements of the panel.</summary>
      <returns>The collection of child objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to child content of a Panel subclass.</summary>
      <returns>The strongly typed collection of Transition style elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitionsProperty">
      <summary>Identifies the ChildrenTransitions dependency property.</summary>
      <returns>The identifier for the ChildrenTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.IsItemsHost">
      <summary>Gets a value that indicates whether this Panel is a container for UI items that are generated by an ItemsControl.</summary>
      <returns>**true** if this instance of Panel is an items host; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Panel.IsItemsHostProperty">
      <summary>Identifies the IsItemsHost dependency property.</summary>
      <returns>The identifier for the IsItemsHost dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PanelScrollingDirection">
      <summary>Defines constants that specify the direction that a panel is scrolling.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PanelScrollingDirection.Backward">
      <summary>The panel is scrolling backward.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PanelScrollingDirection.Forward">
      <summary>The panel is scrolling forward.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PanelScrollingDirection.None">
      <summary>The panel is not scrolling.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind">
      <summary>Defines constants that specify how the source offset values of a ParallaxView are interpreted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind.Absolute">
      <summary>The source start/end offset value is interpreted as an absolute value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind.Relative">
      <summary>The source start/end offset value is added to the auto-computed source offset.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ParallaxView">
      <summary>Represents a container that ties the scroll position of a foreground element, such as a list, to a background element, such as an image. As you scroll through the foreground element, it animates the background element to create a parallax effect.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.#ctor">
      <summary>Initializes a new instance of the ParallaxView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.Child">
      <summary>Gets or sets the background content of the ParallaxView.</summary>
      <returns>The background content of the ParallaxView, typically an image. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.ChildProperty">
      <summary>Identifies the Child dependency property.</summary>
      <returns>The identifier for the Child dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalShift">
      <summary>Represents the horizontal range of motion of the child element.</summary>
      <returns>The horizontal range of motion. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalShiftProperty">
      <summary>Identifies the HorizontalShift dependency property.</summary>
      <returns>The identifier for the HorizontalShift dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceEndOffset">
      <summary>Represents the horizontal scroll offset at which the parallax motion ends.</summary>
      <returns>The horizontal scroll offset at which parallax motion ends. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceEndOffsetProperty">
      <summary>Identifies the HorizontalSourceEndOffset dependency property.</summary>
      <returns>The identifier for the HorizontalSourceEndOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceOffsetKind">
      <summary>Gets or sets a value that determines how the horizontal source offset values of a ParallaxView are interpreted.</summary>
      <returns>A value of the enumeration that determines how the horizontal source offset values of a ParallaxView are interpreted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceOffsetKindProperty">
      <summary>Identifies the HorizontalSourceOffsetKind dependency property.</summary>
      <returns>The identifier for the HorizontalSourceOffsetKind dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceStartOffset">
      <summary>Represents the horizontal scroll offset at which parallax motion starts.</summary>
      <returns>The horizontal scroll offset at which parallax motion starts. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceStartOffsetProperty">
      <summary>Identifies the HorizontalSourceStartOffset dependency property.</summary>
      <returns>The identifier for the HorizontalSourceStartOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsHorizontalShiftClamped">
      <summary>Gets or sets a value that indicates whether the horizontal parallax ratio is clampled to a specified percentage of the source scroll velocity.</summary>
      <returns>**true** if the parallax ratio is clampled to a specified percentage of the source scroll velocity; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsHorizontalShiftClampedProperty">
      <summary>Identifies the IsHorizontalShiftClamped dependency property.</summary>
      <returns>The identifier for the IsHorizontalShiftClamped dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsVerticalShiftClamped">
      <summary>Gets or sets a value that indicates whether the vertical parallax ratio is clampled to a specified percentage of the source scroll velocity.</summary>
      <returns>**true** if the parallax ratio is clampled to a specified percentage of the source scroll velocity; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsVerticalShiftClampedProperty">
      <summary>Identifies the IsVerticalShiftClamped dependency property.</summary>
      <returns>The identifier for the IsVerticalShiftClamped dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxHorizontalShiftRatio">
      <summary>Clamps the horizontal parallax ratio to the specified percentage of the source scroll velocity.</summary>
      <returns>The maximum percentage of the source scroll velocity. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxHorizontalShiftRatioProperty">
      <summary>Identifies the MaxHorizontalShiftRatio dependency property.</summary>
      <returns>The identifier for the MaxHorizontalShiftRatio dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxVerticalShiftRatio">
      <summary>Clamps the vertical parallax ratio to the specified percentage of the source scroll velocity.</summary>
      <returns>The maximum percentage of the source scroll velocity. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxVerticalShiftRatioProperty">
      <summary>Identifies the MaxVerticalShiftRatio dependency property.</summary>
      <returns>The identifier for the MaxVerticalShiftRatio dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.Source">
      <summary>The element that either is or contains the ScrollViewer that controls the parallax operation.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.SourceProperty">
      <summary>Identifies the Source dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalShift">
      <summary>Represents the vertical range of motion of the child element.</summary>
      <returns>The vertical range of motion. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalShiftProperty">
      <summary>Identifies the VerticalShift dependency property.</summary>
      <returns>The identifier for the VerticalShift dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceEndOffset">
      <summary>Represents the vertical scroll offset at which the parallax motion ends.</summary>
      <returns>The vertical scroll offset at which parallax motion ends. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceEndOffsetProperty">
      <summary>Identifies the VerticalSourceEndOffset dependency property.</summary>
      <returns>The identifier for the VerticalSourceEndOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceOffsetKind">
      <summary>Gets or sets a value that determines how the vertical source offset values of a ParallaxView are interpreted.</summary>
      <returns>A value of the enumeration that determines how the vertical source offset values of a ParallaxView are interpreted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceOffsetKindProperty">
      <summary>Identifies the VerticalSourceOffsetKind dependency property.</summary>
      <returns>The identifier for the VerticalSourceOffsetKind dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceStartOffset">
      <summary>Represents the vertical scroll offset at which parallax motion starts.</summary>
      <returns>The vertical scroll offset at which parallax motion starts. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceStartOffsetProperty">
      <summary>Identifies the VerticalSourceStartOffset dependency property.</summary>
      <returns>The identifier for the VerticalSourceStartOffset dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.RefreshAutomaticHorizontalOffsets">
      <summary>Forces the automatically computed horizontal offsets to be recomputed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.RefreshAutomaticVerticalOffsets">
      <summary>Forces the automatically computed vertical offsets to be recomputed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PasswordBox">
      <summary>Represents a control for entering passwords.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PasswordBox.#ctor">
      <summary>Initializes a new instance of the PasswordBox class</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.CanPasteClipboardContent">
      <summary>Gets a value that indicates whether clipboard content can be pasted into the control.</summary>
      <returns>**true** if clipboard content can be pasted into the control; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.CanPasteClipboardContentProperty">
      <summary>Identifies the CanPasteClipboardContent dependency property.</summary>
      <returns>The identifier for the CanPasteClipboardContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.InputScope">
      <summary>Gets or sets the context for input used by this PasswordBox.</summary>
      <returns>The input scope, which provides a hint at the type of text input expected by the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.InputScopeProperty">
      <summary>Identifies the InputScope dependency property.</summary>
      <returns>The identifier for the InputScope dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.IsPasswordRevealButtonEnabled">
      <summary>Gets or sets a value that specifies whether the visual UI of the PasswordBox includes a button element that toggles showing or hiding the typed characters. In Windows 10 and later, use PasswordRevealMode instead.</summary>
      <returns>**True** to show a password reveal button; **false** to not show a password reveal button. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.IsPasswordRevealButtonEnabledProperty">
      <summary>Identifies the IsPasswordRevealButtonEnabled dependency property.</summary>
      <returns>The identifier for the IsPasswordRevealButtonEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.MaxLength">
      <summary>Gets or sets the maximum length for passwords to be handled by this PasswordBox.</summary>
      <returns>An integer that specifies the maximum number of characters for passwords to be handled by this PasswordBox. A value of zero (0) means no limit. The default is 0 (no length limit).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.MaxLengthProperty">
      <summary>Identifies the MaxLength dependency property.</summary>
      <returns>The identifier for the MaxLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.Password">
      <summary>Gets or sets the password currently held by the PasswordBox.</summary>
      <returns>A string that represents the password currently held by the PasswordBox. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordChar">
      <summary>Gets or sets the masking character for the PasswordBox.</summary>
      <returns>A masking character to echo when the user enters text into the PasswordBox. The default value is a bullet character (●).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordCharProperty">
      <summary>Identifies the PasswordChar dependency property.</summary>
      <returns>The identifier for the PasswordChar dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordProperty">
      <summary>Identifies the Password dependency property.</summary>
      <returns>The identifier for the Password dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordRevealMode">
      <summary>Gets or sets a value that specifies whether the password is always, never, or optionally obscured.</summary>
      <returns>A value of the enumeration that specifies whether the password is always, never, or optionally obscured. The default is **Peek**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordRevealModeProperty">
      <summary>Identifies the PasswordRevealMode dependency property.</summary>
      <returns>The identifier for the PasswordRevealMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is entered. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PreventKeyboardDisplayOnProgrammaticFocus">
      <summary>Gets or sets a value that indicates whether the on-screen keyboard is shown when the control receives focus programmatically.</summary>
      <returns>**true** if the on-screen keyboard is not shown when the control receives focus programmatically; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.PreventKeyboardDisplayOnProgrammaticFocusProperty">
      <summary>Identifies the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</summary>
      <returns>The identifier for the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.SelectionFlyout">
      <summary>Gets or sets the flyout that is shown when text is selected, or **null** if no flyout is shown.</summary>
      <returns>The flyout that is shown when text is selected, or **null** if no flyout is shown. The default is an instance of TextCommandBarFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.SelectionFlyoutProperty">
      <summary>Identifies the SelectionFlyout dependency property.</summary>
      <returns>The identifier for the SelectionFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor">
      <summary>Gets or sets the brush used to highlight the selected text.</summary>
      <returns>The brush used to highlight the selected text. The default is a null brush from a pure code perspective, but the default control template for PasswordBox applies a theme resource brush for this in a runtime instance of a PasswordBox control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColorProperty">
      <summary>Identifies the SelectionHighlightColor dependency property.</summary>
      <returns>The identifier for the SelectionHighlightColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.TextReadingOrder">
      <summary>Gets or sets a value that indicates how the reading order is determined for the PasswordBox.</summary>
      <returns>A value that indicates how the reading order is determined for the PasswordBox. The default is **DetectFromContent**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBox.TextReadingOrderProperty">
      <summary>Identifies the TextReadingOrder dependency property.</summary>
      <returns>The identifier for the TextReadingOrder dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.PasswordBox.ContextMenuOpening">
      <summary>Occurs when the system processes an interaction that displays a context menu.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordChanged">
      <summary>Occurs when the value of the Password property changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.PasswordBox.PasswordChanging">
      <summary>Occurs synchronously when the text in the password box starts to change, but before it is rendered.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.PasswordBox.Paste">
      <summary>Occurs when text is pasted into the control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PasswordBox.PasteFromClipboard">
      <summary>Copies content from the Windows clipboard into the text control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PasswordBox.SelectAll">
      <summary>Selects all the characters in the PasswordBox.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs">
      <summary>Provides event data for the PasswordBox.PasswordChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs.IsContentChanging">
      <summary>Gets a value that indicates whether the event occured due to a change in the text content.</summary>
      <returns>**true** if a change to the text content caused the event; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PasswordRevealMode">
      <summary>Defines constants that specify the password reveal behavior of a PasswordBox.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PasswordRevealMode.Hidden">
      <summary>The password reveal button is not visible. The password is always obscured.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PasswordRevealMode.Peek">
      <summary>The password reveal button is visible. The password is not obscured while the button is pressed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PasswordRevealMode.Visible">
      <summary>The password reveal button is not visible. The password is not obscured.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PathIcon">
      <summary>Represents an icon that uses a vector path as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PathIcon.#ctor">
      <summary>Initializes a new instance of the PathIcon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIcon.Data">
      <summary>Gets or sets a Geometry that specifies the shape to be drawn. In XAML. this can also be set using a string that describes Move and draw commands syntax.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIcon.DataProperty">
      <summary>Identifies the Data dependency property.</summary>
      <returns>The identifier for the Data dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PathIconSource">
      <summary>Represents an icon source that uses a vector path as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PathIconSource.#ctor">
      <summary>Initializes a new instance of the PathIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIconSource.Data">
      <summary>Gets or sets a Geometry that specifies the shape to be drawn. In XAML. this can also be set using a string that describes Move and draw commands syntax.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIconSource.DataProperty">
      <summary>Identifies the Data dependency property.</summary>
      <returns>The identifier for the Data dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PersonPicture">
      <summary>Represents a control that displays the avatar image for a person, if one is available; if not, it displays the person's initials or a generic glyph.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PersonPicture.#ctor">
      <summary>Initializes a new instance of the PersonPicture class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph to display on the badge.</summary>
      <returns>The hexadecimal character code for the badge glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyphProperty">
      <summary>Identifies the BadgeGlyph dependency property.</summary>
      <returns>The identifier for the BadgeGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSource">
      <summary>Gets or sets the source of an image to display on the badge.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSourceProperty">
      <summary>Identifies the BadgeImageSource dependency property.</summary>
      <returns>The identifier for the BadgeImageSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumber">
      <summary>Gets or sets the contact number to display on the badge.</summary>
      <returns>The contact number to display on the badge.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumberProperty">
      <summary>Identifies the BadgeNumber dependency property.</summary>
      <returns>The identifier for the BadgeNumber dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeText">
      <summary>Gets or sets the contact text to display on the badge.</summary>
      <returns>The contact text to display on the badge.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeTextProperty">
      <summary>Identifies the BadgeText dependency property.</summary>
      <returns>The identifier for the BadgeText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.Contact">
      <summary>Gets or sets a Contact object that contains information about the person.</summary>
      <returns>A Contact object that contains information about the person.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ContactProperty">
      <summary>Identifies the Contact dependency property.</summary>
      <returns>The identifier for the Contact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.DisplayName">
      <summary>Gets or sets the contact's display name.</summary>
      <returns>The contact's display name.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.DisplayNameProperty">
      <summary>Identifies the DisplayName dependency property.</summary>
      <returns>The identifier for the DisplayName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.Initials">
      <summary>Gets or sets the contact's initials.</summary>
      <returns>The contact's initials.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.InitialsProperty">
      <summary>Identifies the Initials dependency property.</summary>
      <returns>The identifier for the Initials dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.IsGroup">
      <summary>Gets or sets a value that indicates whether the PersonPicture represents a group or an individual.</summary>
      <returns>**true** if the PersonPicture represents a group; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.IsGroupProperty">
      <summary>Identifies the IsGroup dependency property.</summary>
      <returns>The identifier for the IsGroup dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImage">
      <summary>Gets or sets a value that indicates whether a small image is displayed rather than a large image when both are available.</summary>
      <returns>**true** to display a small image even when a large image is available; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImageProperty">
      <summary>Identifies the PreferSmallImage dependency property.</summary>
      <returns>The identifier for the PreferSmallImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePicture">
      <summary>Gets or sets the source of the contact's profile picture.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePictureProperty">
      <summary>Identifies the ProfilePicture dependency property.</summary>
      <returns>The identifier for the ProfilePicture dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs">
      <summary>Provides data for the PickerConfirmed event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs.#ctor">
      <summary>Initializes a new instance of the PickerConfirmedEventArgs class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PickerFlyout">
      <summary>Represents a custom picker control. (Not recommended for Universal Windows Platform (UWP) app. See Flyout.)</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PickerFlyout.#ctor">
      <summary>Initializes a new instance of the PickerFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PickerFlyout.ConfirmationButtonsVisible">
      <summary>Gets or sets whether the confirmation buttons are visible.</summary>
      <returns>True of the confirmation buttons are visible; Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PickerFlyout.ConfirmationButtonsVisibleProperty">
      <summary>Identifies the ConfirmationButtonsVisible dependency property.</summary>
      <returns>The identifier of the ConfirmationButtonsVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PickerFlyout.Content">
      <summary>Gets or sets the content that is contained within the picker.</summary>
      <returns>The content of the user control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PickerFlyout.ContentProperty">
      <summary>Gets the identifier for the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.PickerFlyout.Confirmed">
      <summary>Occurs when the user has tapped a confirmation button to confirm the selection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PickerFlyout.ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Begins an asynchronous operation to show the flyout placed in relation to the specified element.</summary>
      <param name="target">The element to use as the flyout's placement target.</param>
      <returns>An asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PickerFlyoutPresenter">
      <summary>Represents a custom picker. (Not recommended for Universal Windows Platform (UWP) app. See Flyout.)</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Pivot">
      <summary>Represents a control that provides quick navigation of views within an app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Pivot.#ctor">
      <summary>Initializes a new instance of the Pivot type.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.HeaderFocusVisualPlacement">
      <summary>Gets or sets a value that specifies the style of focus visual used for pivot header items.</summary>
      <returns>A value of the enumeration that specifies the style of focus visual used for pivot header items. The default is **SelectedItemHeader**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.HeaderFocusVisualPlacementProperty">
      <summary>Identifies the HeaderFocusVisualPlacement dependency property.</summary>
      <returns>The identifier for the HeaderFocusVisualPlacement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.HeaderTemplate">
      <summary>Gets or sets the template for the Header property of PivotItem children.</summary>
      <returns>The template for the Header property of PivotItem children.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.IsHeaderItemsCarouselEnabled">
      <summary>Gets or sets a value that indicates whether the selected header moves to the first position.</summary>
      <returns>**true** if the selected header moves to the first position; **false** if headers always keep the same position. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.IsHeaderItemsCarouselEnabledProperty">
      <summary>Identifies the IsHeaderItemsCarouselEnabled dependency property.</summary>
      <returns>The identifier for the IsHeaderItemsCarouselEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.IsLocked">
      <summary>Gets or sets whether the Pivot is locked to show only the current PivotItem. While the Pivot is locked, all other PivotItems are removed, and the user cannot navigate to them. An example of locking is when the email list is put into a multi-select mode.</summary>
      <returns>**true** if the Pivot is locked; **false** if it is unlocked. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.IsLockedProperty">
      <summary>Identifies the IsLocked dependency property.</summary>
      <returns>The identifier for the IsLocked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.LeftHeader">
      <summary>Gets or sets the content for the header on the control's left side.</summary>
      <returns>The content of the header on the control's left side. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.LeftHeaderProperty">
      <summary>Identifies the LeftHeader dependency property.</summary>
      <returns>The identifier for the LeftHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.LeftHeaderTemplate">
      <summary>Gets or sets the template for the header on the control's left side.</summary>
      <returns>The template for the header on the control's left side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.LeftHeaderTemplateProperty">
      <summary>Identifies the LeftHeaderTemplate dependency property.</summary>
      <returns>The identifier for the LeftHeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.RightHeader">
      <summary>Gets or sets the content for the header on the control's right side.</summary>
      <returns>The content of the header on the control's right side. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.RightHeaderProperty">
      <summary>Identifies the RightHeader dependency property.</summary>
      <returns>The identifier for the RightHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.RightHeaderTemplate">
      <summary>Gets or sets the template for the header on the control's right side.</summary>
      <returns>The template for the header on the control's right side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.RightHeaderTemplateProperty">
      <summary>Identifies the RightHeaderTemplate dependency property.</summary>
      <returns>The identifier for the RightHeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.SelectedIndex">
      <summary>Gets or sets the zero-based index of the currently selected item in the Pivot.</summary>
      <returns>The zero-based index of the currently selected item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
      <returns>The identifier for the SelectedIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.SelectedItem">
      <summary>Gets or sets the currently selected item in the Pivot.</summary>
      <returns>The currently selected PivotItem or, if the Pivot is bound to data, the data item set as the Content of the currently selected PivotItem.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>The identifier for the SelectedItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.SlideInAnimationGroupProperty">
      <summary>Identifies the SlideInAnimationGroup XAML attached property.</summary>
      <returns>The identifier for the SlideInAnimationGroup XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.Title">
      <summary>Gets or sets the title to be optionally set above the headers.</summary>
      <returns>Returns String.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
      <returns>The identifier for the Title dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.TitleTemplate">
      <summary>Gets or sets the title template used for displaying the title above the headers area.</summary>
      <returns>The template that specifies the visualization of the title object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Pivot.TitleTemplateProperty">
      <summary>Identifies the TitleTemplate dependency property.</summary>
      <returns>The identifier for the TitleTemplate dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Pivot.PivotItemLoaded">
      <summary>Event for indicating that an item has fully loaded.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Pivot.PivotItemLoading">
      <summary>Event for offering an opportunity to dynamically load or change the content of a pivot item before it is displayed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Pivot.PivotItemUnloaded">
      <summary>Event for notifying that the pivot item has been completely unloaded from the visual pivot.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Pivot.PivotItemUnloading">
      <summary>Event for offering an opportunity to dynamically load, change, or remove the content of a pivot item as it is removed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Pivot.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Pivot.GetSlideInAnimationGroup(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Retrieves the animation group that a FrameworkElement belongs to.</summary>
      <param name="element">The FrameworkElement within the Pivot (such as a TextBlock ) that is to be animated.</param>
      <returns>The slide-in animation group that this FrameworkElement belongs to.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Pivot.SetSlideInAnimationGroup(Microsoft.UI.Xaml.FrameworkElement,Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup)">
      <summary>Assigns a FrameworkElement to a slide-in animation group so that element is animated at the same time as the other members of that group.</summary>
      <param name="element">The FrameworkElement within the Pivot (such as a TextBlock ) that is to be animated.</param>
      <param name="value">The slide-in animation group that this FrameworkElement belongs to. This element will be animated with all other elements that share the same group number.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement">
      <summary>Defines constants that specify the style of focus visual used for pivot header items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement.ItemHeaders">
      <summary>A single focus visual (rectangle) is drawn around all visible item headers.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement.SelectedItemHeader">
      <summary>The focus visual (underline) is drawn under the selected item header.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PivotItem">
      <summary>Represents the container for an item in a Pivot control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PivotItem.#ctor">
      <summary>Initializes a new instance of the PivotItem type.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PivotItem.Header">
      <summary>Gets or sets the header for the PivotItem.</summary>
      <returns>Returns Object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PivotItem.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PivotItemEventArgs">
      <summary>Event arguments for dynamically interacting with the PivotItem before use, allowing for delay load scenarios.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PivotItemEventArgs.#ctor">
      <summary>Initializes a new instance of the PivotItemEventArgs type</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PivotItemEventArgs.Item">
      <summary>Gets the pivot item instance.</summary>
      <returns>Returns PivotItem.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup">
      <summary>Defines constants that specify the different slide-in animation groups that Pivot elements can belong to.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup.Default">
      <summary>The element belongs to the default animation group. It slides in after the Pivot header.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup.GroupOne">
      <summary>The element belongs to the first animation group. It slides in after elements in the default group.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup.GroupThree">
      <summary>The element belongs to the third animation group. It slides in after elements in the second group.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup.GroupTwo">
      <summary>The element belongs to the second animation group. It slides in after elements in the first group.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ProgressBar">
      <summary>Represents a control that indicates the progress of an operation, where the typical visual appearance is a bar that animates a filled area as progress continues.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ProgressBar.#ctor">
      <summary>Initializes a new instance of the ProgressBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate">
      <summary>Gets or sets a value that indicates whether the progress bar reports generic progress with a repeating pattern or reports progress based on the Value property.</summary>
      <returns>**True** if the progress bar reports generic progress with a repeating pattern; **false** if the progress bar reports progress based on the Value property. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>Identifies the IsIndeterminate dependency property.</summary>
      <returns>The identifier for the IsIndeterminate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.ShowError">
      <summary>Gets or sets a value that indicates whether the progress bar should use visual states that communicate an **Error** state to the user.</summary>
      <returns>**True** if the progress bar should use visual states that communicate an **Error** state to the user; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.ShowErrorProperty">
      <summary>Identifies the ShowError dependency property.</summary>
      <returns>The identifier for the ShowError dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused">
      <summary>Gets or sets a value that indicates whether the progress bar should use visual states that communicate a **Paused** state to the user.</summary>
      <returns>**True** if the progress bar should use visual states that communicate a **Paused** state to the user; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.ShowPausedProperty">
      <summary>Identifies the ShowPaused dependency property.</summary>
      <returns>The identifier for the ShowPaused dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ProgressBar control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ProgressRing">
      <summary>Represents a control that indicates that an operation is ongoing. The typical visual appearance is a ring-shaped "spinner" that cycles an animation as progress continues.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ProgressRing.#ctor">
      <summary>Initializes a new instance of the ProgressRing class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressRing.IsActive">
      <summary>Gets or sets a value that indicates whether the ProgressRing is showing progress.</summary>
      <returns>**True** if the ProgressRing is showing progress; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressRing.IsActiveProperty">
      <summary>Identifies the IsActive dependency property.</summary>
      <returns>The identifier for the IsActive dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ProgressRing control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RadioButton">
      <summary>Represents a button that allows a user to select a single option from a group of options.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RadioButton.#ctor">
      <summary>Initializes a new instance of the RadioButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButton.GroupName">
      <summary>Gets or sets the name that specifies which RadioButton controls are mutually exclusive.</summary>
      <returns>The name that specifies which RadioButton controls are mutually exclusive. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButton.GroupNameProperty">
      <summary>Identifies the GroupName dependency property.</summary>
      <returns>The identifier for GroupName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingControl">
      <summary>Represents a control that lets a user enter a star rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingControl.#ctor">
      <summary>Initializes a new instance of the RatingControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.Caption">
      <summary>Gets or sets the text label for the control.</summary>
      <returns>The text label for the control. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.CaptionProperty">
      <summary>Identifies the Caption dependency property.</summary>
      <returns>The identifier for Caption dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.InitialSetValue">
      <summary>Gets or sets the initial set rating value.</summary>
      <returns>The initial set rating value. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.InitialSetValueProperty">
      <summary>Identifies the InitialSetValue dependency property.</summary>
      <returns>The identifier for InitialSetValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsClearEnabled">
      <summary>Gets or sets the value that determines if the user can remove the rating.</summary>
      <returns>**true** if the user can remove the rating; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsClearEnabledProperty">
      <summary>Identifies the IsClearEnabled dependency property.</summary>
      <returns>The identifier for IsClearEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsReadOnly">
      <summary>Gets or sets the value that determines if the user can change the rating.</summary>
      <returns>**true** if the rating is read-only; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
      <returns>The identifier for IsReadOnly dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ItemInfo">
      <summary>Gets or sets info about the visual states of the items that represent a rating.</summary>
      <returns>A RatingItemInfo-derived object that contains details about the visual states of the items that represent a rating.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ItemInfoProperty">
      <summary>Identifies the ItemInfo dependency property.</summary>
      <returns>The identifier for ItemInfo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.MaxRating">
      <summary>Gets or sets the maximum allowed rating value.</summary>
      <returns>The maximum allowed rating value. The default is 5.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.MaxRatingProperty">
      <summary>Identifies the MaxRating dependency property.</summary>
      <returns>The identifier for MaxRating dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.PlaceholderValue">
      <summary>Gets or sets the rating that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The rating that is displayed in the control when no value is entered. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.PlaceholderValueProperty">
      <summary>Identifies the PlaceholderValue dependency property.</summary>
      <returns>The identifier for PlaceholderValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.Value">
      <summary>Gets or sets the rating value.</summary>
      <returns>The rating value. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for Value dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RatingControl.ValueChanged">
      <summary>Occurs when the Value property has changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemFontInfo">
      <summary>Represents information about the visual states of font elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemFontInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.DisabledGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that is disabled.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.DisabledGlyphProperty">
      <summary>Identifies the DisabledGlyph dependency property.</summary>
      <returns>The identifier for DisabledGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.Glyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has been set by the user.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.GlyphProperty">
      <summary>Identifies the Glyph dependency property.</summary>
      <returns>The identifier for Glyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PlaceholderGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that is showing a placeholder value.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PlaceholderGlyphProperty">
      <summary>Identifies the PlaceholderGlyph dependency property.</summary>
      <returns>The identifier for PlaceholderGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has the pointer over it.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverGlyphProperty">
      <summary>Identifies the PointerOverGlyph dependency property.</summary>
      <returns>The identifier for PointerOverGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverPlaceholderGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element showing a placeholder value with the pointer over it.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverPlaceholderGlyphProperty">
      <summary>Identifies the PointerOverPlaceholderGlyph dependency property.</summary>
      <returns>The identifier for PointerOverPlaceholderGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.UnsetGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has not been set.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.UnsetGlyphProperty">
      <summary>Identifies the UnsetGlyph dependency property.</summary>
      <returns>The identifier for UnsetGlyph dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemImageInfo">
      <summary>Represents information about the visual states of image elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemImageInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.DisabledImage">
      <summary>Gets or sets an image that represents a rating element that is disabled.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.DisabledImageProperty">
      <summary>Identifies the DisabledImage dependency property.</summary>
      <returns>The identifier for DisabledImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.Image">
      <summary>Gets or sets an image that represents a rating element that has been set by the user.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.ImageProperty">
      <summary>Identifies the Image dependency property.</summary>
      <returns>The identifier for Image dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PlaceholderImage">
      <summary>Gets or sets an image that represents a rating element that is showing a placeholder value.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PlaceholderImageProperty">
      <summary>Identifies the PlaceholderImage dependency property.</summary>
      <returns>The identifier for PlaceholderImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverImage">
      <summary>Gets or sets an image that represents a rating element that has the pointer over it.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverImageProperty">
      <summary>Identifies the PointerOverImage dependency property.</summary>
      <returns>The identifier for PointerOverImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverPlaceholderImage">
      <summary>Gets or sets an image that represents a rating element showing a placeholder value with the pointer over it.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverPlaceholderImageProperty">
      <summary>Identifies the PointerOverPlaceholderImage dependency property.</summary>
      <returns>The identifier for PointerOverPlaceholderImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.UnsetImage">
      <summary>Gets or sets an image that represents a rating element that has not been set.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.UnsetImageProperty">
      <summary>Identifies the UnsetImage dependency property.</summary>
      <returns>The identifier for UnsetImage dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemInfo">
      <summary>Represents information about the visual states of the elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemInfo class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshContainer">
      <summary>Represents a container control that provides a RefreshVisualizer and pull-to-refresh functionality for scrollable content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshContainer.#ctor">
      <summary>Initializes a new instance of the RefreshContainer control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.PullDirection">
      <summary>Gets or sets a value that specifies the direction to pull to initiate a refresh.</summary>
      <returns>An enumeration value that specifies the direction to pull to initiate a refresh.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.PullDirectionProperty">
      <summary>Identifies the PullDirection dependency property.</summary>
      <returns>The identifier for the PullDirection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.Visualizer">
      <summary>Gets or sets the RefreshVisualizer for this container.</summary>
      <returns>The RefreshVisualizer for this container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.VisualizerProperty">
      <summary>Identifies the Visualizer dependency property.</summary>
      <returns>The identifier for the Visualizer dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshContainer.RefreshRequested">
      <summary>Occurs when an update of the content has been initiated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshContainer.RequestRefresh">
      <summary>Initiates an update of the content.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs">
      <summary>Provides event data.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs.InteractionRatio">
      <summary>Gets the interaction ratio value.</summary>
      <returns>The interaction ratio value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshPullDirection">
      <summary>Defines constants that specify the direction to pull a RefreshContainer to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.BottomToTop">
      <summary>Pull from bottom to top to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.LeftToRight">
      <summary>Pull from left to right to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.RightToLeft">
      <summary>Pull from right to left to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.TopToBottom">
      <summary>Pull from top to bottom to initiate a refresh.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs">
      <summary>Provides event data for RefreshRequested events.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs.GetDeferral">
      <summary>Gets a deferral object for managing the work done in the RefreshRequested event handler.</summary>
      <returns>A deferral object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs">
      <summary>Provides event data for the RefreshVisualizer.RefreshStateChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs.NewState">
      <summary>Gets a value that indicates the new state of the RefreshVisualizer.</summary>
      <returns>An enumeration value that indicates the new state of the RefreshVisualizer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs.OldState">
      <summary>Gets a value that indicates the previous state of the RefreshVisualizer.</summary>
      <returns>An enumeration value that indicates the previous state of the RefreshVisualizer.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizer">
      <summary>Represents a control that provides animated state indicators for content refresh.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshVisualizer.#ctor">
      <summary>Initializes a new instance of the RefreshVisualizer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.Content">
      <summary>Gets or sets the content of the visualizer.</summary>
      <returns>The content of the visualizer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.InfoProviderProperty">
      <summary>Identifies the InfoProvider dependency property.</summary>
      <returns>The identifier for the InfoProvider dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.Orientation">
      <summary>Gets or sets a value that indicates the orientation of the visualizer.</summary>
      <returns>A value of the enumeration that indicates the orientation of the visualizer. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.State">
      <summary>Gets a value that indicates the state of the visualizer.</summary>
      <returns>A value of the enumeration that indicates the state of the visualizer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.StateProperty">
      <summary>Identifies the State dependency property.</summary>
      <returns>The identifier for the State dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RefreshRequested">
      <summary>Occurs when an update of the content has been initiated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RefreshStateChanged">
      <summary>Occurs when the state of the visualizer changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RequestRefresh">
      <summary>Initiates an update of the content.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation">
      <summary>Defines constants that specify the orientation of a RefreshVisualizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Rotate270DegreesCounterclockwise">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Rotate90DegreesCounterclockwise">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizerState">
      <summary>Defines constants that specify the state of a RefreshVisualizer</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Idle">
      <summary>The visualizer is idle.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Interacting">
      <summary>The user is interacting with the visualizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Peeking">
      <summary>The visualizer was pulled in the refresh direction from a position where a refresh is not allowed. Typically, the ScrollViewer was not at position 0 at the start of the pull.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Pending">
      <summary>The visualizer is pending.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Refreshing">
      <summary>The visualizer is being refreshed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RelativePanel">
      <summary>Defines an area within which you can position and align child objects in relation to each other or the parent panel.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.#ctor">
      <summary>Initializes a new instance of the RelativePanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AboveProperty">
      <summary>Identifies the RelativePanel.Above  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.Above  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignBottomWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignBottomWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWithProperty">
      <summary>Identifies the RelativePanel.AlignBottomWith  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignBottomWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignHorizontalCenterWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignHorizontalCenterWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWithProperty">
      <summary>Gets the value of the RelativePanel.AlignHorizontalCenterWith  XAML attached property for the target element.</summary>
      <returns>The identifier for the RelativePanel.AlignHorizontalCenterWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignLeftWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignLeftWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWithProperty">
      <summary>Identifies the RelativePanel.AlignLeftWith  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignLeftWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignRightWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignRightWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWithProperty">
      <summary>Identifies the RelativePanel.AlignRightWith  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignRightWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignTopWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignTopWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWithProperty">
      <summary>Identifies the RelativePanel.AlignTopWith  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignTopWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty">
      <summary>Identifies the RelativePanel.AlignVerticalCenterWithPanel  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.AlignVerticalCenterWithPanel  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWithProperty">
      <summary>Gets the value of the RelativePanel.AlignVerticalCenterWith  XAML attached property for the target element.</summary>
      <returns>The identifier for the RelativePanel.AlignVerticalCenterWith  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BelowProperty">
      <summary>Identifies the RelativePanel.Below  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.Below  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BorderBrush">
      <summary>Gets or sets a brush that describes the border fill of the panel.</summary>
      <returns>The brush that is used to fill the panel's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BorderThickness">
      <summary>Gets or sets the border thickness of the panel.</summary>
      <returns>The border thickness of the panel, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.CornerRadius">
      <summary>Gets or sets the radius for the corners of the panel's border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.LeftOfProperty">
      <summary>Identifies the RelativePanel.LeftOf  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.LeftOf  XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RelativePanel.RightOfProperty">
      <summary>Identifies the RelativePanel.RightOf  XAML attached property.</summary>
      <returns>The identifier for the RelativePanel.RightOf  XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAbove(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.Above  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.Above  XAML attached property value of the specified object. (The element to position this element above.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignBottomWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignBottomWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignBottomWith  XAML attached property value of the specified object. (The element to align this element's bottom edge with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignBottomWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignBottomWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignBottomWithPanel  XAML attached property value of the specified object. (**true** to align this element's bottom edge with the panel's bottom edge; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignHorizontalCenterWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignHorizontalCenterWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignHorizontalCenterWith  XAML attached property value of the specified object. (The element to align this element's horizontal center with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignHorizontalCenterWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignHorizontalCenterWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignHorizontalCenterWithPanel  XAML attached property value of the specified object. (**true** to horizontally center this element in the panel; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignLeftWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignLeftWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignLeftWith  XAML attached property value of the specified object. (The element to align this element's left edge with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignLeftWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignLeftWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignLeftWithPanel  XAML attached property value of the specified object. (**true** to align this element's left edge with the panel's left edge; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignRightWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignRightWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignRightWith  XAML attached property value of the specified object. (The element to align this element's right edge with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignRightWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignRightWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignRightWithPanel  XAML attached property value of the specified object. (**true** to align this element's right edge with the panel's right edge; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignTopWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignTopWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignTopWith  XAML attached property value of the specified object. (The element to align this element's top edge with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignTopWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignTopWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignTopWithPanel  XAML attached property value of the specified object. (**true** to align this element's top edge with the panel's top edge; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignVerticalCenterWith(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignVerticalCenterWith  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignVerticalCenterWith  XAML attached property value of the specified object. (The element to align this element's vertical center with.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetAlignVerticalCenterWithPanel(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.AlignVerticalCenterWithPanel  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.AlignVerticalCenterWithPanel  XAML attached property value of the specified object. (**true** to vertically center this element in the panel; otherwise, **false**.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetBelow(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.Below  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.Below  XAML attached property value of the specified object. (The element to position this element below.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetLeftOf(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.LeftOf  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.LeftOf  XAML attached property value of the specified object. (The element to position this element to the left of.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.GetRightOf(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RelativePanel.RightOf  XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RelativePanel.RightOf  XAML attached property value of the specified object. (The element to position this element to the right of.)</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAbove(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.Above  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to position this element above.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignBottomWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignBottomWith  XAML attached property for the target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's bottom edge with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignBottomWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignBottomWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to align this element's bottom edge with the panel's bottom edge; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignHorizontalCenterWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignHorizontalCenterWith  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's horizontal center with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignHorizontalCenterWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignHorizontalCenterWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to horizontally center this element in the panel; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignLeftWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignLeftWith  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's left edge with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignLeftWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignLeftWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to align this element's left edge with the panel's left edge; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignRightWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignRightWith  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's right edge with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignRightWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignRightWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to align this element's right edge with the panel's right edge; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignTopWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignTopWith  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's top edge with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignTopWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignTopWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to align this element's top edge with the panel's top edge; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignVerticalCenterWith(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.AlignVerticalCenterWith  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to align this element's horizontal center with.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetAlignVerticalCenterWithPanel(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the RelativePanel.AlignVerticalCenterWithPanel  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (**true** to vertically center this element in the panel; otherwise, **false**.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetBelow(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.Below  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to position this element below.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetLeftOf(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.LeftOf  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to position this element to the left of.)</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RelativePanel.SetRightOf(Microsoft.UI.Xaml.UIElement,System.Object)">
      <summary>Sets the value of the RelativePanel.RightOf  XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. (The element to position this element to the right of.)</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RequiresPointer">
      <summary>Defines constants that specify when an element requires a mouse-like pointer behavior from a game pad.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RequiresPointer.Never">
      <summary>The pointer never acts as a mouse.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RequiresPointer.WhenEngaged">
      <summary>The pointer acts as a mouse when the user engages mouse-mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RequiresPointer.WhenFocused">
      <summary>The pointer acts as a mouse when the page gets focus. Supported on Page elements only.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichEditBox">
      <summary>Represents a rich text editing control that supports formatted text, hyperlinks, and other rich content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichEditBox.#ctor">
      <summary>Initializes a new instance of the RichEditBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.AcceptsReturn">
      <summary>Gets or sets a value that indicates whether the RichEditBox allows and displays the newline or return characters when the ENTER or RETURN keys are pressed.</summary>
      <returns>**True** if the RichEditBox allows newline characters; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.AcceptsReturnProperty">
      <summary>Identifies the AcceptsReturn dependency property.</summary>
      <returns>The identifier for the AcceptsReturn dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.CharacterCasing">
      <summary>Gets or sets a value that indicates how the control modifies the case of characters as they are typed.</summary>
      <returns>A value of the enumeration that indicates how the control modifies the case of characters as they are typed. The default is **Normal**, which indicates that the charcters are not changed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.CharacterCasingProperty">
      <summary>Identifies the CharacterCasing dependency property.</summary>
      <returns>The identifier for the CharacterCasing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ClipboardCopyFormat">
      <summary>Gets or sets a value that specifies whether text is copied with all formats, or as plain text only.</summary>
      <returns>An enumeration value that specifies whether text is copied with all formats, or as plain text only. The default is **AllFormats**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ClipboardCopyFormatProperty">
      <summary>Identifies the ClipboardCopyFormat dependency property.</summary>
      <returns>The identifier for the ClipboardCopyFormat dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkBackgroundColor">
      <summary>Get or sets the brush used to color the link background.</summary>
      <returns>The brush used to color the link background.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkBackgroundColorProperty">
      <summary>Identifies the ContentLinkBackgroundColor dependency property.</summary>
      <returns>The identifier for the ContentLinkBackgroundColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkForegroundColor">
      <summary>Get or sets the brush used to color the link text.</summary>
      <returns>The brush used to color the link text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkForegroundColorProperty">
      <summary>Identifies the ContentLinkForegroundColor dependency property.</summary>
      <returns>The identifier for the ContentLinkForegroundColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkProviders">
      <summary>Get or sets the collection of ContentLinkProvider s that define the types of ContentLink s used in this RichEditBox.</summary>
      <returns>The collection of ContentLinkProvider s that define the types of ContentLink s used in this RichEditBox.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkProvidersProperty">
      <summary>Identifies the ContentLinkProviders dependency property.</summary>
      <returns>The identifier for the ContentLinkProviders dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.DesiredCandidateWindowAlignment">
      <summary>Gets or sets a value that indicates the preferred alignment of the Input Method Editor (IME).</summary>
      <returns>A value of the enumeration that indicates the preferred alignment of the Input Method Editor (IME). The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.DesiredCandidateWindowAlignmentProperty">
      <summary>Identifies the DesiredCandidateWindowAlignment dependency property.</summary>
      <returns>The identifier for the DesiredCandidateWindowAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.DisabledFormattingAccelerators">
      <summary>Gets or sets a value that indicates which keyboard shortcuts for formatting are disabled.</summary>
      <returns>A value that indicates which keyboard shortcuts for formatting are disabled. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.DisabledFormattingAcceleratorsProperty">
      <summary>Identifies the DisabledFormattingAccelerators dependency property.</summary>
      <returns>The identifier for the DisabledFormattingAccelerators dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.Document">
      <summary>Gets an object that enables access to the text object model for the text contained in a RichEditBox.</summary>
      <returns>An object that enables access to the text object model.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HandwritingView">
      <summary>Gets or sets the HandwritingView associated with this text control.</summary>
      <returns>The HandwritingView associated with this text control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HandwritingViewProperty">
      <summary>Identifies the HandwritingView dependency property.</summary>
      <returns>The identifier for the HandwritingView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HorizontalTextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the RichEditBox.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.HorizontalTextAlignmentProperty">
      <summary>Identifies the HorizontalTextAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalTextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.InputScope">
      <summary>Gets or sets the context for input used by this RichEditBox.</summary>
      <returns>The input scope, which provides a hint at the type of text input expected by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.InputScopeProperty">
      <summary>Identifies the InputScope dependency property.</summary>
      <returns>The identifier for the InputScope dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsColorFontEnabled">
      <summary>Gets or sets a value that determines whether font glyphs that contain color layers, such as Segoe UI Emoji, are rendered in color.</summary>
      <returns>**true** if color glyphs show in color; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsColorFontEnabledProperty">
      <summary>Identifies the IsColorFontEnabled dependency property.</summary>
      <returns>The identifier for the IsColorFontEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsHandwritingViewEnabled">
      <summary>Gets or sets a value that indicates whether a user can enter text in the handwriting view.</summary>
      <returns>**true** to allow the user to enter text in the handwriting view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsHandwritingViewEnabledProperty">
      <summary>Identifies the IsHandwritingViewEnabled dependency property.</summary>
      <returns>The identifier for the IsHandwritingViewEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the user can change the text in the RichEditBox.</summary>
      <returns>**True** if the RichEditBox is read-only; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
      <returns>The identifier for the IsReadOnly dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsSpellCheckEnabled">
      <summary>Gets or sets a value that indicates whether the text input should interact with a spell check engine.</summary>
      <returns>**True** if the text input should interact with a spell check engine; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsSpellCheckEnabledProperty">
      <summary>Identifies the IsSpellCheckEnabled dependency property.</summary>
      <returns>The identifier for the IsSpellCheckEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsTextPredictionEnabled">
      <summary>Gets or sets a value that indicates whether text prediction features ("autocomplete") are enabled for this RichEditBox.</summary>
      <returns>**True** to enable text prediction features; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.IsTextPredictionEnabledProperty">
      <summary>Identifies the IsTextPredictionEnabled dependency property.</summary>
      <returns>The identifier for the IsTextPredictionEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.MaxLength">
      <summary>Gets or sets the value that specifies the maximum number of characters allowed for user input.</summary>
      <returns>The maximum number of characters allowed for user input. The default is 0 (no limit).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.MaxLengthProperty">
      <summary>Identifies the **MaxLength** dependency property.</summary>
      <returns>The identifier for the **MaxLength** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is entered. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.PreventKeyboardDisplayOnProgrammaticFocus">
      <summary>Gets or sets a value that indicates whether the on-screen keyboard is shown when the control receives focus programmatically.</summary>
      <returns>**true** if the on-screen keyboard is not shown when the control receives focus programmatically; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.PreventKeyboardDisplayOnProgrammaticFocusProperty">
      <summary>Identifies the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</summary>
      <returns>The identifier for the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ProofingMenuFlyout">
      <summary>Gets the flyout that shows proofing commands.</summary>
      <returns>The flyout that shows proofing commands.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.ProofingMenuFlyoutProperty">
      <summary>Identifies the ProofingMenuFlyout dependency property.</summary>
      <returns>The identifier for the ProofingMenuFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionFlyout">
      <summary>Gets or sets the flyout that is shown when text is selected, or **null** if no flyout is shown.</summary>
      <returns>The flyout that is shown when text is selected, or **null** if no flyout is shown. The default is an instance of TextCommandBarFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionFlyoutProperty">
      <summary>Identifies the SelectionFlyout dependency property.</summary>
      <returns>The identifier for the SelectionFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor">
      <summary>Gets or sets the brush used to highlight the selected text.</summary>
      <returns>The brush used to highlight the selected text. The default is a null brush from a pure code perspective, but the default control template for RichEditBox applies a theme resource brush for this in a runtime instance of a RichEditBox control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorProperty">
      <summary>Identifies the SelectionHighlightColor dependency property.</summary>
      <returns>The identifier for the SelectionHighlightColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused">
      <summary>Gets or sets the brush used to highlight the selected text when the RichEditBox does not have focus.</summary>
      <returns>The brush used to highlight the selected text when RichEditBox loses focus. The default is a null brush from a pure code perspective, but the default control template for RichEditBox applies a Transparent brush for this in a runtime instance of a RichEditBox control. To disable the SelectionHighlightColorWhenNotFocused, set the brush to Transparent once again.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocusedProperty">
      <summary>Identifies the **SelectionHighlightColorWhenNotFocused** dependency property.</summary>
      <returns>The identifier for the **SelectionHighlightColorWhenNotFocused** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the RichEditBox.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
      <returns>Identifier for the TextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextDocument">
      <summary>Gets an object that enables access to the text object model for the text contained in a RichEditBox.</summary>
      <returns>An object that enables access to the text object model.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextReadingOrder">
      <summary>Gets or sets a value that indicates how the reading order is determined for the RichEditBox.</summary>
      <returns>A value that indicates how the reading order is determined for the RichEditBox. The default is **DetectFromContent**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextReadingOrderProperty">
      <summary>Identifies the TextReadingOrder dependency property.</summary>
      <returns>The identifier for the TextReadingOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextWrapping">
      <summary>Gets or sets a value that indicates how text wrapping occurs if a line of text extends beyond the available width of the RichEditBox.</summary>
      <returns>One of the TextWrapping enumeration values that specifies whether text is wrapped. The default is **Wrap**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBox.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
      <returns>The identifier for the TextWrapping dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.CandidateWindowBoundsChanged">
      <summary>Occurs when the Input Method Editor (IME) window open, updates, or closes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkChanged">
      <summary>Occurs when a content link is added, removed, or edited.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.ContentLinkInvoked">
      <summary>Occurs when the link is activated by user interaction.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.ContextMenuOpening">
      <summary>Occurs when the system processes an interaction that displays a context menu.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.CopyingToClipboard">
      <summary>Occurs before copied text is moved to the clipboard.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.CuttingToClipboard">
      <summary>Occurs before cut text is moved to the clipboard.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.Paste">
      <summary>Occurs when text is pasted into the control.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.SelectionChanging">
      <summary>Occurs when the text selection starts to change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.TextChanged">
      <summary>Occurs when content changes in the RichEditBox.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.TextChanging">
      <summary>Occurs synchronously when the text in the edit box starts to change, but before it is rendered.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.TextCompositionChanged">
      <summary>Occurs when text being composed through an Input Method Editor (IME) changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.TextCompositionEnded">
      <summary>Occurs when a user stops composing text through an Input Method Editor (IME).</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichEditBox.TextCompositionStarted">
      <summary>Occurs when a user starts composing text through an Input Method Editor (IME).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichEditBox.GetLinguisticAlternativesAsync">
      <summary>Asynchronously gets a list of candidate words based on the provided phonetic characters in an Input Method Editor (IME).</summary>
      <returns>A list of candidate words based on the provided phonetic characters in an Input Method Editor (IME).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs">
      <summary>Provides event data for the RichEditBox.SelectionChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the selection operation should be canceled.</summary>
      <returns>**true** to cancel the selection operation; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs.SelectionLength">
      <summary>Gets the length of the text selection.</summary>
      <returns>The length of the text selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs.SelectionStart">
      <summary>Gets the starting index of the text selection.</summary>
      <returns>The starting index of the text selection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs">
      <summary>Provides event data for the RichEditBox.TextChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs.IsContentChanging">
      <summary>Gets a value that indicates whether the event occured due to a change in the text content.</summary>
      <returns>**true** if a change to the text content caused the event; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichEditClipboardFormat">
      <summary>Defines constants that specify the format of text copied from a RichEditBox.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RichEditClipboardFormat.AllFormats">
      <summary>Text is copied as both plain text and rich text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RichEditClipboardFormat.PlainText">
      <summary>Text is copied only as plain text.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichTextBlock">
      <summary>Represents a rich text display container that supports formatted text, hyperlinks, inline images, and other rich content. RichTextBlock supports a built-in overflow model.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.#ctor">
      <summary>Initializes a new instance of the RichTextBlock class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.BaselineOffset">
      <summary>Gets a value that represents the offset in pixels from the top of the content to the baseline of the first paragraph. The baseline of the paragraph is the baseline of the first line in it.</summary>
      <returns>The computed baseline for the first paragraph, or 0 if the RichTextBlock is empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks">
      <summary>Gets the contents of the RichTextBlock.</summary>
      <returns>A BlockCollection that contains the contents of the RichTextBlock.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.CharacterSpacing">
      <summary>Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.</summary>
      <returns>The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.CharacterSpacingProperty">
      <summary>Identifies the CharacterSpacing dependency property.</summary>
      <returns>The identifier for the CharacterSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.ContentEnd">
      <summary>Gets a TextPointer that indicates the end of content in the RichTextBlock.</summary>
      <returns>A TextPointer that indicates the end of content in the RichTextBlock.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.ContentStart">
      <summary>Gets a TextPointer that indicates the start of content in the RichTextBlock.</summary>
      <returns>A TextPointer that indicates the start of content in the RichTextBlock.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the text content in this element.</summary>
      <returns>A FontFamily object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the FontFamily class topic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamilyProperty">
      <summary>Identifies the FontFamily  dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontSize">
      <summary>Gets or sets the font size for the text content in this element.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels. The default is 11.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontSizeProperty">
      <summary>Identifies the FontSize  dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontStretch">
      <summary>Gets or sets the font stretch for the text content in this element.</summary>
      <returns>The requested font stretch, as a FontStretch constant. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontStretchProperty">
      <summary>Identifies the FontStretch  dependency property.</summary>
      <returns>The identifier for the FontStretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontStyle">
      <summary>Gets or sets the font style for the content in this element.</summary>
      <returns>The requested font style, which is a FontStyle enumeration named constant. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontStyleProperty">
      <summary>Identifies the FontStyle  dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontWeight">
      <summary>Gets or sets the top-level font weight for the RichTextBlock.</summary>
      <returns>The requested font weight, which is a FontWeight that is obtained from one of the FontWeights property values. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.FontWeightProperty">
      <summary>Identifies the FontWeight  dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground">
      <summary>Gets or sets the Brush to apply to the text contents of the RichTextBlock.</summary>
      <returns>The brush used to apply to the text contents. The default is a null brush from a pure code perspective, but the default text styles set this to Black (for **Light** theme) or White (for **Dark** theme) for a TextBlock element in UI.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.ForegroundProperty">
      <summary>Identifies the Foreground  dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.HasOverflowContent">
      <summary>Gets a value that indicates whether the RichTextBlock has content that extends beyond its bounds, that can provide content to an OverflowContentTarget element.</summary>
      <returns>**True** if the RichTextBlock has content that extends beyond its bounds; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.HasOverflowContentProperty">
      <summary>Identifies the HasOverflowContent dependency property.</summary>
      <returns>The identifier for the HasOverflowContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.HorizontalTextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the RichTextBlock.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.HorizontalTextAlignmentProperty">
      <summary>Identifies the HorizontalTextAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalTextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsColorFontEnabled">
      <summary>Gets or sets a value that determines whether font glyphs that contain color layers, such as Segoe UI Emoji, are rendered in color.</summary>
      <returns>**true** if color glyphs show in color; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsColorFontEnabledProperty">
      <summary>Identifies the IsColorFontEnabled dependency property.</summary>
      <returns>The identifier for the IsColorFontEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextSelectionEnabled">
      <summary>Gets or sets a value that determines whether text content of the RichTextBlock can be selected for clipboard or drag purposes, or for UI styling changes that indicate selected text.</summary>
      <returns>**true** if text content of the RichTextBlock can be selected for clipboard or drag purposes. **false** if text cannot be selected. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextSelectionEnabledProperty">
      <summary>Identifies the IsTextSelectionEnabled dependency property.</summary>
      <returns>The identifier for the IsTextSelectionEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextTrimmed">
      <summary>Gets a value that indicates whether the control has trimmed text that overflows the content area.</summary>
      <returns>**true** if text is trimmed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextTrimmedProperty">
      <summary>Identifies the IsTextTrimmed dependency property.</summary>
      <returns>The identifier for the IsTextTrimmed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of each line in pixels. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.LineHeightProperty">
      <summary>Identifies the LineHeight  dependency property.</summary>
      <returns>The identifier for the LineHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.LineStackingStrategy">
      <summary>Gets or sets a value that indicates how a line box is determined for each line of text in the RichTextBlock.</summary>
      <returns>A value that indicates how a line box is determined for each line of text in the RichTextBlock. The default is **MaxHeight**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.LineStackingStrategyProperty">
      <summary>Identifies the LineStackingStrategy  dependency property.</summary>
      <returns>The identifier for the LineStackingStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.MaxLines">
      <summary>Gets or sets the maximum lines of text shown in the RichTextBlock.</summary>
      <returns>The maximum lines of text shown in the RichTextBlock. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.MaxLinesProperty">
      <summary>Identifies the MaxLines dependency property.</summary>
      <returns>The identifier for the MaxLines dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.OpticalMarginAlignment">
      <summary>Get or sets a value that indicates how the font is modified to align with fonts of different sizes.</summary>
      <returns>A value of the enumeration that indicates how the font is modified to align at different sizes. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.OpticalMarginAlignmentProperty">
      <summary>Identifies the OpticalMarginAlignment dependency property.</summary>
      <returns>The identifier for the OpticalMarginAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget">
      <summary>Gets or sets a reference to a RichTextBlockOverflow that is the linked target for any text overflow from this RichTextBlock.</summary>
      <returns>The target for overflow.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTargetProperty">
      <summary>Identifies the OverflowContentTarget dependency property.</summary>
      <returns>The identifier for the OverflowContentTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.Padding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a RichTextBlock.</summary>
      <returns>A Thickness structure that specifies the amount of padding to apply.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.PaddingProperty">
      <summary>Identifies the Padding  dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectedText">
      <summary>Gets a text range of selected text.</summary>
      <returns>A text range of the selected text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectedTextProperty">
      <summary>Identifies the SelectedText dependency property.</summary>
      <returns>The identifier for the SelectedText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionEnd">
      <summary>Gets the end position of the text selected in the RichTextBlock.</summary>
      <returns>An object that represents the selection end, or null if no selection exists.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionFlyout">
      <summary>Gets or sets the flyout that is shown when text is selected, or **null** if no flyout is shown.</summary>
      <returns>The flyout that is shown when text is selected, or **null** if no flyout is shown. The default is an instance of TextCommandBarFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionFlyoutProperty">
      <summary>Identifies the SelectionFlyout dependency property.</summary>
      <returns>The identifier for the SelectionFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor">
      <summary>Gets or sets the brush used to highlight the selected text.</summary>
      <returns>The brush used to highlight the selected text. The default is a null brush from a pure code perspective, but the default text styles for RichTextBlock content apply a theme resource brush for this in a runtime instance of a RichTextBlock control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColorProperty">
      <summary>Identifies the SelectionHighlightColor dependency property.</summary>
      <returns>The identifier for the SelectionHighlightColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionStart">
      <summary>Gets the starting position of the text selected in the RichTextBlock.</summary>
      <returns>An object that represents the selection start, or **null** if no selection exists.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextAlignment">
      <summary>Gets or sets a value that indicates how the text is aligned in the RichTextBlock.</summary>
      <returns>One of the TextAlignment enumeration values that indicates how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
      <returns>Identifier for the TextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextDecorations">
      <summary>Gets or sets a value that indicates what decorations are applied to the text.</summary>
      <returns>A value of the enumeration. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextDecorationsProperty">
      <summary>Identifies the **TextDecorations** dependency property.</summary>
      <returns>The identifier for the **TextDecorations** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextHighlighters">
      <summary>Gets the collection of text highlights.</summary>
      <returns>The collection of text highlights.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextIndent">
      <summary>Gets or sets the indentation of the first line of text in each paragraph in the RichTextBlock.</summary>
      <returns>The offset amount of the first line of text in a paragraph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextIndentProperty">
      <summary>Identifies the TextIndent dependency property.</summary>
      <returns>The identifier of the TextIndent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextLineBounds">
      <summary>Gets or sets a value that indicates how the line box height is determined for each line of text in the RichTextBlock.</summary>
      <returns>A value that indicates how the line box height is determined for each line of text in the RichTextBlock. The default is **Full**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextLineBoundsProperty">
      <summary>Identifies the TextLineBounds dependency property.</summary>
      <returns>The identifier for the TextLineBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextReadingOrder">
      <summary>Gets or sets a value that indicates how the reading order is determined for the RichTextBlock.</summary>
      <returns>A value that indicates how the reading order is determined for the RichTextBlock. The default is **DetectFromContent**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextReadingOrderProperty">
      <summary>Identifies the TextReadingOrder dependency property.</summary>
      <returns>The identifier for the TextReadingOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextTrimming">
      <summary>Gets or sets a value that indicates how text is trimmed when it overflows the content area.</summary>
      <returns>One of the TextTrimming enumeration values that specifies the text trimming behavior to use. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextTrimmingProperty">
      <summary>Identifies the TextTrimming dependency property.</summary>
      <returns>The identifier of the TextTrimming dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextWrapping">
      <summary>Gets or sets a value that indicates whether text wrapping occurs if a line of text extends beyond the available width of the RichTextBlock.</summary>
      <returns>One of the TextWrapping enumeration values that specifies whether text is wrapped. The default is **Wrap**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlock.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
      <returns>The identifier for the TextWrapping dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichTextBlock.ContextMenuOpening">
      <summary>Occurs when the system processes an interaction that displays a context menu.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextTrimmedChanged">
      <summary>Occurs when the **IsTextTrimmed** property value has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.CopySelectionToClipboard">
      <summary>Copies the selected content to the Windows clipboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Focuses the RichTextBlock, as if it were a conventionally focusable control.</summary>
      <param name="value">Specifies the desired target for focus state, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the RichTextBlock, or focus was already there. **false** if the RichTextBlock is not focusable.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.GetPositionFromPoint(Windows.Foundation.Point)">
      <summary>Returns a TextPointer text reference from a RichTextBlock by hit-testing a specific Point within the text display area.</summary>
      <param name="point">The point to test.</param>
      <returns>The determined text reference.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.Select(Microsoft.UI.Xaml.Documents.TextPointer,Microsoft.UI.Xaml.Documents.TextPointer)">
      <summary>Selects a range of text in the RichTextBlock.</summary>
      <param name="start">An object that represents the start of the range to select.</param>
      <param name="end">An object that represents the end of the range to select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlock.SelectAll">
      <summary>Selects the entire contents in the RichTextBlock.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow">
      <summary>Represents a rich text display overflow container. This element cannot have direct content. The only purpose of RichTextBlockOverflow is to display text content that does not fit in the bounds of a RichTextBlock or another RichTextBlockOverflow element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.#ctor">
      <summary>Initializes a new instance of the RichTextBlockOverflow class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.BaselineOffset">
      <summary>Gets a value that represents the offset in pixels from the top of the content to the baseline of the first paragraph. The baseline of the paragraph is the baseline of the first line in it.</summary>
      <returns>The computed baseline for the first paragraph, or 0 if the RichTextBlockOverflow is empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.ContentEnd">
      <summary>Gets a TextPointer that indicates the end of content in the RichTextBlockOverflow.</summary>
      <returns>A TextPointer that indicates the end of content in the RichTextBlockOverflow.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.ContentSource">
      <summary>Gets the RichTextBlock content source of this RichTextBlockOverflow.</summary>
      <returns>The content source for this RichTextBlockOverflow.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.ContentStart">
      <summary>Gets a TextPointer that indicates the start of content in the RichTextBlockOverflow.</summary>
      <returns>A TextPointer that indicates the start of content in the RichTextBlockOverflow.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.HasOverflowContent">
      <summary>Gets a value that indicates whether the RichTextBlockOverflow has content that extends beyond its bounds, that can provide content to an OverflowContentTarget element.</summary>
      <returns>**True** if the RichTextBlockOverflow has content that extends beyond its bounds; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.HasOverflowContentProperty">
      <summary>Identifies the HasOverflowContent dependency property.</summary>
      <returns>The identifier for the HasOverflowContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmed">
      <summary>Gets a value that indicates whether the control has trimmed text that overflows the content area.</summary>
      <returns>**true** if text is trimmed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmedProperty">
      <summary>Identifies the IsTextTrimmed dependency property.</summary>
      <returns>The identifier for the IsTextTrimmed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.MaxLines">
      <summary>Gets or sets the maximum lines of text shown in the RichTextBlockOverflow.</summary>
      <returns>The maximum lines of text shown in the RichTextBlockOverflow. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.MaxLinesProperty">
      <summary>Identifies the MaxLines dependency property.</summary>
      <returns>The identifier for the MaxLines dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget">
      <summary>Gets or sets a reference to another RichTextBlockOverflow that is the linked target for any text overflow from this RichTextBlockOverflow.</summary>
      <returns>The target for overflow.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTargetProperty">
      <summary>Identifies the OverflowContentTarget dependency property.</summary>
      <returns>The identifier for the OverflowContentTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.Padding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a RichTextBlockOverflow.</summary>
      <returns>A Thickness structure that specifies the amount of padding to apply.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmedChanged">
      <summary>Occurs when the **IsTextTrimmed** property value has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Focuses the RichTextBlockOverflow, as if it were a conventionally focusable control.</summary>
      <param name="value">Specifies the desired target for focus state, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the RichTextBlockOverflow, or focus was already there. **false** if the RichTextBlockOverflow is not focusable.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.GetPositionFromPoint(Windows.Foundation.Point)">
      <summary>Returns a TextPointer text reference from a RichTextBlockOverflow by hit-testing a specific Point within the text display area.</summary>
      <param name="point">The point to test.</param>
      <returns>The determined text reference.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RowDefinition">
      <summary>Defines row-specific properties that apply to Grid elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinition.#ctor">
      <summary>Initializes a new instance of the RowDefinition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.ActualHeight">
      <summary>Gets a value that represents the calculated height of the RowDefinition.</summary>
      <returns>A value that represents the calculated height in pixels. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.Height">
      <summary>Gets the calculated height of a RowDefinition element, or sets the GridLength value of a row that is defined by the RowDefinition.</summary>
      <returns>The GridLength that represents the height of the row. The default value is a GridLength representing a "1\*" sizing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.HeightProperty">
      <summary>Identifies the Height dependency property.</summary>
      <returns>The identifier for the Height dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.MaxHeight">
      <summary>Gets or sets a value that represents the maximum height of a RowDefinition.</summary>
      <returns>A Double that represents the maximum height.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.MaxHeightProperty">
      <summary>Identifies the MaxHeight dependency property.</summary>
      <returns>The identifier for the MaxHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.MinHeight">
      <summary>Gets or sets a value that represents the minimum allowed height of a RowDefinition.</summary>
      <returns>A Double that represents the minimum allowed height. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinition.MinHeightProperty">
      <summary>Identifies the MinHeight dependency property.</summary>
      <returns>The identifier for the MinHeight dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RowDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of RowDefinition objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.Append(Microsoft.UI.Xaml.Controls.RowDefinition)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.GetAt(System.UInt32)">
      <summary>Returns the RowDefinition located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The RowDefinition value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.RowDefinition[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.IndexOf(Microsoft.UI.Xaml.Controls.RowDefinition,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.RowDefinition)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.ReplaceAll(Microsoft.UI.Xaml.Controls.RowDefinition[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RowDefinitionCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.RowDefinition)">
      <summary>Sets the value at the specified index to the RowDefinition value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollBarVisibility">
      <summary>Defines constants that specify the visibility of a scrollbar within a ScrollViewer control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Auto">
      <summary>A ScrollBar appears only when the viewport cannot display all of the content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Disabled">
      <summary>A ScrollBar does not appear even when the viewport cannot display all of the content. Scrolling is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Hidden">
      <summary>A ScrollBar does not appear even when the viewport cannot display all of the content. Scrolling is still enabled, and can occur through touch, keyboard, or mouse wheel interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Visible">
      <summary>A ScrollBar always appears.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollContentPresenter">
      <summary>Displays the content of a ScrollViewer control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.#ctor">
      <summary>Initializes a new instance of the ScrollContentPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanContentRenderOutsideBounds">
      <summary>Gets or sets a value that indicates whether scrolled content can render outside the bounds of the ScrollViewer.</summary>
      <returns>**true** if scrolled content can render outside the bounds of the ScrollViewer; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanContentRenderOutsideBoundsProperty">
      <summary>Identifies the CanContentRenderOutsideBounds dependency property.</summary>
      <returns>The identifier for the CanContentRenderOutsideBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>**true** if scrolling is possible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>**true** if scrolling is possible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>Gets the vertical size of all the scrollable content.</summary>
      <returns>The vertical size of the all scrollable content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>Gets the horizontal size of all the scrollable content.</summary>
      <returns>The horizontal size of all the scrollable content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>Gets the distance the content has been scrolled horizontally.</summary>
      <returns>The distance the content has been scrolled horizontally.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>Gets or sets the ScrollViewer element that controls scrolling behavior.</summary>
      <returns>The ScrollViewer element that controls scrolling behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SizesContentToTemplatedParent">
      <summary>Gets or sets a value that indicates whether, when used in the ControlTemplate for a ScrollViewer, the presenter restricts the size of its Content to the owning ScrollViewer size.</summary>
      <returns>**true** if the presenter restricts its Content size to the owning ScrollViewer size; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SizesContentToTemplatedParentProperty">
      <summary>Identifies the SizesContentToTemplatedParent dependency property.</summary>
      <returns>The identifier for the SizesContentToTemplatedParent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>Gets the distance the content has been scrolled vertically.</summary>
      <returns>The distance the content has been scrolled vertically.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>Gets the vertical size of the viewable content.</summary>
      <returns>The vertical size of the viewable content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>Gets the horizontal size of the viewable content.</summary>
      <returns>The horizontal size of the viewable content.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.LineDown">
      <summary>Scrolls the ScrollContentPresenter content downward by one line.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.LineLeft">
      <summary>Scrolls the ScrollContentPresenter content to the left by a predetermined amount.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.LineRight">
      <summary>Scrolls the ScrollContentPresenter content to the right by a predetermined amount.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.LineUp">
      <summary>Scrolls the ScrollContentPresenter content upward by one line.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.MakeVisible(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Rect)">
      <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
      <param name="visual">A UIElement that becomes visible.</param>
      <param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
      <returns>A Rect that represents the visible region after scrolling happens.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.PageDown">
      <summary>Scrolls down within the content by one page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.PageLeft">
      <summary>Scrolls left within the content by one page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.PageRight">
      <summary>Scrolls right within the content by one page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.PageUp">
      <summary>Scrolls up within the content by one page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>Sets the distance the content has been scrolled horizontally.</summary>
      <param name="offset">The distance the content has been scrolled horizontally.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>Sets the distance the content has been scrolled vertically.</summary>
      <param name="offset">The distance the content has been scrolled vertically.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment">
      <summary>Defines constants that describe how an item that is programmatically scrolled into view aligns with the visible area.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment.Default">
      <summary>The item aligns with the nearest edge.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment.Leading">
      <summary>The item aligns with the leading edge.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollMode">
      <summary>Defines constants that specify scrolling behavior for ScrollViewer and other parts involved in scrolling scenarios.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollMode.Auto">
      <summary>Scrolling is enabled but behavior uses a "rails" manipulation mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollMode.Disabled">
      <summary>Scrolling is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollMode.Enabled">
      <summary>Scrolling is enabled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollViewer">
      <summary>Represents a scrollable area that can contain other visible elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.#ctor">
      <summary>Initializes a new instance of the ScrollViewer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.BringIntoViewOnFocusChange">
      <summary>Gets or sets a value that determines whether the ScrollViewer uses a bring-into-view scroll behavior when an item in the view gets focus.</summary>
      <returns>**true** to use a behavior that brings focused items into view. **false** to use a behavior that focused items do not automatically scroll into view. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.BringIntoViewOnFocusChangeProperty">
      <summary>Identifies the BringIntoViewOnFocusChange dependency property.</summary>
      <returns>The identifier for the BringIntoViewOnFocusChange dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.CanContentRenderOutsideBounds">
      <summary>Gets or sets a value that indicates whether scrolled content can render outside the bounds of the ScrollViewer.</summary>
      <returns>**true** if scrolled content can render outside the bounds of the ScrollViewer; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.CanContentRenderOutsideBoundsProperty">
      <summary>Identifies the CanContentRenderOutsideBounds dependency property.</summary>
      <returns>The identifier for the CanContentRenderOutsideBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>Gets a value that indicates whether the horizontal ScrollBar is visible.</summary>
      <returns>A Visibility that indicates whether the horizontal scroll bar is visible. The default value is **Hidden**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>Identifies the ComputedHorizontalScrollBarVisibility dependency property.</summary>
      <returns>The identifier for the ComputedHorizontalScrollBarVisibility  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>Gets a value that indicates whether the vertical ScrollBar is visible.</summary>
      <returns>A Visibility that indicates whether the vertical scroll bar is visible. The default value is **Visible**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>Identifies the ComputedVerticalScrollBarVisibility  dependency property.</summary>
      <returns>The identifier for the ComputedVerticalScrollBarVisibility  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.CurrentAnchor">
      <summary>The currently chosen anchor element to use for scroll anchoring.</summary>
      <returns>The most recently chosen UIElement for scroll anchoring after a layout pass, or **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentHeight">
      <summary>Gets the vertical size of all the scrollable content in the ScrollViewer.</summary>
      <returns>The vertical size of all the scrollable content in the ScrollViewer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>Identifier for the ExtentHeight dependency property.</summary>
      <returns>The identifier for the ExtentHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentWidth">
      <summary>Gets the horizontal size of all the scrollable content in the ScrollViewer.</summary>
      <returns>The horizontal size of all the scrollable content in the ScrollViewer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>Identifier for the ExtentWidth dependency property.</summary>
      <returns>The identifier for the ExtentWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio">
      <summary>Determines the horizontal position of the ScrollViewer's *anchor point* with respect to the viewport. By default, the ScrollViewer selects an element as its CurrentAnchor by identifying the element in its viewport nearest to the anchor point.</summary>
      <returns>A normalized value (0.0f to 1.0f). The default is 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatioProperty">
      <summary>Identifies the HorizontalAnchorRatio dependency property.</summary>
      <returns>The identifier for the HorizontalAnchorRatio dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalOffset">
      <summary>Gets the distance the content has been scrolled horizontally.</summary>
      <returns>The distance the content has been scrolled horizontally.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>Identifies the HorizontalOffset  dependency property.</summary>
      <returns>The identifier for the HorizontalOffset  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.</summary>
      <returns>A ScrollBarVisibility value that indicates whether a horizontal ScrollBar should be displayed. The default value is **Disabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the HorizontalScrollBarVisibility  dependency property.</summary>
      <returns>The identifier for the HorizontalScrollBarVisibility  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode">
      <summary>Gets or sets a value that determines how manipulation input influences scrolling behavior on the horizontal axis.</summary>
      <returns>A value of the enumeration. The typical default (as set through the default template, not class initialization) is **Enabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollModeProperty">
      <summary>Identifies the HorizontalScrollMode dependency property.</summary>
      <returns>The identifier for the HorizontalScrollMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsAlignment">
      <summary>Gets or sets a value that indicates how the existing snap points are horizontally aligned versus the initial viewport.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsAlignmentProperty">
      <summary>Identifies the HorizontalSnapPointsAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalSnapPointsAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsType">
      <summary>Gets or sets a value that declares how manipulation behavior reacts to the snap points along the horizontal axis.</summary>
      <returns>A value of the enumeration. The default is **None** but might be set through a control template.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsTypeProperty">
      <summary>Identifies the HorizontalSnapPointsType dependency property.</summary>
      <returns>The identifier for the HorizontalSnapPointsType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsDeferredScrollingEnabled">
      <summary>Gets or sets a value that determines the deferred scrolling behavior for a ScrollViewer.</summary>
      <returns>**true** if deferred scrolling should occur; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
      <summary>Identifies the IsDeferredScrollingEnabled dependency property.</summary>
      <returns>The identifier for the IsDeferredScrollingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalRailEnabled">
      <summary>Gets or sets a value that indicates whether the scroll rail is enabled for the horizontal axis.</summary>
      <returns>**True** to enable the horizontal scroll rail; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalRailEnabledProperty">
      <summary>Identifies the IsHorizontalRailEnabled dependency property.</summary>
      <returns>The identifier for the IsHorizontalRailEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalScrollChainingEnabled">
      <summary>Gets or sets a value that indicates whether scroll chaining is enabled from this child to its parent, for the horizontal axis.</summary>
      <returns>**true** to enable horizontal scroll chaining from child to parent; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalScrollChainingEnabledProperty">
      <summary>Identifies the IsHorizontalScrollChainingEnabled dependency property.</summary>
      <returns>The identifier for the IsHorizontalScrollChainingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsScrollInertiaEnabled">
      <summary>Gets or sets a value that indicates whether scroll actions should include inertia in their behavior and value.</summary>
      <returns>**true** if scroll actions should include inertia in their behavior and value; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsScrollInertiaEnabledProperty">
      <summary>Identifies the IsScrollInertiaEnabled dependency property.</summary>
      <returns>The identifier for the IsScrollInertiaEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalRailEnabled">
      <summary>Gets or sets a value that indicates whether the scroll rail is enabled for the vertical axis.</summary>
      <returns>**True** to enable the vertical scroll rail; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalRailEnabledProperty">
      <summary>Identifies the IsVerticalRailEnabled dependency property.</summary>
      <returns>The identifier for the IsVerticalRailEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalScrollChainingEnabled">
      <summary>Gets or sets a value that indicates whether scroll chaining is enabled from this child to its parent, for the vertical axis.</summary>
      <returns>**true** to enable vertical scroll chaining from child to parent; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalScrollChainingEnabledProperty">
      <summary>Identifies the IsVerticalScrollChainingEnabled dependency property.</summary>
      <returns>The identifier for the IsVerticalScrollChainingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomChainingEnabled">
      <summary>Gets or sets a value that indicates whether zoom chaining is enabled from this child to its parent.</summary>
      <returns>**true** to enable zoom chaining from child to parent; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomChainingEnabledProperty">
      <summary>Identifies the IsZoomChainingEnabled dependency property.</summary>
      <returns>The identifier for the IsZoomChainingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomInertiaEnabled">
      <summary>Gets or sets a value that indicates whether zoom actions should include inertia in their behavior and value.</summary>
      <returns>**true** if zoom actions should include inertia in their behavior and value; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomInertiaEnabledProperty">
      <summary>Identifies the IsZoomInertiaEnabled dependency property.</summary>
      <returns>The identifier for the IsZoomInertiaEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.LeftHeader">
      <summary>Gets or sets the content of the left header.</summary>
      <returns>The content of the left header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.LeftHeaderProperty">
      <summary>Identifies the LeftHeader dependency property.</summary>
      <returns>The identifier for the LeftHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor">
      <summary>Gets or sets a value that indicates the maximum permitted run-time value of ZoomFactor.</summary>
      <returns>The maximum permitted run-time value of ZoomFactor. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactorProperty">
      <summary>Identifies the MaxZoomFactor dependency property.</summary>
      <returns>The identifier for the MaxZoomFactor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor">
      <summary>Gets or sets a value that indicates the minimum permitted run-time value of ZoomFactor.</summary>
      <returns>The minimum permitted run-time value of ZoomFactor. The default is 0.1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactorProperty">
      <summary>Identifies the MinZoomFactor dependency property.</summary>
      <returns>The identifier for the MinZoomFactor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ReduceViewportForCoreInputViewOcclusions">
      <summary>Gets or sets a value that indicates whether the ScrollViewer should try to adjust its content to keep it visible when a docked CoreInputView occludes part of it.</summary>
      <returns>**true** if the ScrollViewer should try to adjust its content; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ReduceViewportForCoreInputViewOcclusionsProperty">
      <summary>Identifies the ReduceViewportForCoreInputViewOcclusions dependency property.</summary>
      <returns>The identifier for the ReduceViewportForCoreInputViewOcclusions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableHeight">
      <summary>Gets a value that represents the vertical size of the area that can be scrolled; the difference between the height of the extent and the height of the viewport.</summary>
      <returns>The vertical size of the area that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>Identifies the ScrollableHeight  dependency property.</summary>
      <returns>The identifier for the ScrollableHeight  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableWidth">
      <summary>Gets a value that represents the horizontal size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.</summary>
      <returns>The horizontal size of the area that can be scrolled. This property has no default value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>Identifies the ScrollableWidth  dependency property.</summary>
      <returns>The identifier for the ScrollableWidth  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.TopHeader">
      <summary>Gets or sets the content of the top header.</summary>
      <returns>The content of the top header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.TopHeaderProperty">
      <summary>Identifies the TopHeader dependency property.</summary>
      <returns>The identifier for the TopHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.TopLeftHeader">
      <summary>Gets or sets the content of the top, left header.</summary>
      <returns>The content of the top, left header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.TopLeftHeaderProperty">
      <summary>Identifies the TopLeftHeader dependency property.</summary>
      <returns>The identifier for the TopLeftHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio">
      <summary>Determines the vertical position of the ScrollViewer's *anchor point* with respect to the viewport. By default, the ScrollViewer selects an element as its CurrentAnchor by identifying the element in its viewport nearest to the anchor point.</summary>
      <returns>A normalized value (0.0f to 1.0f). The default is 0.0f.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatioProperty">
      <summary>Identifies the VerticalAnchorRatio dependency property.</summary>
      <returns>The identifier for the VerticalAnchorRatio dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalOffset">
      <summary>Gets the distance the content has been scrolled vertically.</summary>
      <returns>The distance the content has been scrolled vertically.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>Identifies the VerticalOffset  dependency property.</summary>
      <returns>The identifier for the VerticalOffset  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.</summary>
      <returns>A ScrollBarVisibility value that indicates whether a vertical ScrollBar should be displayed. The default value is **Visible**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the VerticalScrollBarVisibility  dependency property.</summary>
      <returns>The identifier for the VerticalScrollBarVisibility  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode">
      <summary>Gets or sets a value that determines how manipulation input influences scrolling behavior on the vertical axis.</summary>
      <returns>A value of the enumeration. The typical default (as set through the default template, not class initialization) is **Enabled**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollModeProperty">
      <summary>Identifies the VerticalScrollMode dependency property.</summary>
      <returns>The identifier for the VerticalScrollMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsAlignment">
      <summary>Gets or sets a value that indicates how the existing snap points are vertically aligned versus the initial viewport.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsAlignmentProperty">
      <summary>Identifies the VerticalSnapPointsAlignment dependency property.</summary>
      <returns>The identifier for the VerticalSnapPointsAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsType">
      <summary>Gets or sets a value that declares how manipulation behavior reacts to the snap points along the vertical axis.</summary>
      <returns>A value of the enumeration. The default is **None** but might be set through a control template.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsTypeProperty">
      <summary>Identifies the VerticalSnapPointsType dependency property.</summary>
      <returns>The identifier for the VerticalSnapPointsType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportHeight">
      <summary>Gets the vertical size of the viewable content.</summary>
      <returns>The vertical size of the viewable content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>Identifies the ViewportHeight  dependency property.</summary>
      <returns>The identifier for the ViewportHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportWidth">
      <summary>Gets the horizontal size of the viewable content.</summary>
      <returns>The horizontal size of the viewable content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>Identifies the ViewportWidth dependency property.</summary>
      <returns>The identifier for the ViewportWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFactor">
      <summary>Gets a value that indicates the current zoom factor engaged for content scaling.</summary>
      <returns>The current zoom factor engaged for content scaling. The default is 1.0, where 1.0 indicates no additional scaling.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFactorProperty">
      <summary>Identifies the ZoomFactor dependency property.</summary>
      <returns>The identifier for the ZoomFactor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode">
      <summary>Gets or sets a value that indicates whether zoom behavior in the ScrollViewer content is enabled.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomModeProperty">
      <summary>Identifies the ZoomMode dependency property.</summary>
      <returns>The identifier for the ZoomMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPoints">
      <summary>Gets the observable collection of zoom snap point factors that are held by the ScrollViewer.</summary>
      <returns>A collection of Single values that represent zoom factors as snap points.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsProperty">
      <summary>Identifies the ZoomSnapPoints dependency property.</summary>
      <returns>The identifier for the ZoomSnapPoints dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsType">
      <summary>Gets or sets a value that indicates how zoom snap points are processed for interaction input.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsTypeProperty">
      <summary>Identifies the ZoomSnapPointsType dependency property.</summary>
      <returns>The identifier for the ZoomSnapPointsType dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.AnchorRequested">
      <summary>Occurs when an anchor is requested at the beginning of the Arrange pass. Handle this event to override the ScrollViewer's default logic to select an anchor element as part of *scroll anchoring*.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.DirectManipulationCompleted">
      <summary>Occurs when any direct manipulation of the ScrollViewer finishes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.DirectManipulationStarted">
      <summary>Occurs when any direct manipulation of the ScrollViewer begins.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewChanged">
      <summary>Occurs when manipulations such as scrolling and zooming have caused the view to change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewChanging">
      <summary>Occurs when manipulations such as scrolling and zooming cause the view to change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ChangeView(Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Single})">
      <summary>Causes the ScrollViewer to load a new view into the viewport using the specified offsets and zoom factor.</summary>
      <param name="horizontalOffset">A value between 0 and ScrollableWidth that specifies the distance the content should be scrolled horizontally.</param>
      <param name="verticalOffset">A value between 0 and ScrollableHeight that specifies the distance the content should be scrolled vertically.</param>
      <param name="zoomFactor">A value between MinZoomFactor and MaxZoomFactor that specifies the required target ZoomFactor.</param>
      <returns>**true** if the view is changed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ChangeView(Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Single},System.Boolean)">
      <summary>Causes the ScrollViewer to load a new view into the viewport using the specified offsets and zoom factor, and optionally disables scrolling animation.</summary>
      <param name="horizontalOffset">A value between 0 and ScrollableWidth that specifies the distance the content should be scrolled horizontally.</param>
      <param name="verticalOffset">A value between 0 and ScrollableHeight that specifies the distance the content should be scrolled vertically.</param>
      <param name="zoomFactor">A value between MinZoomFactor and MaxZoomFactor that specifies the required target ZoomFactor.</param>
      <param name="disableAnimation">**true** to disable zoom/pan animations while changing the view; otherwise, **false**. The default is **false**.</param>
      <returns>**true** if the view is changed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetBringIntoViewOnFocusChange(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the BringIntoViewOnFocusChange dependency property / `ScrollViewer.BringIntoViewOnFocusChange` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetCanContentRenderOutsideBounds(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the CanContentRenderOutsideBounds dependency property / `ScrollViewer.CanContentRenderOutsideBounds` XAML attached property on a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the HorizontalScrollBarVisibility dependency property / `ScrollViewer.HorizontalScrollBarVisibility` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetHorizontalScrollMode(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the HorizontalScrollMode dependency property / `ScrollViewer.HorizontalScrollMode` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsDeferredScrollingEnabled dependency property / `ScrollViewer.IsDeferredScrollingInertiaEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsHorizontalRailEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsHorizontalRailEnabled dependency property / `ScrollViewer.IsHorizontalRailEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsHorizontalScrollChainingEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsHorizontalScrollChainingEnabled dependency property / `ScrollViewer.IsHorizontalScrollChainingEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsScrollInertiaEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsScrollInertiaEnabled dependency property / `ScrollViewer.IsScrollInertiaEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsVerticalRailEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsVerticalRailEnabled dependency property / `ScrollViewer.IsVerticalRailEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsVerticalScrollChainingEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsVerticalScrollChainingEnabled dependency property / `ScrollViewer.IsVerticalScrollChainingEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsZoomChainingEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsZoomChainingEnabled dependency property / `ScrollViewer.IsZoomChainingEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetIsZoomInertiaEnabled(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the IsZoomInertiaEnabled dependency property / `ScrollViewer.IsZoomInertiaEnabled` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetVerticalScrollBarVisibility(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the VerticalScrollBarVisibility dependency property / `ScrollViewer.VerticalScrollBarVisibility` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetVerticalScrollMode(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the VerticalScrollMode dependency property / `ScrollViewer.VerticalScrollMode` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.GetZoomMode(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the ZoomMode dependency property / `ScrollViewer.ZoomMode` XAML attached property from a specified element.</summary>
      <param name="element">The element from which the property value is read.</param>
      <returns>The value of the property, as obtained from the property store.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>Called when the value of properties that describe the size and location of the scroll area change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.RegisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <summary>Registers a UIElement as a potential scroll anchor.</summary>
      <param name="element">A UIElement within the subtree of the ScrollViewer.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>Scrolls the content that is within the ScrollViewer to the specified horizontal offset position.</summary>
      <deprecated type="deprecate">ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.</deprecated>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>Scrolls the content that is within the ScrollViewer to the specified vertical offset position.</summary>
      <deprecated type="deprecate">ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.</deprecated>
      <param name="offset">The position that the content scrolls to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetBringIntoViewOnFocusChange(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the BringIntoViewOnFocusChange dependency property / `ScrollViewer.BringIntoViewOnFocusChange` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="bringIntoViewOnFocusChange">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetCanContentRenderOutsideBounds(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the CanContentRenderOutsideBounds dependency property / `ScrollViewer.CanContentRenderOutsideBounds` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="canContentRenderOutsideBounds">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the HorizontalScrollBarVisibility dependency property / `ScrollViewer.HorizontalScrollBarVisibility` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="horizontalScrollBarVisibility">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetHorizontalScrollMode(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.ScrollMode)">
      <summary>Sets the value of the HorizontalScrollMode dependency property / `ScrollViewer.HorizontalScrollMode` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="horizontalScrollMode">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsDeferredScrollingEnabled dependency property / `ScrollViewer.IsDeferredScrollingEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isDeferredScrollingEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsHorizontalRailEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsHorizontalRailEnabled dependency property / `ScrollViewer.IsHorizontalRailEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isHorizontalRailEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsHorizontalScrollChainingEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsHorizontalScrollChainingEnabled dependency property / `ScrollViewer.IsHorizontalScrollChainingEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isHorizontalScrollChainingEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsScrollInertiaEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsScrollInertiaEnabled dependency property / `ScrollViewer.IsScrollInertiaEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isScrollInertiaEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsVerticalRailEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsVerticalRailEnabled dependency property / `ScrollViewer.IsVerticalRailEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isVerticalRailEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsVerticalScrollChainingEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsVerticalScrollChainingEnabled dependency property / `ScrollViewer.IsVerticalScrollChainingEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isVerticalScrollChainingEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsZoomChainingEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsZoomChainingEnabled dependency property / `ScrollViewer.IsZoomChainingEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isZoomChainingEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetIsZoomInertiaEnabled(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the IsZoomInertiaEnabled dependency property / `ScrollViewer.IsZoomInertiaEnabled` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="isZoomInertiaEnabled">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetVerticalScrollBarVisibility(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.ScrollBarVisibility)">
      <summary>Sets the value of the VerticalScrollBarVisibility dependency property / `ScrollViewer.VerticalScrollBarVisibility` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="verticalScrollBarVisibility">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetVerticalScrollMode(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.ScrollMode)">
      <summary>Sets the value of the VerticalScrollMode dependency property / `ScrollViewer.VerticalScrollMode` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="verticalScrollMode">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.SetZoomMode(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.ZoomMode)">
      <summary>Sets the value of the ZoomMode dependency property / `ScrollViewer.ZoomMode` XAML attached property on a specified element.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="zoomMode">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.UnregisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <summary>Unregisters a UIElement as a potential scroll anchor.</summary>
      <param name="element">A UIElement within the subtree of the ScrollViewer.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomToFactor(System.Single)">
      <summary>Sets the effective value of ZoomFactor.</summary>
      <deprecated type="deprecate">ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.</deprecated>
      <param name="factor">The zoom factor to set. The factors are based on a norm of 1.0, which represents no zoom applied. The values you can set are also influenced by current values for MinZoomFactor and MaxZoomFactor.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollViewerView">
      <summary>Provides a view for a ScrollViewer when its view is changing.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerView.HorizontalOffset">
      <summary>Gets the distance the content has been scrolled horizontally.</summary>
      <returns>The distance the content has been scrolled horizontally.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerView.VerticalOffset">
      <summary>Gets the distance the content has been scrolled vertically.</summary>
      <returns>The distance the content has been scrolled vertically.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerView.ZoomFactor">
      <summary>Gets a value that indicates the current zoom factor engaged for content scaling.</summary>
      <returns>The current zoom factor engaged for content scaling. The default is 1.0, where 1.0 indicates no additional scaling.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs">
      <summary>Provides event data for the ViewChanged event and similar control-specific events.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the ScrollViewerViewChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs.IsIntermediate">
      <summary>Gets a value that indicates whether the underlying manipulation that raised the event is complete.</summary>
      <returns>**True** if the manipulation is at an intermediate stage and not yet final; **false** if the manipulation is final.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs">
      <summary>Provides event data for the ViewChanging event and similar control-specific events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs.FinalView">
      <summary>Gets the view that the ScrollViewer will show when the view comes to rest after a pan/zoom manipulation.</summary>
      <returns>The view that the ScrollViewer will show when the view comes to rest after a pan/zoom manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs.IsInertial">
      <summary>Gets a value that indicates whether the pan/zoom manipulation has an inertial component.</summary>
      <returns>**true** if the pan/zoom manipulation has an inertial component; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs.NextView">
      <summary>Gets the view that the ScrollViewer will show next.</summary>
      <returns>The view that the ScrollViewer will show next.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SearchBox">
      <summary>Represents a control that can be used to enter search query text. (Not recommended for Universal Windows Platform (UWP) apps. See AutoSuggestBox.)</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SearchBox.#ctor">
      <summary>Initializes a new instance of the SearchBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.ChooseSuggestionOnEnter">
      <summary>Gets or sets a value that determines whether the suggested search query is activated when the user presses Enter.</summary>
      <returns>**true** if the suggested search query is activated when the user presses Enter; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.ChooseSuggestionOnEnterProperty">
      <summary>Identifies the ChooseSuggestionOnEnter dependency property.</summary>
      <returns>The identifier for the ChooseSuggestionOnEnter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.FocusOnKeyboardInput">
      <summary>Gets or sets a value that determines whether a user can search by typing anywhere in the app.</summary>
      <returns>**true** if the user can search by typing anywhere in the app; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.FocusOnKeyboardInputProperty">
      <summary>Identifies the FocusOnKeyboardInput dependency property.</summary>
      <returns>The identifier for the FocusOnKeyboardInput dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is entered. The default is an empty string (""). The maximum placeholder text length is 128 characters.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.QueryText">
      <summary>Gets or sets the text contents of the search box.</summary>
      <returns>A string containing the text contents of the search box. The default is an empty string (""). The maximum query text length is 2048 characters.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.QueryTextProperty">
      <summary>Identifies the QueryText dependency property.</summary>
      <returns>The identifier for the QueryText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.SearchHistoryContext">
      <summary>Gets or sets a string that identifies the context of the search and is used to store the user's search history with the app.</summary>
      <returns>A string that identifies the context of the search. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.SearchHistoryContextProperty">
      <summary>Identifies the SearchHistoryContext dependency property.</summary>
      <returns>The identifier for the SearchHistoryContext dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.SearchHistoryEnabled">
      <summary>Gets or sets a value that determines whether search suggestions are made from the search history.</summary>
      <returns>**true** if search suggestions are made from the search history; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBox.SearchHistoryEnabledProperty">
      <summary>Identifies the SearchHistoryEnabled dependency property.</summary>
      <returns>The identifier for the SearchHistoryEnabled dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SearchBox.PrepareForFocusOnKeyboardInput">
      <summary>Occurs when the FocusOnKeyboardInput property is **true** and the app receives textual keyboard input.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SearchBox.QueryChanged">
      <summary>Occurs when the query text changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SearchBox.QuerySubmitted">
      <summary>Occurs when the user submits a search query.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SearchBox.ResultSuggestionChosen">
      <summary>Occurs when the user picks a suggested search result.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SearchBox.SuggestionsRequested">
      <summary>Occurs when the user's query text changes and the app needs to provide new suggestions to display in the search pane.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SearchBox.SetLocalContentSuggestionSettings(Windows.ApplicationModel.Search.LocalContentSuggestionSettings)">
      <summary>Specifies whether suggestions based on local files are automatically displayed in the search box suggestions, and defines the criteria that Windows uses to locate and filter these suggestions.</summary>
      <param name="settings">The new settings for local content suggestions.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs">
      <summary>Provides event data for the SearchBox.QueryChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs.Language">
      <summary>Gets the Internet Engineering Task Force (IETF) language tag (BCP 47 standard) that identifies the language currently associated with the user's text input device.</summary>
      <returns>The IETF BCP 47 standard language tag.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs.LinguisticDetails">
      <summary>Gets information about query text that the user enters through an Input Method Editor (IME).</summary>
      <returns>Linguistic information about query text that the user enters through an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs.QueryText">
      <summary>Gets the query text of the current search.</summary>
      <returns>The query text of the current search.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs">
      <summary>Provides event data for the SearchBox.QuerySubmitted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs.KeyModifiers">
      <summary>Gets any modifier keys that are pressed when the user presses enter to submit a query.</summary>
      <returns>Any modifier keys that are pressed when the user presses enter to submit a query.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs.Language">
      <summary>Gets the Internet Engineering Task Force (IETF) language tag (BCP 47 standard) that identifies the language currently associated with the user's text input device.</summary>
      <returns>The IETF BCP 47 standard language tag.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs.LinguisticDetails">
      <summary>Gets information about query text that the user enters through an Input Method Editor (IME).</summary>
      <returns>Linguistic information about query text that the user enters through an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs.QueryText">
      <summary>Gets the query text of the current search.</summary>
      <returns>The query text of the current search.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs">
      <summary>Provides event data for the SearchBox.ResultSuggestionChosen event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs.#ctor">
      <summary>Initializes a new instance of the SearchBoxResultSuggestionChosenEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs.KeyModifiers">
      <summary>Gets any modifier keys that are pressed when the user presses enter to pick a search result.</summary>
      <returns>Any modifier keys that are pressed when the user presses enter to pick a search result.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs.Tag">
      <summary>The app-defined tag for the suggested result that the user selected.</summary>
      <returns>The app-defined tag for the selected search result.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs">
      <summary>Provides event data for the SearchBox.SuggestionsRequested event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs.Language">
      <summary>Gets the Internet Engineering Task Force (IETF) language tag (BCP 47 standard) that identifies the language currently associated with the user's text input device.</summary>
      <returns>The IETF BCP 47 standard language tag.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs.LinguisticDetails">
      <summary>Gets information about query text that the user enters through an Input Method Editor (IME).</summary>
      <returns>Linguistic information about query text that the user enters through an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs.QueryText">
      <summary>Gets the query text of the current search.</summary>
      <returns>The query text of the current search.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs.Request">
      <summary>Gets the object that stores the suggestions and information about this request.</summary>
      <returns>The object that stores the suggestions and information about this request.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs">
      <summary>Provides data for the Hub.SectionsInViewChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs.AddedSections">
      <summary>Gets a collection that contains the hub sections that moved into view.</summary>
      <returns>A collection that contains the hub sections that moved into view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs.RemovedSections">
      <summary>Gets a collection that contains the hub sections that moved out of view.</summary>
      <returns>A collection that contains the hub sections that moved into view.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler">
      <summary>Represents the method that will handle a SectionsInViewChanged event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs">
      <summary>Provides data for the SelectionChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs.#ctor(Windows.Foundation.Collections.IVector{System.Object},Windows.Foundation.Collections.IVector{System.Object})">
      <summary>Initializes a new instance of the SelectionChangedEventArgs class.</summary>
      <param name="removedItems">Sets the initial AddedItems value. May be null.</param>
      <param name="addedItems">Sets the initial RemovedItems value. May be null.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>Gets a list that contains the items that were selected.</summary>
      <returns>The loosely typed collection of items that were selected in this event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>Gets a list that contains the items that were unselected.</summary>
      <returns>The loosely typed list of items that were unselected in this event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler">
      <summary>Represents the method that will handle the SelectionChanged event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionMode">
      <summary>Defines constants that specify the selection behavior for a ListBox.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SelectionMode.Extended">
      <summary>The user can select multiple items by entering a special mode, for example when depressing a modifier key.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SelectionMode.Multiple">
      <summary>The user can select multiple items without entering a special mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SelectionMode.Single">
      <summary>The user can select only one item at a time.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SemanticZoom">
      <summary>Represents a scrollable control that incorporates two views that have a semantic relationship. For example, the ZoomedOutView might be an index of titles, and the ZoomedInView might include details and summaries for each of the title entries. Views can be changed using zoom or other interactions.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SemanticZoom.#ctor">
      <summary>Initializes a new instance of the SemanticZoom class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.CanChangeViews">
      <summary>Gets or sets a value that declares whether the SemanticZoom can change display views.</summary>
      <returns>**true** if views can be changed; otherwise, **false**. The default is **true**. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.CanChangeViewsProperty">
      <summary>Identifies the CanChangeViews dependency property.</summary>
      <returns>The identifier for the CanChangeViews dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomedInViewActive">
      <summary>Gets or sets a value that determines whether the ZoomedInView is the active view.</summary>
      <returns>**true** if the ZoomedInView is the active view. **false** if the ZoomedOutView is the active view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomedInViewActiveProperty">
      <summary>Identifies the IsZoomedInViewActive dependency property.</summary>
      <returns>The identifier for the IsZoomedInViewActive dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomOutButtonEnabled">
      <summary>Gets or sets a value that indicates whether the ZoomedInView shows a button that activates the ZoomedOutView.</summary>
      <returns>**True** if the ZoomedInView shows a button that activates the ZoomedOutView; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomOutButtonEnabledProperty">
      <summary>Identifies the IsZoomOutButtonEnabled dependency property.</summary>
      <returns>The identifier of the IsZoomOutButtonEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedInView">
      <summary>Gets or sets the semantically more complete zoomed-in view of the SemanticZoom.</summary>
      <returns>An object that implements ISemanticZoomInfo. Typically this is a practical ListViewBase implementation such as GridView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedInViewProperty">
      <summary>Identifies the ZoomedInView dependency property.</summary>
      <returns>The identifier for the ZoomedInView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedOutView">
      <summary>Gets or sets the zoomed-out view of the SemanticZoom.</summary>
      <returns>An object that implements ISemanticZoomInfo. Typically this is a practical ListViewBase implementation such as GridView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedOutViewProperty">
      <summary>Identifies the ZoomedOutView dependency property.</summary>
      <returns>The identifier for the ZoomedOutView dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SemanticZoom.ViewChangeCompleted">
      <summary>Occurs when a view change is complete and the view is displayed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SemanticZoom.ViewChangeStarted">
      <summary>Occurs when a view change is requested.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SemanticZoom.ToggleActiveView">
      <summary>Changes from the current active view to the other possible view. For example, if IsZoomedInViewActive is true, calling this method changes to zoomed-out view.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SemanticZoomLocation">
      <summary>Communicates information for items and view state in a SemanticZoom, such that hosts for scrolling and virtualization (such as ListViewBase ) can get correct item and bounds information.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SemanticZoomLocation.#ctor">
      <summary>Initializes a new instance of the SemanticZoomLocation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Bounds">
      <summary>Gets or sets the sizing bounds of the item as it exists in the current view of a SemanticZoom.</summary>
      <returns>The sizing bounds of the item. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Item">
      <summary>Gets or sets the display item as it exists in the current view of a SemanticZoom.</summary>
      <returns>The specific item in the SemanticZoom. </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs">
      <summary>Provides event data for the ViewChangeStarted and ViewChangeCompleted events.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the SemanticZoomViewChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs.DestinationItem">
      <summary>Provides information about the item and its bounds, once the view change is complete.</summary>
      <returns>Information about the item and its bounds.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs.IsSourceZoomedInView">
      <summary>Gets or sets a value that indicates whether the starting view is the ZoomedInView.</summary>
      <returns>**true** if the starting view is the ZoomedInView; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs.SourceItem">
      <summary>Provides information about the item and its bounds, for the item as represented in the previous view.</summary>
      <returns>Information about the item and its bounds.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler">
      <summary>Represents the method that will handle the ViewChangeStarted and ViewChangeCompleted events.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Slider">
      <summary>Represents a control that lets the user select from a range of values by moving a Thumb control along a track.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Slider.#ctor">
      <summary>Initializes a new instance of the Slider class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IntermediateValue">
      <summary>Gets or sets the value of the Slider while the user is interacting with it, before the value is snapped to either the tick or step value. The value the Slider snaps to is specified by the SnapsTo property.</summary>
      <returns>A temporary value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IntermediateValueProperty">
      <summary>Identifies the IntermediateValue dependency property.</summary>
      <returns>The identifier for the IntermediateValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IsDirectionReversed">
      <summary>Gets or sets a value that indicates the direction of increasing value.</summary>
      <returns>**true** if the direction of increasing value is to the left for a horizontal slider or down for a vertical slider; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IsDirectionReversedProperty">
      <summary>Identifies the IsDirectionReversed dependency property.</summary>
      <returns>The identifier for the IsDirectionReversed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IsThumbToolTipEnabled">
      <summary>Gets or sets a value that determines whether the slider value is shown in a tool tip for the Thumb component of the Slider.</summary>
      <returns>**True** if a tool tip is shown for the Thumb component; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.IsThumbToolTipEnabledProperty">
      <summary>Identifies the IsThumbToolTipEnabled dependency property.</summary>
      <returns>The identifier for the IsThumbToolTipEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.Orientation">
      <summary>Gets or sets the orientation of a Slider.</summary>
      <returns>One of the Orientation values. The default is **Horizontal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.SnapsTo">
      <summary>Gets or sets a value that indicates how the Slider conforms the thumb position to its steps or tick marks.</summary>
      <returns>An enumeration value that specifies whether the Slider snaps to steps or tick marks. The default is **StepValues**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.SnapsToProperty">
      <summary>Identifies the SnapsTo dependency property.</summary>
      <returns>The identifier for the SnapsTo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.StepFrequency">
      <summary>Gets or sets the value part of a value range that steps should be created for.</summary>
      <returns>The value part of a value range that steps should be created for.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.StepFrequencyProperty">
      <summary>Identifies the StepFrequency dependency property.</summary>
      <returns>The identifier for the StepFrequency dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.ThumbToolTipValueConverter">
      <summary>Gets or sets the converter logic that converts the range value of the Slider into tool tip content.</summary>
      <returns>A converter implementation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.ThumbToolTipValueConverterProperty">
      <summary>Identifies the ThumbToolTipValueConverter dependency property.</summary>
      <returns>The identifier for the ThumbToolTipValueConverter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.TickFrequency">
      <summary>Gets or sets the increment of the value range that ticks should be created for.</summary>
      <returns>The increment to create tick marks for. The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.TickFrequencyProperty">
      <summary>Identifies the TickFrequency dependency property.</summary>
      <returns>The identifier for the TickFrequency dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.TickPlacement">
      <summary>Gets or sets a value that indicates where to draw tick marks in relation to the track.</summary>
      <returns>An enumeration value that specifies where to draw tick marks in relation to the track. The default is **Inline**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Slider.TickPlacementProperty">
      <summary>Identifies the TickPlacement dependency property.</summary>
      <returns>The identifier for the TickPlacement dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SnapPointsType">
      <summary>Defines constants that specify how panning snap points are processed for gesture/manipulation input. </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsType.Mandatory">
      <summary>Content always stops at the snap point closest to where inertia would naturally stop along the direction of inertia.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsType.MandatorySingle">
      <summary>Content always stops at the snap point closest to the release point along the direction of inertia.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsType.None">
      <summary>No snapping behavior. Only the manipulation influences the final location.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsType.Optional">
      <summary>Content stops at a snap point closest to where inertia would naturally stop along the direction of inertia, depending on how close the snap point is.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsType.OptionalSingle">
      <summary>Content stops at the next snap point, if the motion starts far from it.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitButton">
      <summary>Represents a button with two parts that can be invoked separately. One part behaves like a standard button and the other part invokes a flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButton.#ctor">
      <summary>Initializes a new instance of the SplitButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.Command">
      <summary>Gets or sets the command to invoke when this button is pressed.</summary>
      <returns>The command to invoke when this button is pressed. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandParameter">
      <summary>Gets or sets the parameter to pass to the Command property.</summary>
      <returns>The parameter to pass to the Command property. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.Flyout">
      <summary>Gets or sets the flyout associated with this button.</summary>
      <returns>The flyout associated with this button. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.FlyoutProperty">
      <summary>Identifies the Flyout dependency property.</summary>
      <returns>The identifier for the Flyout dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitButton.Click">
      <summary>Occurs when a button control is clicked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer">
      <summary>Exposes SplitButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.SplitButton)">
      <summary>Initializes a new instance of the SplitButtonAutomationPeer class.</summary>
      <param name="owner">The SplitButton control instance to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer.Collapse">
      <summary>Hides the control's drop down menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer.Expand">
      <summary>Displays the control's drop down menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer.Invoke">
      <summary>Sends a request to click the button associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs">
      <summary>Provides event data for the SplitButton.Click event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitView">
      <summary>Represents a container with two views; one view for the main content and another view that is typically used for navigation commands.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitView.#ctor">
      <summary>Initializes a new instance of the SplitView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.CompactPaneLength">
      <summary>Gets or sets the width of the SplitView pane in its compact display mode.</summary>
      <returns>The width of the pane in it's compact display mode. The default is 48 device-independent pixel (DIP) (defined by the **SplitViewCompactPaneThemeLength** resource).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.CompactPaneLengthProperty">
      <summary>Identifies the CompactPaneLength  dependency property.</summary>
      <returns>The identifier for the CompactPaneLength  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.Content">
      <summary>Gets or sets the contents of the main panel of a SplitView.</summary>
      <returns>The contents of the main panel of a SplitView. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.ContentProperty">
      <summary>Identifies the Content  dependency property.</summary>
      <returns>The identifier for the Content  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.DisplayMode">
      <summary>Gets of sets a value that specifies how the pane and content areas of a SplitView are shown.</summary>
      <returns>A value of the enumeration that specifies how the pane and content areas of a SplitView are shown. The default is **Overlay**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.DisplayModeProperty">
      <summary>Identifies the DisplayMode  dependency property.</summary>
      <returns>The identifier for the DisplayMode  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.IsPaneOpen">
      <summary>Gets or sets a value that specifies whether the SplitView pane is expanded to its full width.</summary>
      <returns>**true** if the pane is expanded to its full width; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.IsPaneOpenProperty">
      <summary>Identifies the IsPaneOpen  dependency property.</summary>
      <returns>The identifier for the IsPaneOpen  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.OpenPaneLength">
      <summary>Gets or sets the width of the SplitView pane when it's fully expanded.</summary>
      <returns>The width of the SplitView pane when it's fully expanded. The default is 320 device-independent pixel (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.OpenPaneLengthProperty">
      <summary>Identifies the  OpenPaneLength dependency property.</summary>
      <returns>The identifier for the OpenPaneLength  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.Pane">
      <summary>Gets or sets the contents of the pane of a SplitView.</summary>
      <returns>The contents of the pane of a SplitView. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.PaneBackground">
      <summary>Gets or sets the Brush to apply to the background of the Pane area of the control.</summary>
      <returns>The Brush to apply to the background of the Pane area of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.PaneBackgroundProperty">
      <summary>Identifies the PaneBackground  dependency property.</summary>
      <returns>The identifier for the   PaneBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.PanePlacement">
      <summary>Gets or sets a value that specifies whether the pane is shown on the right or left side of the SplitView.</summary>
      <returns>A value of the enumeration that specifies whether the pane is shown on the right or left side of the SplitView. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.PanePlacementProperty">
      <summary>Identifies the PanePlacement  dependency property.</summary>
      <returns>The identifier for the   PanePlacement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.PaneProperty">
      <summary>Identifies the Pane  dependency property.</summary>
      <returns>The identifier for the  Pane dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a SplitView control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitView.TemplateSettingsProperty">
      <summary>Identifies the TemplateSettings  dependency property.</summary>
      <returns>The identifier for the TemplateSettings  dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitView.PaneClosed">
      <summary>Occurs when the SplitView pane is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitView.PaneClosing">
      <summary>Occurs when the SplitView pane is closing.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitView.PaneOpened">
      <summary>Occurs when the SplitView pane is opened.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitView.PaneOpening">
      <summary>Occurs when the SplitView pane is opening.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitViewDisplayMode">
      <summary>Defines constants that specify how the pane is shown in a SplitView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewDisplayMode.CompactInline">
      <summary>The amount of the pane defined by the CompactPaneLength property is shown side-by-side with the content and takes up space in the control layout. The remaining part of the pane pushes the content to the side when it's open and takes up space in the control layout. The pane does not close when the user taps outside of it.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewDisplayMode.CompactOverlay">
      <summary>The amount of the pane defined by the CompactPaneLength property is shown side-by-side with the content and takes up space in the control layout. The remaining part of the pane covers the content when it's open and does not take up space in the control layout. The pane closes when the user taps outside of it.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewDisplayMode.Inline">
      <summary>The pane is shown side-by-side with the content and takes up space in the control layout. The pane does not close when the user taps outside of it.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewDisplayMode.Overlay">
      <summary>The pane covers the content when it's open and does not take up space in the control layout. The pane closes when the user taps outside of it.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs">
      <summary>Provides event data for the SplitView.PaneClosing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the pane closing action should be canceled.</summary>
      <returns>**true** to cancel the pane closing action; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitViewPanePlacement">
      <summary>Defines constants that specify whether the pane is to the left or right of the content in a SplitView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewPanePlacement.Left">
      <summary>The pane is shown to the left of the SplitView content .</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SplitViewPanePlacement.Right">
      <summary>The pane is shown to the right of the SplitView content .</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.StackPanel">
      <summary>Arranges child elements into a single line that can be oriented horizontally or vertically.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackPanel.#ctor">
      <summary>Initializes a new instance of the StackPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that indicates whether the horizontal snap points for the StackPanel are equidistant from each other.</summary>
      <returns>**true** if the horizontal snap points for the StackPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegular">
      <summary>Gets or sets a value that indicates whether the generated snap points used for panning in the StackPanel are equidistant from each other.</summary>
      <returns>**true** if the snap points in the StackPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegularProperty">
      <summary>Identifies the AreScrollSnapPointsRegular dependency property.</summary>
      <returns>The identifier for the AreScrollSnapPointsRegular dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.AreVerticalSnapPointsRegular">
      <summary>Gets a value that indicates whether the vertical snap points for the StackPanel are equidistant from each other.</summary>
      <returns>**true** if the vertical snap points for the StackPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BackgroundSizing">
      <summary>Gets or sets a value that indicates how far the background extends in relation to this element's border.</summary>
      <returns>A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BackgroundSizingProperty">
      <summary>Identifies the BackgroundSizing dependency property.</summary>
      <returns>The identifier for the BackgroundSizing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BorderBrush">
      <summary>Gets or sets a brush that describes the border fill of the panel.</summary>
      <returns>The brush that is used to fill the panel's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BorderBrushProperty">
      <summary>Identifies the BorderBrush dependency property.</summary>
      <returns>The identifier for the BorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BorderThickness">
      <summary>Gets or sets the border thickness of the panel.</summary>
      <returns>The border thickness of the panel, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.BorderThicknessProperty">
      <summary>Identifies the BorderThickness dependency property.</summary>
      <returns>The identifier for the BorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.CornerRadius">
      <summary>Gets or sets the radius for the corners of the panel's border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
      <returns>The identifier for the CornerRadius dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.Orientation">
      <summary>Gets or sets the dimension by which child elements are stacked.</summary>
      <returns>One of the enumeration values that specifies the orientation of child elements. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.OrientationProperty">
      <summary>Identifies the Orientation  dependency property.</summary>
      <returns>The identifier for the Orientation  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.Padding">
      <summary>Gets or sets the distance between the border and its child object.</summary>
      <returns>The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.PaddingProperty">
      <summary>Identifies the Padding dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.Spacing">
      <summary>Gets or sets a uniform distance (in pixels) between stacked items. It is applied in the direction of the StackPanel's Orientation.</summary>
      <returns>The uniform distance (in pixels) between stacked items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackPanel.SpacingProperty">
      <summary>Identifies the Spacing dependency property.</summary>
      <returns>The identifier for the Spacing dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.StackPanel.HorizontalSnapPointsChanged">
      <summary>Occurs when the measurements for horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.StackPanel.VerticalSnapPointsChanged">
      <summary>Occurs when the measurements for vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackPanel.GetInsertionIndexes(Windows.Foundation.Point,System.Int32@,System.Int32@)">
      <summary>Returns the index values of the items that the specified point is between.</summary>
      <param name="position">The point for which to get insertion indexes.</param>
      <param name="first">The index of the item before the specified point.</param>
      <param name="second">The index of the item after the specified point.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackPanel.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns the set of distances between irregular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation (dimension) for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <returns>The read only collection of snap point distances. Returns an empty collection when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackPanel.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Gets the distance between regular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation/dimension for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <param name="offset">Out parameter. The offset of the first snap point.</param>
      <returns>The distance between the equidistant snap points. Returns 0 when no snap points are present.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.StretchDirection">
      <summary>Defines constants that specify the direction that content is scaled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.StretchDirection.Both">
      <summary>The content stretches to fit the parent according to the Stretch property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.StretchDirection.DownOnly">
      <summary>The content scales downward only when it is larger than the parent. If the content is smaller, no scaling upward is performed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.StretchDirection.UpOnly">
      <summary>The content scales upward only when it is smaller than the parent. If the content is larger, no scaling downward is performed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.StyleSelector">
      <summary>Enables custom item style selection logic as a function of the content data and its specific item container.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StyleSelector.#ctor">
      <summary>Initializes a new instance of the StyleSelector class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StyleSelector.SelectStyle(System.Object,Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns a specific Style based on custom logic.</summary>
      <param name="item">The content.</param>
      <param name="container">The element to which the style is applied.</param>
      <returns>An application-specific style to apply; may also return null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StyleSelector.SelectStyleCore(System.Object,Microsoft.UI.Xaml.DependencyObject)">
      <summary>When implemented by a derived class, returns a specific Style based on custom logic.</summary>
      <param name="item">The content.</param>
      <param name="container">The element to which the style is applied.</param>
      <returns>An application-specific style to apply; may also return null.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel">
      <summary>Implements a XAML layout surface target for Microsoft DirectX interoperation scenarios. This panel has some atypical restrictions on its usage within an app window; see Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel.#ctor">
      <summary>Initializes a new instance of the SwapChainBackgroundPanel class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel.CreateCoreIndependentInputSource(Windows.UI.Core.CoreInputDeviceTypes)">
      <summary>Creates a core input object that handles the input types as specified by the *deviceTypes* parameter.</summary>
      <param name="deviceTypes">A combined value of the enumeration.</param>
      <returns>An object that represents the input subsystem for interoperation purposes and can be used for input event connection points.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwapChainPanel">
      <summary>Provides a hosting surface, where Microsoft DirectX swap chains provide content that can be rendered into a XAML UI. A SwapChainPanel element is a key component for an app that renders Microsoft DirectX graphics and then presents those visuals within a XAML page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwapChainPanel.#ctor">
      <summary>Initializes a new instance of the SwapChainPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleX">
      <summary>Gets the x-axis scale factor of the SwapChainPanel.</summary>
      <returns>The x-axis scale factor of the SwapChainPanel. A value of 1.0 means no scaling is applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleXProperty">
      <summary>Identifies the CompositionScaleX dependency property.</summary>
      <returns>The identifier for the CompositionScaleX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleY">
      <summary>Gets the y-axis scale factor of the SwapChainPanel.</summary>
      <returns>The y-axis scale factor of the SwapChainPanel. A value of 1.0 means no scaling is applied.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleYProperty">
      <summary>Identifies the CompositionScaleY dependency property.</summary>
      <returns>The identifier for the CompositionScaleY dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleChanged">
      <summary>Occurs when the composition scale factor of the SwapChainPanel has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwapChainPanel.CreateCoreIndependentInputSource(Windows.UI.Core.CoreInputDeviceTypes)">
      <summary>Creates a core input object that handles the input types as specified by the *deviceTypes* parameter. This core input object can process input events on a background thread.</summary>
      <param name="deviceTypes">A combined value of the enumeration.</param>
      <returns>An object that represents the input subsystem for interoperation purposes and can be used for input event connection points.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked">
      <summary>Defines constants that specify how a SwipeControl behaves after a command is invoked.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.Auto">
      <summary>In **Reveal** mode, the SwipeControl closes after an item is invoked. In **Execute** mode, the SwipeControl remains open.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.Close">
      <summary>The SwipeControl closes after an item is invoked.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.RemainOpen">
      <summary>The SwipeControl remains open after an item is invoked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeControl">
      <summary>Represents a container that provides access to contextual commands through touch interactions.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeControl.#ctor">
      <summary>Initializes a new instance of the SwipeControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.BottomItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the bottom up.</summary>
      <returns>The items that can be invoked when the control is swiped from the bottom up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.BottomItemsProperty">
      <summary>Identifies the BottomItems dependency property.</summary>
      <returns>The identifier for the BottomItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.LeftItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the left side.</summary>
      <returns>The items that can be invoked when the control is swiped from the left side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.LeftItemsProperty">
      <summary>Identifies the LeftItems dependency property.</summary>
      <returns>The identifier for the LeftItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.RightItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the right side.</summary>
      <returns>The items that can be invoked when the control is swiped from the right side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.RightItemsProperty">
      <summary>Identifies the RightItems dependency property.</summary>
      <returns>The identifier for the RightItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.TopItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the top down.</summary>
      <returns>The items that can be invoked when the control is swiped from the top down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.TopItemsProperty">
      <summary>Identifies the TopItems dependency property.</summary>
      <returns>The identifier for the TopItems dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeControl.Close">
      <summary>Closes the swipe control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItem">
      <summary>Represents an individual command in a SwipeControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItem.#ctor">
      <summary>Initializes a new instance of the SwipeItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Background">
      <summary>Gets or sets a brush that provides the background of the control.</summary>
      <returns>The brush that provides the background of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BehaviorOnInvoked">
      <summary>Gets or sets a value that indicates how a SwipeControl behaves after this item is invoked.</summary>
      <returns>A value that indicates how a SwipeControl behaves after this item is invoked. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BehaviorOnInvokedProperty">
      <summary>Identifies the BehaviorOnInvoked dependency property.</summary>
      <returns>The identifier for the BehaviorOnInvoked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Command">
      <summary>Gets or sets the command to execute when this item is invoked.</summary>
      <returns>The command to execute when this item is invoked. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandParameter">
      <summary>Gets or sets the parameter to pass to the Command property.</summary>
      <returns>The parameter to pass to the Command property. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Foreground">
      <summary>Gets or sets the brush that paints the text and icon of the item.</summary>
      <returns>The brush that paints the text and icon of the item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.IconSource">
      <summary>Gets or sets the graphic content of the item.</summary>
      <returns>The graphic content of the item. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.IconSourceProperty">
      <summary>Identifies the IconSource dependency property.</summary>
      <returns>The identifier for the IconSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Text">
      <summary>Gets or sets the text description displayed on the item.</summary>
      <returns>The text description displayed on the item. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SwipeItem.Invoked">
      <summary>Occurs when user interaction indicates that the command represented by this item should execute.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs">
      <summary>Provides event data for the SwipeItem.Invoked event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs.SwipeControl">
      <summary>Gets the SwipeControl that owns the invoked item.</summary>
      <returns>The SwipeControl that owns the invoked item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItems">
      <summary>Represents a collection of SwipeItem objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.#ctor">
      <summary>Initializes a new instance of the SwipeItems class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.Mode">
      <summary>Gets or sets a value that indicates the effect of a swipe interaction.</summary>
      <returns>A value of the enumeration that indicates the effect of a swipe interaction. The default is **Reveal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.ModeProperty">
      <summary>Identifies the Mode dependency property.</summary>
      <returns>The identifier for the Mode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.Append(Microsoft.UI.Xaml.Controls.SwipeItem)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.IndexOf(Microsoft.UI.Xaml.Controls.SwipeItem,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.ReplaceAll(Microsoft.UI.Xaml.Controls.SwipeItem[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)">
      <summary>Sets the value at the specified index to the value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeMode">
      <summary>Defines constants that specify the effect of a swipe interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeMode.Execute">
      <summary>A swipe executes a command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeMode.Reveal">
      <summary>A swipe reveals a menu of commands.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Symbol">
      <summary>Defines constants that specify a glyph from the **Segoe MDL2 Assets** font to use as the content of a SymbolIcon.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Accept">
      <summary>E10B &lt;img alt="Accept icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Account">
      <summary>E168 &lt;img alt="Account icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e168.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Add">
      <summary>E109 &lt;img alt="Add icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e109.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AddFriend">
      <summary>E1E2 &lt;img alt="Add Friend icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e2.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Admin">
      <summary>E1A7 &lt;img alt="Admin icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a7.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AlignCenter">
      <summary>E1A1 &lt;img alt="Align Center icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a1.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AlignLeft">
      <summary>E1A2 &lt;img alt="Align Left icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a2.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AlignRight">
      <summary>E1A0 &lt;img alt="Align Right icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a0.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AllApps">
      <summary>E179 &lt;img alt="All Apps icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e179.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Attach">
      <summary>E16C &lt;img alt="Attach icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.AttachCamera">
      <summary>E12D &lt;img alt="Attach Camera icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Audio">
      <summary>E189 &lt;img alt="Audio icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e189.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Back">
      <summary>E112 &lt;img alt="Back icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e112.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.BackToWindow">
      <summary>E1D8 &lt;img alt="Back To Window icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d8.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.BlockContact">
      <summary>E1E0 &lt;img alt="Block Contact icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e0.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Bold">
      <summary>E19B &lt;img alt="Bold icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Bookmarks">
      <summary>E12F &lt;img alt="Bookmarks icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.BrowsePhotos">
      <summary>E155 &lt;img alt="Browse Photos icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e155.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Bullets">
      <summary>E133 &lt;img alt="Bullets icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e133.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Calculator">
      <summary>E1D0 &lt;img alt="Calculator icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d0.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Calendar">
      <summary>E163 &lt;img alt="Calendar icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e163.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.CalendarDay">
      <summary>E161 &lt;img alt="Calendar Day icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e161.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.CalendarReply">
      <summary>E1DB &lt;img alt="Calendar Reply icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1db.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.CalendarWeek">
      <summary>E162 &lt;img alt="Calendar Week icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e162.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Camera">
      <summary>E114 &lt;img alt="Camera icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e114.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Cancel">
      <summary>E10A &lt;img alt="Cancel icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Caption">
      <summary>E15A &lt;img alt="Caption icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.CellPhone">
      <summary>E1C9 &lt;img alt="Cell Phone icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c9.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Character">
      <summary>E164 &lt;img alt="Character icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e164.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Clear">
      <summary>E106 &lt;img alt="Clear icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e106.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ClearSelection">
      <summary>E1C5 &lt;img alt="Clear Selection icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c5.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Clock">
      <summary>E121 &lt;img alt="Clock icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e121.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ClosedCaption">
      <summary>E190 &lt;img alt="Closed Caption icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e190.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ClosePane">
      <summary>E127 &lt;img alt="Close Pane icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e127.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Comment">
      <summary>E134 &lt;img alt="Comment icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e134.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Contact">
      <summary>E13D &lt;img alt="Contact icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e13d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Contact2">
      <summary>E187 &lt;img alt="Contact 2 icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e187.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ContactInfo">
      <summary>E136 &lt;img alt="Contact Info icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e136.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ContactPresence">
      <summary>E181 &lt;img alt="Contact Presence icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e181.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Copy">
      <summary>E16F &lt;img alt="Copy icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Crop">
      <summary>E123 &lt;img alt="Crop icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e123.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Cut">
      <summary>E16B &lt;img alt="Cut icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Delete">
      <summary>E107 &lt;img alt="Delete icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e107.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Directions">
      <summary>E1D1 &lt;img alt="Directions icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d1.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.DisableUpdates">
      <summary>E194 &lt;img alt="Disable Updates icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e194.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.DisconnectDrive">
      <summary>E17A &lt;img alt="Disconnect Drive icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e17a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Dislike">
      <summary>E19E &lt;img alt="Dislike icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.DockBottom">
      <summary>E147 &lt;img alt="Dock Bottom icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e147.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.DockLeft">
      <summary>E145 &lt;img alt="Dock Left icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e145.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.DockRight">
      <summary>E146 &lt;img alt="Dock Right icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e146.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Document">
      <summary>E130 &lt;img alt="Document icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e130.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Download">
      <summary>E118 &lt;img alt="Download icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e118.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Edit">
      <summary>E104 &lt;img alt="Edit icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e104.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Emoji">
      <summary>E11D &lt;img alt="Emoji icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Emoji2">
      <summary>E170 &lt;img alt="Emoji 2 icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e170.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Favorite">
      <summary>E113 &lt;img alt="Favorite icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e113.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Filter">
      <summary>E16E &lt;img alt="Filter icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Find">
      <summary>E11A &lt;img alt="Find icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Flag">
      <summary>E129 &lt;img alt="Flag icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e129.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Folder">
      <summary>E188 &lt;img alt="Folder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e188.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Font">
      <summary>E185 &lt;img alt="Font icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e185.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FontColor">
      <summary>E186 &lt;img alt="Font Color icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e186.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FontDecrease">
      <summary>E1C6 &lt;img alt="Font Decrease icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c6.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FontIncrease">
      <summary>E1C7 &lt;img alt="Font Increase icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c7.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FontSize">
      <summary>E1C8 &lt;img alt="Font Size icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c8.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Forward">
      <summary>E111 &lt;img alt="Forward icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e111.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FourBars">
      <summary>E1E9 &lt;img alt="Four Bars icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e9.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.FullScreen">
      <summary>E1D9 &lt;img alt="Full Screen icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d9.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.GlobalNavigationButton">
      <summary>E700 &lt;img alt="GlobalNav icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e700.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Globe">
      <summary>E12B &lt;img alt="Globe icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Go">
      <summary>E143 &lt;img alt="Go icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e143.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.GoToStart">
      <summary>E1E4 &lt;img alt="Go To Start icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e4.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.GoToToday">
      <summary>E184 &lt;img alt="Go To Today icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e184.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.HangUp">
      <summary>E137 &lt;img alt="Hang Up icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e137.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Help">
      <summary>E11B &lt;img alt="Help icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.HideBcc">
      <summary>E16A &lt;img alt="Hide BCC icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Highlight">
      <summary>E193 &lt;img alt="Highlight icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e193.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Home">
      <summary>E10F &lt;img alt="Home icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Import">
      <summary>E150 &lt;img alt="Import icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e150.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ImportAll">
      <summary>E151 &lt;img alt="Import All icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e151.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Important">
      <summary>E171 &lt;img alt="Important icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e171.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Italic">
      <summary>E199 &lt;img alt="Italic icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e199.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Keyboard">
      <summary>E144 &lt;img alt="Keyboard icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e144.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.LeaveChat">
      <summary>E11F &lt;img alt="Leave Chat icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Library">
      <summary>E1D3 &lt;img alt="Library icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d3.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Like">
      <summary>E19F &lt;img alt="Like icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.LikeDislike">
      <summary>E19D &lt;img alt="Like Dislike icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Link">
      <summary>E167 &lt;img alt="Link icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e167.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.List">
      <summary>E14C &lt;img alt="List icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Mail">
      <summary>E119 &lt;img alt="Mail icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e119.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MailFilled">
      <summary>E135 &lt;img alt="Mail Filled icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e135.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MailForward">
      <summary>E120 &lt;img alt="Mail Forward icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e120.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MailReply">
      <summary>E172 &lt;img alt="Mail Reply icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e172.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MailReplyAll">
      <summary>E165 &lt;img alt="Mail Reply All icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e165.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Manage">
      <summary>E178 &lt;img alt="Manage icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e178.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Map">
      <summary>E1C4 &lt;img alt="Map icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c4.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MapDrive">
      <summary>E17B &lt;img alt="Map Drive icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e17b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MapPin">
      <summary>E139 &lt;img alt="Map Pin icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e139.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Memo">
      <summary>E1D5 &lt;img alt="Memo icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d5.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Message">
      <summary>E15F &lt;img alt="Message icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Microphone">
      <summary>E1D6 &lt;img alt="Microphone icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d6.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.More">
      <summary>E10C &lt;img alt="More icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MoveToFolder">
      <summary>E19C &lt;img alt="Move To Folder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.MusicInfo">
      <summary>E142 &lt;img alt="Music Info icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e142.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Mute">
      <summary>E198 &lt;img alt="Mute icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e198.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.NewFolder">
      <summary>E1DA &lt;img alt="New Folder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1da.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.NewWindow">
      <summary>E17C &lt;img alt="New Window icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e17c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Next">
      <summary>E101 &lt;img alt="Next icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e101.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OneBar">
      <summary>E1E6 &lt;img alt="One Bar icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e6.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OpenFile">
      <summary>E1A5 &lt;img alt="Open File icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a5.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OpenLocal">
      <summary>E197 &lt;img alt="Open Local icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e197.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OpenPane">
      <summary>E126 &lt;img alt="Open Pane icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e126.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OpenWith">
      <summary>E17D &lt;img alt="Open With icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e17d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Orientation">
      <summary>E14F &lt;img alt="Orientation icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14f.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OtherUser">
      <summary>E1A6 &lt;img alt="Other User icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a6.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.OutlineStar">
      <summary>E1CE &lt;img alt="Outline Star icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1ce.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Page">
      <summary>E132 &lt;img alt="Page icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e132.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Page2">
      <summary>E160 &lt;img alt="Page2 icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e160.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Paste">
      <summary>E16D &lt;img alt="Paste icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e16d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Pause">
      <summary>E103 &lt;img alt="Pause icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e103.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.People">
      <summary>E125 &lt;img alt="People icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e125.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Permissions">
      <summary>E192 &lt;img alt="Permissions icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e192.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Phone">
      <summary>E13A &lt;img alt="Phone icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e13a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.PhoneBook">
      <summary>E1D4 &lt;img alt="Phone Book icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d4.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Pictures">
      <summary>E158 &lt;img alt="Pictures icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e158.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Pin">
      <summary>E141 &lt;img alt="Pin icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e141.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Placeholder">
      <summary>E18A &lt;img alt="Placeholder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e18a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Play">
      <summary>E102 &lt;img alt="Play icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e102.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.PostUpdate">
      <summary>E1D7 &lt;img alt="Post Update icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d7.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Preview">
      <summary>E295 &lt;img alt="Preview icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e295.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.PreviewLink">
      <summary>E12A &lt;img alt="Preview Link icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Previous">
      <summary>E100 &lt;img alt="Previous icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e100.png" align="top" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Print">
      <summary>E749 &lt;img alt="Print icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e749.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Priority">
      <summary>E182 &lt;img alt="Priority icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e182.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ProtectedDocument">
      <summary>E131 &lt;img alt="Protected Document icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e131.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Read">
      <summary>E166 &lt;img alt="Read icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e166.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Redo">
      <summary>E10D &lt;img alt="Redo icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Refresh">
      <summary>E149 &lt;img alt="Refresh icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e149.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Remote">
      <summary>E148 &lt;img alt="Remote icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e148.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Remove">
      <summary>E108 &lt;img alt="Remove icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e108.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Rename">
      <summary>E13E &lt;img alt="Rename icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e13e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Repair">
      <summary>E15E &lt;img alt="Repair icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.RepeatAll">
      <summary>E1CD &lt;img alt="Repeat All icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1cd.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.RepeatOne">
      <summary>E1CC &lt;img alt="Repeat 1 icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1cc.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ReportHacked">
      <summary>E1DE &lt;img alt="Report Hacked icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1de.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ReShare">
      <summary>E1CA &lt;img alt="Reshare icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1ca.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Rotate">
      <summary>E14A &lt;img alt="Rotate icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.RotateCamera">
      <summary>E124 &lt;img alt="Rotate Camera icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e124.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Save">
      <summary>E105 &lt;img alt="Save icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e105.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SaveLocal">
      <summary>E159 &lt;img alt="Save Local icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e159.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Scan">
      <summary>E294 &lt;img alt="Scan icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e294.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SelectAll">
      <summary>E14E &lt;img alt="Select All icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Send">
      <summary>E122 &lt;img alt="Send icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e122.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SetLockScreen">
      <summary>E18C &lt;img alt="Set Lock Screen icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e18c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SetTile">
      <summary>E18D &lt;img alt="Set Tile icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e18d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Setting">
      <summary>E115 &lt;img alt="Setting icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e115.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Share">
      <summary>E72D &lt;img alt="Share icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e72d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Shop">
      <summary>E14D &lt;img alt="Shop icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ShowBcc">
      <summary>E169 &lt;img alt="Show BCC icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e169.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ShowResults">
      <summary>E15C &lt;img alt="Show Results icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Shuffle">
      <summary>E14B &lt;img alt="Shuffle icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e14b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SlideShow">
      <summary>E173 &lt;img alt="Slide Show icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e173.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SolidStar">
      <summary>E1CF &lt;img alt="Solid Star icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1cf.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Sort">
      <summary>E174 &lt;img alt="Sort icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e174.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Stop">
      <summary>E15B &lt;img alt="Stop icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.StopSlideShow">
      <summary>E191 &lt;img alt="Stop Slide Show icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e191.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Street">
      <summary>E1C3 &lt;img alt="Street icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1c3.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Switch">
      <summary>E13C &lt;img alt="Switch icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e13c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SwitchApps">
      <summary>E1E1 &lt;img alt="Switch Apps  icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e1.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Sync">
      <summary>E117 &lt;img alt="Sync icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e117.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.SyncFolder">
      <summary>E1DF &lt;img alt="Sync Folder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1df.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Tag">
      <summary>E1CB &lt;img alt="Tag icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1cb.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Target">
      <summary>E1D2 &lt;img alt="Target icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1d2.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ThreeBars">
      <summary>E1E8 &lt;img alt="Three Bars icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e8.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.TouchPointer">
      <summary>E1E3 &lt;img alt="Touch Pointer icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e3.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Trim">
      <summary>E12C &lt;img alt="Trim icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.TwoBars">
      <summary>E1E7 &lt;img alt="Two Bars icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e7.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.TwoPage">
      <summary>E11E &lt;img alt="Two Page icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Underline">
      <summary>E19A &lt;img alt="Underline icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e19a.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Undo">
      <summary>E10E &lt;img alt="Undo icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e10e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.UnFavorite">
      <summary>E195 &lt;img alt="Unfavorite icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e195.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.UnPin">
      <summary>E196 &lt;img alt="UnPin icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e196.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.UnSyncFolder">
      <summary>E1DD &lt;img alt="Unsync Folder icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1dd.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Up">
      <summary>E110 &lt;img alt="Up icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e110.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Upload">
      <summary>E11C &lt;img alt="Upload icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e11c.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Video">
      <summary>E116 &lt;img alt="Video icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e116.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.VideoChat">
      <summary>E13B &lt;img alt="Video Chat icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e13b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.View">
      <summary>E18B &lt;img alt="View icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e18b.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ViewAll">
      <summary>E138 &lt;img alt="View All icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e138.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Volume">
      <summary>E15D &lt;img alt="Volume icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e15d.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.WebCam">
      <summary>E156 &lt;img alt="Web Cam icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e156.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.World">
      <summary>E128 &lt;img alt="World icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e128.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.XboxOneConsole">
      <summary>E990 &lt;img alt="Xbox icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e990.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ZeroBars">
      <summary>E1E5 &lt;img alt="Zero Bars icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1e5.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.Zoom">
      <summary>E1A3 &lt;img alt="Zoom icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a3.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ZoomIn">
      <summary>E12E &lt;img alt="Zoom In icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e12e.png" /&gt;</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Symbol.ZoomOut">
      <summary>E1A4 &lt;img alt="Zoom Out icon" src="./Microsoft.UI.Xaml.controls/images/segoe-mdl/e1a4.png" /&gt;</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SymbolIcon">
      <summary>Represents an icon that uses a glyph from the Segoe MDL2 Assets font as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SymbolIcon.#ctor">
      <summary>Initializes a new instance of the SymbolIcon class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SymbolIcon.#ctor(Microsoft.UI.Xaml.Controls.Symbol)">
      <summary>Initializes a new instance of the SymbolIcon class using the specified symbol.</summary>
      <param name="symbol">A named constant of the enumeration that specifies the Segoe MDL2 Assets glyph to use. The default is **null**.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIcon.Symbol">
      <summary>Gets or sets the Segoe MDL2 Assets glyph used as the icon content.</summary>
      <returns>A named constant of the numeration that specifies the Segoe MDL2 Assets glyph to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIcon.SymbolProperty">
      <summary>Identifies the Symbol dependency property.</summary>
      <returns>The identifier for the Symbol dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SymbolIconSource">
      <summary>Represents an icon source that uses a glyph from the Segoe MDL2 Assets font as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SymbolIconSource.#ctor">
      <summary>Initializes a new instance of the SymbolIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIconSource.Symbol">
      <summary>Gets or sets the Segoe MDL2 Assets glyph used as the icon content.</summary>
      <returns>A named constant of the numeration that specifies the Segoe MDL2 Assets glyph to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIconSource.SymbolProperty">
      <summary>Identifies the Symbol dependency property.</summary>
      <returns>The identifier for the Symbol dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextBlock">
      <summary>Provides a lightweight control for displaying small amounts of text.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.#ctor">
      <summary>Initializes a new instance of the TextBlock class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.BaselineOffset">
      <summary>Returns a value by which each line of text is offset from a baseline.</summary>
      <returns>The amount by which each line of text is offset from the baseline, in device independent pixels. System.Double.NaN indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is System.Double.NaN.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacing">
      <summary>Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.</summary>
      <returns>The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacingProperty">
      <summary>Identifies the CharacterSpacing dependency property.</summary>
      <returns>The identifier for the CharacterSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.ContentEnd">
      <summary>Gets a TextPointer object for the end of text content in the TextBlock.</summary>
      <returns>A TextPointer object for the end of text content in the TextBlock.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.ContentStart">
      <summary>Gets a TextPointer object for the start of text content in the TextBlock.</summary>
      <returns>A TextPointer object for the start of text content in the TextBlock.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the text content in this element.</summary>
      <returns>A FontFamily object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the FontFamily class topic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontFamilyProperty">
      <summary>Identifies the FontFamily  dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontSize">
      <summary>Gets or sets the font size for the text content in this element.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels. The default is 11.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontSizeProperty">
      <summary>Identifies the FontSize  dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontStretch">
      <summary>Gets or sets the font stretch for the text content in this element.</summary>
      <returns>The requested font stretch, as a FontStretch constant. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontStretchProperty">
      <summary>Identifies the FontStretch  dependency property.</summary>
      <returns>The identifier for the FontStretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontStyle">
      <summary>Gets or sets the font style for the content in this element.</summary>
      <returns>The requested font style, which is a FontStyle enumeration value. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontStyleProperty">
      <summary>Identifies the FontStyle  dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontWeight">
      <summary>Gets or sets the top-level font weight for the TextBlock.</summary>
      <returns>The requested font weight, which is a FontWeight that is obtained from one of the FontWeights property values. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.FontWeightProperty">
      <summary>Identifies the FontWeight  dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.Foreground">
      <summary>Gets or sets the Brush to apply to the text contents of the TextBlock.</summary>
      <returns>The brush used to apply to the text content. The default is a null brush from a pure code perspective, but the default text styles set this to Black (for **Light** theme) or White (for **Dark** theme) for a TextBlock element in UI.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.ForegroundProperty">
      <summary>Identifies the Foreground  dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the TextBlock.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignmentProperty">
      <summary>Identifies the HorizontalTextAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalTextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.Inlines">
      <summary>Gets the collection of inline text elements within a TextBlock.</summary>
      <returns>A collection that holds all inline text elements from the TextBlock. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabled">
      <summary>Gets or sets a value that determines whether font glyphs that contain color layers, such as Segoe UI Emoji, are rendered in color.</summary>
      <returns>**true** if color glyphs show in color; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabledProperty">
      <summary>Identifies the IsColorFontEnabled dependency property.</summary>
      <returns>The identifier for the IsColorFontEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabled">
      <summary>Gets or sets a value that indicates whether text selection is enabled in the TextBlock, either through user action or calling selection-related API.</summary>
      <returns>**true** if text selection is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabledProperty">
      <summary>Identifies the IsTextSelectionEnabled dependency property.</summary>
      <returns>The identifier for the IsTextSelectionEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmed">
      <summary>Gets a value that indicates whether the control has trimmed text that overflows the content area.</summary>
      <returns>**true** if text is trimmed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedProperty">
      <summary>Identifies the IsTextTrimmed dependency property.</summary>
      <returns>The identifier for the IsTextTrimmed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The height of each line in pixels. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.LineHeightProperty">
      <summary>Identifies the LineHeight  dependency property.</summary>
      <returns>The identifier for the LineHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategy">
      <summary>Gets or sets a value that indicates how a line box is determined for each line of text in the TextBlock.</summary>
      <returns>A value that indicates how a line box is determined for each line of text in the TextBlock. The default is **MaxHeight**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>Identifies the LineStackingStrategy  dependency property.</summary>
      <returns>The identifier for the LineStackingStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.MaxLines">
      <summary>Gets or sets the maximum number of lines of text shown in the TextBlock.</summary>
      <returns>The maximum number of lines of text shown in the TextBlock. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.MaxLinesProperty">
      <summary>Identifies the MaxLines dependency property.</summary>
      <returns>The identifier for the MaxLines dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignment">
      <summary>Get or sets a value that indicates how the font is modified to align with fonts of different sizes.</summary>
      <returns>A value of the enumeration that indicates how the font is modified to align at different sizes. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignmentProperty">
      <summary>Identifies the OpticalMarginAlignment dependency property.</summary>
      <returns>The identifier for the OpticalMarginAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.Padding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a TextBlock.</summary>
      <returns>A Thickness structure that specifies the amount of padding to apply.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.PaddingProperty">
      <summary>Identifies the Padding  dependency property.</summary>
      <returns>The identifier for the Padding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectedText">
      <summary>Gets a text range of selected text.</summary>
      <returns>A text range of the selected text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectedTextProperty">
      <summary>Identifies the SelectedText dependency property.</summary>
      <returns>The identifier for the SelectedText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionEnd">
      <summary>Gets the end position of the text selected in the TextBlock.</summary>
      <returns>An object that represents the selection end, or null if no selection exists.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyout">
      <summary>Gets or sets the flyout that is shown when text is selected, or **null** if no flyout is shown.</summary>
      <returns>The flyout that is shown when text is selected, or **null** if no flyout is shown. The default is an instance of TextCommandBarFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyoutProperty">
      <summary>Identifies the SelectionFlyout dependency property.</summary>
      <returns>The identifier for the SelectionFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColor">
      <summary>Gets or sets the brush used to highlight the selected text.</summary>
      <returns>The brush used to highlight the selected text. The default is a null brush from a pure code perspective, but the system uses base text styles to supply a runtime value for apps (unless you specifically override that style). The practical default is a brush using the theme resource **TextSelectionHighlightThemeColor**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColorProperty">
      <summary>Identifies the SelectionHighlightColor dependency property.</summary>
      <returns>The identifier for the SelectionHighlightColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.SelectionStart">
      <summary>Gets the starting position of the text selected in the TextBlock.</summary>
      <returns>An object that represents the selection start, or null if no selection exists.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.Text">
      <summary>Gets or sets the text contents of a TextBlock.</summary>
      <returns>A string that specifies the text contents of this TextBlock. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
      <returns>The text alignment. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextAlignmentProperty">
      <summary>Identifies the TextAlignment  dependency property.</summary>
      <returns>The identifier for the TextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextDecorations">
      <summary>Gets or sets a value that indicates what decorations are applied to the text.</summary>
      <returns>A value of the enumeration. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextDecorationsProperty">
      <summary>Identifies the **TextDecorations** dependency property.</summary>
      <returns>The identifier for the **TextDecorations** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters">
      <summary>Gets the collection of text highlights.</summary>
      <returns>The collection of text highlights.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextLineBounds">
      <summary>Gets or sets a value that indicates how the line box height is determined for each line of text in the TextBlock.</summary>
      <returns>A value that indicates how the line box height is determined for each line of text in the TextBlock. The default is **Full**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextLineBoundsProperty">
      <summary>Identifies the TextLineBounds dependency property.</summary>
      <returns>The identifier for the TextLineBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextProperty">
      <summary>Identifies the Text  dependency property.</summary>
      <returns>The identifier of the Text dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrder">
      <summary>Gets or sets a value that indicates how the reading order is determined for the TextBlock.</summary>
      <returns>A value that indicates how the reading order is determined for the TextBlock. The default is **DetectFromContent**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrderProperty">
      <summary>Identifies the TextReadingOrder dependency property.</summary>
      <returns>The identifier for the TextReadingOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextTrimming">
      <summary>Gets or sets the text trimming behavior to employ when content overflows the content area.</summary>
      <returns>One of the TextTrimming values that specifies the text trimming behavior to employ. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextTrimmingProperty">
      <summary>Identifies the TextTrimming dependency property.</summary>
      <returns>The identifier of the TextTrimming dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextWrapping">
      <summary>Gets or sets how the TextBlock wraps text.</summary>
      <returns>A value that indicates how the TextBlock wraps text. The default is **NoWrap**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBlock.TextWrappingProperty">
      <summary>Identifies the TextWrapping  dependency property.</summary>
      <returns>The identifier of the TextWrapping dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBlock.ContextMenuOpening">
      <summary>Occurs when the system processes an interaction that displays a context menu.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedChanged">
      <summary>Occurs when the **IsTextTrimmed** property value has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBlock.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.CopySelectionToClipboard">
      <summary>Copies the selected content to the Windows clipboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Focuses the TextBlock, as if it were a conventionally focusable control.</summary>
      <param name="value">Specifies the desired target for focus state, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the TextBlock, or focus was already there. **false** if the TextBlock is not focusable.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.GetAlphaMask">
      <summary>Returns a mask that represents the alpha channel of the text as a CompositionBrush.</summary>
      <returns>A mask that represents the alpha channel of the text in a TextBlock.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.Select(Microsoft.UI.Xaml.Documents.TextPointer,Microsoft.UI.Xaml.Documents.TextPointer)">
      <summary>Selects a range of text in the TextBlock.</summary>
      <param name="start">An object that represents the start of the range to select.</param>
      <param name="end">An object that represents the end of the range to select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBlock.SelectAll">
      <summary>Selects the entire contents in the TextBlock.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextBox">
      <summary>Represents a control that can be used to display and edit plain text (single or multi-line).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.#ctor">
      <summary>Initializes a new instance of the TextBox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.AcceptsReturn">
      <summary>Gets or sets the value that determines whether the text box allows and displays the newline or return characters.</summary>
      <returns>**true** if the text box allows newline characters; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.AcceptsReturnProperty">
      <summary>Identifies the AcceptsReturn dependency property.</summary>
      <returns>The identifier for the AcceptsReturn dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanPasteClipboardContent">
      <summary>Gets a value that indicates whether clipboard content can be pasted into the control.</summary>
      <returns>**true** if clipboard content can be pasted into the control; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanPasteClipboardContentProperty">
      <summary>Identifies the CanPasteClipboardContent dependency property.</summary>
      <returns>The identifier for the CanPasteClipboardContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanRedo">
      <summary>Gets a value that indicates whether the redo buffer contains an action that can be redone.</summary>
      <returns>**true** if the redo buffer contains an action that can be redone; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanRedoProperty">
      <summary>Identifies the CanRedo dependency property.</summary>
      <returns>The identifier for the CanRedo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanUndo">
      <summary>Gets a value that indicates whether the undo buffer contains an action that can be undone.</summary>
      <returns>**true** if the undo buffer contains an action that can be undone; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CanUndoProperty">
      <summary>Identifies the CanUndo dependency property.</summary>
      <returns>The identifier for the CanUndo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CharacterCasing">
      <summary>Gets or sets a value that indicates how the control modifies the case of characters as they are typed.</summary>
      <returns>A value of the enumeration that indicates how the control modifies the case of characters as they are typed. The default is **Normal**, which indicates that the charcters are not changed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.CharacterCasingProperty">
      <summary>Identifies the CharacterCasing dependency property.</summary>
      <returns>The identifier for the CharacterCasing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.Description">
      <summary>Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.</summary>
      <returns>The content to be displayed below the control. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.DesiredCandidateWindowAlignment">
      <summary>Gets or sets a value that indicates the preferred alignment of the Input Method Editor (IME).</summary>
      <returns>A value of the enumeration that indicates the preferred alignment of the Input Method Editor (IME). The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.DesiredCandidateWindowAlignmentProperty">
      <summary>Identifies the DesiredCandidateWindowAlignment dependency property.</summary>
      <returns>The identifier for the DesiredCandidateWindowAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HandwritingView">
      <summary>Gets or sets the HandwritingView associated with this text control.</summary>
      <returns>The HandwritingView associated with this text control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HandwritingViewProperty">
      <summary>Identifies the HandwritingView dependency property.</summary>
      <returns>The identifier for the HandwritingView dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HorizontalTextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the TextBox.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.HorizontalTextAlignmentProperty">
      <summary>Identifies the HorizontalTextAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalTextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.InputScope">
      <summary>Gets or sets the context for input used by this TextBox.</summary>
      <returns>The input scope, which provides a hint at the type of text input expected by the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.InputScopeProperty">
      <summary>Identifies the InputScope dependency property.</summary>
      <returns>The identifier for the InputScope dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsColorFontEnabled">
      <summary>Gets or sets a value that determines whether font glyphs that contain color layers, such as Segoe UI Emoji, are rendered in color.</summary>
      <returns>**true** if color glyphs show in color; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsColorFontEnabledProperty">
      <summary>Identifies the IsColorFontEnabled dependency property.</summary>
      <returns>The identifier for the IsColorFontEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsHandwritingViewEnabled">
      <summary>Gets or sets a value that indicates whether a user can enter text in the handwriting view.</summary>
      <returns>**true** to allow the user to enter text in the handwriting view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsHandwritingViewEnabledProperty">
      <summary>Identifies the IsHandwritingViewEnabled dependency property.</summary>
      <returns>The identifier for the IsHandwritingViewEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsReadOnly">
      <summary>Gets or sets the value that determines if the user can change the text in the text box.</summary>
      <returns>**true** if the text box is read-only; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
      <returns>The identifier for the IsReadOnly dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsSpellCheckEnabled">
      <summary>Gets or sets a value that specifies whether the TextBox input interacts with a spell check engine.</summary>
      <returns>**true** if the TextBox input interacts with a spell check engine; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsSpellCheckEnabledProperty">
      <summary>Identifies the IsSpellCheckEnabled dependency property.</summary>
      <returns>The identifier for the IsSpellCheckEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsTextPredictionEnabled">
      <summary>Gets or sets a value that determines whether text prediction features ("autocomplete") should be enabled for this TextBox. </summary>
      <returns>**true** to enable text prediction features, otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.IsTextPredictionEnabledProperty">
      <summary>Identifies the IsTextPredictionEnabled dependency property.</summary>
      <returns>The identifier for the IsTextPredictionEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.MaxLength">
      <summary>Gets or sets the value that specifies the maximum number of characters allowed for user input.</summary>
      <returns>The maximum number of characters allowed for user input. The default is 0 (no limit).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.MaxLengthProperty">
      <summary>Identifies the MaxLength dependency property.</summary>
      <returns>The identifier for the MaxLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PlaceholderForeground">
      <summary>Gets or sets a brush that describes the color of placeholder text.</summary>
      <returns>The brush that describes the color of placeholder text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PlaceholderForegroundProperty">
      <summary>Identifies the PlaceholderForeground dependency property.</summary>
      <returns>The identifier for the PlaceholderForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PlaceholderText">
      <summary>Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The text that is displayed in the control when no value is entered. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PlaceholderTextProperty">
      <summary>Identifies the PlaceholderText dependency property.</summary>
      <returns>The identifier for the PlaceholderText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PreventKeyboardDisplayOnProgrammaticFocus">
      <summary>Gets or sets a value that indicates whether the on-screen keyboard is shown when the control receives focus programmatically.</summary>
      <returns>**true** if the on-screen keyboard is not shown when the control receives focus programmatically; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.PreventKeyboardDisplayOnProgrammaticFocusProperty">
      <summary>Identifies the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</summary>
      <returns>The identifier for the PreventKeyboardDisplayOnProgrammaticFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.ProofingMenuFlyout">
      <summary>Gets the flyout that shows proofing commands.</summary>
      <returns>The flyout that shows proofing commands.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.ProofingMenuFlyoutProperty">
      <summary>Identifies the ProofingMenuFlyout dependency property.</summary>
      <returns>The identifier for the ProofingMenuFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectedText">
      <summary>Gets or sets the content of the current selection in the text box.</summary>
      <returns>The currently selected text in the text box. If no text is selected, the value is String.Empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionFlyout">
      <summary>Gets or sets the flyout that is shown when text is selected, or **null** if no flyout is shown.</summary>
      <returns>The flyout that is shown when text is selected, or **null** if no flyout is shown. The default is an instance of TextCommandBarFlyout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionFlyoutProperty">
      <summary>Identifies the SelectionFlyout dependency property.</summary>
      <returns>The identifier for the SelectionFlyout dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor">
      <summary>Gets or sets the brush used to highlight the selected text.</summary>
      <returns>The brush used to highlight the selected text. The practical default is a brush using the theme resource **TextSelectionHighlightThemeColor**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorProperty">
      <summary>Identifies the SelectionHighlightColor dependency property.</summary>
      <returns>The identifier for the SelectionHighlightColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused">
      <summary>Gets or sets the brush used to highlight the selected text when the TextBox does not have focus.</summary>
      <returns>The brush used to highlight the selected text when TextBox loses focus. The default is a null brush from a pure code perspective, but the default control template for TextBox applies a Transparent brush for this in a runtime instance of a TextBox control. To disable the SelectionHighlightColorWhenNotFocused, set the brush to Transparent once again.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocusedProperty">
      <summary>Identifies the **SelectionHighlightColorWhenNotFocused** dependency property.</summary>
      <returns>The identifier for the **SelectionHighlightColorWhenNotFocused** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionLength">
      <summary>Gets or sets the number of characters in the current selection in the text box.</summary>
      <returns>The number of characters in the current selection in the text box, or 0 if there is no selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.SelectionStart">
      <summary>Gets or sets the starting position of the text selected in the text box. When the SelectionLength is 0 (there is no selected text), the SelectionStart property corresponds to the cursor position.</summary>
      <returns>The starting position of the current selection or the current cursor position.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.Text">
      <summary>Gets or sets the text contents of the text box.</summary>
      <returns>A string containing the text contents of the text box. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextAlignment">
      <summary>Gets or sets how the text should be horizontally aligned in the text box.</summary>
      <returns>One of the TextAlignment enumeration values. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
      <returns>The identifier for the TextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextReadingOrder">
      <summary>Gets or sets a value that indicates how the reading order is determined for the TextBox.</summary>
      <returns>A value that indicates how the reading order is determined for the TextBox. The default is **DetectFromContent**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextReadingOrderProperty">
      <summary>Identifies the TextReadingOrder dependency property.</summary>
      <returns>The identifier for the TextReadingOrder dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextWrapping">
      <summary>Gets or sets how line breaking occurs if a line of text extends beyond the available width of the text box.</summary>
      <returns>One of the TextWrapping values. The default is **NoWrap**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBox.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
      <returns>The identifier for the TextWrapping dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.BeforeTextChanging">
      <summary>Occurs synchronously when the text in the text box starts to change, but before the **Text** property is updated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.CandidateWindowBoundsChanged">
      <summary>Occurs when the Input Method Editor (IME) window open, updates, or closes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.ContextMenuOpening">
      <summary>Occurs when the system processes an interaction that displays a context menu.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.CopyingToClipboard">
      <summary>Occurs before copied text is moved to the clipboard.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.CuttingToClipboard">
      <summary>Occurs before cut text is moved to the clipboard.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.Paste">
      <summary>Occurs when text is pasted into the control.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.SelectionChanging">
      <summary>Occurs when the text selection starts to change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.TextChanged">
      <summary>Occurs when content changes in the text box.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.TextChanging">
      <summary>Occurs synchronously when the text in the text box starts to change, but before it is rendered.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.TextCompositionChanged">
      <summary>Occurs when text being composed through an Input Method Editor (IME) changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.TextCompositionEnded">
      <summary>Occurs when a user stops composing text through an Input Method Editor (IME).</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TextBox.TextCompositionStarted">
      <summary>Occurs when a user starts composing text through an Input Method Editor (IME).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.ClearUndoRedoHistory">
      <summary>Empties the undo and redo buffers.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.CopySelectionToClipboard">
      <summary>Copies the selected content to the Windows clipboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.CutSelectionToClipboard">
      <summary>Moves the selected content to the Windows clipboard and removes it from the text control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.GetLinguisticAlternativesAsync">
      <summary>Asynchronously gets a list of candidate words based on the provided phonetic characters in an Input Method Editor (IME).</summary>
      <returns>A list of candidate words based on the provided phonetic characters in an Input Method Editor (IME).</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>Returns a rectangular region for the leading or trailing edge of a character at a specific character index.</summary>
      <param name="charIndex">A zero-based index of the character for which to retrieve the rectangle.</param>
      <param name="trailingEdge">**true** to get the trailing edge; **false** to get the leading edge of the character.</param>
      <returns>A rectangle for the edge of the character at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.PasteFromClipboard">
      <summary>Copies content from the Windows clipboard into the text control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.Redo">
      <summary>Reapplies the first action in the redo buffer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the text box.</summary>
      <param name="start">The zero-based index of the first character in the selection.</param>
      <param name="length">The length of the selection, in characters.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.SelectAll">
      <summary>Selects the entire contents of the text box.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextBox.Undo">
      <summary>Undoes the first action in the undo buffer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs">
      <summary>Provides event data for the TextBox.BeforeTextChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether to cancel the text changes.</summary>
      <returns>**true** to cancel the text changes; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs.NewText">
      <summary>Gets the new text that is entered into the text box.</summary>
      <returns>The new text value that is entered into the text box.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs">
      <summary>Provides event data for the TextBox.SelectionChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the selection operation should be canceled.</summary>
      <returns>**true** to cancel the selection operation; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs.SelectionLength">
      <summary>Gets the length of the text selection.</summary>
      <returns>The length of the text selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs.SelectionStart">
      <summary>Gets the starting index of the text selection.</summary>
      <returns>The starting index of the text selection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs">
      <summary>Provides event data for the TextBox.TextChanging event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs.IsContentChanging">
      <summary>Gets a value that indicates whether the event occured due to a change in the text content.</summary>
      <returns>**true** if a change to the text content caused the event; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextChangedEventArgs">
      <summary>Provides data for the TextChanged event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextChangedEventHandler">
      <summary>Represents the method that will handle the TextChanged  event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextCommandBarFlyout">
      <summary>Represents a specialized command bar flyout that contains commands for editing text.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextCommandBarFlyout.#ctor">
      <summary>Initializes a new instance of the TextCommandBarFlyout class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs">
      <summary>Provides event data for the TextCompositionChanged event on TextBox and RichEditBox.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs.Length">
      <summary>Gets the length of the portion of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The length of the portion of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs.StartIndex">
      <summary>Gets the starting location of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The starting location of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs">
      <summary>Provides event data for the TextCompositionEnded event on TextBox and RichEditBox.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs.Length">
      <summary>Gets the length of the portion of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The length of the portion of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs.StartIndex">
      <summary>Gets the starting location of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The starting location of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs">
      <summary>Provides event data for the TextCompositionStarted event on TextBox and RichEditBox.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs.Length">
      <summary>Gets the length of the portion of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The length of the portion of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs.StartIndex">
      <summary>Gets the starting location of the text that the user is composing with an Input Method Editor (IME).</summary>
      <returns>The starting location of the text that the user is composing with an Input Method Editor (IME).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs">
      <summary>Provides event data for the **CopyingToClipboard** event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which causes the default copy action to be performed. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs">
      <summary>Provides event data for the **CuttingToClipboard** event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which causes the default cut action to be performed. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs">
      <summary>Provides data for the text control **Paste** event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler">
      <summary>Represents the method that will handle a **Paste** event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePickedEventArgs">
      <summary>Provides data for the TimePicked event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TimePickedEventArgs.#ctor">
      <summary>Initializes a new instance of the TimePickedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickedEventArgs.NewTime">
      <summary>Gets the time that was selected by the user.</summary>
      <returns>The time that was selected by the user.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickedEventArgs.OldTime">
      <summary>Gets the old time value.</summary>
      <returns>The old time value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePicker">
      <summary>Represents a control that allows a user to pick a time value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TimePicker.#ctor">
      <summary>Initializes a new instance of the TimePicker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.ClockIdentifier">
      <summary>Gets or sets the clock system to use.</summary>
      <returns>The name of the clock system to use. See Remarks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.ClockIdentifierProperty">
      <summary>Gets the identifier for the ClockIdentifier dependency property.</summary>
      <returns>The identifier for the ClockIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.Header">
      <summary>Gets or sets the content for the control's header.</summary>
      <returns>The content of the control's header. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the content of the control's header.</summary>
      <returns>The template that specifies the visualization of the header object. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.MinuteIncrement">
      <summary>Gets or sets a value that indicates the time increments shown in the minute picker. For example, 15 specifies that the TimePicker minute control displays only the choices 00, 15, 30, 45.</summary>
      <returns>An integer from 0-59 that indicates the increments shown in the minute picker. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.MinuteIncrementProperty">
      <summary>Gets the identifier for the MinuteIncrement dependency property.</summary>
      <returns>The identifier for the MinuteIncrement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.SelectedTime">
      <summary>Gets or sets the time currently selected in the time picker.</summary>
      <returns>The time currently selected in the time picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.SelectedTimeProperty">
      <summary>Identifies the SelectedTime dependency property.</summary>
      <returns>The identifier for the SelectedTime dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.Time">
      <summary>Gets or sets the time currently set in the time picker.</summary>
      <returns>The time currently set in the time picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePicker.TimeProperty">
      <summary>Gets the identifier for the Time dependency property.</summary>
      <returns>The identifier for the Time dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TimePicker.SelectedTimeChanged">
      <summary>Occurs when the selected time value is changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TimePicker.TimeChanged">
      <summary>Occurs when the time value is changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePickerFlyout">
      <summary>Represents a control that allows a user to pick a time value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TimePickerFlyout.#ctor">
      <summary>Initializes a new instance of the TimePickerFlyout class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.ClockIdentifier">
      <summary>Gets or sets the clock system to use.</summary>
      <returns>The name of the clock system to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.ClockIdentifierProperty">
      <summary>Gets the identifier for the ClockIdentifier dependency property.</summary>
      <returns>The identifier for the ClockIdentifier dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.MinuteIncrement">
      <summary>Gets or sets a value that indicates the time increments shown in the minute picker. For example, 15 specifies that minute picker displays only the choices 00, 15, 30, 45.</summary>
      <returns>An integer from 0-59 that indicates the increments shown in the minute picker. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.MinuteIncrementProperty">
      <summary>Gets the identifier for the MinuteIncrement dependency property.</summary>
      <returns>The identifier for the MinuteIncrement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.Time">
      <summary>Gets or sets the time currently set in the time picker.</summary>
      <returns>The time currently set in the time picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyout.TimeProperty">
      <summary>Gets the identifier for the Time dependency property.</summary>
      <returns>The identifier for the Time dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TimePickerFlyout.TimePicked">
      <summary>Occurs when the user has selected a time in the time picker flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TimePickerFlyout.ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Begins an asynchronous operation to show the flyout placed in relation to the specified element.</summary>
      <param name="target">The element to use as the flyout's placement target.</param>
      <returns>An asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePickerFlyoutPresenter">
      <summary>Represents the visual container for the TimePickerFlyout.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyoutPresenter.IsDefaultShadowEnabled">
      <summary>Gets or sets a value that indicates whether the default shadow effect is shown.</summary>
      <returns>**true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerFlyoutPresenter.IsDefaultShadowEnabledProperty">
      <summary>Identifies the IsDefaultShadowEnabled dependency property.</summary>
      <returns>The identifier for the IsDefaultShadowEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs">
      <summary>Provides event data for the TimePicker.SelectedTimeChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs.NewTime">
      <summary>Gets the new time selected in the picker.</summary>
      <returns>The new time selected in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs.OldTime">
      <summary>Gets the time previously selected in the picker.</summary>
      <returns>The time previously selected in the picker.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs">
      <summary>Provides event data for the TimePicker.TimeChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs.NewTime">
      <summary>Gets the new time selected in the picker.</summary>
      <returns>The new time selected in the picker.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs.OldTime">
      <summary>Gets the time previously selected in the picker.</summary>
      <returns>The time previously selected in the picker.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem">
      <summary>Represents an item in a MenuFlyout that a user can change between two states, checked or unchecked.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.#ctor">
      <summary>Initializes a new instance of the ToggleMenuFlyoutItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.IsChecked">
      <summary>Gets or sets whether the ToggleMenuFlyoutItem is checked.</summary>
      <returns>**true** if the ToggleMenuFlyoutItem is checked; **false** if the ToggleMenuFlyoutItem is unchecked. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.IsCheckedProperty">
      <summary>Identifies the IsChecked dependency property.</summary>
      <returns>The identifier for the IsChecked dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSplitButton">
      <summary>Represents a button with two parts that can be invoked separately. One part behaves like a toggle button and the other part invokes a flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButton.#ctor">
      <summary>Initializes a new instance of the ToggleSplitButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSplitButton.IsChecked">
      <summary>Gets or sets whether the ToggleSplitButton is checked.</summary>
      <returns>**true** if the ToggleSplitButton is checked; **false** if the ToggleSplitButton is unchecked. The default is **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ToggleSplitButton.IsCheckedChanged">
      <summary>Occurs when the value of the IsChecked property is changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer">
      <summary>Exposes ToggleSplitButton types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ToggleSplitButton)">
      <summary>Initializes a new instance of the ToggleSplitButtonAutomationPeer class.</summary>
      <param name="owner">The ToggleSplitButton control instance to create the peer for.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.ToggleState">
      <summary>Gets the toggle state of the control.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.Collapse">
      <summary>Hides the control's drop down menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.Expand">
      <summary>Displays the control's drop down menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer.Toggle">
      <summary>Cycles through the toggle states of a control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs">
      <summary>Provides event data for the ToggleSplitButton.IsCheckedChanged event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSwitch">
      <summary>Represents a switch that can be toggled between two states.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSwitch.#ctor">
      <summary>Initializes a new instance of the ToggleSwitch class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.Header">
      <summary>Gets or sets the header content.</summary>
      <returns>The header content for the ToggleSwitch.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the control's header.</summary>
      <returns>The DataTemplate used to display the control's header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.IsOn">
      <summary>Gets or sets a value that declares whether the state of the ToggleSwitch is "On".</summary>
      <returns>**true** if the state is "On"; **false** if the state is "Off".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.IsOnProperty">
      <summary>Identifies the IsOn dependency property.</summary>
      <returns>The identifier for the IsOn dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContent">
      <summary>Provides the object content that should be displayed using the OffContentTemplate when this ToggleSwitch has state of "Off".</summary>
      <returns>The object content. In some cases this is a string, in other cases it is a single element that provides a root for further composition content. Probably the most common "set" usage is to place a binding here.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContentProperty">
      <summary>Identifies the OffContent dependency property.</summary>
      <returns>The identifier for the OffContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContentTemplate">
      <summary>Gets or sets the DataTemplate used to display the control's content while in "Off" state.</summary>
      <returns>The DataTemplate that displays the control's content while in "Off" state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContentTemplateProperty">
      <summary>Identifies the OffContentTemplate dependency property.</summary>
      <returns>The identifier for the OffContentTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContent">
      <summary>Provides the object content that should be displayed using the OnContentTemplate when this ToggleSwitch has state of "On".</summary>
      <returns>The object content. In some cases this is a string, in other cases it is a single element that provides a root for further composition content. Probably the most common "set" usage is to place a binding here.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContentProperty">
      <summary>Identifies the OnContent dependency property.</summary>
      <returns>The identifier for the OnContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContentTemplate">
      <summary>Gets or sets the DataTemplate used to display the control's content while in "On" state.</summary>
      <returns>The DataTemplate that displays the control's content while in "On" state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContentTemplateProperty">
      <summary>Identifies the OnContentTemplate dependency property.</summary>
      <returns>The identifier for the OnContentTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSwitch.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ToggleSwitch control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ToggleSwitch.Toggled">
      <summary>Occurs when "On"/"Off" state changes for this ToggleSwitch.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnHeaderChanged(System.Object,System.Object)">
      <summary>Invoked when the content for Header changes.</summary>
      <param name="oldContent">The string or object content of the old content.</param>
      <param name="newContent">The string or object content of the new content.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnOffContentChanged(System.Object,System.Object)">
      <summary>Invoked when the content for OffContent changes.</summary>
      <param name="oldContent">The string or object content of the old content.</param>
      <param name="newContent">The string or object content of the new content that is about to display.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnOnContentChanged(System.Object,System.Object)">
      <summary>Invoked when the content for OnContent changes.</summary>
      <param name="oldContent">The string or object content of the old content.</param>
      <param name="newContent">The string or object content of the new content that is about to display.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSwitch.OnToggled">
      <summary>Invoked before the Toggled event is raised.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToolTip">
      <summary>Represents a control that creates a pop-up window that displays information for an element in the UI.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTip.#ctor">
      <summary>Initializes a new instance of the ToolTip class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.HorizontalOffset">
      <summary>Gets or sets the horizontal distance between the target origin and the pop-up alignment point.</summary>
      <returns>The horizontal distance between the target origin and the pop-up alignment point. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>Identifies the HorizontalOffset  dependency property.</summary>
      <returns>The identifier for the HorizontalOffset  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.IsOpen">
      <summary>Gets or sets a value that indicates whether the ToolTip is visible.</summary>
      <returns>**true** if the ToolTip is visible; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.IsOpenProperty">
      <summary>Identifies the IsOpen  dependency property.</summary>
      <returns>The identifier for the IsOpen  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.Placement">
      <summary>Gets or sets how a ToolTip is positioned in relation to the placement target element.</summary>
      <returns>One of the PlacementMode values.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.PlacementProperty">
      <summary>Identifies the Placement dependency property.</summary>
      <returns>The identifier for the Placement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.PlacementRect">
      <summary>Gets or sets the rectangular area that the tooltip should be positioned in relation to when opened by the ToolTipService. If space allows, the open tooltip will not occlude the area defined by its PlacementRect.</summary>
      <returns>The rectangular area that the tooltip is positioned in relation to when opened by the ToolTipService. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.PlacementRectProperty">
      <summary>Identifies the PlacementRect dependency property.</summary>
      <returns>The identifier for the PlacementRect dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.PlacementTarget">
      <summary>Gets or sets the visual element or control that the tool tip should be positioned in relation to when opened by the ToolTipService.</summary>
      <returns>The visual element or control that the tool tip is positioned in relation to when opened by the ToolTipService. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.PlacementTargetProperty">
      <summary>Identifies the PlacementTarget dependency property.</summary>
      <returns>The identifier for the PlacementTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ToolTip.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.VerticalOffset">
      <summary>Gets or sets the vertical distance between the target origin and the pop-up alignment point.</summary>
      <returns>The vertical distance between the target origin and the pop-up alignment point. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTip.VerticalOffsetProperty">
      <summary>Identifies the VerticalOffset  dependency property.</summary>
      <returns>The identifier for the VerticalOffset  dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ToolTip.Closed">
      <summary>Occurs when a ToolTip is closed and is no longer visible.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ToolTip.Opened">
      <summary>Occurs when a ToolTip becomes visible.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToolTipService">
      <summary>Represents a service that provides static methods to display a ToolTip.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTipService.PlacementProperty">
      <summary>Identifies the ToolTipService.Placement XAML attached property.</summary>
      <returns>The identifier for the ToolTipService.Placement XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTipService.PlacementTargetProperty">
      <summary>Identifies the ToolTipService.PlacementTarget XAML attached property.</summary>
      <returns>The identifier for the ToolTipService.PlacementTarget XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToolTipService.ToolTipProperty">
      <summary>Identifies the ToolTipService.ToolTip XAML attached property.</summary>
      <returns>The identifier for the ToolTipService.ToolTip XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.GetPlacement(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the ToolTipService.Placement XAML attached property value for the specified target element.</summary>
      <param name="element">The target element for the attached property value.</param>
      <returns>The relative position of the specified tooltip.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.GetPlacementTarget(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the ToolTipService.PlacementTarget XAML attached property value for the specified target element.</summary>
      <param name="element">The target element for the attached property value.</param>
      <returns>The visual element that the tooltip is positioned relative to.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.GetToolTip(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the ToolTipService.ToolTip XAML attached property for an object.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The object's tooltip content.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.SetPlacement(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.Primitives.PlacementMode)">
      <summary>Sets the ToolTipService.Placement XAML attached property value for the specified target element.</summary>
      <param name="element">The target element for the attached property value.</param>
      <param name="value">One of the PlacementMode values, which specifies where the tooltip should appear relative to the control that is the placement target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.SetPlacementTarget(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets the ToolTipService.PlacementTarget XAML attached property value for the specified target element.</summary>
      <param name="element">The target element for the attached property value.</param>
      <param name="value">The visual element that should be the placement target for the tooltip.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToolTipService.SetToolTip(Microsoft.UI.Xaml.DependencyObject,System.Object)">
      <summary>Sets the value of the ToolTipService.ToolTip XAML attached property.</summary>
      <param name="element">The object to set tooltip content on.</param>
      <param name="value">The value to set for tooltip content.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeView">
      <summary>Represents a hierarchical list with expanding and collapsing nodes that contain nested items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the TreeView control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanDragItems">
      <summary>Gets or sets a value that indicates whether items in the view can be dragged as data payload.</summary>
      <returns>**true** if items in the view can be dragged as data payload; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanDragItemsProperty">
      <summary>Identifies the CanDragItems dependency property.</summary>
      <returns>The identifier for the CanDragItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanReorderItems">
      <summary>Gets or sets a value that indicates whether items in the view can be reordered through user interaction.</summary>
      <returns>**true** if items in the view can be reordered through user interaction; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanReorderItemsProperty">
      <summary>Identifies the CanReorderItems dependency property.</summary>
      <returns>The identifier for the CanReorderItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers.</summary>
      <returns>The style applied to the item containers. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
      <returns>The identifier for the ItemContainerStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.</summary>
      <returns>A custom StyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
      <returns>The identifier for the ItemContainerStyleSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the item containers of a TreeView.</summary>
      <returns>The collection of Transition style elements that apply to the item containers of an ItemsControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitionsProperty">
      <summary>Identifies the ItemContainerTransitions dependency property.</summary>
      <returns>The identifier for the ItemContainerTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the TreeView.</summary>
      <returns>The object that is used to generate the content of the TreeView. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each item.</summary>
      <returns>The template that specifies the visualization of the data objects. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.</summary>
      <returns>A reference to a custom DataTemplateSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelectorProperty">
      <summary>Identifies the ItemTemplateSelector dependency property.</summary>
      <returns>The identifier for the ItemTemplateSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.RootNodes">
      <summary>Gets or sets the collection of root nodes of the tree.</summary>
      <returns>The collection of root nodes of the tree.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectedNodes">
      <summary>Gets or sets the collection of nodes that are selected in the tree.</summary>
      <returns>The collection of nodes that are selected in the tree. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectionMode">
      <summary>Gets or sets the selection behavior for a TreeView instance.</summary>
      <returns>An enumeration value that specifies the selection behavior for a TreeView. The default is **Single** selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
      <returns>The identifier for the SelectionMode dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.Collapsed">
      <summary>Occurs when a node in the tree is collapsed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.DragItemsCompleted">
      <summary>Occurs when a drag operation that involves one of the items in the view is ended.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.DragItemsStarting">
      <summary>Occurs when a drag operation that involves one of the items in the view is initiated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.Expanding">
      <summary>Occurs when a node in the tree starts to expand.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.ItemInvoked">
      <summary>Occurs when an item in the tree is invoked.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.Collapse(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <summary>Collapses the specified node in the tree.</summary>
      <param name="value">The tree node to collapse.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <param name="item">The item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ContainerFromNode(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <summary>Returns the container corresponding to the specified node.</summary>
      <param name="node">The node to retrieve the container for.</param>
      <returns>A container that corresponds to the specified node, if the node has a container and exists in the collection; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.Expand(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <summary>Expands the specified node in the tree.</summary>
      <param name="value">The tree node to expand.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.NodeFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the TreeViewNode corresponding to the specified container.</summary>
      <param name="container">The container to retrieve the TreeViewNode for.</param>
      <returns>The node that corresponds to the specified container.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.SelectAll">
      <summary>Selects all nodes in the tree.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs">
      <summary>Provides event data for the TreeView.Collapsed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs.Item">
      <summary>Gets the TreeView item that is collapsed.</summary>
      <returns>The TreeView item that is collapsed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs.Node">
      <summary>Gets the TreeView node that is collapsed.</summary>
      <returns>The TreeView node that is collapsed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs">
      <summary>Provides event data for the TreeView.DragItemsCompleted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs.DropResult">
      <summary>Gets a value that indicates what operation was performed on the dragged data, and whether it was successful.</summary>
      <returns>A value of the enumeration that indicates what operation was performed on the dragged data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs">
      <summary>Provides event data for the TreeView.DragItemsStarting event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the item drag action should be canceled.</summary>
      <returns>**true** to cancel the item drag action; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Data">
      <summary>Gets the data payload associated with an items drag action.</summary>
      <returns>The data payload.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs">
      <summary>Provides event data for the TreeView.Expanding event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs.Item">
      <summary>Gets the data item for the tree view node that is expanding.</summary>
      <returns>The data item for the tree view node that is expanding.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs.Node">
      <summary>Gets the tree view node that is expanding.</summary>
      <returns>The tree view node that is expanding.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItem">
      <summary>Represents the container for an item in a TreeView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the TreeViewItem control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyph">
      <summary>Gets or sets the glyph to show for a collapsed tree node.</summary>
      <returns>The glyph to show for a collapsed tree node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyphProperty">
      <summary>Identifies the CollapsedGlyph dependency property.</summary>
      <returns>The identifier for the CollapsedGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyph">
      <summary>Gets or sets the glyph to show for an expanded tree node.</summary>
      <returns>The glyph to show for an expanded tree node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyphProperty">
      <summary>Identifies the ExpandedGlyph dependency property.</summary>
      <returns>The identifier for the ExpandedGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrush">
      <summary>Gets or sets the Brush used to paint node glyphs on a TreeView.</summary>
      <returns>The Brush used to paint node glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrushProperty">
      <summary>Identifies the GlyphBrush dependency property.</summary>
      <returns>The identifier for the GlyphBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacity">
      <summary>Gets or sets the opacity of node glyphs on a TreeView.</summary>
      <returns>The opacity of node glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacityProperty">
      <summary>Identifies the GlyphOpacity dependency property.</summary>
      <returns>The identifier for the GlyphOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSize">
      <summary>Gets or sets the size of node glyphs on a TreeView.</summary>
      <returns>The opacity of size glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSizeProperty">
      <summary>Identifies the GlyphSize dependency property.</summary>
      <returns>The identifier for the GlyphSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildren">
      <summary>Gets or sets a value that indicates whether the current item has child items that haven't been shown.</summary>
      <returns>**true** of the current item has child items that haven't been shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildrenProperty">
      <summary>Identifies the HasUnrealizedChildren dependency property.</summary>
      <returns>The identifier for the HasUnrealizedChildren dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets a value that indicates whether a tree node is expanded.</summary>
      <returns>**true** if the tree node is expanded; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the IsExpanded dependency property.</summary>
      <returns>The identifier for the IsExpanded dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the TreeView.</summary>
      <returns>The object that is used to generate the content of the TreeViewItem. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a TreeViewItem control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettingsProperty">
      <summary>Identifies the TreeViewItemTemplateSettings dependency property.</summary>
      <returns>The identifier for the TreeViewItemTemplateSettings dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs">
      <summary>Provides event data for the TreeView.ItemInvoked event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs.InvokedItem">
      <summary>Gets the TreeView item that is invoked.</summary>
      <returns>The TreeView item that is invoked.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a TreeViewItem control. Not intended for general use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.#ctor">
      <summary>Initializes a new instance of the TreeViewItemTemplateSettings class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.CollapsedGlyphVisibility">
      <summary>Gets the visibilty of a collapsed glyph.</summary>
      <returns>The visibilty of a collapsed glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.CollapsedGlyphVisibilityProperty">
      <summary>Identifies the CollapsedGlyphVisibility dependency property.</summary>
      <returns>The identifier for the CollapsedGlyphVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.DragItemsCount">
      <summary>Gets the number of items being dragged.</summary>
      <returns>The number of items being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.DragItemsCountProperty">
      <summary>Identifies the DragItemsCount dependency property.</summary>
      <returns>The identifier for the DragItemsCount dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.ExpandedGlyphVisibility">
      <summary>Gets the visibilty of an expanded glyph.</summary>
      <returns>The visibilty of an expanded glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.ExpandedGlyphVisibilityProperty">
      <summary>Identifies the ExpandedGlyphVisibility dependency property.</summary>
      <returns>The identifier for the ExpandedGlyphVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.Indentation">
      <summary>Gets the amount that the item is indented.</summary>
      <returns>The amount that the item is indented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty">
      <summary>Identifies the Indentation dependency property.</summary>
      <returns>The identifier for the Indentation dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewList">
      <summary>Represents a flattened list of tree view items so that operations such as keyboard navigation and drag-and-drop can be inherited from ListView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewList.#ctor">
      <summary>Initializes a new instance of the TreeViewList control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewNode">
      <summary>Represents a node in a TreeView control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewNode.#ctor">
      <summary>Initializes a new instance of the TreeViewNode class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Children">
      <summary>Gets the collection of nodes that are children of the current node.</summary>
      <returns>The collection of nodes that are children of the current node. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Content">
      <summary>Gets or sets the data content for the current node.</summary>
      <returns>The data content for the current node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Depth">
      <summary>Gets a value that indicates how far the current node is from the root node of the tree.</summary>
      <returns>The depth of the current node from the root node of the tree.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.DepthProperty">
      <summary>Identifies the Depth dependency property.</summary>
      <returns>The identifier for the Depth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren">
      <summary>Gets a value that indicates whether the current node has child items.</summary>
      <returns>**true** if the current node has child items; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildrenProperty">
      <summary>Identifies the HasChildren dependency property.</summary>
      <returns>The identifier for the HasChildren dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren">
      <summary>Gets or sets a value that indicates whether the current node has child items that haven't been shown.</summary>
      <returns>**true** of the current node has child items that haven't been shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded">
      <summary>Gets or sets a value that indicates whether the cuurent tree view node is expanded.</summary>
      <returns>**true** if the node is expanded; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpandedProperty">
      <summary>Identifies the IsExpanded dependency property.</summary>
      <returns>The identifier for the IsExpanded dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Parent">
      <summary>Gets or sets the node that is the parent of the current node.</summary>
      <returns>The node that is the parent of the current node.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode">
      <summary>Defines constants that specify the selection behavior for a TreeView instance.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Multiple">
      <summary>The user can select multiple items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.None">
      <summary>A user can't select items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Single">
      <summary>A user can select a single item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneView">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TwoPaneView.#ctor">
      <summary>Initializes a new instance of the TwoPaneView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeight">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeightProperty">
      <summary>Identifies the MinTallModeHeight dependency property.</summary>
      <returns>The identifier for the MinTallModeHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidth">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidthProperty">
      <summary>Identifies the MinWideModeWidth dependency property.</summary>
      <returns>The identifier for the MinWideModeWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Mode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.ModeProperty">
      <summary>Identifies the Mode dependency property.</summary>
      <returns>The identifier for the Mode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Length">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1LengthProperty">
      <summary>Identifies the Pane1Length dependency property.</summary>
      <returns>The identifier for the Pane1Length dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Property">
      <summary>Identifies the Pane1 dependency property.</summary>
      <returns>The identifier for the Pane1 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Length">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2LengthProperty">
      <summary>Identifies the Pane2Length dependency property.</summary>
      <returns>The identifier for the Pane2Length dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Property">
      <summary>Identifies the Pane2 dependency property.</summary>
      <returns>The identifier for the Pane2 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriority">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriorityProperty">
      <summary>Identifies the PanePriority dependency property.</summary>
      <returns>The identifier for the PanePriority dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfiguration">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfigurationProperty">
      <summary>Identifies the TallModeConfiguration dependency property.</summary>
      <returns>The identifier for the TallModeConfiguration dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfiguration">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfigurationProperty">
      <summary>Identifies the WideModeConfiguration dependency property.</summary>
      <returns>The identifier for the WideModeConfiguration dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TwoPaneView.ModeChanged">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewMode">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.SinglePane">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.Tall">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.Wide">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority.Pane1">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority.Pane2">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.BottomTop">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.SinglePane">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.TopBottom">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.LeftRight">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.RightLeft">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.SinglePane">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.UIElementCollection">
      <summary>Represents an ordered collection of UIElement objects.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UIElementCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.Append(Microsoft.UI.Xaml.UIElement)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.First">
      <summary>Returns the iterator object that can iterate over the items in the UIElementCollection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The UIElement value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.UIElement[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view. This object implements IVectorView&lt;T&gt; with a UIElement constraint.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.IndexOf(Microsoft.UI.Xaml.UIElement,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.UIElement)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.Move(System.UInt32,System.UInt32)">
      <summary>Moves the item at the specified index to a new location in the collection.</summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.ReplaceAll(Microsoft.UI.Xaml.UIElement[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UIElementCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets the value at the specified index to the UIElement value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.UserControl">
      <summary>Provides the base class for defining a new control that encapsulates related existing controls and provides its own logic.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UserControl.#ctor">
      <summary>Initializes a new instance of the UserControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UserControl.Content">
      <summary>Gets or sets the content that is contained within a user control.</summary>
      <returns>The content of the user control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UserControl.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid">
      <summary>Provides a grid-style layout panel where each tile/cell can be variable size based on content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.#ctor">
      <summary>Initializes a new instance of the VariableSizedWrapGrid class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ColumnSpanProperty">
      <summary>Identifies the VariableSizedWrapGrid.ColumnSpan XAML attached property.</summary>
      <returns>The identifier for the VariableSizedWrapGrid.ColumnSpan XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.HorizontalChildrenAlignment">
      <summary>Gets or sets the alignment rules by which child elements are arranged for the horizontal dimension.</summary>
      <returns>A value of the enumeration. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.HorizontalChildrenAlignmentProperty">
      <summary>Identifies the HorizontalChildrenAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalChildrenAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemHeight">
      <summary>Gets or sets the height of the layout area for each item that is contained in a VariableSizedWrapGrid.</summary>
      <returns>The height of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemHeightProperty">
      <summary>Identifies the ItemHeight dependency property.</summary>
      <returns>The identifier for the ItemHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemWidth">
      <summary>Gets or sets the width of the layout area for each item that is contained in a VariableSizedWrapGrid.</summary>
      <returns>The width of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemWidthProperty">
      <summary>Identifies the ItemWidth dependency property.</summary>
      <returns>The identifier for the ItemWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.MaximumRowsOrColumns">
      <summary>Gets or sets a value that influences the wrap point, also accounting for Orientation.</summary>
      <returns>The maximum rows or columns that this VariableSizedWrapGrid should present before it introduces wrapping to the layout. The default is -1, which is a special value that indicates no maximum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.MaximumRowsOrColumnsProperty">
      <summary>Identifies the MaximumRowsOrColumns dependency property.</summary>
      <returns>The identifier for the MaximumRowsOrColumns dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.Orientation">
      <summary>Gets or sets the direction in which child elements are arranged.</summary>
      <returns>A value of the enumeration. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.RowSpanProperty">
      <summary>Identifies the VariableSizedWrapGrid.RowSpan XAML attached property.</summary>
      <returns>The identifier for the VariableSizedWrapGrid.RowSpan XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.VerticalChildrenAlignment">
      <summary>Gets or sets the alignment rules by which child elements are arranged for the vertical dimension.</summary>
      <returns>A value of the enumeration. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.VerticalChildrenAlignmentProperty">
      <summary>Identifies the VerticalChildrenAlignment dependency property.</summary>
      <returns>The identifier for the VerticalChildrenAlignment dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.GetColumnSpan(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the VariableSizedWrapGrid.ColumnSpan XAML attached property from a target element.</summary>
      <param name="element">The target element.</param>
      <returns>The obtained value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.GetRowSpan(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the VariableSizedWrapGrid.RowSpan XAML attached property from a target element.</summary>
      <param name="element">The target element.</param>
      <returns>The obtained value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.SetColumnSpan(Microsoft.UI.Xaml.UIElement,System.Int32)">
      <summary>Sets the value of the VariableSizedWrapGrid.ColumnSpan XAML attached property on a target element.</summary>
      <param name="element">The target element.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.SetRowSpan(Microsoft.UI.Xaml.UIElement,System.Int32)">
      <summary>Sets the value of the VariableSizedWrapGrid.RowSpan XAML attached property on a target element.</summary>
      <param name="element">The target element.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Viewbox">
      <summary>Defines a content decorator that can stretch and scale a single child to fill the available space.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Viewbox.#ctor">
      <summary>Initializes a new instance of the Viewbox class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Viewbox.Child">
      <summary>Gets or sets the single child element of a Viewbox element.</summary>
      <returns>The single child element of a Viewbox element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Viewbox.Stretch">
      <summary>Gets or sets the Stretch mode, which determines how content fits into the available space.</summary>
      <returns>A Stretch mode, which determines how content fits in the available space. The default is **Uniform**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Viewbox.StretchDirection">
      <summary>Gets or sets the StretchDirection, which determines how scaling is applied to the contents of a Viewbox.</summary>
      <returns>A StretchDirection, which determines how scaling is applied to the contents of a Viewbox. The default is **Both**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Viewbox.StretchDirectionProperty">
      <summary>Identifies the StretchDirection dependency property.</summary>
      <returns>The identifier for the StretchDirection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Viewbox.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VirtualizationMode">
      <summary>Defines constants that specify how VirtualizingStackPanel manages item containers for its child items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.VirtualizationMode.Recycling">
      <summary>Reuse the item containers.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.VirtualizationMode.Standard">
      <summary>Create and discard the item containers.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VirtualizingPanel">
      <summary>Provides a framework for Panel elements that virtualize their visual children.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>Gets a value that identifies the ItemContainerGenerator for this VirtualizingPanel.</summary>
      <returns>The ItemContainerGenerator for this VirtualizingPanel.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.AddInternalChild(Microsoft.UI.Xaml.UIElement)">
      <summary>Adds the specified UIElement to the Children collection of a VirtualizingPanel element.</summary>
      <param name="child">The UIElement child to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>Generates the item at the specified index location and makes it visible.</summary>
      <param name="index">The index position of the item that is generated and made visible.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,Microsoft.UI.Xaml.UIElement)">
      <summary>Adds the specified UIElement to the collection of a VirtualizingPanel element at the specified index position.</summary>
      <param name="index">The index position within the collection at which the child element is inserted.</param>
      <param name="child">The UIElement child to add to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base Panel class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.OnItemsChanged(System.Object,Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the Items collection that is associated with the ItemsControl for this Panel changes.</summary>
      <param name="sender">The Object that raised the event.</param>
      <param name="args">Provides data for the ItemsChanged event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>Removes child elements from the Children collection.</summary>
      <param name="index">The beginning index position within the collection at which the first child element is removed.</param>
      <param name="range">The total number of child elements to remove from the collection.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel">
      <summary>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically. Can only be used to display items in an ItemsControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.#ctor">
      <summary>Initializes a new instance of the VirtualizingStackPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.AreScrollSnapPointsRegular">
      <summary>Gets or sets a value that indicates whether the generated snap points used for panning in the VirtualizingStackPanel are equidistant from each other.</summary>
      <returns>**true** if the snap points in the VirtualizingStackPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.AreScrollSnapPointsRegularProperty">
      <summary>Identifies the AreScrollSnapPointsRegular dependency property.</summary>
      <returns>The identifier for the AreScrollSnapPointsRegular dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>Identifies the **VirtualizingStackPanel.IsVirtualizing** attached property.</summary>
      <returns>The identifier for the **VirtualizingStackPanel.IsVirtualizing** attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</summary>
      <returns>The Orientation of child content, as a value of the enumeration. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>Identifies the VirtualizingStackPanel.VirtualizationMode XAML attached property.</summary>
      <returns>The identifier for the VirtualizingStackPanel.VirtualizationMode XAML attached property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>Occurs when an item that is hosted by the VirtualizingStackPanel is re-virtualized.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.GetIsVirtualizing(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a value that determines whether an item is currently being virtualized as part of an items set where the ItemsPanel is templated with a VirtualizingStackPanel.</summary>
      <param name="o">The object item where you want to determine the current virtualization state.</param>
      <returns>**true** if the item specified by *o* is currently virtualizing its content; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.GetVirtualizationMode(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the VirtualizingStackPanel.VirtualizationMode XAML attached property value for the specified target element.</summary>
      <param name="element">The object from which the VirtualizationMode is read.</param>
      <returns>One of the enumeration values that specifies whether the object uses container recycling.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Called when an item that is hosted by the VirtualizingStackPanel is re-virtualized.</summary>
      <param name="e">Data about the event.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.SetVirtualizationMode(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.VirtualizationMode)">
      <summary>Sets the VirtualizingStackPanel.VirtualizationMode XAML attached property on the specified target element.</summary>
      <param name="element">The target element.</param>
      <param name="value">One of the enumeration values that specifies whether *element* uses container recycling.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.WrapGrid">
      <summary>Positions child elements sequentially from left to right or top to bottom. When elements extend beyond the container edge, elements are positioned in the next row or column. Can only be used to display items in an ItemsControl. See Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.WrapGrid.#ctor">
      <summary>Initializes a new instance of the WrapGrid class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.HorizontalChildrenAlignment">
      <summary>Gets or sets the alignment rules by which child elements are arranged for the horizontal dimension.</summary>
      <returns>A value of the enumeration. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.HorizontalChildrenAlignmentProperty">
      <summary>Identifies the HorizontalChildrenAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalChildrenAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.ItemHeight">
      <summary>Gets or sets the height of the layout area for each item that is contained in a WrapGrid.</summary>
      <returns>The height of the layout area for each item that is contained in a WrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.ItemHeightProperty">
      <summary>Identifies the ItemHeight dependency property.</summary>
      <returns>The identifier for the ItemHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.ItemWidth">
      <summary>Gets or sets the width of the layout area for each item that is contained in a WrapGrid.</summary>
      <returns>The width of the layout area for each item that is contained in a WrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.ItemWidthProperty">
      <summary>Identifies the ItemWidth dependency property.</summary>
      <returns>The identifier for the ItemWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.MaximumRowsOrColumns">
      <summary>Gets or sets a value that influences the wrap point, also accounting for Orientation.</summary>
      <returns>The maximum rows or columns that this WrapGrid should present before it introduces wrapping to the layout. The default is -1, which is a special value that indicates no maximum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.MaximumRowsOrColumnsProperty">
      <summary>Identifies the MaximumRowsOrColumns dependency property.</summary>
      <returns>The identifier for the MaximumRowsOrColumns dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.Orientation">
      <summary>Gets or sets the direction in which child elements are arranged.</summary>
      <returns>A value of the enumeration. The default is **Vertical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.VerticalChildrenAlignment">
      <summary>Gets or sets the alignment rules by which child elements are arranged for the vertical dimension.</summary>
      <returns>A value of the enumeration. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.WrapGrid.VerticalChildrenAlignmentProperty">
      <summary>Identifies the VerticalChildrenAlignment dependency property.</summary>
      <returns>The identifier for the VerticalChildrenAlignment dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomMode">
      <summary>Defines constants that specify the current mode for zoom behavior in the ScrollViewer content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ZoomMode.Disabled">
      <summary>Zoom of content is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ZoomMode.Enabled">
      <summary>Zoom of content is enabled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.CustomMapTileDataSource">
      <summary>Provides a source of custom tiles for a MapTileSource. Use this class when you can't use HttpMapTileDataSource or LocalMapTileDataSource. For example, CustomMapTileDataSource supports drawing tiles in memory and returning them as a stream of pixels.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.CustomMapTileDataSource.#ctor">
      <summary>Initializes a new instance of the CustomMapTileDataSource class.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.CustomMapTileDataSource.BitmapRequested">
      <summary>Occurs when the bitmap is requested for a CustomMapTileDataSource. An instance of MapTileBitmapRequestedEventArgs provides data for this event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource">
      <summary>Provides a source of tiles for a MapTileSource. The tiles are fetched by using the HTTP or HTTPS protocol. Note that, as of build 15063, local uris don't work anymore.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.#ctor">
      <summary>Initializes a new instance of the HttpMapTileDataSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.#ctor(System.String)">
      <summary>Initializes a new instance of the HttpMapTileDataSource class with the specified Uri format.</summary>
      <param name="uriFormatString">The Uri format to use.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.AdditionalRequestHeaders">
      <summary>Gets or sets additional HTTP request headers and their values for fetching tiles from an HTTP source.</summary>
      <returns>Additional HTTP request headers and their values for fetching tiles from an HTTP source.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.AllowCaching">
      <summary>Gets or sets a value that indicates whether the Internet cache is checked before fetching a tile from an HTTP source. When caching is disabled, a new request for the tile is made every time.</summary>
      <returns>**true** if the Internet cache is checked before fetching a tile from an HTTP source; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.UriFormatString">
      <summary>Gets or sets the format of the Uri for fetching tiles from an HTTP source.</summary>
      <returns>The format of the Uri for fetching tiles from an HTTP source.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.HttpMapTileDataSource.UriRequested">
      <summary>Occurs when the tile is requested for an HttpMapTileDataSource. An instance of MapTileUriRequestedEventArgs provides data for this event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.LocalMapTileDataSource">
      <summary>Provides a source of tiles for a MapTileSource. The tiles are fetched by using a local protocol such as **ms-appdata**.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.LocalMapTileDataSource.#ctor">
      <summary>Initializes a new instance of the LocalMapTileDataSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.LocalMapTileDataSource.#ctor(System.String)">
      <summary>Initializes a new instance of the LocalMapTileDataSource class with the specified Uri format.</summary>
      <param name="uriFormatString">The Uri format to use.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.LocalMapTileDataSource.UriFormatString">
      <summary>Gets or sets the format of the Uri for fetching tiles from a local source.</summary>
      <returns>The format of the Uri for fetching tiles from a local source.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.LocalMapTileDataSource.UriRequested">
      <summary>Occurs when the tile is requested for an LocalMapTileDataSource. An instance of MapTileUriRequestedEventArgs provides data for this event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs">
      <summary>Provides data for the ActualCameraChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapActualCameraChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs.Camera">
      <summary>Gets the current position of the map's camera.</summary>
      <returns>The current position of the map's camera.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs.ChangeReason">
      <summary>Indicates the reason the ActualCameraChanged event was triggered.</summary>
      <returns>The reason the ActualCameraChanged event was triggered.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs">
      <summary>Provides data for the ActualCameraChanging event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the MapActualCameraChangingEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs.Camera">
      <summary>Gets the position of the map's camera before it started moving.</summary>
      <returns>Gets the position of the map's camera before it started moving.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs.ChangeReason">
      <summary>Indicates the reason the ActualCameraChanging event was triggered.</summary>
      <returns>The reason the ActualCameraChanging event was triggered.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind">
      <summary>Specifies the animation to use when you change the view of the map. For example, you can specify animation when calling the TrySetViewAsync or TrySetViewBoundsAsync methods.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind.Bow">
      <summary>A parabolic animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind.Default">
      <summary>The default animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind.Linear">
      <summary>A linear animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind.None">
      <summary>No animation</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapBillboard">
      <summary>Displays an image that scales and fades in relation to its distance from the ReferenceCamera of the MapBillboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.#ctor(Microsoft.UI.Xaml.Controls.Maps.MapCamera)">
      <summary>Initializes a new instance of the MapBillboard class.</summary>
      <param name="camera">The MapCamera settings that define the current position of the reference camera.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.CollisionBehaviorDesired">
      <summary>Gets or sets the behavior of a MapBillboard when it collides with other map features due to zoom level.</summary>
      <returns>The behavior of a MapBillboard when it collides with other map features due to zoom level.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.CollisionBehaviorDesiredProperty">
      <summary>Identifies the CollisionBehaviorDesired dependency property.</summary>
      <returns>Identifier for the CollisionBehaviorDesired dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.Image">
      <summary>Gets or sets the image for the MapBillboard. Provide an optional custom image to replace the default point of interest (POI) image.</summary>
      <returns>The point of interest (POI) image for the MapBillboard.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.Location">
      <summary>Gets or sets the geographic location of the MapBillboard on the MapControl. The location is the geographic location on the MapControl at which the NormalizedAnchorPoint of the MapBillboard is positioned.</summary>
      <returns>The geographic location of the MapBillboard on the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.LocationProperty">
      <summary>Identifies the Location dependency property.</summary>
      <returns>The identifier for the Location dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.NormalizedAnchorPoint">
      <summary>Gets or sets the anchor point of the MapBillboard. The anchor point is the point on the MapBillboard that is positioned at the point on the MapControl specified by the Location property.</summary>
      <returns>The anchor point of the MapBillboard.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.NormalizedAnchorPointProperty">
      <summary>Identifies the NormalizedAnchorPoint dependency property.</summary>
      <returns>The identifier for the NormalizedAnchorPoint dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapBillboard.ReferenceCamera">
      <summary>Gets the MapCamera settings that define the position and orientation where the image appears at a 1x scale.</summary>
      <returns>The MapCamera settings that define the position and orientation where the image appears at a 1x scale.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapCamera">
      <summary>Represents the position of a camera to define the view of a map.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCamera.#ctor(Windows.Devices.Geolocation.Geopoint)">
      <summary>Creates a map camera, to define the view of a map based on location.</summary>
      <param name="location">The location of the camera in the map.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCamera.#ctor(Windows.Devices.Geolocation.Geopoint,System.Double)">
      <summary>Creates a map camera, to define the view of a map based on location and heading.</summary>
      <param name="location">The location of the camera in the map.</param>
      <param name="headingInDegrees">The directional heading of the camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCamera.#ctor(Windows.Devices.Geolocation.Geopoint,System.Double,System.Double)">
      <summary>Creates a map camera, to define the view of a map based on location, heading, and pitch.</summary>
      <param name="location">The location of the camera in the map.</param>
      <param name="headingInDegrees">The directional heading of the camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCamera.#ctor(Windows.Devices.Geolocation.Geopoint,System.Double,System.Double,System.Double,System.Double)">
      <summary>Creates a map camera, to define the view of a map based on location, heading, pitch, roll, and field of view.</summary>
      <param name="location">The location of the camera in the map.</param>
      <param name="headingInDegrees">The directional heading of the camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
      <param name="rollInDegrees">The roll of the camera in degrees, where -90 is tilting to the left and +90 is tilting to the right. The default *rollInDegrees* value is 0.</param>
      <param name="fieldOfViewInDegrees">The horizontal angle of view that appears in the camera, in degrees. The default *fieldOfViewInDegrees* value is 45.0.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapCamera.FieldOfView">
      <summary>Gets or sets the vertical angle of view that appears in the camera, in degrees.</summary>
      <returns>The vertical angle of view that appears in the camera, in degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapCamera.Heading">
      <summary>Gets or sets the directional heading of the camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West.</summary>
      <returns>The directional heading of the camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapCamera.Location">
      <summary>Gets or sets the location of the camera in the map.</summary>
      <returns>The location of the camera in the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapCamera.Pitch">
      <summary>Gets or sets the pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum).</summary>
      <returns>The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapCamera.Roll">
      <summary>Gets or sets the roll of the camera in degrees, where -90 is tilting to the left and +90 is tilting to the right.</summary>
      <returns>The roll of the camera in degrees, where -90 is tilting to the left and +90 is tilting to the right.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapCameraChangeReason">
      <summary>Specifies the reason the position of the map's camera has changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapCameraChangeReason.Programmatic">
      <summary>The position of the map's camera changed programmatically.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapCameraChangeReason.System">
      <summary>The system changed the position of the map's camera.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapCameraChangeReason.UserInteraction">
      <summary>The user manually changed the position of the map's camera.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapColorScheme">
      <summary>Specifies the ColorScheme of the MapControl.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapColorScheme.Dark">
      <summary>The dark color scheme.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapColorScheme.Light">
      <summary>The light color scheme.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs">
      <summary>Provides event data for the MapContextRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapContextRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs.Location">
      <summary>Gets a geolocation on the map of a context input gesture, such as a right-click.</summary>
      <returns>The geolocation on the map of a context input gesture, such as a right-click.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs.MapElements">
      <summary>Gets a collection of MapElement objects at the point on the map specified by the Location property.</summary>
      <returns>A collection of MapElement objects at the point on the map specified by the Location property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs.Position">
      <summary>Gets the x- and y-coordinate values that define the point on the map of a context input gesture, such as a right-click.</summary>
      <returns>The x- and y-coordinate values that define the point on the map of a context input gesture, such as a right-click.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapControl">
      <summary>Represents a symbolic or photorealistic map of the Earth.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.#ctor">
      <summary>Initializes a new instance of the MapControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ActualCamera">
      <summary>Gets the MapCamera settings that define the current position of the camera.</summary>
      <returns>The MapCamera settings that define the current position of the camera.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.BusinessLandmarksEnabled">
      <summary>This property is not implemented.</summary>
      <returns>This property is not implemented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.BusinessLandmarksEnabledProperty">
      <summary>This property is not implemented.</summary>
      <returns>This property is not implemented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.BusinessLandmarksVisible">
      <summary>Gets or sets a value that indicates whether businesses are displayed on the map.</summary>
      <returns>**true** if businesses are displayed on the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.BusinessLandmarksVisibleProperty">
      <summary>Identifies the BusinessLandmarksVisible dependency property.</summary>
      <returns>The identifier for the BusinessLandmarksVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanTiltDown">
      <summary>Gets a value indicating if the map can be tilted down</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanTiltDownProperty">
      <summary>Identifies the CanTiltDown dependency property.</summary>
      <returns>The identifier for the CanTiltDown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanTiltUp">
      <summary>Gets a value indicating if the map can be tilted up</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanTiltUpProperty">
      <summary>Identifies the CanTiltUp dependency property.</summary>
      <returns>The identifier for the CanTiltUp dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanZoomIn">
      <summary>Gets a value indicating if the map can be zoomed in</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanZoomInProperty">
      <summary>Identifies the CanZoomIn dependency property.</summary>
      <returns>The identifier for the CanZoomIn dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanZoomOut">
      <summary>Gets a value indicating if the map can be zoomed out</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CanZoomOutProperty">
      <summary>Identifies the CanZoomOut dependency property.</summary>
      <returns>The identifier for the CanZoomOut dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Center">
      <summary>Gets or sets the center of the map.</summary>
      <returns>The center of the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CenterProperty">
      <summary>Identifies the Center dependency property.</summary>
      <returns>The identifier for the Center dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Children">
      <summary>Gets the collection of objects that are children of the MapControl.</summary>
      <returns>The collection of objects that are children of the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ChildrenProperty">
      <summary>Identifies the Children dependency property.</summary>
      <returns>The identifier for the Children dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ColorScheme">
      <summary>Gets or sets the color scheme of the map – for example, light or dark.</summary>
      <returns>The color scheme of the map – for example, light or dark.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ColorSchemeProperty">
      <summary>Identifies the ColorScheme dependency property.</summary>
      <returns>The identifier for the ColorScheme dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.CustomExperience">
      <summary>Gets or sets a custom experience for the MapControl.</summary>
      <returns>A custom experience for the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.DesiredPitch">
      <summary>Gets or sets a value that indicates by how many degrees you want the map to be tilted. Sometimes the desired pitch cannot be set.</summary>
      <returns>A value that indicates by how many degrees you want the map to be tilted. Sometimes the desired pitch cannot be set.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.DesiredPitchProperty">
      <summary>Identifies the DesiredPitch dependency property.</summary>
      <returns>The identifier for the DesiredPitch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Heading">
      <summary>Gets or sets the directional heading of the map in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West.</summary>
      <returns>The directional heading of the map in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.HeadingProperty">
      <summary>Identifies the Heading dependency property.</summary>
      <returns>The identifier for the Heading dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Is3DSupported">
      <summary>Gets a value that indicates if 3D is supported within the map.</summary>
      <returns>**true** if 3D is supported within the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Is3DSupportedProperty">
      <summary>Identifies the Is3DSupported dependency property.</summary>
      <returns>Is the identifier for the Is3DSupported dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.IsStreetsideSupported">
      <summary>Gets a value that indicates if Streetside is supported within the map.</summary>
      <returns>**true** if Streetside is supported within the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.IsStreetsideSupportedProperty">
      <summary>Identifies the IsStreetsideSupported dependency property.</summary>
      <returns>Is the identifier for the IsStreetsideSupported dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LandmarksVisible">
      <summary>Gets or sets a value that indicates whether 3D buildings are displayed on the map.</summary>
      <returns>**true** if 3D buildings are displayed on the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LandmarksVisibleProperty">
      <summary>Identifies the LandmarksVisible dependency property.</summary>
      <returns>The identifier for the LandmarksVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Layers">
      <summary>Gets the collection of MapLayer objects that are children of the MapControl.</summary>
      <returns>The collection of MapLayer objects that are children of the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LayersProperty">
      <summary>Identifies the Layers dependency property.</summary>
      <returns>The Layers dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LoadingStatus">
      <summary>Gets the loading status of the map to be displayed in the MapControl.</summary>
      <returns>The loading status of the map to be displayed in the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LoadingStatusProperty">
      <summary>Identifies the LoadingStatus dependency property.</summary>
      <returns>The identifier for the LoadingStatus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.LocationProperty">
      <summary>Identifies the MapControl.Location XAML attached property.</summary>
      <returns>The identifier for the MapControl.Location XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapElements">
      <summary>Gets the collection of MapElement objects that are children of the MapControl.</summary>
      <returns>The collection of MapElement objects that are children of the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapElementsProperty">
      <summary>Identifies the MapElements dependency property.</summary>
      <returns>The identifier for the MapElements dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapProjection">
      <summary>Gets or sets a MapProjection that specifies how to transform the latitudes and longitudes of the map.</summary>
      <returns>An MapProjection that specifies how to transform the latitudes and longitudes of the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapProjectionProperty">
      <summary>Identifies the MapProjection dependency property.</summary>
      <returns>The identifier for the MapProjection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapServiceToken">
      <summary>Gets or sets the authentication key required for using the MapControl and online mapping services.</summary>
      <returns>The authentication key required for using the MapControl and online mapping services.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapServiceTokenProperty">
      <summary>Identifies the MapServiceToken dependency property.</summary>
      <returns>The identifier for the MapServiceToken dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MaxZoomLevel">
      <summary>Gets the maximum zoom level for the map.</summary>
      <returns>The maximum zoom level for the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.MinZoomLevel">
      <summary>Gets the minimum zoom level for the map.</summary>
      <returns>The minimum zoom level for the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.NormalizedAnchorPointProperty">
      <summary>Identifies the MapControl.NormalizedAnchorPoint XAML attached property.</summary>
      <returns>The identifier for the MapControl.NormalizedAnchorPoint XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.PanInteractionMode">
      <summary>Gets or sets a value that indicates if the pan gesture is recognized on the map.</summary>
      <returns>A value that indicates if the pan gesture is recognized on the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.PanInteractionModeProperty">
      <summary>Identifies the PanInteractionMode dependency property.</summary>
      <returns>Identifier for the PanInteractionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.PedestrianFeaturesVisible">
      <summary>Gets or sets a value that indicates whether pedestrian features such as public stairs are displayed on the map.</summary>
      <returns>**true** if pedestrian features such as public stairs are displayed on the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.PedestrianFeaturesVisibleProperty">
      <summary>Identifies the PedestrianFeaturesVisible dependency property.</summary>
      <returns>The identifier for the PedestrianFeaturesVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Pitch">
      <summary>Gets the actual pitch of the map. Sometimes the pitch requested by setting the DesiredPitch property cannot be set.</summary>
      <returns>The actual pitch of the map. Sometimes the pitch requested by setting the property cannot be set.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.PitchProperty">
      <summary>Identifies the Pitch dependency property.</summary>
      <returns>The identifier for the Pitch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Region">
      <summary>Gets or sets the region (for example, the state or province) of an address.</summary>
      <returns>The region (for example, the state or province) of an address.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.RegionProperty">
      <summary>Identifies the Region dependency property.</summary>
      <returns>Identifier for the Region dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.RotateInteractionMode">
      <summary>Gets or sets a value that indicates if the map responds to the rotate gesture and if the corresponding UI control appears on the map.</summary>
      <returns>A value that specifies if the map responds to the rotate gesture and if the corresponding UI control appears on the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.RotateInteractionModeProperty">
      <summary>Identifies the RotateInteractionMode dependency property.</summary>
      <returns>Identifier for the RotateInteractionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Routes">
      <summary>Gets the collection of MapRouteView objects displayed on the map.</summary>
      <returns>The collection of MapRouteView objects displayed on the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.RoutesProperty">
      <summary>Identifies the Routes dependency property.</summary>
      <returns>The identifier for the Routes dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Scene">
      <summary>Gets or sets the MapScene associated with this MapControl.</summary>
      <returns>The MapScene associated with this MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.SceneProperty">
      <summary>Identifies the Scene dependency property.</summary>
      <returns>The identifier for the Scene dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.Style">
      <summary>Specifies the style of the map - for example, a road map or an aerial map.</summary>
      <returns>The style of the map - for example, a road map or an aerial map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.StyleProperty">
      <summary>Identifies the Style dependency property.</summary>
      <returns>The identifier for the Style dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.StyleSheet">
      <summary>Gets or sets an object that defines the style of the map control.</summary>
      <returns>An object that defines the style of the map control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.StyleSheetProperty">
      <summary>Identifies the StyleSheet dependency property.</summary>
      <returns>The identifier for the StyleSheet dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TargetCamera">
      <summary>Gets the MapCamera settings that define the final position of the camera.</summary>
      <returns>The MapCamera settings that define the final position of the camera.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TileSources">
      <summary>Gets or sets the collection of MapTileSource objects that are children of the MapControl.</summary>
      <returns>The collection of MapTileSource objects that are children of the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TileSourcesProperty">
      <summary>Identifies the TileSources dependency property.</summary>
      <returns>The identifier for the TileSources dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TiltInteractionMode">
      <summary>Gets or sets a value that indicates if the map responds to the tilt gesture and if the corresponding UI control appears on the map.</summary>
      <returns>A value that specifies if the map responds to the tilt gesture and if the corresponding UI control appears on the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TiltInteractionModeProperty">
      <summary>Identifies the TiltInteractionMode dependency property.</summary>
      <returns>Identifier for the TiltInteractionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrafficFlowVisible">
      <summary>Gets or sets a value that indicates whether traffic conditions are displayed on the map.</summary>
      <returns>**true** if traffic conditions are displayed on the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrafficFlowVisibleProperty">
      <summary>Identifies the TrafficFlowVisible dependency property.</summary>
      <returns>The identifier for the TrafficFlowVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransformOrigin">
      <summary>Gets or sets a point to which the logical center of the map is transformed.</summary>
      <returns>A point to which the logical center of the map is transformed. Use a value between 0 and 1 (but not 0 or 1) for the X and Y properties of the Point.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransformOriginProperty">
      <summary>Identifies the TransformOrigin dependency property.</summary>
      <returns>The identifier for the TransformOrigin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransitFeaturesEnabled">
      <summary>This property is not implemented.</summary>
      <returns>This property is not implemented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransitFeaturesEnabledProperty">
      <summary>This property is not implemented.</summary>
      <returns>This property is not implemented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransitFeaturesVisible">
      <summary>Gets or sets a value that indicates if transit features are displayed on the map.</summary>
      <returns>**true** if transit features are displayed on the map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransitFeaturesVisibleProperty">
      <summary>Identifies the TransitFeaturesVisible dependency property.</summary>
      <returns>The identifier for the TransitFeaturesVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ViewPadding">
      <summary>Gets or sets the padding inside a map control.</summary>
      <returns>The amount of space between the content of a MapControl and its Margin or Border. The default is a Thickness with values of 0 on all four sides.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ViewPaddingProperty">
      <summary>Identifies the ViewPadding dependency property.</summary>
      <returns>The identifier for the ViewPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.WatermarkMode">
      <summary>Gets or sets a value that determines when the watermark of the map is displayed.</summary>
      <returns>A value that determines when the watermark of the map is displayed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.WatermarkModeProperty">
      <summary>Identifies the WatermarkMode dependency property.</summary>
      <returns>The identifier for the WatermarkMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ZoomInteractionMode">
      <summary>Gets or sets a value that indicates if the map responds to the zoom gesture and if the corresponding UI control appears on the map.</summary>
      <returns>A value that specifies if the map responds to the zoom gesture and if the corresponding UI control appears on the map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ZoomInteractionModeProperty">
      <summary>Identifies the ZoomInteractionMode dependency property.</summary>
      <returns>Identifier for the ZoomInteractionMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ZoomLevel">
      <summary>Gets or sets the zoom level of the map, which is a value between 1 and 20 in 2D views.</summary>
      <returns>The zoom level of the map, which is a value between 1 and 20 in 2D views.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapControl.ZoomLevelProperty">
      <summary>Identifies the ZoomLevel dependency property.</summary>
      <returns>The identifier for the ZoomLevel dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.ActualCameraChanged">
      <summary>Occurs when the current position of the map's camera has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.ActualCameraChanging">
      <summary>Occurs when the current position of the map's camera changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.CenterChanged">
      <summary>Occurs when the value of the Center property of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.CustomExperienceChanged">
      <summary>Occurs when the custom experience of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.HeadingChanged">
      <summary>Occurs when the value of the Heading property of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.LoadingStatusChanged">
      <summary>Occurs when the value of the LoadingStatus property of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapContextRequested">
      <summary>Occurs when the user has completed a context input gesture on a map, such as a right-click.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapDoubleTapped">
      <summary>Occurs when the user double-taps the MapControl. An instance of MapInputEventArgs provides data for this event.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapElementClick">
      <summary>Occurs when the user taps or clicks a MapElement on the MapControl.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapElementPointerEntered">
      <summary>Occurs when a pointer moves into the bounding area of a MapElement on a MapControl.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapElementPointerExited">
      <summary>Occurs when a pointer moves out of the bounding area of a MapElement on a MapControl.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapHolding">
      <summary>Occurs when the user taps and holds on the MapControl. An instance of MapInputEventArgs provides data for this event.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapRightTapped">
      <summary>Occurs when the user presses-and-holds the MapControl or clicks on it using the right mouse button. An instance of MapRightTappedEventArgs provides data for this event.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.MapTapped">
      <summary>Occurs when the user taps the MapControl or clicks on it with the left mouse button. An instance of MapInputEventArgs provides data for this event.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.PitchChanged">
      <summary>Occurs when the value of the Pitch property of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.TargetCameraChanged">
      <summary>Occurs when the final position of the map's camera has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.TransformOriginChanged">
      <summary>Occurs when the value of the TransformOrigin property of the MapControl changes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapControl.ZoomLevelChanged">
      <summary>Occurs when the value of the ZoomLevel property of the MapControl changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.FindMapElementsAtOffset(Windows.Foundation.Point)">
      <summary>Retrieves the collection of MapElement objects at the specified point on the map.</summary>
      <param name="offset">The point on the map from which to retrieve the collection of MapElement objects.</param>
      <returns>The collection of MapElement objects at the specified point on the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.FindMapElementsAtOffset(Windows.Foundation.Point,System.Double)">
      <summary>Retrieves the collection of MapElement objects within the specified radius.</summary>
      <param name="offset">The point on the map that marks the center of a radius from which to retrieve the collection of MapElement objects.</param>
      <param name="radius">A number that's added to the offset to mark the edge of the radius.</param>
      <returns>The collection of MapElement objects within the specified radius.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetLocation(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the MapControl.Location XAML attached property from the specified child element of a MapControl. The location is the geographic location on the MapControl at which the MapControl.NormalizedAnchorPoint of the child element is positioned.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the MapControl.Location XAML attached property on the specified child element of a MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetLocationFromOffset(Windows.Foundation.Point,Windows.Devices.Geolocation.AltitudeReferenceSystem,Windows.Devices.Geolocation.Geopoint@)">
      <summary>Converts a point on the map to a geographic location by using the specified altitude reference system.</summary>
      <param name="offset">A point on the map to convert to a geographic location.</param>
      <param name="desiredReferenceSystem">The altitude reference system of the geographic point. A value of **Unspecified** for the altitude reference system has the same effect as using the default GetLocationFromOffset(Windows.Foundation.Point offset, Windows.Devices.Geolocation.Geopoint location) overload.</param>
      <param name="location">When this method returns, contains the corresponding geographic location.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetLocationFromOffset(Windows.Foundation.Point,Windows.Devices.Geolocation.Geopoint@)">
      <summary>Converts a point on the map to a geographic location.</summary>
      <param name="offset">A point on the map to convert to a geographic location.</param>
      <param name="location">When this method returns, contains the corresponding geographic location.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetNormalizedAnchorPoint(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the MapControl.NormalizedAnchorPoint XAML attached property from the specified child element of a MapControl. The anchor point is the point on the child element that is positioned at the point on the MapControl specified by the MapControl.Location attached property.</summary>
      <param name="element">The element from which to read the property value.</param>
      <returns>The value of the MapControl.NormalizedAnchorPoint XAML attached property on the specified child element of a MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetOffsetFromLocation(Windows.Devices.Geolocation.Geopoint,Windows.Foundation.Point@)">
      <summary>Converts a geographic location to a point on the map.</summary>
      <param name="location">A geographic location to convert to a point on the map.</param>
      <param name="offset">When this method returns, contains the corresponding point on the map.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.GetVisibleRegion(Microsoft.UI.Xaml.Controls.Maps.MapVisibleRegionKind)">
      <summary>Gets the visible region of the map control.</summary>
      <param name="region">The visible region kind.</param>
      <returns>The geopath indicating the visible region of the map control. The returned value can be null when a valid visible region cannot be calculated.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.IsLocationInView(Windows.Devices.Geolocation.Geopoint,System.Boolean@)">
      <summary>Determines whether the specified geographic location is located in the portion of the map currently visible in the MapControl.</summary>
      <param name="location">A geographic location.</param>
      <param name="isInView">When this method returns, contains **true** if the specified geographic location is located in the portion of the map currently visible in the MapControl; otherwise, contains **false**.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.SetLocation(Microsoft.UI.Xaml.DependencyObject,Windows.Devices.Geolocation.Geopoint)">
      <summary>Sets the value of the MapControl.Location XAML attached property on the specified child element of a MapControl. The location is the geographic location on the MapControl at which the MapControl.NormalizedAnchorPoint of the child element is positioned.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="value">The value of the MapControl.Location XAML attached property to set on the specified child element of a MapControl.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.SetNormalizedAnchorPoint(Microsoft.UI.Xaml.DependencyObject,Windows.Foundation.Point)">
      <summary>Sets the value of the MapControl.NormalizedAnchorPoint XAML attached property on the specified child element of a MapControl. The anchor point is the point on the child element that is positioned at the point on the MapControl specified by the MapControl.Location attached property.</summary>
      <param name="element">The element on which to set the property value.</param>
      <param name="value">The value of the MapControl.NormalizedAnchorPoint XAML attached property to set on the specified child element of a MapControl.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StartContinuousPan(System.Double,System.Double)">
      <summary>Starts an asynchronous operation to pan the map continuously from its current position.</summary>
      <param name="horizontalPixelsPerSecond">The pixels per second to pan horizontally.</param>
      <param name="verticalPixelsPerSecond">The pixels per second to pan vertically.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StartContinuousRotate(System.Double)">
      <summary>Starts an asynchronous operation to rotate the map's camera continuously from its current position.</summary>
      <param name="rateInDegreesPerSecond">The degrees that the map's camera rotates per second in a horizontal clockwise direction.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StartContinuousTilt(System.Double)">
      <summary>Starts an asynchronous operation to tilt the map's camera continuously from its current position.</summary>
      <param name="rateInDegreesPerSecond">The degrees of Pitch that the map's camera tilts down to the ground per second.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StartContinuousZoom(System.Double)">
      <summary>Starts an asynchronous operation to zoom in continuously until the map's maximum ZoomLevel is reached.</summary>
      <param name="rateOfChangePerSecond">The change in ZoomLevel per second.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StopContinuousPan">
      <summary>Stops an asynchronous operation to pan the map continuously from its current position.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StopContinuousRotate">
      <summary>Stops an asynchronous operation to rotate the map's camera continuously from its current position.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StopContinuousTilt">
      <summary>Stops an asynchronous operation to tilt the map's camera continuously from its current position.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.StopContinuousZoom">
      <summary>Stops an asynchronous operation to zoom in continuously until the map's maximum ZoomLevel is reached.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryGetLocationFromOffset(Windows.Foundation.Point,Windows.Devices.Geolocation.AltitudeReferenceSystem,Windows.Devices.Geolocation.Geopoint@)">
      <summary>Converts a point on the map to a geographic location by using the specified altitude reference system.</summary>
      <param name="offset">A point on the map to convert to a geographic location.</param>
      <param name="desiredReferenceSystem">The altitude reference system of the geographic point. A value of **Unspecified** for the altitude reference system has the same effect as using the default TryGetLocationFromOffset(Windows.Foundation.Point offset, Windows.Devices.Geolocation.Geopoint location) overload.</param>
      <param name="location">When this method returns, contains the corresponding geographic location.</param>
      <returns>Returns **true** if the location is invalid; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryGetLocationFromOffset(Windows.Foundation.Point,Windows.Devices.Geolocation.Geopoint@)">
      <summary>Converts a point on the map to a geographic location.</summary>
      <param name="offset">A point on the map to convert to a geographic location.</param>
      <param name="location">When this method returns, contains the corresponding geographic location.</param>
      <returns>Returns **true** if the location is invalid; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryPanAsync(System.Double,System.Double)">
      <summary>Starts an asynchronous operation to pan the map from its current position.</summary>
      <param name="horizontalPixels">The pixels to pan horizontally.</param>
      <param name="verticalPixels">The pixels to pan vertically.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryPanToAsync(Windows.Devices.Geolocation.Geopoint)">
      <summary>Starts an asynchronous operation to pan the map to a specific location.</summary>
      <param name="location">The coordinates of a geographic location to which you want to pan the map.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryRotateAsync(System.Double)">
      <summary>Starts an asynchronous operation to rotate the map's camera from its current position.</summary>
      <param name="degrees">The degrees that the map's camera rotates in a horizontal clockwise direction.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryRotateToAsync(System.Double)">
      <summary>Starts an asynchronous operation to rotate the map's camera to a specific orientation.</summary>
      <param name="angleInDegrees">The final Heading of the map's camera, in degrees.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetSceneAsync(Microsoft.UI.Xaml.Controls.Maps.MapScene)">
      <summary>Sets the scene of the map displayed in the MapControl using the specified scene.</summary>
      <param name="scene">Defines the item or area to appear in the map.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetSceneAsync(Microsoft.UI.Xaml.Controls.Maps.MapScene,Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind)">
      <summary>Sets the scene of the map displayed in the MapControl using the specified scene and animation.</summary>
      <param name="scene">Defines the item or area to appear in the map.</param>
      <param name="animationKind">Specifies the animation to use when you change the scene of the map.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetViewAsync(Windows.Devices.Geolocation.Geopoint)">
      <summary>Sets the view of the map displayed in the MapControl using the specified center.</summary>
      <param name="center">The center to use in the view. For more info, see the Center property.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetViewAsync(Windows.Devices.Geolocation.Geopoint,Windows.Foundation.IReference{System.Double})">
      <summary>Sets the view of the map displayed in the MapControl using the specified center and zoom level.</summary>
      <param name="center">The center to use in the view. For more info, see the Center property.</param>
      <param name="zoomLevel">The zoom level to use in the view. For more info, see the ZoomLevel property.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetViewAsync(Windows.Devices.Geolocation.Geopoint,Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double})">
      <summary>Sets the view of the map displayed in the MapControl using the specified center, zoom level, heading, and pitch.</summary>
      <param name="center">The center to use in the view. For more info, see the Center property.</param>
      <param name="zoomLevel">The zoom level to use in the view. For more info, see the ZoomLevel property.</param>
      <param name="heading">The heading to use in the view. For more info, see the Heading property.</param>
      <param name="desiredPitch">The pitch to use in the view. For more info, see the DesiredPitch property.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetViewAsync(Windows.Devices.Geolocation.Geopoint,Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double},Windows.Foundation.IReference{System.Double},Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind)">
      <summary>Sets the view of the map displayed in the MapControl  using the specified center, zoom level, heading, and pitch. The view change uses the specified animation.</summary>
      <param name="center">The center to use in the view. For more info, see the Center property.</param>
      <param name="zoomLevel">The zoom level to use in the view. For more info, see the ZoomLevel property.</param>
      <param name="heading">The heading to use in the view. For more info, see the Heading property.</param>
      <param name="desiredPitch">The pitch to use in the view. For more info, see the DesiredPitch property.</param>
      <param name="animation">The animation to use when changing the view. For more info, see MapAnimationKind.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TrySetViewBoundsAsync(Windows.Devices.Geolocation.GeoboundingBox,Windows.Foundation.IReference{Microsoft.UI.Xaml.Thickness},Microsoft.UI.Xaml.Controls.Maps.MapAnimationKind)">
      <summary>Sets the view of the map displayed in the MapControl to the contents of the specified GeoboundingBox with the specified margin. The view change uses the specified animation.</summary>
      <param name="bounds">The geographic area to display in the view.</param>
      <param name="margin">The margin to use in the view.</param>
      <param name="animation">The animation to use when changing the view. For more info, see MapAnimationKind.</param>
      <returns>**true** if the asynchronous operation succeeded; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryTiltAsync(System.Double)">
      <summary>Starts an asynchronous operation to tilt the map's camera from its current position.</summary>
      <param name="degrees">The degrees of Pitch that the map's camera tilts down to the ground.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryTiltToAsync(System.Double)">
      <summary>Starts an asynchronous operation to tilt the map's camera to a specific orientation.</summary>
      <param name="angleInDegrees">The final Pitch of the map's camera in degrees.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryZoomInAsync">
      <summary>Starts an asynchronous operation to zoom in, increasing the map's ZoomLevel by one.</summary>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryZoomOutAsync">
      <summary>Starts an asynchronous operation to zoom out, decreasing the map's ZoomLevel by one.</summary>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapControl.TryZoomToAsync(System.Double)">
      <summary>Starts an asynchronous operation to zoom the map to a specific ZoomLevel.</summary>
      <param name="zoomLevel">The final zoom level of the map, between 1 and 20.</param>
      <returns>Contains the results of the operation: **true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapCustomExperience">
      <summary>Represents a custom experience for the MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCustomExperience.#ctor">
      <summary>This API is for internal use only. Use StreetsideExperience to create a street-level views.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs">
      <summary>Provides data for the CustomExperienceChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapCustomExperienceChangedEventArgs class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElement">
      <summary>Represents an element displayed on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElement.#ctor">
      <summary>Initializes a new instance of the MapElement class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.IsEnabled">
      <summary>Indicates whether users can interact with the MapElement.</summary>
      <returns>**true** if users can interact with the MapElement; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.IsEnabledProperty">
      <summary>Identifies the IsEnabled dependency property.</summary>
      <returns>Identifier for the IsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntry">
      <summary>Gets or sets the name of an entry in the map's style sheet that you'd like to apply to this MapElement.</summary>
      <returns>The name of the entry in the map's style sheet that you'd like to apply to this MapElement. This name may be an existing map element (see remarks) that acts like an existing base map element of that type. Or the name may be an extension that is not used by the base map but is set by the style sheet creator and can be changed without affecting the base map (see the example code).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntryProperty">
      <summary>Identifies for the MapStyleSheetEntry dependency property.</summary>
      <returns>Identifier for the MapStyleSheetEntry dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntryState">
      <summary>Gets or sets the name of the state of this MapElement. If the style sheet defines a style for that state, that style is applied to this element. Values defined in the style sheet for the state override values defined in the MapStyleSheetEntry.</summary>
      <returns>The name of the state of this MapElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntryStateProperty">
      <summary>Identifies for the MapStyleSheetEntryState dependency property.</summary>
      <returns>Identifier for the MapStyleSheetEntryState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapTabIndex">
      <summary>Gets or sets a value that determines the order in which elements of the MapControl receive focus when the user navigates through those elements by pressing the Tab key.</summary>
      <returns>A value that determines the order of logical navigation across elements in a MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.MapTabIndexProperty">
      <summary>Identifies the MapTabIndex dependency property.</summary>
      <returns>The identifier for the MapTabIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.Tag">
      <summary>Gets or sets an arbitrary object value that can be used to store custom information about this object.</summary>
      <returns>An arbitrary object value that can be used to store custom information about this object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.TagProperty">
      <summary>Identifies the Tag dependency property.</summary>
      <returns>The Tag dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.Visible">
      <summary>Gets or sets a value that indicates whether the MapElement is visible on the MapControl.</summary>
      <returns>**true** if the MapElement is visible on the MapControl; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
      <returns>The identifier for the Visible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.ZIndex">
      <summary>Gets or sets the z-index of the MapElement. A MapElement with a higher z-index is displayed on top of a MapElement with a lower z-index.</summary>
      <returns>The z-index of the MapElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement.ZIndexProperty">
      <summary>Identifies the ZIndex dependency property.</summary>
      <returns>The identifier for the ZIndex dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElement3D">
      <summary>Represents a 3D element displayed on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.#ctor">
      <summary>Creates a MapElement3D instance.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Heading">
      <summary>Gets or sets the directional heading of the 3D map element in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West.</summary>
      <returns>The directional heading of the map in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.HeadingProperty">
      <summary>Identifies the Heading dependency property.</summary>
      <returns>The Heading dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Location">
      <summary>Gets or sets the geographic location of the MapElement3D on the MapControl. .</summary>
      <returns>The geographic location of the MapElement3D on the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.LocationProperty">
      <summary>Identifies the LocationProperty dependency property.</summary>
      <returns>The LocationProperty dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Model">
      <summary>Gets or sets the 3D model that represents a 3D object.</summary>
      <returns>the 3D model that represents a 3D object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Pitch">
      <summary>Gets or sets a value that indicates by how many degrees you want the 3D map element to be tilted. A value of 0 is looking out at the horizon and a value of -90 is looking straight down. A value of 90 is looking straight up. The default value is 0.</summary>
      <returns>A value that indicates by how many degrees you want the 3D map element to be tilted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.PitchProperty">
      <summary>Identifies the Pitch dependency property.</summary>
      <returns>The Pitch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Roll">
      <summary>Gets or sets the roll of the 3D map element in degrees, where -90 is tilting to the left and +90 is tilting to the right.</summary>
      <returns>The roll of the 3D map element in degrees, where -90 is tilting to the left and +90 is tilting to the right.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.RollProperty">
      <summary>Identifies the Pitch dependency property.</summary>
      <returns>The Pitch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.Scale">
      <summary>The scale to apply to the 3D map element.</summary>
      <returns>The scale to apply to the 3D map element. A value of Vector3 (1.0,1.0,1.0) is equivalent to 100%.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElement3D.ScaleProperty">
      <summary>Identifies the Roll dependency property.</summary>
      <returns>The Roll dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementClickEventArgs">
      <summary>Provides data for the MapElementClick event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementClickEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementClickEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementClickEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapControl received user input.</summary>
      <returns>The geographic location that corresponds to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementClickEventArgs.MapElements">
      <summary>Gets a list of map elements that correspond to where the MapControl received user input.</summary>
      <returns>A list of map elements that correspond to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementClickEventArgs.Position">
      <summary>Gets the physical position on the MapControl where it received user input.</summary>
      <returns>The physical position on the MapControl where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementCollisionBehavior">
      <summary>Specifies the behavior of a MapIcon when it collides with other map features due to zoom level.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapElementCollisionBehavior.Hide">
      <summary>Hide the MapIcon when it collides with other map features.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapElementCollisionBehavior.RemainVisible">
      <summary>Show the MapIcon at all zoom levels.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs">
      <summary>Provides data for the MapElementPointerEntered event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementPointerEnteredEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapControl received user input.</summary>
      <returns>The geographic location that corresponds to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs.MapElement">
      <summary>Gets the map element that correspond to where the MapControl received user input.</summary>
      <returns>The map element that correspond to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs.Position">
      <summary>Gets the physical position on the MapControl where it received user input.</summary>
      <returns>The physical position on the MapControl where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs">
      <summary>Provides data for the MapElementPointerExited event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementPointerExitedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapControl received user input.</summary>
      <returns>The geographic location that corresponds to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs.MapElement">
      <summary>Gets the map element that correspond to where the MapControl received user input.</summary>
      <returns>The map element that correspond to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs.Position">
      <summary>Gets the physical position on the MapControl where it received user input.</summary>
      <returns>The physical position on the MapControl where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer">
      <summary>Represents a collection of map elements to which you can bind data and manipulate independently of other map elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.#ctor">
      <summary>Creates a MapElementsLayer instance.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapElements">
      <summary>Gets the collection of MapElement objects that are children of the MapElementsLayer.</summary>
      <returns>The collection of MapElement objects that are children of the MapElementsLayer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapElementsProperty">
      <summary>Identifies the MapElements dependency property.</summary>
      <returns>The MapElements dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapContextRequested">
      <summary>Occurs when the user has completed a context input gesture on a map layer, such as a right-click.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapElementClick">
      <summary>Occurs when the user taps or clicks a MapElement that has been add to the MapElementsLayer.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapElementPointerEntered">
      <summary>Occurs when a pointer moves into the bounding area of a MapElement on a MapElementsLayer.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayer.MapElementPointerExited">
      <summary>Occurs when a pointer moves out of the bounding area of a MapElement on a MapElementsLayer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs">
      <summary>Provides data for the MapElementClick event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementsLayerClickEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapElementsLayer received user input.</summary>
      <returns>The geographic location that corresponds to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs.MapElements">
      <summary>Gets a list of map elements that correspond to where the MapElementsLayer received user input.</summary>
      <returns>A list of map elements that correspond to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs.Position">
      <summary>Gets the physical position on the MapElementsLayer where it received user input.</summary>
      <returns>The physical position on the MapElementsLayer where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs">
      <summary>Provides event data for the MapContextRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementsLayerContextRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs.Location">
      <summary>Gets a geolocation on the map layer of a context input gesture, such as a right-click.</summary>
      <returns>The geolocation on the map layer of a context input gesture, such as a right-click.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs.MapElements">
      <summary>Gets a collection of MapElement objects at the point on the map layer specified by the Location property.</summary>
      <returns>A collection of MapElement objects at the point on the map layer specified by the Location property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs.Position">
      <summary>Gets the x- and y-coordinate values that define the point on the map layer of a context input gesture, such as a right-click.</summary>
      <returns>The x- and y-coordinate values that define the point on the map layer of a context input gesture, such as a right-click.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs">
      <summary>Provides data for the MapElementPointerEntered event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementsLayerPointerEnteredEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapElementsLayer received user input.</summary>
      <returns>The geographic location that corresponds to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs.MapElement">
      <summary>Gets the map element that correspond to where the MapElementsLayer received user input.</summary>
      <returns>The map element that correspond to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs.Position">
      <summary>Gets the physical position on the MapElementsLayer where it received user input.</summary>
      <returns>The physical position on the MapElementsLayer where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs">
      <summary>Provides data for the MapElementPointerExited event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapElementsLayerPointerExitedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapElementsLayer received user input.</summary>
      <returns>The geographic location that corresponds to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs.MapElement">
      <summary>Gets the map element that correspond to where the MapElementsLayer received user input.</summary>
      <returns>The map element that correspond to where the MapElementsLayer received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs.Position">
      <summary>Gets the physical position on the MapElementsLayer where it received user input.</summary>
      <returns>The physical position on the MapElementsLayer where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapIcon">
      <summary>Displays an image such as a pushpin with optional text on a MapControl. Use the default image or provide a custom image.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapIcon.#ctor">
      <summary>Initializes a new instance of the MapIcon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.CollisionBehaviorDesired">
      <summary>Gets or sets the behavior of a MapIcon when it collides with other map features due to zoom level.</summary>
      <returns>The behavior of a MapIcon when it collides with other map features due to zoom level.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.CollisionBehaviorDesiredProperty">
      <summary>Identifies the CollisionBehaviorDesired dependency property.</summary>
      <returns>Identifier for the CollisionBehaviorDesired dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.Image">
      <summary>Gets or sets the image for the MapIcon. Provide an optional custom image to replace the default point of interest (POI) image.</summary>
      <returns>The point of interest (POI) image for the MapIcon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.Location">
      <summary>Gets or sets the geographic location of the MapIcon on the MapControl. The location is the geographic location on the MapControl at which the NormalizedAnchorPoint of the MapIcon is positioned.</summary>
      <returns>The geographic location of the MapIcon on the MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.LocationProperty">
      <summary>Identifies the Location dependency property.</summary>
      <returns>The identifier for the Location dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.NormalizedAnchorPoint">
      <summary>Gets or sets the anchor point of the MapIcon. The anchor point is the point on the MapIcon that is positioned at the point on the MapControl specified by the Location property.</summary>
      <returns>The anchor point of the MapIcon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.NormalizedAnchorPointProperty">
      <summary>Identifies the NormalizedAnchorPoint dependency property.</summary>
      <returns>The identifier for the NormalizedAnchorPoint dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.Title">
      <summary>Gets or sets the optional text of the MapIcon.</summary>
      <returns>The title of the MapIcon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapIcon.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
      <returns>The identifier for the Title dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapInputEventArgs">
      <summary>Provides data about user input for the MapTapped, MapDoubleTapped, and MapHolding events of the MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapInputEventArgs.#ctor">
      <summary>Initializes a new instance of the MapInputEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapInputEventArgs.Location">
      <summary>Gets the geographic location on the MapControl that received user input.</summary>
      <returns>The geographic location on the MapControl that received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapInputEventArgs.Position">
      <summary>Gets the physical location on the MapControl that received user input.</summary>
      <returns>The physical location on the MapControl that received user input.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode">
      <summary>Specifies if the map responds to a touch gesture and if the corresponding UI control appears on the map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.Auto">
      <summary>Map UI control, mouse, keyboard, pen, and touch input are enabled based on the type of device that your app is running on.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.ControlOnly">
      <summary>Map responds to the UI control only; the corresponding touch input is disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.Disabled">
      <summary>Map UI control and touch input are disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.GestureAndControl">
      <summary>Map UI control and touch input are enabled. Pointer and keyboard are not.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.GestureOnly">
      <summary>Map responds to touch input only; the corresponding UI control is not visible. Use PointerAndKeyboard, if you want all forms of pointer input.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.PointerAndKeyboard">
      <summary>Map responds to mouse, pen, touch and keyboard.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.PointerKeyboardAndControl">
      <summary>All forms of input are enabled including mouse, pen, touch, keyboard, and Map UI control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapInteractionMode.PointerOnly">
      <summary>Map responds to mouse, pen, or touch only.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl">
      <summary>Contains a collection of XAML controls to be displayed on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.#ctor">
      <summary>Initializes a new instance of the MapItemsControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.Items">
      <summary>Gets a collection of XAML controls to be displayed on a MapControl.</summary>
      <returns>A collection of XAML controls to be displayed on a MapControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.ItemsSource">
      <summary>Gets or sets a source that provides the content of the MapItemsControl.</summary>
      <returns>A source that provides the content of the MapItemsControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each item.</summary>
      <returns>The DataTemplate used to display each item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapItemsControl.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapLayer">
      <summary>Represents a collection of map data to which you can bind data and manipulate independently of other map types of map data.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapLayer.#ctor">
      <summary>Creates a MapLayer instance.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.MapTabIndex">
      <summary>Gets or sets a value that determines the order in which objects of the MapLayer receive focus when the user navigates through those elements by pressing the Tab key.</summary>
      <returns>A value that determines the order of logical navigation across elements in a MapLayer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.MapTabIndexProperty">
      <summary>Identifies the MapTagIndex dependency property.</summary>
      <returns>The MapTagIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.Visible">
      <summary>Gets or sets a value that indicates whether the MapLayer is visible on the MapControl.</summary>
      <returns>**true** if the MapLayer is visible on the MapControl; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
      <returns>The Visible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.ZIndex">
      <summary>Gets or sets the z-index of the MapLayer. A MapLayer with a higher z-index is displayed on top of a MapLayer with a lower z-index.</summary>
      <returns>The z-index of the MapLayer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapLayer.ZIndexProperty">
      <summary>Identifies the ZIndex dependency property.</summary>
      <returns>The ZIndex dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapLoadingStatus">
      <summary>Specifies the LoadingStatus of the MapControl.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapLoadingStatus.DataUnavailable">
      <summary>Map data is unavailable.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapLoadingStatus.DownloadedMapsManagerUnavailable">
      <summary>Downloaded maps manager is unavailable</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapLoadingStatus.Loaded">
      <summary>The map is loaded.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapLoadingStatus.Loading">
      <summary>The map is loading.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapModel3D">
      <summary>Represents a 3D object to show on a map.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapModel3D.#ctor">
      <summary>Creates an instance of a MapElement3D.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapModel3D.CreateFrom3MFAsync(Windows.Storage.Streams.IRandomAccessStreamReference)">
      <summary>Creates an instance of a MapModel3D by importing a 3D object from a 3D Manufacturing Format (3MF) file.</summary>
      <param name="source">A 3D Manufacturing Format (3MF) file file that describes a 3D object.</param>
      <returns>A 3D model object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapModel3D.CreateFrom3MFAsync(Windows.Storage.Streams.IRandomAccessStreamReference,Microsoft.UI.Xaml.Controls.Maps.MapModel3DShadingOption)">
      <summary>Creates an instance of a MapModel3D by importing a 3D object from a 3D Manufacturing Format (3MF) file.</summary>
      <param name="source">A 3D Manufacturing Format (3MF) file file that describes a 3D object.</param>
      <param name="shadingOption">The type of shading that you would like to appear for the object.</param>
      <returns>A 3D model object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapModel3DShadingOption">
      <summary>Specifies the type of shading that you want to appear for 3D objects.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapModel3DShadingOption.Default">
      <summary>The vertex normals of the imported 3D model or flat shading if that data is not available.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapModel3DShadingOption.Flat">
      <summary>Flat shading.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapModel3DShadingOption.Smooth">
      <summary>Smooth shading.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapPanInteractionMode">
      <summary>Specifies if the pan gesture is recognized on the map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapPanInteractionMode.Auto">
      <summary>Panning touch gestures are recognized on the map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapPanInteractionMode.Disabled">
      <summary>Panning touch gestures are not recognized on the map.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapPolygon">
      <summary>Represents a polygon on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.#ctor">
      <summary>Initializes a new instance of the MapPolygon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.FillColor">
      <summary>Gets or sets the color used to fill the MapPolygon.</summary>
      <returns>The color to be used to fill the MapPolygon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.Path">
      <summary>Gets or sets the collection of coordinates that define the MapPolygon shape.</summary>
      <returns>The collection of coordinates that define the MapPolygon shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.PathProperty">
      <summary>Identifies the Path dependency property.</summary>
      <returns>The identifier for the Path dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.Paths">
      <summary>Gets a list of Geopath objects that define the MapPolygon shape.</summary>
      <returns>A list of Geopath objects that define the MapPolygon shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.StrokeColor">
      <summary>Gets or sets the color used to draw the MapPolygon.</summary>
      <returns>The color to be used to draw the MapPolygon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.StrokeDashed">
      <summary>Gets or sets a value that indicates whether the line used to draw the MapPolygon is dashed.</summary>
      <returns>**true** if the line used for drawing the MapPolygon is dashed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.StrokeDashedProperty">
      <summary>Identifies the StrokeDashed dependency property.</summary>
      <returns>The identifier for the StrokeDashed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.StrokeThickness">
      <summary>Gets or sets the width of the line used to draw the MapPolygon, in logical pixels.</summary>
      <returns>The width of the line used to draw the MapPolygon, in logical pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolygon.StrokeThicknessProperty">
      <summary>Identifies the StrokeThickness dependency property.</summary>
      <returns>The identifier for the StrokeThickness dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapPolyline">
      <summary>Represents a polyline on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.#ctor">
      <summary>Initializes a new instance of the MapPolyline class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.Path">
      <summary>Gets or sets the collection of coordinates that define the MapPolyline shape.</summary>
      <returns>The collection of coordinates that define the MapPolyline shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.PathProperty">
      <summary>Identifies the Path dependency property.</summary>
      <returns>The identifier for the Path dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.StrokeColor">
      <summary>Gets or sets the color used to draw the MapPolyline.</summary>
      <returns>The color to be used to draw the MapPolyline.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.StrokeDashed">
      <summary>Gets or sets a value that indicates whether the line used to draw the MapPolyline is dashed.</summary>
      <returns>**true** if the line used for drawing the MapPolyline is dashed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.StrokeDashedProperty">
      <summary>Identifies the StrokeDashed dependency property.</summary>
      <returns>The identifier for the StrokeDashed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapPolyline.StrokeThickness">
      <summary>Gets or sets the width of the line used to draw the MapPolyline, in logical pixels.</summary>
      <returns>The width of the line used to draw the MapPolyline, in logical pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapProjection">
      <summary>Specifies how to transform the latitudes and longitudes of the map</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapProjection.Globe">
      <summary>Globe projection. World map appears as a globe that can be rotated.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapProjection.WebMercator">
      <summary>The Web Mercator projection. World map appears as a flat surface.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapRightTappedEventArgs">
      <summary>Provides data for the MapRightTapped event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapRightTappedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapRightTappedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapRightTappedEventArgs.Location">
      <summary>Gets the geographic location that corresponds to where the MapControl received user input.</summary>
      <returns>The geographic location that corresponds to where the MapControl received user input.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapRightTappedEventArgs.Position">
      <summary>Gets the physical position on the MapControl where it received user input.</summary>
      <returns>The physical position on the MapControl where it received user input, in terms of X and Y coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapRouteView">
      <summary>Displays a MapRoute on a MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapRouteView.#ctor(Windows.Services.Maps.MapRoute)">
      <summary>Initializes a new instance of the MapRouteView class with the specified MapRoute.</summary>
      <param name="route">The route to display on the map.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapRouteView.OutlineColor">
      <summary>Gets or sets the color of the outline of the route displayed in the MapRouteView.</summary>
      <returns>The color of the outline of the route displayed in the MapRouteView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapRouteView.Route">
      <summary>Gets the MapRoute displayed by the MapRouteView.</summary>
      <returns>The MapRoute displayed by the MapRouteView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapRouteView.RouteColor">
      <summary>Gets or sets the color of the route displayed in the MapRouteView.</summary>
      <returns>The color of the route displayed in the MapRouteView.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapScene">
      <summary>Represents a view of a map.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapScene.TargetCamera">
      <summary>Gets the MapCamera settings that define the final position of the camera.</summary>
      <returns>The MapCamera settings that define the final position of the camera.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Maps.MapScene.TargetCameraChanged">
      <summary>Occurs when the final position of the map's camera has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromBoundingBox(Windows.Devices.Geolocation.GeoboundingBox)">
      <summary>Creates a scene to appear in a map based on a four-sided geographic area.</summary>
      <param name="bounds">The four-sided geographic area to appear in the scene.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromBoundingBox(Windows.Devices.Geolocation.GeoboundingBox,System.Double,System.Double)">
      <summary>Creates a scene to appear in a map based on a four-sided geographic area, heading, and pitch.</summary>
      <param name="bounds">The four-sided geographic area to appear in the scene.</param>
      <param name="headingInDegrees">The directional heading of the map's camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromCamera(Microsoft.UI.Xaml.Controls.Maps.MapCamera)">
      <summary>Creates a scene to appear in a map based on the position of the specified MapCamera.</summary>
      <param name="camera">The current position of the specified camera.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocation(Windows.Devices.Geolocation.Geopoint)">
      <summary>Creates a scene to appear in a map based on a single geographic location.</summary>
      <param name="location">The center of the scene.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocation(Windows.Devices.Geolocation.Geopoint,System.Double,System.Double)">
      <summary>Creates a scene to appear in a map based on a single geographic location, heading, and pitch.</summary>
      <param name="location">The center of the scene.</param>
      <param name="headingInDegrees">The directional heading of the map's camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocationAndRadius(Windows.Devices.Geolocation.Geopoint,System.Double)">
      <summary>Creates a scene to appear in a map based on a single geographic location and radius.</summary>
      <param name="location">The center of the scene.</param>
      <param name="radiusInMeters">The radius around the center to appear in the scene, in meters.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocationAndRadius(Windows.Devices.Geolocation.Geopoint,System.Double,System.Double,System.Double)">
      <summary>Creates a scene to appear in a map based on a single geographic location, radius, heading, and pitch.</summary>
      <param name="location">The center of the scene.</param>
      <param name="radiusInMeters">The radius around the center to appear in the scene, in meters.</param>
      <param name="headingInDegrees">The directional heading of the map's camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocations(Windows.Foundation.Collections.IIterable{Windows.Devices.Geolocation.Geopoint})">
      <summary>Creates a scene to appear in a map based on multiple geographic locations.</summary>
      <param name="locations">The locations to appear in the scene.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapScene.CreateFromLocations(Windows.Foundation.Collections.IIterable{Windows.Devices.Geolocation.Geopoint},System.Double,System.Double)">
      <summary>Creates a scene to appear in a map based on multiple geographic locations, a heading, and pitch.</summary>
      <param name="locations">The locations to appear in the scene.</param>
      <param name="headingInDegrees">The directional heading of the map's camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 0.</param>
      <returns>Represents a view of a map in the MapControl.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapStyle">
      <summary>Specifies the Style of the MapControl.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Aerial">
      <summary>An aerial map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Aerial3D">
      <summary>An aerial 3D map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Aerial3DWithRoads">
      <summary>A hybrid map that combines an aerial 3D map with roads.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.AerialWithRoads">
      <summary>A hybrid map that combines an aerial map with roads.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Custom">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.None">
      <summary>A style is not specified.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Road">
      <summary>A road map.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapStyle.Terrain">
      <summary>A terrain map.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet">
      <summary>Represents a set of rules that define the style of the map in a map control. This class provides methods to:</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.Aerial">
      <summary>Gets a MapStyleSheet that presents an aerial view of the map.</summary>
      <returns>A MapStyleSheet that presents an aerial view of the map.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.AerialWithOverlay">
      <summary>Gets a MapStyleSheet that presents a hybrid map that combines an aerial map with roads.</summary>
      <returns>A MapStyleSheet that presents a hybrid map that combines an aerial map with roads.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.Combine(Windows.Foundation.Collections.IIterable{Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet})">
      <summary>Combines the rules defined in two MapStyleSheet instances.</summary>
      <param name="styleSheets">The MapStyleSheet instances that you want to combine.</param>
      <returns>A MapStyleSheet instance that contains the combined rules defined in each MapStyleSheet instance that you passed to the *styleSheets* parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.ParseFromJson(System.String)">
      <summary>Creates a stylesheet by parsing a JSON markup string that defines a set of custom rules.</summary>
      <param name="styleAsJson">A JSON markup string that defines a set of custom rules.</param>
      <returns>A MapStyleSheet that represents the rules defined in JSON markup string.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.RoadDark">
      <summary>Gets a MapStyleSheet that presents a road map with a dark theme.</summary>
      <returns>A MapStyleSheet that presents a road map with a dark theme.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.RoadHighContrastDark">
      <summary>Gets a MapStyleSheet styles the map with a high contrast dark theme.</summary>
      <returns>A MapStyleSheet styles the map with a high contrast dark theme.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.RoadHighContrastLight">
      <summary>Gets a MapStyleSheet styles the map with a high contrast light theme.</summary>
      <returns>A MapStyleSheet styles the map with a high contrast light theme.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.RoadLight">
      <summary>Gets a MapStyleSheet that presents a road map with a light theme.</summary>
      <returns>A MapStyleSheet that presents a road map with a light theme.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet.TryParseFromJson(System.String,Microsoft.UI.Xaml.Controls.Maps.MapStyleSheet@)">
      <summary>Creates stylesheet by parsing a JSON markup string that defines a set of custom rules.</summary>
      <param name="styleAsJson">A JSON markup string that defines a set of custom rules.</param>
      <param name="styleSheet">The MapStyleSheet that will represent the rules defined in JSON markup string.</param>
      <returns>**true** if the operation completed successfully; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries">
      <summary>Provides the names of JavaScript Object Notation (JSON) supported style entries in the map style sheet.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.AdminDistrict">
      <summary>Gets the JSON entry name that represents admin1, states, provinces, etc.</summary>
      <returns>The JSON entry name that represents admin1, states, provinces, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.AdminDistrictCapital">
      <summary>Gets the JSON entry name for icons that represent the capital of a state or province.</summary>
      <returns>The JSON entry name for icons that represent the capital of a state or province.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Airport">
      <summary>Gets the JSON entry name that represents areas that encompass an airport.</summary>
      <returns>The JSON entry name that represents areas that encompass an airport.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Area">
      <summary>Gets the JSON entry name that represents areas of land use.</summary>
      <returns>The JSON entry name that represents areas of land use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.ArterialRoad">
      <summary>Gets the JSON entry name for lines that represent main roads with heavy traffic.</summary>
      <returns>The JSON entry name for lines that represent main roads with heavy traffic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Building">
      <summary>Gets the JSON entry name that represents a building.</summary>
      <returns>The JSON entry name that represents a building.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Business">
      <summary>Gets the JSON entry name that represents restaurants, hospitals, schools, etc.</summary>
      <returns>The JSON entry name that represents restaurants, hospitals, schools, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Capital">
      <summary>Gets the JSON entry name for icons that represent the capital of a populated place.</summary>
      <returns>The JSON entry name for icons that represent the capital of a populated place.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Cemetery">
      <summary>Gets the JSON entry name that represents areas of cemeteries.</summary>
      <returns>The JSON entry name that represents areas of cemeteries.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Continent">
      <summary>Gets the JSON entry name that represents areas of entire continents.</summary>
      <returns>The JSON entry name that represents areas of entire continents.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.ControlledAccessHighway">
      <summary>Gets the JSON entry name for lines that represent highways with restricted access.</summary>
      <returns>The JSON entry name for lines that represent highways with restricted access.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.CountryRegion">
      <summary>Gets the JSON entry name that represents a country.</summary>
      <returns>The JSON entry name that represents a country.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.CountryRegionCapital">
      <summary>Gets the JSON entry name for icons that represent the capital of a country or region.</summary>
      <returns>The JSON entry name for icons that represent the capital of a country or region.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.District">
      <summary>Gets the JSON entry name that represents admin2, counties, etc.</summary>
      <returns>The JSON entry name that represents admin2, counties, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.DrivingRoute">
      <summary>Gets the JSON entry name that represents a driving route.</summary>
      <returns>The JSON entry name that represents a driving route.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Education">
      <summary>Gets the JSON entry name that represents areas of schools.</summary>
      <returns>The JSON entry name that represents areas of schools.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.EducationBuilding">
      <summary>Gets the JSON entry name that represents an educational building such as a school.</summary>
      <returns>The JSON entry name that represents an educational building such as a school.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.FoodPoint">
      <summary>Gets the JSON entry name that represents restaurants, cafés, etc.</summary>
      <returns>The JSON entry name that represents restaurants, cafés, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Forest">
      <summary>Gets the JSON entry name that represents area of forest land.</summary>
      <returns>The JSON entry name that represents area of forest land.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.GolfCourse">
      <summary>Gets the JSON entry name that represents areas of golf courses.</summary>
      <returns>The JSON entry name that represents areas of golf courses.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.HighSpeedRamp">
      <summary>Gets the JSON entry name for lines that represent ramps. These ramps typically appear alongside of controlled access highways.</summary>
      <returns>The JSON entry name for lines that represent ramps. These ramps typically appear alongside of controlled access highways.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Highway">
      <summary>Gets the JSON entry name for lines that represent highways.</summary>
      <returns>The JSON entry name for lines that represent highways.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.IndigenousPeoplesReserve">
      <summary>Gets the JSON entry name that represents areas of Indian reservations.</summary>
      <returns>The JSON entry name that represents areas of Indian reservations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Island">
      <summary>Gets the JSON entry name that represents labels in island areas.</summary>
      <returns>The JSON entry name that represents labels in island areas.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.MajorRoad">
      <summary>Gets the JSON entry name for lines that represent main roads.</summary>
      <returns>The JSON entry name for lines that represent main roads.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Medical">
      <summary>Gets the JSON entry name that represents areas of land that are used for medical purposes (For example: a hospital campus).</summary>
      <returns>The JSON entry name that represents areas of land that are used for medical purposes (For example: a hospital campus).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.MedicalBuilding">
      <summary>Gets the JSON entry name that represents buildings that are used for medical purposes (For example: a hospital).</summary>
      <returns>The JSON entry name that represents buildings that are used for medical purposes (For example: a hospital).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Military">
      <summary>Gets the JSON entry name that represents areas of military bases.</summary>
      <returns>The JSON entry name that represents areas of military bases.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.NaturalPoint">
      <summary>Gets the JSON entry name for icons that represent natural landmarks such as a volcano peak or waterfall.</summary>
      <returns>The JSON entry name for icons that represent natural landmarks such as a volcano peak or waterfall.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Nautical">
      <summary>Gets the JSON entry name that represents areas of land that are used for nautical purposes.</summary>
      <returns>The JSON entry name that represents areas of land that are used for nautical purposes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Neighborhood">
      <summary>Gets the JSON entry name that represents labels in areas defined as neighborhoods.</summary>
      <returns>The JSON entry name that represents labels in areas defined as neighborhoods.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Park">
      <summary>Gets the JSON entry name that represents park areas.</summary>
      <returns>The JSON entry name that represents park areas.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Peak">
      <summary>Gets the JSON entry name for icons that represent mountain peaks.</summary>
      <returns>The JSON entry name for icons that represent mountain peaks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.PlayingField">
      <summary>Gets the JSON entry name that represents extracted pitches such as a baseball field or tennis court.</summary>
      <returns>The JSON entry name that represents extracted pitches such as a baseball field or tennis court.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Point">
      <summary>Gets the JSON entry name that represents all point features that are rendered with an icon of some sort.</summary>
      <returns>The JSON entry name that represents all point features that are rendered with an icon of some sort.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.PointOfInterest">
      <summary>Gets the JSON entry name that represents restaurants, hospitals, schools, marinas, ski areas, etc.</summary>
      <returns>The JSON entry name that represents restaurants, hospitals, schools, marinas, ski areas, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Political">
      <summary>Gets the JSON entry name for political regions such as countries, regions and states.</summary>
      <returns>The JSON entry name for political regions such as countries, regions and states.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.PopulatedPlace">
      <summary>Gets the JSON entry name for icons that represent the size of populated place (For example: a city or town).</summary>
      <returns>The JSON entry name for icons that represent the size of populated place (For example: a city or town).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Railway">
      <summary>Gets the JSON entry name that represents railway lines.</summary>
      <returns>The JSON entry name that represents railway lines.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Ramp">
      <summary>Gets the JSON entry name that represents lines that represent the entrance and exit of a highway.</summary>
      <returns>The JSON entry name that represents lines that represent the entrance and exit of a highway.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Reserve">
      <summary>Gets the JSON entry name that represents areas of nature reserves.</summary>
      <returns>The JSON entry name that represents areas of nature reserves.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.River">
      <summary>Gets the JSON entry name that represents rivers, streams, or other water passages.</summary>
      <returns>the JSON entry name that represents rivers, streams, or other water passages.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Road">
      <summary>Gets the JSON entry name for lines that represent all roads.</summary>
      <returns>The JSON entry name for lines that represent all roads.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.RoadExit">
      <summary>Gets the JSON entry name for icons that represent exits, typically from a controlled access highway.</summary>
      <returns>The JSON entry name for icons that represent exits, typically from a controlled access highway.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.RoadShield">
      <summary>Gets the JSON entry name for signs that represent the compact name for a road. (For example: I-5).</summary>
      <returns>The JSON entry name for signs that represent the compact name for a road. (For example: I-5).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.RouteLine">
      <summary>Gets the JSON entry name that represents the styling for all route lines.</summary>
      <returns>The JSON entry name that represents the styling for all route lines.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Runway">
      <summary>Gets the JSON entry name that represents land areas that are covered by a runway.</summary>
      <returns>The JSON entry name that represents land areas that are covered by a runway.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Sand">
      <summary>Gets the JSON entry name that represents sandy areas like beaches.</summary>
      <returns>The JSON entry name that represents sandy areas like beaches.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.ShoppingCenter">
      <summary>Gets the JSON entry name that represents areas of ground allocated for malls or other shopping centers.</summary>
      <returns>The JSON entry name that represents areas of ground allocated for malls or other shopping centers.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Stadium">
      <summary>Gets the JSON entry name that represents area of a stadium.</summary>
      <returns>The JSON entry name that represents area of a stadium.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Street">
      <summary>Gets the JSON entry name for lines that represent streets.</summary>
      <returns>The JSON entry name for lines that represent streets.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Structure">
      <summary>Gets the JSON entry name that represents building and other building-like structures.</summary>
      <returns>The JSON entry name that represents building and other building-like structures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.TollRoad">
      <summary>Gets the JSON entry name that represents roads that cost money to use.</summary>
      <returns>The JSON entry name that represents roads that cost money to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Trail">
      <summary>Gets the JSON entry name that represents walking trails through parks or hiking trails.</summary>
      <returns>The JSON entry name that represents walking trails through parks or hiking trails.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Transit">
      <summary>Gets the JSON entry name for icons that represent bus stops, train stops, airports, etc.</summary>
      <returns>The JSON entry name for icons that represent bus stops, train stops, airports, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.TransitBuilding">
      <summary>Gets the JSON entry name that represents a transit building such as a bus station.</summary>
      <returns>The JSON entry name that represents a transit building such as a bus station.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Transportation">
      <summary>Gets the JSON entry name that represents lines that are part of the transportation network (For example: roads, trains, and ferries).</summary>
      <returns>The JSON entry name that represents lines that are part of the transportation network (For example: roads, trains, and ferries).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.UnpavedStreet">
      <summary>Gets the JSON entry name for lines that represent unpaved streets.</summary>
      <returns>The JSON entry name for lines that represent unpaved streets.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Vegetation">
      <summary>Gets the JSON entry name that represents forests, grassy areas, etc.</summary>
      <returns>The JSON entry name that represents forests, grassy areas, etc.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.VolcanicPeak">
      <summary>Gets the JSON entry name for icons that represent volcano peaks.</summary>
      <returns>The JSON entry name for icons that represent volcano peaks.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.WalkingRoute">
      <summary>Gets the JSON entry name that represents a walking route.</summary>
      <returns>The JSON entry name that represents a walking route.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.Water">
      <summary>Gets the JSON entry name that represents anything that looks like water. This includes oceans and streams.</summary>
      <returns>The JSON entry name that represents anything that looks like water. This includes oceans and streams.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.WaterPoint">
      <summary>Gets the JSON entry name for icons that represent water feature locations such as a waterfall.</summary>
      <returns>The JSON entry name for icons that represent water feature locations such as a waterfall.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntries.WaterRoute">
      <summary>Gets the JSON entry name that represents ferry route lines.</summary>
      <returns>The JSON entry name that represents ferry route lines.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates">
      <summary>Provides the names of the supported style entry states of a map style sheet. These states map to state-specific styles defined in the map's style sheet.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates.Disabled">
      <summary>Gets the name for the disabled visual state of the MapElement.</summary>
      <returns>The name for the disabled visual state of the MapElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates.Hover">
      <summary>Gets the name for the hover visual state of the MapElement.</summary>
      <returns>The name for the hover visual state of the MapElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates.Selected">
      <summary>Gets the name for the selected visual state of the MapElement.</summary>
      <returns>The name for the selected visual state of the MapElement.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs">
      <summary>Provides data for the TargetCameraChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapTargetCameraChangedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs.Camera">
      <summary>Gets the camera position corresponding to the TargetCameraChanged event.</summary>
      <returns>The camera position corresponding to the TargetCameraChanged event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs.ChangeReason">
      <summary>Gets or sets the camera change reason.</summary>
      <returns>The reason the camera changed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileAnimationState">
      <summary>Specifies the AnimationState of the MapTileSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileAnimationState.Paused">
      <summary>The map tile animation is paused. If the MapTileSource was playing an animation, it continues to display the current frame.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileAnimationState.Playing">
      <summary>The map tile animation is playing.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileAnimationState.Stopped">
      <summary>The map tile animation is not playing or paused.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequest">
      <summary>Represents a bitmap request for a tile for a CustomMapTileDataSource.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequest.#ctor">
      <summary>Initializes a new instance of MapTileBitmapRequest class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequest.PixelData">
      <summary>Gets the bitmap data for the CustomMapTileDataSource.</summary>
      <returns>The bitmap data.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequest.GetDeferral">
      <summary>Gets a MapTileBitmapRequestDeferral that the app can use to respond asynchronously to the bitmap request.</summary>
      <returns>The deferral object that the app uses to indicate that it has finished responding to a BitmapRequested event and that the request is complete.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral">
      <summary>Represents a deferral that can be used by an app to respond asynchronously to a bitmap request for a tile.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral.#ctor">
      <summary>Initializes a new instance of the MapTileBitmapRequestDeferral class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral.Complete">
      <summary>Notifies the system that the app has finished processing the bitmap request for a tile.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs">
      <summary>Provides data for the CustomMapTileDataSource.BitmapRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapTileBitmapRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.FrameIndex">
      <summary>Gets the number of frame of the requested tile.</summary>
      <returns>The number of frame of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.Request">
      <summary>Gets the bitmap request.</summary>
      <returns>The bitmap request.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.X">
      <summary>Gets the X value of the requested tile.</summary>
      <returns>The X value of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.Y">
      <summary>Gets the Y value of the requested tile.</summary>
      <returns>The Y value of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs.ZoomLevel">
      <summary>Gets the zoom level of the requested tile.</summary>
      <returns>The zoom level of the requested tile.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource">
      <summary>Provides a source of tiles for a MapTileSource. This class serves as the base class for HttpMapTileDataSource, LocalMapTileDataSource, and CustomMapTileDataSource.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource.#ctor">
      <summary>Initializes a new instance of the MapTileDataSource class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer">
      <summary>Specifies the Layer type of a MapTileSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer.AreaOverlay">
      <summary>The MapTileSource is an area overlay.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer.BackgroundOverlay">
      <summary>The MapTileSource is a background overlay.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer.BackgroundReplacement">
      <summary>The MapTileSource is a background replacement overlay.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer.LabelOverlay">
      <summary>The MapTileSource is a label overlay.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapTileLayer.RoadOverlay">
      <summary>The MapTileSource is a road overlay.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileSource">
      <summary>Represents a source of tiles to overlay on the MapControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.#ctor">
      <summary>Initializes a new instance of the MapTileSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.#ctor(Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource)">
      <summary>Initializes a new instance of the MapTileSource class with the specified data source.</summary>
      <param name="dataSource">The data source to use for the tiles.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.#ctor(Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource,Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange)">
      <summary>Initializes a new instance of the MapTileSource class with the specified data source and zoom level range.</summary>
      <param name="dataSource">The data source to use for the tiles.</param>
      <param name="zoomLevelRange">The zoom level range for the tiles.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.#ctor(Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource,Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange,Windows.Devices.Geolocation.GeoboundingBox)">
      <summary>Initializes a new instance of the MapTileSource class with the specified data source, zoom level range, and bounding rectangle.</summary>
      <param name="dataSource">The data source to use for the tiles.</param>
      <param name="zoomLevelRange">The zoom level range for the tiles.</param>
      <param name="bounds">The geographic area of tiles requested.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.#ctor(Microsoft.UI.Xaml.Controls.Maps.MapTileDataSource,Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange,Windows.Devices.Geolocation.GeoboundingBox,System.Int32)">
      <summary>Initializes a new instance of the MapTileSource class with the specified data source, zoom level range, bounding rectangle, and tile size.</summary>
      <param name="dataSource">The data source to use for the tiles.</param>
      <param name="zoomLevelRange">The zoom level range for the tiles.</param>
      <param name="bounds">The geographic area of tiles requested.</param>
      <param name="tileSizeInPixels">The size of individual square tiles in pixels.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AllowOverstretch">
      <summary>Gets or sets a value that specifies whether to stretch the current tile while a higher-resolution tile is being downloaded.</summary>
      <returns>**true** to stretch the current tile while a higher-resolution tile is being downloaded; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AllowOverstretchProperty">
      <summary>Identifies the AllowOverstretch dependency property.</summary>
      <returns>The identifier for the AllowOverstretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AnimationState">
      <summary>Gets the animation state of this MapTileSource to be displayed in the MapControl.</summary>
      <returns>The animation state of this MapTileSource.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AnimationStateProperty">
      <summary>Identifies the AnimationState dependency property.</summary>
      <returns>The identifier for the AnimationState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AutoPlay">
      <summary>Gets or sets a value that indicates whether map tiles will begin playback automatically when this MapTileSource gets added to the TileSources property of the MapControl.</summary>
      <returns>**true** if playback is automatic; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.AutoPlayProperty">
      <summary>Identifies the AutoPlay dependency property.</summary>
      <returns>The identifier for the AutoPlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Bounds">
      <summary>Gets or sets the rectangular area to contain the tiles.</summary>
      <returns>The rectangular area to contain the tiles.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.BoundsProperty">
      <summary>Identifies the Bounds dependency property.</summary>
      <returns>The identifier for the Bounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.DataSource">
      <summary>Gets or sets the data source for the tiles.</summary>
      <returns>The data source for the tiles.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.DataSourceProperty">
      <summary>Identifies the DataSource dependency property.</summary>
      <returns>The identifier for the DataSource  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.FrameCount">
      <summary>Gets or sets the number of frames in the animation of this MapTileSource.</summary>
      <returns>The number of frames in the animation of this MapTileSource.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.FrameCountProperty">
      <summary>Identifies the FrameCount dependency property.</summary>
      <returns>The identifier for the FrameCount dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.FrameDuration">
      <summary>Gets or sets the time duration of each frame in the animation of this MapTileSource.</summary>
      <returns>The time duration of each frame in the animation of this MapTileSource.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.FrameDurationProperty">
      <summary>Identifies the FrameDuration dependency property.</summary>
      <returns>The identifier for the FrameDuration dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsFadingEnabled">
      <summary>Gets or sets a value that indicates whether fading is enabled for the tiles.</summary>
      <returns>**true** if fading is enabled for the tiles; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsFadingEnabledProperty">
      <summary>Identifies the IsFadingEnabled dependency property.</summary>
      <returns>The identifier for the IsFadingEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsRetryEnabled">
      <summary>Gets or sets a value that indicates whether retry is enabled for the tiles.</summary>
      <returns>**true** if retry is enabled for the tiles; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsRetryEnabledProperty">
      <summary>Identifies the IsRetryEnabled dependency property.</summary>
      <returns>The identifier for the IsRetryEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsTransparencyEnabled">
      <summary>Gets or sets a value that indicates whether transparency is enabled for the tiles.</summary>
      <returns>**true** if transparency is enabled for the tiles; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.IsTransparencyEnabledProperty">
      <summary>Identifies the IsTransparencyEnabled dependency property.</summary>
      <returns>The identifier for the IsTransparencyEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Layer">
      <summary>Gets or sets the layer that contains the tiles.</summary>
      <returns>The layer that contains the tiles.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.LayerProperty">
      <summary>Identifies the Layer dependency property.</summary>
      <returns>The identifier for the Layer dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.TilePixelSize">
      <summary>Gets or sets the size of the tiles in pixels.</summary>
      <returns>The size of the tiles in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.TilePixelSizeProperty">
      <summary>Identifies the TilePixelSize dependency property.</summary>
      <returns>The identifier for the TilePixelSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Visible">
      <summary>Gets or sets a value that indicates whether the MapTileSource is visible.</summary>
      <returns>**true** if the MapTileSource is visible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
      <returns>The identifier for the Visible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.ZIndex">
      <summary>Gets or sets the z-index of the tiles.</summary>
      <returns>The z-index of the tiles.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.ZIndexProperty">
      <summary>Identifies the ZIndex dependency property.</summary>
      <returns>The identifier for the ZIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.ZoomLevelRange">
      <summary>Gets or sets the minimum and maximum zoom level of the tiles. Tiles are only visible when the ZoomLevel of the MapControl is within the ZoomLevelRange.</summary>
      <returns>The minimum and maximum zoom level of the tiles.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.ZoomLevelRangeProperty">
      <summary>Identifies the ZoomLevelRange dependency property.</summary>
      <returns>The identifier for the ZoomLevelRange dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Pause">
      <summary>Pauses the animation at the current frame.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Play">
      <summary>Plays the animation from the current frame.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileSource.Stop">
      <summary>Stops and resets the animation to be played from the beginning.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequest">
      <summary>Represents a Uri request for a tile for an HttpMapTileDataSource or a LocalMapTileDataSource.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequest.#ctor">
      <summary>Initializes a new instance of the MapTileUriRequest class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequest.Uri">
      <summary>Gets the Uri of the request.</summary>
      <returns>The Uri of the request.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequest.GetDeferral">
      <summary>Gets a MapTileUriRequestDeferral that the app can use to respond asynchronously to the Uri request.</summary>
      <returns>A MapTileUriRequestDeferral that the app can use to respond asynchronously to the Uri request.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral">
      <summary>Represents a deferral that can be used by an app to respond asynchronously to a Uri request for a tile.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral.#ctor">
      <summary>Initializes a new instance of the MapTileUriRequestDeferral class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral.Complete">
      <summary>Notifies the system that the app has finished processing the Uri request for a tile.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs">
      <summary>Provides data for the HttpMapTileDataSource.UriRequested event and the LocalMapTileDataSource.UriRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the MapTileUriRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.FrameIndex">
      <summary>Gets the number of frame of the requested tile.</summary>
      <returns>The number of frame of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.Request">
      <summary>Gets the Uri request.</summary>
      <returns>The Uri request.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.X">
      <summary>Gets the X value of the requested tile.</summary>
      <returns>The X value of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.Y">
      <summary>Gets the Y value of the requested tile.</summary>
      <returns>The Y value of the requested tile.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs.ZoomLevel">
      <summary>Gets the zoom level of the requested tile.</summary>
      <returns>The zoom level of the requested tile.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapVisibleRegionKind">
      <summary>Indicates the kind of visible region.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapVisibleRegionKind.Full">
      <summary>The full visible region of the map control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapVisibleRegionKind.Near">
      <summary>Visible region on the map control that doesn't include things that are further away towards the horizon and is orthogonal to whether landmarks are present or not.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapWatermarkMode">
      <summary>Specifies the WatermarkMode of the MapControl.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapWatermarkMode.Automatic">
      <summary>The watermark of the MapControl is turned on or off according to OEM settings.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapWatermarkMode.On">
      <summary>The watermark of the MapControl is displayed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange">
      <summary>Specifies the minimum and maximum zoom level for a MapTileSource. This structure is used by the ZoomLevelRange property of a MapTileSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange.Max">
      <summary>The maximum zoom level for a MapTileSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Maps.MapZoomLevelRange.Min">
      <summary>The minimum zoom level for a MapTileSource.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience">
      <summary>Represents a custom map experience that provides a street-level view of a geographic location.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.#ctor(Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama)">
      <summary>Creates a StreetsideExperience based on the specified panoramic view.</summary>
      <param name="panorama">The panoramic view to appear in the StreetsideExperience.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.#ctor(Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama,System.Double,System.Double,System.Double)">
      <summary>Creates a StreetsideExperience based on the specified panoramic view and camera position.</summary>
      <param name="panorama">The panoramic view to appear in the StreetsideExperience.</param>
      <param name="headingInDegrees">The directional heading of the map's camera in degrees, where 0 or 360 = North, 90 = East, 180 = South, and 270 = West. The default *headingInDegrees* value is 0.</param>
      <param name="pitchInDegrees">The pitch of the map's camera in degrees, where 90 is looking out at the horizon (maximum) and 0 is looking straight down (minimum). The default *pitchInDegrees* value is 90.</param>
      <param name="fieldOfViewInDegrees">The horizontal angle of view that appears in the map's camera, in degrees. The default *fieldOfViewInDegrees* value is 75.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.AddressTextVisible">
      <summary>Gets or sets a value that indicates if address text is visible in the StreetsideExperience.</summary>
      <returns>**true** if address text is visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.CursorVisible">
      <summary>Gets or sets a value that indicates if the cursor is visible in the StreetsideExperience.</summary>
      <returns>**true** if the cursor is visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.ExitButtonVisible">
      <summary>Gets or sets a value that indicates if the exit button is visible in the StreetsideExperience.</summary>
      <returns>**true** if the exit button is visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.OverviewMapVisible">
      <summary>Gets or sets a value that indicates if the overview map is visible in the StreetsideExperience.</summary>
      <returns>**true** if the overview map is visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.StreetLabelsVisible">
      <summary>Gets or sets a value that indicates if street labels are visible in the StreetsideExperience.</summary>
      <returns>**true** if street labels are visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsideExperience.ZoomButtonsVisible">
      <summary>Gets or sets a value that indicates if zoom buttons are visible in the StreetsideExperience.</summary>
      <returns>**true** if zoom buttons are visible in the StreetsideExperience; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama">
      <summary>Represents a panoramic view of a geographic location from a street-level perspective.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama.Location">
      <summary>Gets the geographic location that corresponds to the StreetsidePanorama.</summary>
      <returns>The geographic location that corresponds to the StreetsidePanorama.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama.FindNearbyAsync(Windows.Devices.Geolocation.Geopoint)">
      <summary>Creates a StreetsidePanorama near the specified geographic location.</summary>
      <param name="location">The center of the panoramic view.</param>
      <returns>If available, the nearest StreetsidePanorama; otherwise, **null**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Maps.StreetsidePanorama.FindNearbyAsync(Windows.Devices.Geolocation.Geopoint,System.Double)">
      <summary>Creates a StreetsidePanorama near the specified geographic location and radius.</summary>
      <param name="location">The center of the panoramic view.</param>
      <param name="radiusInMeters">The radius to appear in the panoramic view, in meters.</param>
      <returns>If available, the nearest StreetsidePanorama; otherwise, **null**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection">
      <summary>Defines constants that specify the direction in which an animation translates from start to end.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection.Bottom">
      <summary>The animation or transition progresses in a down direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection.Left">
      <summary>The animation or transition progresses in a left direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection.Right">
      <summary>The animation or transition progresses in a right direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection.Top">
      <summary>The animation or transition progresses in an up direction.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for an AppBarButton control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings.KeyboardAcceleratorTextMinWidth">
      <summary>Gets the minimum width allocated for the accelerator key tip of an AppBarButton.</summary>
      <returns>A number that specifies the minimum width allocated for the accelerator key tip of an AppBarButton.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for an AppBar control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.ClipRect">
      <summary>Gets the Rect that describes the clipped area of the AppBar.</summary>
      <returns>A Rect that describes the clipped area of the AppBar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactRootMargin">
      <summary>Gets the margin of the AppBar root in the compact state.</summary>
      <returns>The margin of the AppBar root in the compact state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactVerticalDelta">
      <summary>Gets the vertical delta of the AppBar in the compact state.</summary>
      <returns>The vertical delta of the AppBar in the compact state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenRootMargin">
      <summary>Gets the margin of the AppBar root in the hidden state.</summary>
      <returns>The margin of the AppBar root in the hidden state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenVerticalDelta">
      <summary>Gets the vertical delta of the AppBar in the hidden state.</summary>
      <returns>The vertical delta of the AppBar in the hidden state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalRootMargin">
      <summary>Gets the margin of the AppBar root in the minimal state.</summary>
      <returns>The margin of the AppBar root in the minimal state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalVerticalDelta">
      <summary>Gets the vertical delta of the AppBar in the minimal state.</summary>
      <returns>The vertical delta of the AppBar in the minimal state.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeCompactVerticalDelta">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeHiddenVerticalDelta">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeMinimalVerticalDelta">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for an AppBarToggleButton control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings.KeyboardAcceleratorTextMinWidth">
      <summary>Gets the minimum width allocated for the accelerator key tip of an AppBarToggleButton.</summary>
      <returns>A number that specifies the minimum width allocated for the accelerator key tip of an AppBarToggleButton.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase">
      <summary>Represents the base class for all button controls, such as Button, RepeatButton, and HyperlinkButton.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.#ctor">
      <summary>Provides base class initialization behavior for ButtonBase derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickMode">
      <summary>Gets or sets a value that indicates when the Click event occurs, in terms of device behavior.</summary>
      <returns>A value of the enumeration that indicates when the Click event occurs.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>Identifies the ClickMode dependency property.</summary>
      <returns>The identifier for the ClickMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.Command">
      <summary>Gets or sets the command to invoke when this button is pressed.</summary>
      <returns>The command to invoke when this button is pressed. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>Gets or sets the parameter to pass to the Command property.</summary>
      <returns>The parameter to pass to the Command property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>Identifier for the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>Identifier for the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOver">
      <summary>Gets a value that indicates whether a device pointer is located over this button control.</summary>
      <returns>**True** if a pointer is over the button control; otherwise **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOverProperty">
      <summary>Identifies the IsPointerOver dependency property.</summary>
      <returns>The identifier for the IsPointerOver dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPressed">
      <summary>Gets a value that indicates whether a ButtonBase is currently in a pressed state.</summary>
      <returns>**True** if the ButtonBase is in a pressed state; otherwise **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>Identifies the IsPressed dependency property.</summary>
      <returns>The identifier for the IsPressed dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.Click">
      <summary>Occurs when a button control is clicked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel">
      <summary>Represents a panel that contains a calendar.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.#ctor">
      <summary>Initializes a new instance of the CalendarPanel class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a CalendarView control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterX">
      <summary>Gets the X coordinate of the CalendarView 's center point.</summary>
      <returns>The X coordinate of the CalendarView 's center point.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterY">
      <summary>Gets the Y coordinate of the CalendarView 's center point.</summary>
      <returns>The Y coordinate of the CalendarView 's center point.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.ClipRect">
      <summary>Gets the rectangle used to clip the CalendarView.</summary>
      <returns>The rectangle used to clip the CalendarView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentAfter">
      <summary>Gets a value that indicates whether the CalendarView has more content after the displayed content.</summary>
      <returns>**true** if the CalendarView has more content after the displayed content; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentBefore">
      <summary>Gets a value that indicates whether the CalendarView has more content before the displayed content.</summary>
      <returns>**true** if the CalendarView has more content after the displayed content; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreViews">
      <summary>Gets a value that indicates whether the CalendarView has more views (like year or decade) that can be shown.</summary>
      <returns>**true** if the CalendarView has more views (like year or decade) that can be shown; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HeaderText">
      <summary>Gets the text of the header.</summary>
      <returns>The text of the header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.MinViewWidth">
      <summary>Gets the minimum width of the view.</summary>
      <returns>The minimum width of the view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay1">
      <summary>Gets the first day of the week.</summary>
      <returns>The first day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay2">
      <summary>Gets the second day of the week.</summary>
      <returns>The second day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay3">
      <summary>Gets the third day of the week.</summary>
      <returns>The third day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay4">
      <summary>Gets the fourth day of the week.</summary>
      <returns>The fourth day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay5">
      <summary>Gets the fifth day of the week.</summary>
      <returns>The fifth day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay6">
      <summary>Gets the sixth day of the week.</summary>
      <returns>The sixth day of the week.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay7">
      <summary>Gets the seventh day of the week.</summary>
      <returns>The seventh day of the week.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel">
      <summary>Represents a panel that arranges its items in a line and circles around to the first item when the last item is reached.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.#ctor">
      <summary>Initializes a new instance of the CarouselPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that indicates whether the horizontal snap points for the CarouselPanel are equidistant from each other.</summary>
      <returns>**true** if the horizontal snap points for the CarouselPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.AreVerticalSnapPointsRegular">
      <summary>Gets a value that indicates whether the vertical snap points for the CarouselPanel are equidistant from each other.</summary>
      <returns>**true** if the vertical snap points for the CarouselPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.CanHorizontallyScroll">
      <summary>Not intended for general use. Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>**true** if scrolling is possible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.CanVerticallyScroll">
      <summary>Not intended for general use. Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
      <returns>**true** if scrolling is possible; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.ExtentHeight">
      <summary>Gets the vertical size of the panel extent.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.ExtentWidth">
      <summary>Gets the horizontal size of the panel extent.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.ScrollOwner">
      <summary>Gets or sets a reference to a ScrollViewer that is the scroll host or scroll owner for scrolling behavior of the CarouselPanel.</summary>
      <returns>The scroll host or scroll owner for scrolling behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.ViewportHeight">
      <summary>Gets the vertical size of the viewport/content area.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.ViewportWidth">
      <summary>Gets the horizontal size of the viewport/content area.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.HorizontalSnapPointsChanged">
      <summary>Occurs when the measurements for horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.VerticalSnapPointsChanged">
      <summary>Occurs when the measurements for vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns the set of distances between irregular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation/dimension for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <returns>The read only collection of snap point distances. Returns an empty collection when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Gets the distance between regular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation/dimension for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <param name="offset">Out parameter. The offset of the first snap point.</param>
      <returns>The distance between the equidistant snap points. Returns 0 when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.LineDown">
      <summary>Scrolls content by one line towards the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.LineLeft">
      <summary>Scrolls content by one line towards the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.LineRight">
      <summary>Scrolls content by one line towards the right.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.LineUp">
      <summary>Scrolls content by one line towards the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.MakeVisible(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Rect)">
      <summary>Changes existing offsets in order to make the provided element visible in the viewport, and returns a Rect measurement and position of the area.</summary>
      <param name="visual">The element to make visible.</param>
      <param name="rectangle">A rectangle representing the element's coordinate space.</param>
      <returns>A rectangle that represents the input *rectangle*  Rect transformed by using the CarouselPanel coordinate space.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.MouseWheelDown">
      <summary>Scrolls content by one mousewheel click towards the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.MouseWheelLeft">
      <summary>Scrolls content by one mousewheel click towards the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.MouseWheelRight">
      <summary>Scrolls content by one mousewheel click towards the right.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.MouseWheelUp">
      <summary>Scrolls content by one mousewheel click towards the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.PageDown">
      <summary>Scrolls content by one page towards the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.PageLeft">
      <summary>Scrolls content by one page towards the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.PageRight">
      <summary>Scrolls content by one page towards the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.PageUp">
      <summary>Scrolls content by one page towards the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.SetHorizontalOffset(System.Double)">
      <summary>Changes the horizontal offset of content within the CarouselPanel viewport.</summary>
      <param name="offset">The horizontal offset to set, in pixels.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel.SetVerticalOffset(System.Double)">
      <summary>Changes the vertical offset of content within the CarouselPanel viewport.</summary>
      <param name="offset">The vertical offset to set, in pixels.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider">
      <summary>Represents a slider in a ColorPicker control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.#ctor">
      <summary>Initializes a new instance of the ColorPickerSlider class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.ColorChannel">
      <summary>Gets or sets a value that indicates which color channel the slider modifies.</summary>
      <returns>A value of the enumeration that indicates which color channel the slider modifies.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.ColorChannelProperty">
      <summary>Identifies the ColorChannel dependency property.</summary>
      <returns>The identifier for the ColorChannel dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum">
      <summary>Represents a control that lets a user choose a color from a visual spectrum.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.#ctor">
      <summary>Initializes a new instance of the ColorSpectrum class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Color">
      <summary>Gets or sets the current color value.</summary>
      <returns>The current color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Components">
      <summary>Gets or sets a value that indicates how the Hue-Saturation-Value (HSV) color components are mapped onto the ColorSpectrum.</summary>
      <returns>A value of the enumeration. The default is **HueSaturation**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ComponentsProperty">
      <summary>Identifies the Components dependency property.</summary>
      <returns>The identifier for the Components dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.HsvColor">
      <summary>Gets or sets the current color value as a Vector4.</summary>
      <returns>The current HSV color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.HsvColorProperty">
      <summary>Identifies the HsvColor dependency property.</summary>
      <returns>The identifier for the HsvColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxHue">
      <summary>Gets or sets the maximum Hue value in the range 0-359.</summary>
      <returns>The maximum Hue value in the range 0-359. The default is 359.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxHueProperty">
      <summary>Identifies the MaxHue dependency property.</summary>
      <returns>The identifier for the MaxHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxSaturation">
      <summary>Gets or sets the maximum Saturation value in the range 0-100.</summary>
      <returns>The maximum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxSaturationProperty">
      <summary>Identifies the MaxSaturation dependency property.</summary>
      <returns>The identifier for the MaxSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxValue">
      <summary>Gets or sets the maximum Value value in the range 0-100.</summary>
      <returns>The maximum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxValueProperty">
      <summary>Identifies the MaxValue dependency property.</summary>
      <returns>The identifier for the MaxValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinHue">
      <summary>Gets or sets the minimum Hue value in the range 0-359.</summary>
      <returns>The minimum Hue value in the range 0-359. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinHueProperty">
      <summary>Identifies the MinHue dependency property.</summary>
      <returns>The identifier for the MinHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinSaturation">
      <summary>Gets or sets the minimum Saturation value in the range 0-100.</summary>
      <returns>The minimum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinSaturationProperty">
      <summary>Identifies the MinSaturation dependency property.</summary>
      <returns>The identifier for the MinSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinValue">
      <summary>Gets or sets the minimum Value value in the range 0-100.</summary>
      <returns>The minimum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinValueProperty">
      <summary>Identifies the MinValue dependency property.</summary>
      <returns>The identifier for the MinValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Shape">
      <summary>Gets or sets a value that indicates whether the ColorSpectrum is shown as a square or a circle.</summary>
      <returns>A value of the enumeration. The default is **Box**, which shows the spectrum as a square.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ShapeProperty">
      <summary>Identifies the Shape dependency property.</summary>
      <returns>The identifier for the Shape dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ColorChanged">
      <summary>Occurs when the Color property has changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ComboBox control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownClosedHeight">
      <summary>Gets a value that reports the run-time layout slot height of the "Popup" part of a ComboBox in the "Closed" state.</summary>
      <returns>The run-time layout slot height, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownContentMinWidth">
      <summary>Gets the minimum width value of the drop down content.</summary>
      <returns>The minimum width value of the drop down content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOffset">
      <summary>Gets a value that reports the run-time offset value that is useful for a **Split** animation of the "Popup" part of a ComboBox.</summary>
      <returns>The run-time offset value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOpenedHeight">
      <summary>Gets a value that reports the run-time layout slot height of the "Popup" part of a ComboBox in the "Opened" state.</summary>
      <returns>The run-time layout slot height, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.SelectedItemDirection">
      <summary>Gets a value that reports the selection direction in a ComboBox. This is either **Bottom** or **Top** depending on how DropDownOffset is set.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar">
      <summary>Represents a specialized command bar used in a CommandBarFlyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar.#ctor">
      <summary>Initializes a new instance of the CommandBarFlyoutCommandBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar.FlyoutTemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a CommandBarFlyoutCommandBar control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a CommandBarFlyout control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.CloseAnimationEndPosition">
      <summary>Gets the end position for the close animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ContentClipRect">
      <summary>Gets the rectangle used to clip the content.</summary>
      <returns>The rectangle used to clip the content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.CurrentWidth">
      <summary>Gets the current width of the control.</summary>
      <returns>The current width of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationEndPosition">
      <summary>Gets the end position for the expand down animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationHoldPosition">
      <summary>Gets the hold position for the expand down animation.</summary>
      <returns>The hold position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationStartPosition">
      <summary>Gets the start position for the expand down animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownOverflowVerticalPosition">
      <summary>Gets the vertical position of the overflow when expanded down.</summary>
      <returns>The vertical position of the overflow when expanded down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandedWidth">
      <summary>Gets the width of the control when expanded.</summary>
      <returns>The width of the control when expanded.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationEndPosition">
      <summary>Gets the end position for the expand up animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationHoldPosition">
      <summary>Gets the hold position for the expand up animation.</summary>
      <returns>The hold position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationStartPosition">
      <summary>Gets the start position for the expand up animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpOverflowVerticalPosition">
      <summary>Gets the vertical position of the overflow when expanded up.</summary>
      <returns>The vertical position of the overflow when expanded up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OpenAnimationEndPosition">
      <summary>Gets the end position for the open animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OpenAnimationStartPosition">
      <summary>Gets the start position for the open animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OverflowContentClipRect">
      <summary>Gets the rectangle used to clip the overflow content.</summary>
      <returns>The rectangle used to clip the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionAnimationEndPosition">
      <summary>Gets the end position for the width expansion animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionAnimationStartPosition">
      <summary>Gets the start position for the width expansion animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionDelta">
      <summary>Gets the amount of change for the width expansion.</summary>
      <returns>The amount of change for the width expansion.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition">
      <summary>Gets the end position for the "more" button width expansion animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition">
      <summary>Gets the start position for the "more" button width expansion animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a CommandBar control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.ContentHeight">
      <summary>Gets the height of the CommandBar content.</summary>
      <returns>The height of the CommandBar content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.EffectiveOverflowButtonVisibility">
      <summary>Gets the effective visibility of the command bar's overflow button.</summary>
      <returns>The effective visibility of the command bar's overflow button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.NegativeOverflowContentHeight">
      <summary>Gets the height of the overflow content when the overflow direction is negative.</summary>
      <returns>The height of the overflow content when the overflow direction is negative.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentClipRect">
      <summary>Gets the Rect that describes the clipped area of the overflow content.</summary>
      <returns>A Rect that describes the clipped area of the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentCompactYTranslation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHeight">
      <summary>Gets the height of the overflow content.</summary>
      <returns>The height of the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHiddenYTranslation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHorizontalOffset">
      <summary>Gets the horizontal offset value of the overflow content.</summary>
      <returns>The horizontal offset value of the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxHeight">
      <summary>Gets the maximum height value of the overflow content.</summary>
      <returns>The maximum height value of the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxWidth">
      <summary>Gets the maximum width value of the overflow content.</summary>
      <returns>The maximum width value of the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinimalYTranslation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinWidth">
      <summary>Gets the minimum width value of the overflow content.</summary>
      <returns>The minimum width value of the overflow content.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation">
      <summary>Defines constants that specify the lookup behavior for references to application resources by Uniform Resource Identifier (URI) path.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation.Application">
      <summary>Lookup treats the APPXPACKAGE as the root.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation.Nested">
      <summary>Lookup expects that the resource is a nested resource of a component.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs">
      <summary>Provides data for the DragCompleted event that occurs when a user completes a drag operation with the mouse of a Thumb control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>Initializes a new instance of the DragCompletedEventArgs class.</summary>
      <param name="horizontalChange">The horizontal change in position of the Thumb control, resulting from the drag operation.</param>
      <param name="verticalChange">The vertical change in position of the Thumb control, resulting from the drag operation.</param>
      <param name="canceled">A value that indicates whether the drag operation was canceled by a call to the CancelDrag method.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>Gets a value that indicates whether the drag operation was canceled.</summary>
      <returns>**true** if the drag operation was canceled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>Gets the horizontal distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The horizontal distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>Gets the vertical distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The vertical distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler">
      <summary>Represents the method that will handle the DragCompleted event of a Thumb.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs">
      <summary>Provides data for the DragDelta event that occurs one or more times when a user drags a Thumb control with the mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the DragDeltaEventArgs class.</summary>
      <param name="horizontalChange">The horizontal change in the Thumb position since the last DragDelta event.</param>
      <param name="verticalChange">The vertical change in the Thumb position since the last DragDelta event.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>Gets the horizontal change in the Thumb position since the last DragDelta event.</summary>
      <returns>The horizontal change in the Thumb position since the last DragDelta event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>Gets the vertical change in the Thumb position since the last DragDelta event.</summary>
      <returns>The vertical change in the Thumb position since the last DragDelta event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler">
      <summary>Represents the method that will handle the DragDelta event of a Thumb.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs">
      <summary>Provides data for the DragStarted event that occurs when a user drags a Thumb control with the mouse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the DragStartedEventArgs class.</summary>
      <param name="horizontalOffset">The horizontal distance between the current mouse position and the thumb coordinates.</param>
      <param name="verticalOffset">The vertical distance between the current mouse position and the thumb coordinates.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>Gets the horizontal distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The horizontal distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>Gets the vertical distance between the current mouse position and the thumb coordinates.</summary>
      <returns>The vertical distance between the current mouse position and the thumb coordinates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler">
      <summary>Represents the method that will handle the DragStarted event of a Thumb.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation">
      <summary>Defines constants that specify the location of edge transitions for edge UI, such as app bars.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Bottom">
      <summary>Edge transition goes to bottom.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Left">
      <summary>Edge transition goes to left.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Right">
      <summary>Edge transition goes to right.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Top">
      <summary>Edge transition goes to top.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase">
      <summary>Represents the base class for flyout controls, such as Flyout and MenuFlyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.#ctor">
      <summary>Provides base class initialization behavior for FlyoutBase derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusOnInteraction">
      <summary>Gets or sets a value that indicates whether the element automatically gets focus when the user interacts with it.</summary>
      <returns>**true** if the element gets focus when a user interacts with it; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusOnInteractionProperty">
      <summary>Identifies the AllowFocusOnInteraction dependency property.</summary>
      <returns>The identifier for the AllowFocusOnInteraction dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusWhenDisabled">
      <summary>Gets or sets a value that specifies whether the control can receive focus when it's disabled.</summary>
      <returns>**true** if the control can receive focus when it's disabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusWhenDisabledProperty">
      <summary>Identifies the AllowFocusWhenDisabled dependency property.</summary>
      <returns>The identifier for the AllowFocusWhenDisabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AreOpenCloseAnimationsEnabled">
      <summary>Gets or sets a value that indicates whether animations are played when the flyout is opened or closed.</summary>
      <returns>**true** if animations are played when the flyout is opened or closed; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AreOpenCloseAnimationsEnabledProperty">
      <summary>Identifies the AreOpenCloseAnimationsEnabled dependency property.</summary>
      <returns>The identifier for the AreOpenCloseAnimationsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AttachedFlyoutProperty">
      <summary>Identifies the FlyoutBase.AttachedFlyout XAML attached property.</summary>
      <returns>The identifier for the FlyoutBase.AttachedFlyout XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ElementSoundMode">
      <summary>Gets or sets a value that specifies the control's preference for whether it plays sounds.</summary>
      <returns>An enumeration value that specifies the control's preference for whether it plays sounds. The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ElementSoundModeProperty">
      <summary>Identifies the ElementSoundMode dependency property.</summary>
      <returns>The identifier for the ElementSoundMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.InputDevicePrefersPrimaryCommands">
      <summary>Gets a value that indicates whether the input device used to open the flyout does not easily open the secondary commands.</summary>
      <returns>**true** if the input device used to open the flyout does not easily open the secondary commands; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.InputDevicePrefersPrimaryCommandsProperty">
      <summary>Identifies the InputDevicePrefersPrimaryCommands dependency property.</summary>
      <returns>The identifier for the InputDevicePrefersPrimaryCommands dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.IsConstrainedToRootBounds">
      <summary>Gets a value that indicates whether the flyout is shown within the bounds of the XAML root.</summary>
      <returns>**true** if the flyout is shown within the bounds of the XAML root; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.IsOpen">
      <summary>Gets a value that indicates whether the flyout is open.</summary>
      <returns>**true** if the flyout is open; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
      <returns>The identifier for the IsOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.OverlayInputPassThroughElement">
      <summary>Gets or sets an element that should receive pointer input events even when underneath the flyout's overlay.</summary>
      <returns>The element that should receive pointer input events even when underneath the flyout's overlay.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.OverlayInputPassThroughElementProperty">
      <summary>Identifies the **OverlayInputPassThroughElement** dependency property.</summary>
      <returns>The identifier for the **OverlayInputPassThroughElement** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Placement">
      <summary>Gets or sets the default placement to be used for the flyout, in relation to its placement target.</summary>
      <returns>A named constant of the enumeration that indicates where the flyout is placed in relation to its placement target. The default is Top.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.PlacementProperty">
      <summary>Identifies the Placement dependency property.</summary>
      <returns>The identifier for the Placement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShouldConstrainToRootBounds">
      <summary>Gets or sets a value that indicates whether the flyout should be shown within the bounds of the XAML root.</summary>
      <returns>**true** if the flyout should be shown within the bounds of the XAML root; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShouldConstrainToRootBoundsProperty">
      <summary>Identifies the ShouldConstrainToRootBounds dependency property.</summary>
      <returns>The identifier for the ShouldConstrainToRootBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowMode">
      <summary>Gets or sets a value that indicates how a flyout behaves when shown.</summary>
      <returns>A value of the enumeration that indicates how a flyout behaves when shown.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowModeProperty">
      <summary>Identifies the ShowMode dependency property.</summary>
      <returns>The identifier for the ShowMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Target">
      <summary>Gets the element to use as the flyout's placement target.</summary>
      <returns>The element to use as the flyout's placement target.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.TargetProperty">
      <summary>Identifies the Target dependency property.</summary>
      <returns>The identifier for the Target dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.XamlRoot">
      <summary>Gets or sets the XamlRoot in which this flyout is being viewed.</summary>
      <returns>The XamlRoot in which this flyout is being viewed. The default is **null**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Closed">
      <summary>Occurs when the flyout is hidden.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Closing">
      <summary>Occurs when the flyout starts to be hidden.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Opened">
      <summary>Occurs when the flyout is shown.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Opening">
      <summary>Occurs before the flyout is shown.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.CreatePresenter">
      <summary>When overridden in a derived class, initializes a control to show the flyout content as appropriate for the derived control. Note: This method has no base class implementation and must be overridden in a derived class.</summary>
      <returns>The control that displays the content of the flyout.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.GetAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Gets the flyout associated with the specified element.</summary>
      <param name="element">The element for which to get the associated flyout.</param>
      <returns>The flyout attached to the specified element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Hide">
      <summary>Closes the flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.OnProcessKeyboardAccelerators(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)">
      <summary>Called just before a keyboard shortcut (accelerator) is processed in your app. Invoked whenever application code or internal processes call ProcessKeyboardAccelerators. Override this method to influence the default accelerator handling.</summary>
      <param name="args">The ProcessKeyboardAcceleratorEventArgs.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.SetAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement,Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)">
      <summary>Associates the specified flyout with the specified FrameworkElement.</summary>
      <param name="element">The element to associate the flyout with.</param>
      <param name="value">The flyout to associate with the specified element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowAt(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions)">
      <summary>Shows the flyout placed in relation to the specified element using the specified options.</summary>
      <param name="placementTarget">The element to use as the flyout's placement target.</param>
      <param name="showOptions">The options to use when showing the flyout.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowAt(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Shows the flyout placed in relation to the specified element.</summary>
      <param name="placementTarget">The element to use as the flyout's placement target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Shows the flyout associated with the specified element, if any.</summary>
      <param name="flyoutOwner">The element for which to show the associated flyout.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.TryInvokeKeyboardAccelerator(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)">
      <summary>Attempts to invoke a keyboard shortcut (accelerator).</summary>
      <param name="args">The ProcessKeyboardAcceleratorEventArgs.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs">
      <summary>Provides data for the FlyoutBase.Closing event</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the flyout should be prevented from closing.</summary>
      <returns>**true** to prevent the flyout from closing; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode">
      <summary>Defines constants that specify the preferred location for positioning a FlyoutBase derived control relative to a visual element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Bottom">
      <summary>The preferred location of the flyout is below the target element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.BottomEdgeAlignedLeft">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.BottomEdgeAlignedRight">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Full">
      <summary>The preferred location of the flyout is centered on the screen.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Left">
      <summary>The preferred location of the flyout is to the left of the target element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.LeftEdgeAlignedBottom">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.LeftEdgeAlignedTop">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Right">
      <summary>The preferred location of the flyout is to the right of the target element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.RightEdgeAlignedBottom">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.RightEdgeAlignedTop">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Top">
      <summary>The preferred location of the flyout is above the target element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.TopEdgeAlignedLeft">
      <summary>
      </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.TopEdgeAlignedRight">
      <summary>
      </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode">
      <summary>Defines constants that specify how a flyout behaves when shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode.Auto">
      <summary>The show mode is determined automatically based on the method used to show the flyout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode.Standard">
      <summary>Behavior is typical of a flyout shown reactively, like a context menu. The open flyout takes focus. For a CommandBarFlyout, it opens in it's expanded state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode.Transient">
      <summary>Behavior is typical of a flyout shown proactively. The open flyout does not take focus. For a CommandBarFlyout, it opens in it's collapsed state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode.TransientWithDismissOnPointerMoveAway">
      <summary>The flyout exhibits Transient behavior while the cursor is close to it, but is dismissed when the cursor moves away.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions">
      <summary>Represents the options used to show a flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions.#ctor">
      <summary>Initializes a new instance of the FlyoutShowOptions class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions.ExclusionRect">
      <summary>Gets or sets a rectangular area that the flyout tries to not overlap.</summary>
      <returns>The rectangular area that the flyout tries to not overlap.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions.Placement">
      <summary>Gets or sets a value that indicates where the flyout is placed in relation to it's target element.</summary>
      <returns>A value of the enumeration that indicates where the flyout is placed in relation to it's target element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions.Position">
      <summary>Gets or sets the position where the flyout opens.</summary>
      <returns>The position where the flyout opens.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions.ShowMode">
      <summary>Gets or sets a value that indicates how the flyout behaves when opened.</summary>
      <returns>A value of the enumeration that indicates how the flyout behaves when opened.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection">
      <summary>Defines constants that specify the direction in which item generation will occur.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection.Backward">
      <summary>Items are generated in a backward direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection.Forward">
      <summary>Items are generated in a forward direction.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition">
      <summary>GeneratorPosition is used to describe the position of an item that is managed by ItemContainerGenerator.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Index">
      <summary>The index that is relative to the generated (realized) items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset">
      <summary>The offset that is relative to the ungenerated (unrealized) items near the indexed item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GeneratorPositionHelper">
      <summary>Provides utility methods for evaluating and creating GeneratorPosition structure values. C# and Microsoft Visual Basic code should use members of GeneratorPosition instead.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.GeneratorPositionHelper.FromIndexAndOffset(System.Int32,System.Int32)">
      <summary>Creates a GeneratorPosition value using provided values for index and offset. C# and Microsoft Visual Basic code should use GeneratorPosition(Int32,Int32) instead.</summary>
      <param name="index">The index value to create with.</param>
      <param name="offset">The offset value to create with.</param>
      <returns>The created GeneratorPosition structure with the desired values.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter">
      <summary>Represents the visual elements of a GridViewItem. When developing for Windows 10, use ListViewItemPresenter instead of GridViewItemPresenter in your item container style, both for ListView and for GridView. If you edit a copy of the default item container styles then you will get the correct type.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.#ctor">
      <summary>Initializes a new instance of the GridViewItemPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush">
      <summary>Gets or sets the brush used to render the check mark on a selected item.</summary>
      <returns>The brush used to render the check mark on a selected item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrushProperty">
      <summary>Identifies the CheckBrush dependency property.</summary>
      <returns>The identifier for the CheckBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush">
      <summary>Gets or sets the brush used to render the check mark hint.</summary>
      <returns>The brush used to render the check mark hint.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrushProperty">
      <summary>Identifies the CheckHintBrush dependency property.</summary>
      <returns>The identifier for the CheckHintBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush">
      <summary>Gets or sets the brush used to render the check mark on an item while it's being selected using a swipe interaction.</summary>
      <returns>The brush used to render the check mark on an item while it's being selected using a swipe interaction.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrushProperty">
      <summary>Identifies the CheckSelectingBrush dependency property.</summary>
      <returns>The identifier for the CheckSelectingBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMargin">
      <summary>Gets or sets an internal margin between presented content and its presenter.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMarginProperty">
      <summary>Identifies the ContentMargin dependency property.</summary>
      <returns>The identifier for the ContentMargin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DisabledOpacity">
      <summary>Gets or sets the opacity of an item that is disabled.</summary>
      <returns>The opacity of an item that is disabled. The value should be between 0 and 1. 0 is no opacity (transparent), 1 is full opacity (renders normally). The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DisabledOpacityProperty">
      <summary>Identifies the DisabledOpacity dependency property.</summary>
      <returns>The identifier for the DisabledOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground">
      <summary>Gets or sets the brush used to render the background of an item that's being dragged.</summary>
      <returns>The brush used to render the background of an item that's being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackgroundProperty">
      <summary>Identifies the DragBackground dependency property.</summary>
      <returns>The identifier for the DragBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground">
      <summary>Gets or sets the brush used to render the foreground of an item that's being dragged.</summary>
      <returns>The brush used to render the foreground of an item that's being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForegroundProperty">
      <summary>Identifies the DragForeground dependency property.</summary>
      <returns>The identifier for the DragForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragOpacity">
      <summary>Gets or sets the opacity of an item that's being dragged.</summary>
      <returns>The opacity of an item that's being dragged. The value should be between 0 and 1. 0 is no opacity (transparent), 1 is full opacity (renders normally). The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragOpacityProperty">
      <summary>Identifies the DragOpacity dependency property.</summary>
      <returns>The identifier for the DragOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush">
      <summary>Gets or sets the brush used to render the border of an item that has focus.</summary>
      <returns>The brush used to render the border of an item that has focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrushProperty">
      <summary>Identifies the FocusBorderBrush dependency property.</summary>
      <returns>The identifier for the FocusBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterHorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the content being presented.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterHorizontalContentAlignmentProperty">
      <summary>Identifies the GridViewItemPresenterHorizontalContentAlignment dependency property.</summary>
      <returns>The identifier for the GridViewItemPresenterHorizontalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPadding">
      <summary>Gets or sets the padding between the presenter and the GridView.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPaddingProperty">
      <summary>Identifies the GridViewItemPresenterPadding dependency property.</summary>
      <returns>The identifier for the GridViewItemPresenterPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterVerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the content being presented.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterVerticalContentAlignmentProperty">
      <summary>Identifies the GridViewItemPresenterVerticalContentAlignment dependency property.</summary>
      <returns>The identifier for the GridViewItemPresenterVerticalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground">
      <summary>Gets or sets the brush used to render the placeholder background for an item.</summary>
      <returns>The brush used to render the placeholder background for an item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackgroundProperty">
      <summary>Identifies the PlaceholderBackground dependency property.</summary>
      <returns>The identifier for the PlaceholderBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground">
      <summary>Gets or sets the brush used to render the background of an item that has the pointer over it.</summary>
      <returns>The brush used to render the background of an item that has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMargin">
      <summary>Gets or sets the margin of the background displayed for pointer-over input actions in the GridView item cell, versus the cell.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMarginProperty">
      <summary>Identifies the PointerOverBackgroundMargin dependency property.</summary>
      <returns>The identifier for the PointerOverBackgroundMargin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundProperty">
      <summary>Identifies the PointerOverBackground dependency property.</summary>
      <returns>The identifier for the PointerOverBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ReorderHintOffset">
      <summary>Gets or sets the amount that the reorder hint is offset.</summary>
      <returns>The amount that the reorder hint is offset, in pixels. The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ReorderHintOffsetProperty">
      <summary>Identifies the ReorderHintOffset dependency property.</summary>
      <returns>The identifier for the ReorderHintOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground">
      <summary>Gets or sets the brush used to render the background of an item that's selected.</summary>
      <returns>The brush used to render the background of an item that's selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackgroundProperty">
      <summary>Identifies the SelectedBackground dependency property.</summary>
      <returns>The identifier for the SelectedBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThickness">
      <summary>Gets or sets the thickness of the border around an item that's selected.</summary>
      <returns>The thickness of the border around an item that's selected, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThicknessProperty">
      <summary>Identifies the SelectedBorderThickness dependency property.</summary>
      <returns>The identifier for the SelectedBorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground">
      <summary>Gets or sets the brush used to render the foreground of an item that's selected.</summary>
      <returns>The brush used to render the foreground of an item that's selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForegroundProperty">
      <summary>Identifies the SelectedForeground dependency property.</summary>
      <returns>The identifier for the SelectedForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground">
      <summary>Gets or sets the brush used to render the background of an item that's selected and has the pointer over it.</summary>
      <returns>The brush used to render the background of an item that's selected and has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackgroundProperty">
      <summary>Identifies the SelectedPointerOverBackground dependency property.</summary>
      <returns>The identifier for the SelectedPointerOverBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush">
      <summary>Gets or sets the brush used to render the border of an item that's selected and has the pointer over it.</summary>
      <returns>The brush used to render the border of an item that's selected and has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrushProperty">
      <summary>Identifies the SelectedPointerOverBorderBrush dependency property.</summary>
      <returns>The identifier for the SelectedPointerOverBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectionCheckMarkVisualEnabled">
      <summary>Gets or sets a value that indicates whether the check mark is shown when the item is selected.</summary>
      <returns>**true** to show the selection check mark; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectionCheckMarkVisualEnabledProperty">
      <summary>Identifies the SelectionCheckMarkVisualEnabled dependency property.</summary>
      <returns>The identifier for the SelectionCheckMarkVisualEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a GridView control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings.DragItemsCount">
      <summary>Gets a value that reports the count of items in the current drag operation.</summary>
      <returns>A value that reports the count of items in the current drag operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement">
      <summary>Declares where the header is placed in relation to the items in an items grouping control.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement.Left">
      <summary>Header appears to the left of items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement.Top">
      <summary>Header appears on top of items.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo">
      <summary>Describes snap point behavior for objects that contain and present items.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that indicates whether the horizontal snap points for the container are equidistant from each other.</summary>
      <returns>**true** if the horizontal snap points for the container are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.AreVerticalSnapPointsRegular">
      <summary>Gets a value that indicates whether the vertical snap points for the container are equidistant from each other.</summary>
      <returns>**true** if the vertical snap points for the container are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.HorizontalSnapPointsChanged">
      <summary>Occurs when the measurements for horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.VerticalSnapPointsChanged">
      <summary>Occurs when the measurements for vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns the set of distances between irregular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation/dimension for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <returns>The read-only collection of snap point distances. Returns an empty collection when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Gets the distance between regular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation/dimension for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <param name="offset">Out parameter. The offset of the first snap point.</param>
      <returns>The distance between the equidistant snap points. Returns 0 when no snap points are present.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs">
      <summary>Provides data for the ItemsChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>Gets the action that occurred on the items collection.</summary>
      <returns>Returns the action that occurred.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>Gets the number of items that were involved in the change.</summary>
      <returns>Integer that represents the number of items involved in the change.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>Gets the number of UI elements involved in the change.</summary>
      <returns>Integer that represents the number of UI elements involved in the change.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>Gets the position in the collection before the change occurred.</summary>
      <returns>Returns a GeneratorPosition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>Gets the position in the collection where the change occurred.</summary>
      <returns>Returns a GeneratorPosition.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler">
      <summary>Represents the method that will handle the ItemsChanged event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter">
      <summary>Provides the appropriate background Brush for elements in the item template of a jump list to bind to. The Brush reflects the current theme and accent color, and it's also used to shade empty-group jump list items. By default, the Brush matches built-in apps, but you can override that to suit your design needs using the Enabled and Disabled properties.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.#ctor">
      <summary>Initializes a new instance of the JumpListItemBackgroundConverter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.Disabled">
      <summary>Gets or sets the brush to be used for the background when the group is empty and the jump list item is disabled.</summary>
      <returns>The brush to be used for the background when the group is empty and the jump list item is disabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.DisabledProperty">
      <summary>Identifies the Disabled dependency property.</summary>
      <returns>The identifier for the Disabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.Enabled">
      <summary>Gets or sets the brush to be used for the background when the group is not empty and the jump list item is enabled.</summary>
      <returns>The brush to be used for the background when the group is not empty and the jump list item is enabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.EnabledProperty">
      <summary>Identifies the Enabled dependency property.</summary>
      <returns>The identifier for the Enabled dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.Convert(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Returns the enabled brush if the item is not empty, otherwise returns the disabled brush.</summary>
      <param name="value">The source data being passed to the target.</param>
      <param name="targetType">The Type of data expected by the target dependency property.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The culture of the conversion.</param>
      <returns>The enabled brush if the item is not empty, otherwise the disabled brush.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.ConvertBack(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Modifies the target data before passing it to the source object.</summary>
      <param name="value">The target data being passed to the source.</param>
      <param name="targetType">The Type of data expected by the source object.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The culture of the conversion.</param>
      <returns>The value to be passed to the source object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter">
      <summary>Provides the appropriate foreground Brush for elements in the item template of a jump list to bind to. The Brush reflects the current theme and accent color, and it's also used to shade empty-group jump list items. By default, the Brush matches built-in apps, but you can override that to suit your design needs using the Enabled and Disabled properties.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.#ctor">
      <summary>Initializes a new instance of the JumpListItemForegroundConverter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.Disabled">
      <summary>Gets or sets the brush to be used for the foreground when the group is empty and the jump list item is disabled.</summary>
      <returns>The brush to be used for the foreground when the group is empty and the jump list item is disabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.DisabledProperty">
      <summary>Identifies the Disabled dependency property.</summary>
      <returns>The identifier for the Disabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.Enabled">
      <summary>Gets or sets the brush to be used for the foreground when the group is not empty and the jump list item is enabled.</summary>
      <returns>The brush to be used for the foreground when the group is not empty and the jump list item is enabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.EnabledProperty">
      <summary>Identifies the Enabled dependency property.</summary>
      <returns>The identifier for the Enabled dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.Convert(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Returns the enabled brush if the item is not empty, otherwise returns the disabled brush.</summary>
      <param name="value">The source data being passed to the target.</param>
      <param name="targetType">The Type of data expected by the target dependency property.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The culture of the conversion.</param>
      <returns>The enabled brush if the item is not empty, otherwise the disabled brush.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.ConvertBack(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Modifies the target data before passing it to the source object</summary>
      <param name="value">The target data being passed to the source.</param>
      <param name="targetType">The Type of data expected by the source object.</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The culture of the conversion.</param>
      <returns>The value to be passed to the source object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation">
      <summary>Defines methods that provide additional information about the layout of an element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation.GetAvailableSize(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the Size value that was most recently used to measure the specified element.</summary>
      <param name="element">The element for which to return the most recent size.</param>
      <returns>The Size given as an argument on the most recent call to measure this element, or a Size of 0,0 if the element has not been measured yet.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Object)">
      <summary>Returns the element that was being processed by the layout system at the moment of an unhandled exception.</summary>
      <param name="dispatcher">The *dispatcher* object that defines the scope of the operation. Direct support for "Dispatcher" type does not exist yet.</param>
      <returns>The element being processed at the time of an unhandled exception.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation.GetLayoutSlot(Microsoft.UI.Xaml.FrameworkElement)">
      <summary>Returns the layout slot, or bounding box, that contains the specified element.</summary>
      <param name="element">The element for which to return the layout slot.</param>
      <returns>The area assigned to the element for layout.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter">
      <summary>Represents the visual elements of a ListViewItem. When developing for Windows 10, use ListViewItemPresenter instead of GridViewItemPresenter in your item container style, both for ListView and for GridView. If you edit a copy of the default item container styles then you will get the correct type.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.#ctor">
      <summary>Initializes a new instance of the ListViewItemPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush">
      <summary>In a ListView in multiple selection mode, gets or sets the brush used to render an item's check box border. In a GridView, the check box background is set rather than the border, and only for unselected items.</summary>
      <returns>The brush used to render the check box border (ListView ) or background (GridView ).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrushProperty">
      <summary>Identifies the CheckBoxBrush dependency property.</summary>
      <returns>The identifier for the CheckBoxBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush">
      <summary>Gets or sets the brush used to render the check mark on a selected item.</summary>
      <returns>The brush used to render the check mark on a selected item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrushProperty">
      <summary>Identifies the CheckBrush dependency property.</summary>
      <returns>The identifier for the CheckBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush">
      <summary>Gets or sets the brush used to render the check mark hint. This property is ignored for a Windows 10 app.</summary>
      <returns>The brush used to render the check mark hint.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrushProperty">
      <summary>Identifies the CheckHintBrush dependency property.</summary>
      <returns>The identifier for the CheckHintBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckMode">
      <summary>Gets or sets the style of checkbox shown for selecting an item.</summary>
      <returns>A value of the enumeration that specifies the style of checkbox to show. The default is **Inline**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckModeProperty">
      <summary>Identifies the CheckMode dependency property.</summary>
      <returns>The identifier for the CheckMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush">
      <summary>Gets or sets the brush used to render the check mark on an item while it's being selected using a swipe interaction. This property is ignored for a Windows 10 app.</summary>
      <returns>The brush used to render the check mark on an item while it's being selected using a swipe interaction.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrushProperty">
      <summary>Identifies the CheckSelectingBrush dependency property.</summary>
      <returns>The identifier for the CheckSelectingBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMargin">
      <summary>Gets or sets an internal margin between presented content and its presenter.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMarginProperty">
      <summary>Identifies the ContentMargin dependency property.</summary>
      <returns>The identifier for the ContentMargin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DisabledOpacity">
      <summary>Gets or sets the opacity of an item that is disabled.</summary>
      <returns>The opacity of an item that is disabled. The value should be between 0 and 1. 0 is no opacity (transparent), 1 is full opacity (renders normally). The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DisabledOpacityProperty">
      <summary>Identifies the DisabledOpacity dependency property.</summary>
      <returns>The identifier for the DisabledOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground">
      <summary>Gets or sets the brush used to render the background of an item that's being dragged.</summary>
      <returns>The brush used to render the background of an item that's being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackgroundProperty">
      <summary>Identifies the DragBackground dependency property.</summary>
      <returns>The identifier for the DragBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground">
      <summary>Gets or sets the brush used to render the foreground of an item that's being dragged.</summary>
      <returns>The brush used to render the foreground of an item that's being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForegroundProperty">
      <summary>Identifies the DragForeground dependency property.</summary>
      <returns>The identifier for the DragForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragOpacity">
      <summary>Gets or sets the opacity of an item that's being dragged.</summary>
      <returns>The opacity of an item that's being dragged. The value should be between 0 and 1. 0 is no opacity (transparent), 1 is full opacity (renders normally). The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragOpacityProperty">
      <summary>Identifies the DragOpacity dependency property.</summary>
      <returns>The identifier for the DragOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush">
      <summary>Gets or sets the brush used to render the border of an item that has focus. Also see FocusSecondaryBorderBrush.</summary>
      <returns>The brush used to render the border of an item that has focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrushProperty">
      <summary>Identifies the FocusBorderBrush dependency property.</summary>
      <returns>The identifier for the FocusBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush">
      <summary>Gets or sets the brush used to render the second color of the border around an item that has focus. Focus is rendered as a composition of two brushes. This property is used together the FocusBorderBrush to specify these two brushes.</summary>
      <returns>The brush used to render the second color of the border around an item that has focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrushProperty">
      <summary>Identifies the FocusSecondaryBorderBrush dependency property.</summary>
      <returns>The identifier for the FocusSecondaryBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterHorizontalContentAlignment">
      <summary>Gets or sets the horizontal alignment of the content being presented.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterHorizontalContentAlignmentProperty">
      <summary>Identifies the ListViewItemPresenterHorizontalContentAlignment dependency property.</summary>
      <returns>The identifier for the ListViewItemPresenterHorizontalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPadding">
      <summary>Gets or sets the padding around the presenter.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPaddingProperty">
      <summary>Identifies the ListViewItemPresenterPadding dependency property.</summary>
      <returns>The identifier for the ListViewItemPresenterPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterVerticalContentAlignment">
      <summary>Gets or sets the vertical alignment of the content being presented.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterVerticalContentAlignmentProperty">
      <summary>Identifies the ListViewItemPresenterVerticalContentAlignment dependency property.</summary>
      <returns>The identifier for the ListViewItemPresenterVerticalContentAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground">
      <summary>Gets or sets the brush used to render the placeholder background for an item.</summary>
      <returns>The brush used to render the placeholder background for an item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackgroundProperty">
      <summary>Identifies the PlaceholderBackground dependency property.</summary>
      <returns>The identifier for the PlaceholderBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground">
      <summary>Gets or sets the brush used to render the background of an item that has the pointer over it.</summary>
      <returns>The brush used to render the background of an item that has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMargin">
      <summary>Gets or sets the margin of the background displayed for pointer-over input actions in the ListView item cell, versus the cell. This property is ignored for a Windows 10 app.</summary>
      <returns>A Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMarginProperty">
      <summary>Identifies the PointerOverBackgroundMargin dependency property.</summary>
      <returns>The identifier for the PointerOverBackgroundMargin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundProperty">
      <summary>Identifies the PointerOverBackground dependency property.</summary>
      <returns>The identifier for the PointerOverBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground">
      <summary>Gets or sets the brush used to render the foreground when the pointer is over the item.</summary>
      <returns>The brush used to render the foreground when the pointer is over the item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForegroundProperty">
      <summary>Identifies the PointerOverForeground dependency property.</summary>
      <returns>The identifier for the PointerOverForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground">
      <summary>In a ListView, gets or sets the brush used to render the background of an unselected item while the user is pressing it. In a GridView, the item's border is set rather than the background.</summary>
      <returns>The brush used to render an unselected item's background (ListView ) or border (GridView ) while pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackgroundProperty">
      <summary>Identifies the PressedBackground dependency property.</summary>
      <returns>The identifier for the PressedBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ReorderHintOffset">
      <summary>Gets or sets the amount that the reorder hint is offset. This property is ignored for a Windows 10 app.</summary>
      <returns>The amount that the reorder hint is offset, in pixels. The effective default value at run-time comes from themes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ReorderHintOffsetProperty">
      <summary>Identifies the ReorderHintOffset dependency property.</summary>
      <returns>The identifier for the ReorderHintOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackground">
      <summary>Gets or sets the brush used to render the background of the reveal effect.</summary>
      <returns>The brush used to render the background of the reveal effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundProperty">
      <summary>Identifies the RevealBackground dependency property.</summary>
      <returns>The identifier for the RevealBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundShowsAboveContent">
      <summary>Gets or sets a value that indicates whether the reveal backgound is shown on top of the content.</summary>
      <returns>**true** if the reveal backgound is shown on top of the content; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundShowsAboveContentProperty">
      <summary>Identifies the RevealBackgroundShowsAboveContent dependency property.</summary>
      <returns>The identifier for the RevealBackgroundShowsAboveContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderBrush">
      <summary>Gets or sets the brush used to render the border of the reveal effect.</summary>
      <returns>The brush used to render the border of the reveal effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderBrushProperty">
      <summary>Identifies the RevealBorderBrush dependency property.</summary>
      <returns>The identifier for the RevealBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThickness">
      <summary>Gets or sets the thickness of the border of the reveal effect.</summary>
      <returns>The thickness of the border of the reveal effect.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThicknessProperty">
      <summary>Identifies the RevealBorderThickness dependency property.</summary>
      <returns>The identifier for the RevealBorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground">
      <summary>Gets or sets the brush used to render the background of an item that's selected.</summary>
      <returns>The brush used to render the background of an item that's selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackgroundProperty">
      <summary>Identifies the SelectedBackground dependency property.</summary>
      <returns>The identifier for the SelectedBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThickness">
      <summary>Gets or sets the thickness of the border around an item that's selected. This property is ignored for a Windows 10 app.</summary>
      <returns>The thickness of the border around an item that's selected, as a Thickness value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThicknessProperty">
      <summary>Identifies the SelectedBorderThickness dependency property.</summary>
      <returns>The identifier for the SelectedBorderThickness dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground">
      <summary>Gets or sets the brush used to render the foreground of an item that's selected.</summary>
      <returns>The brush used to render the foreground of an item that's selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForegroundProperty">
      <summary>Identifies the SelectedForeground dependency property.</summary>
      <returns>The identifier for the SelectedForeground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground">
      <summary>Gets or sets the brush used to render the background of an item that's selected and has the pointer over it.</summary>
      <returns>The brush used to render the background of an item that's selected and has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackgroundProperty">
      <summary>Identifies the SelectedPointerOverBackground dependency property.</summary>
      <returns>The identifier for the SelectedPointerOverBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush">
      <summary>Gets or sets the brush used to render the border of an item that's selected and has the pointer over it. This property is ignored for a Windows 10 app.</summary>
      <returns>The brush used to render the border of an item that's selected and has the pointer over it.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrushProperty">
      <summary>Identifies the SelectedPointerOverBorderBrush dependency property.</summary>
      <returns>The identifier for the SelectedPointerOverBorderBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground">
      <summary>In a ListView, gets or sets the brush used to render the background of a selected item while the user is pressing it. In a GridView, the item's border is set rather than the background.</summary>
      <returns>The brush used to render a selected item's background (ListView ) or border (GridView ) while pressed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackgroundProperty">
      <summary>Identifies the SelectedPressedBackground dependency property.</summary>
      <returns>The identifier for the SelectedPressedBackground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionCheckMarkVisualEnabled">
      <summary>Gets or sets a value that indicates whether the check mark is shown when the item is selected.</summary>
      <returns>**true** to show the selection check mark; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionCheckMarkVisualEnabledProperty">
      <summary>Identifies the SelectionCheckMarkVisualEnabled dependency property.</summary>
      <returns>The identifier for the SelectionCheckMarkVisualEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode">
      <summary>Defines constants that specify the style of checkbox shown to select an item.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode.Inline">
      <summary>The checkbox in shown inline with the content of the list item.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode.Overlay">
      <summary>The checkbox is shown over the content of the list item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ListViewItem. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings.DragItemsCount">
      <summary>Gets the number of items for a drag payload that contains this item as an origin.</summary>
      <returns>The number of items for a drag payload.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector">
      <summary>An infinitely scrolling selection control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemHeight">
      <summary>Gets or sets the height of a LoopingSelectorItem that is contained in a LoopingSelector.</summary>
      <returns>The height of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemHeightProperty">
      <summary>Identifies the ItemHeight dependency property.</summary>
      <returns>The identifier for the ItemHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.Items">
      <summary>Gets a list of the LoopingSelectorItem objects.</summary>
      <returns>The list of LoopingSelectorItem objects.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each LoopingSelectorItem.</summary>
      <returns>The template that specifies the visualization of the LoopingSelectorItem items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemWidth">
      <summary>Gets or sets the width of a LoopingSelectorItem that is contained in a LoopingSelector.</summary>
      <returns>The width of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ItemWidthProperty">
      <summary>Identifies the ItemWidth dependency property.</summary>
      <returns>The identifier for the ItemWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedIndex">
      <summary>Gets or sets the index of the LoopingSelectorItem that is displayed in the LoopingSelector.</summary>
      <returns>The index of the LoopingSelectorItem that is visible in the LoopingSelector.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
      <returns>The identifier for the SelectedIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedItem">
      <summary>Gets or sets the LoopingSelectorItem that is displayed in the LoopingSelector.</summary>
      <returns>The LoopingSelectorItem that is visible in the LoopingSelector.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>The identifier for the SelectedItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ShouldLoop">
      <summary>Gets or sets a value that determines whether the LoopingSelector loops indefinitely.</summary>
      <returns>**True** if the LoopingSelector loops through all LoopingSelectorItem items indefinitely; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.ShouldLoopProperty">
      <summary>Identifies the ShouldLoop dependency property.</summary>
      <returns>The identifier for the ShouldLoop dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorItem">
      <summary>An item that is contained in a LoopingSelector control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel">
      <summary>A panel for positioning and arranging child LoopingSelector elements.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that determines whether the horizontal snap points for the LoopingSelectorPanel are equidistant from each other.</summary>
      <returns>**True** if the horizontal snap points are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.AreVerticalSnapPointsRegular">
      <summary>Gets a value that determines whether the vertical snap points for the LoopingSelectorPanel are equidistant from each other.</summary>
      <returns>**True** if the vertical snap points are regular equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.HorizontalSnapPointsChanged">
      <summary>Occurs when the horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.VerticalSnapPointsChanged">
      <summary>Occurs when the vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns a read-only collection of numbers that represent the irregular snap points for the specified orientation.</summary>
      <param name="orientation">The orientation of the requested snap points.</param>
      <param name="alignment">The alignment used by the caller when applying the requested snap points.</param>
      <returns>A read-only collection of numbers that represent the irregular snap points for the specified orientation, or an empty collection when no irregular snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Returns a read-only collection of numbers that represent the regular snap points for the specified orientation.</summary>
      <param name="orientation">The orientation of the requested snap points.</param>
      <param name="alignment">The alignment used by the caller when applying the requested snap points.</param>
      <param name="offset">The offset of the first snap point.</param>
      <returns>A read-only collection of numbers that represent the regular snap points for the specified orientation, or an empty collection when no regular snap points are present.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a MenuFlyoutItem control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings.KeyboardAcceleratorTextMinWidth">
      <summary>Gets the minimum width allocated for the accelerator key tip of an MenuFlyout.</summary>
      <returns>A number that specifies the minimum width allocated for the accelerator key tip of an MenuFlyout.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a MenuFlyoutPresenter control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings.FlyoutContentMinWidth">
      <summary>Gets the minimum width of flyout content.</summary>
      <returns>The minimum width of flyout content.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter">
      <summary>Represents the visual elements of a NavigationViewItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemPresenter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.Icon">
      <summary>Gets or sets the icon in a NavigationView item.</summary>
      <returns>The NavigationView item's icon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
      <returns>The identifier for the Icon dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel">
      <summary>Adds infrastructure (provides base class) for virtualizing layout containers that support spatial cues, such as VirtualizingStackPanel and WrapGrid.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.AreHorizontalSnapPointsRegular">
      <summary>Gets a value that indicates whether the horizontal snap points for the OrientedVirtualizingPanel are equidistant from each other.</summary>
      <returns>**true** if the horizontal snap points for the OrientedVirtualizingPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.AreVerticalSnapPointsRegular">
      <summary>Gets a value that indicates whether the vertical snap points for the OrientedVirtualizingPanel are equidistant from each other.</summary>
      <returns>**true** if the vertical snap points for the OrientedVirtualizingPanel are equidistant from each other; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that determines how the OrientedVirtualizingPanel measures space for child elements for possible scrolling in the horizontal dimension.</summary>
      <returns>**true** to support a potentially infinite horizontal layout dimension. **false** to restrict to available size.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that determines how the OrientedVirtualizingPanel measures space for child elements for possible scrolling in the vertical dimension.</summary>
      <returns>**true** to support a potentially infinite vertical layout dimension. **false** to restrict to available size.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.ExtentHeight">
      <summary>Gets the vertical size of the panel extent.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.ExtentWidth">
      <summary>Gets the horizontal size of the panel extent.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.ScrollOwner">
      <summary>Gets or sets a reference to a ScrollViewer that is the scroll host or scroll owner for scrolling behavior of the OrientedVirtualizingPanel.</summary>
      <returns>The scroll host or scroll owner for scrolling behavior.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.ViewportHeight">
      <summary>Gets the vertical size of the viewport or content area.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.ViewportWidth">
      <summary>Gets the horizontal size of the viewport or content area.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.HorizontalSnapPointsChanged">
      <summary>Fires when the measurements for horizontal snap points change.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.VerticalSnapPointsChanged">
      <summary>Fires when the measurements for vertical snap points change.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.GetInsertionIndexes(Windows.Foundation.Point,System.Int32@,System.Int32@)">
      <summary>Returns the index values of the items that the specified point is between.</summary>
      <param name="position">The point for which to get insertion indexes.</param>
      <param name="first">The index of the item before the specified point.</param>
      <param name="second">The index of the item after the specified point.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>Returns the set of distances between irregular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <returns>The read-only collection of snap point distances. Returns an empty collection when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>Gets the distance between regular snap points for a specified orientation and alignment.</summary>
      <param name="orientation">The orientation for the desired snap point set.</param>
      <param name="alignment">The alignment to use when applying the snap points.</param>
      <param name="offset">Out parameter. The offset of the first snap point.</param>
      <returns>The distance between the equidistant snap points. Returns 0 when no snap points are present.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.LineDown">
      <summary>Scrolls content by one line toward the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.LineLeft">
      <summary>Scrolls content by one line toward the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.LineRight">
      <summary>Scrolls content by one line toward the right.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.LineUp">
      <summary>Scrolls content by one line toward the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.MakeVisible(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Rect)">
      <summary>Changes existing offsets in order to make the provided element visible in the viewport, and returns a Rect measurement of the area.</summary>
      <param name="visual">The element to make visible.</param>
      <param name="rectangle">A rectangle representing the element's coordinate space.</param>
      <returns>A rectangle representing the input *rectangle*Rect transformed using the OrientedVirtualizingPanel coordinate space after scrolling happens. </returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.MouseWheelDown">
      <summary>Scrolls content by one mouse-wheel click toward the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.MouseWheelLeft">
      <summary>Scrolls content by one mouse-wheel click toward the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.MouseWheelRight">
      <summary>Scrolls content by one mouse-wheel click toward the right.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.MouseWheelUp">
      <summary>Scrolls content by one mouse-wheel click toward the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.PageDown">
      <summary>Scrolls content by one page toward the bottom.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.PageLeft">
      <summary>Scrolls content by one page toward the left.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.PageRight">
      <summary>Scrolls content by one page toward the right.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.PageUp">
      <summary>Scrolls content by one page toward the top.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.SetHorizontalOffset(System.Double)">
      <summary>Changes the horizontal offset of content within the OrientedVirtualizingPanel viewport.</summary>
      <param name="offset">The horizontal offset to set, in pixels.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.SetVerticalOffset(System.Double)">
      <summary>Changes the vertical offset of content within the OrientedVirtualizingPanel viewport.</summary>
      <param name="offset">The offset to set, in pixels.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase">
      <summary>Represents a base class for picker controls.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.#ctor">
      <summary>Provides base-class initialization behavior for classes that are derived from the PickerFlyoutBase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.TitleProperty">
      <summary>Gets the identifier for the attached title property.</summary>
      <returns>The identifier for the attached title property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.GetTitle(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the title displayed on the picker control.</summary>
      <param name="element">The dependency object for which to get the title.</param>
      <returns>The title displayed on the picker control.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.OnConfirmed">
      <summary>Notifies PickerFlyoutBase subclasses when a user has confirmed a selection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.SetTitle(Microsoft.UI.Xaml.DependencyObject,System.String)">
      <summary>Sets the title displayed on a picker control.</summary>
      <param name="element">The dependency object for which to set the title.</param>
      <param name="value">The title you want to display.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase.ShouldShowConfirmationButtons">
      <summary>Gets or sets whether confirmation buttons should be shown in the picker. Note: This method has no base class implementation and must be overridden in a derived class.</summary>
      <returns>True if confirmation buttons should be shown in the picker; Otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderItem">
      <summary>Represents a header item in the specialized pivot header items control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderItem.#ctor">
      <summary>Initializes a new instance of the PivotHeaderItem control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderPanel">
      <summary>Displays the header text of the items in a Pivot control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderPanel.#ctor">
      <summary>Initializes a new instance of the PivotHeaderPanel class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel">
      <summary>Displays the items in a Pivot control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.#ctor">
      <summary>Initializes a new instance of the PivotPanel class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.AreHorizontalSnapPointsRegular">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
      <returns>Reserved.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.AreVerticalSnapPointsRegular">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
      <returns>Reserved.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.HorizontalSnapPointsChanged">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.VerticalSnapPointsChanged">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
      <param name="orientation">Reserved.</param>
      <param name="alignment">Reserved.</param>
      <returns>Reserved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.PivotPanel.GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single@)">
      <summary>This property is reserved for internal use and is not intended to be used in your code.</summary>
      <param name="orientation">Reserved.</param>
      <param name="alignment">Reserved.</param>
      <param name="offset">Reserved.</param>
      <returns>Reserved.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode">
      <summary>Defines constants that specify the preferred location for positioning a ToolTip relative to a visual element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode.Bottom">
      <summary>The preferred location of the ToolTip is below the target element when element receives keyboard focus, at the bottom of the mouse pointer when element is hovered over with pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode.Left">
      <summary>The preferred location of the ToolTip is to the left of the target element when element receives keyboard focus, to the left of the mouse pointer when element is hovered over with pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode.Mouse">
      <summary>The preferred location of the ToolTip is with the top-left corner of the tooltip positioned at the mouse pointer location when hovered over with mouse, above the target element when focused with keyboard.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode.Right">
      <summary>The preferred location of the ToolTip is to the right of the target element when element receives keyboard focus, to the right of the mouse pointer when element is hovered over with pointer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.PlacementMode.Top">
      <summary>The preferred location of the ToolTip is above the target element when element receives keyboard focus, at the top of the mouse pointer when element is hovered over with pointer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.Popup">
      <summary>Displays content on top of existing content, within the bounds of the application window.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Popup.#ctor">
      <summary>Initializes a new instance of the Popup class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.Child">
      <summary>Gets or sets the content to be hosted in the popup.</summary>
      <returns>The content to be hosted in the popup.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildProperty">
      <summary>Gets the identifier for the Child dependency property.</summary>
      <returns>The identifier for the Child dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to child content of a Popup.</summary>
      <returns>The strongly typed collection of Transition style elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitionsProperty">
      <summary>Identifies the ChildTransitions dependency property.</summary>
      <returns>The identifier for the ChildTransitions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.HorizontalOffset">
      <summary>Gets or sets the distance between the left side of the application window and the left side of the popup.</summary>
      <returns>A measurement in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>Gets the identifier for the HorizontalOffset dependency property.</summary>
      <returns>The identifier for the HorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.IsConstrainedToRootBounds">
      <summary>Gets a value that indicates whether the popup is shown within the bounds of the XAML root.</summary>
      <returns>**true** if the popup is shown within the bounds of the XAML root; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.IsLightDismissEnabled">
      <summary>Gets or sets a value that determines how the Popup can be dismissed.</summary>
      <returns>**true** if *light dismiss* is enabled for this control; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.IsLightDismissEnabledProperty">
      <summary>Identifies the IsLightDismissEnabled dependency property.</summary>
      <returns>The identifier for the IsLightDismissEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.IsOpen">
      <summary>Gets or sets whether the popup is currently displayed on the screen.</summary>
      <returns>**true** if the popup is currently displayed; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.IsOpenProperty">
      <summary>Gets the identifier for the IsOpen dependency property.</summary>
      <returns>The identifier for the IsOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.LightDismissOverlayMode">
      <summary>Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.</summary>
      <returns>A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.LightDismissOverlayModeProperty">
      <summary>Identifies the LightDismissOverlayMode dependency property.</summary>
      <returns>The identifier for the LightDismissOverlayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.ShouldConstrainToRootBounds">
      <summary>Gets or sets a value that indicates whether the popup should be shown within the bounds of the XAML root.</summary>
      <returns>**true** if the popup should be shown within the bounds of the XAML root; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.ShouldConstrainToRootBoundsProperty">
      <summary>Identifies the ShouldConstrainToRootBounds dependency property.</summary>
      <returns>The identifier for the ShouldConstrainToRootBounds dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.VerticalOffset">
      <summary>Gets or sets the distance between the top of the application window and the top of the popup.</summary>
      <returns>A measurement in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>Gets the identifier for the VerticalOffset dependency property.</summary>
      <returns>The identifier for the VerticalOffset dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Popup.Closed">
      <summary>Fires when the IsOpen property is set to false.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Popup.Opened">
      <summary>Fires when the IsOpen property is set to true.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ProgressBar control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.ContainerAnimationEndPosition">
      <summary>Gets the target "To" point of the container animation that animates the ProgressBar.</summary>
      <returns>A double that represents the orientation-specific x- or y-value that is the target "To" point of the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.ContainerAnimationStartPosition">
      <summary>Gets the "From" point of the container animation that animates the ProgressBar.</summary>
      <returns>A double that represents the orientation-specific x- or y-value that is the"From" point of the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.EllipseAnimationEndPosition">
      <summary>Gets the "To" point of the "Ellipse" animation that animates the ProgressBar.</summary>
      <returns>The "To" point of the "Ellipse" animation that animates the ProgressBar. This is internally calculated as 2/3 of the ActualWidth of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.EllipseAnimationWellPosition">
      <summary>Gets the stopped point of the "Ellipse" animation that animates the ProgressBar.</summary>
      <returns>The stopped point of the Ellipse animation that animates the ProgressBar. This is internally calculated as 1/3 of the ActualWidth of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.EllipseDiameter">
      <summary>Gets the template-defined diameter of the "Ellipse" element that is animated in a templated ProgressBar.</summary>
      <returns>The "Ellipse" element width in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.EllipseOffset">
      <summary>Gets the template-defined offset position of the "Ellipse" element that is animated in a templated ProgressBar.</summary>
      <returns>The offset in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings.IndicatorLengthDelta">
      <summary>Gets the indicator length delta, which is useful for repositioning transitions.</summary>
      <returns>The delta in pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ProgressRing control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings.EllipseDiameter">
      <summary>Gets the template-defined diameter of the "Ellipse" element that is animated in a templated ProgressRing.</summary>
      <returns>The "Ellipse" width in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings.EllipseOffset">
      <summary>Gets the template-defined offset position of the "Ellipse" element that is animated in a templated ProgressRing.</summary>
      <returns>The offset in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings.MaxSideLength">
      <summary>Gets the maximum bounding size of the progress ring as rendered.</summary>
      <returns>The maximum bounding size of the progress ring as rendered, in pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RangeBase">
      <summary>Represents an element that has a value within a specific range, such as the ProgressBar, ScrollBar, and Slider controls.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.#ctor">
      <summary>Provides base class initialization behavior for RangeBase -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.LargeChange">
      <summary>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control.</summary>
      <returns>Value to add to or subtract from the Value of the RangeBase element. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>Identifies the LargeChange dependency property.</summary>
      <returns>The identifier for the LargeChange dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Maximum">
      <summary>Gets or sets the highest possible Value of the range element.</summary>
      <returns>The highest possible Value of the range element. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>Identifies the Maximum dependency property.</summary>
      <returns>The identifier for the Maximum dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Minimum">
      <summary>Gets or sets the Minimum possible Value of the range element.</summary>
      <returns>Minimum possible Value of the range element. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>Identifies the Minimum dependency property.</summary>
      <returns>The identifier for the Minimum dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.SmallChange">
      <summary>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control.</summary>
      <returns>Value to add to or subtract from the Value of the RangeBase element. The default is 0.1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>Identifies the SmallChange dependency property.</summary>
      <returns>The identifier for the SmallChange dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Value">
      <summary>Gets or sets the current setting of the range control, which may be coerced.</summary>
      <returns>The current setting of the range control, which may be coerced. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for the Value dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueChanged">
      <summary>Occurs when the range value changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>Called when the Maximum property changes.</summary>
      <param name="oldMaximum">Old value of the Maximum property.</param>
      <param name="newMaximum">New value of the Maximum property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>Called when the Minimum property changes.</summary>
      <param name="oldMinimum">Old value of the Minimum property.</param>
      <param name="newMinimum">New value of the Minimum property.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>Fires the ValueChanged routed event.</summary>
      <param name="oldValue">Old value of the Value property.</param>
      <param name="newValue">New value of the Value property.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs">
      <summary>Provides data about a change in range value for the ValueChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs.NewValue">
      <summary>Gets the new value of a range value property.</summary>
      <returns>The new value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs.OldValue">
      <summary>Gets the previous value of a range value property.</summary>
      <returns>The previous value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler">
      <summary>Represents the method that will handle a ValueChanged event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton">
      <summary>Represents a control that raises its Click event repeatedly when it is pressed and held.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.#ctor">
      <summary>Initializes a new instance of the RepeatButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Delay">
      <summary>Gets or sets the time, in milliseconds, that the RepeatButton waits when it is pressed before it starts repeating the click action.</summary>
      <returns>The time, in milliseconds, that the RepeatButton waits when it is pressed before it starts repeating the click action. The default is 250.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>Identifies the Delay dependency property.</summary>
      <returns>The identifier for the Delay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Interval">
      <summary>Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts.</summary>
      <returns>The time, in milliseconds, between repetitions of the click action, as soon as repeating starts. The default is 250.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>Identifies the Interval dependency property.</summary>
      <returns>The identifier for the Interval dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar">
      <summary>Represents a control that provides a scroll bar that has a sliding Thumb whose position corresponds to a value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.#ctor">
      <summary>Initializes a new instance of the ScrollBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.IndicatorMode">
      <summary>Gets or sets a value that results in different input indicator modes for the ScrollBar.</summary>
      <returns>A value of the enumeration. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.IndicatorModeProperty">
      <summary>Identifies the IndicatorMode dependency property.</summary>
      <returns>The identifier for the IndicatorMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.Orientation">
      <summary>Gets or sets a value that indicates whether the ScrollBar is displayed horizontally or vertically.</summary>
      <returns>An Orientation enumeration value that defines whether the ScrollBar is displayed horizontally or vertically. The default is **Horizontal**. Specific control templates might change this value, which would cause the templated value to be the apparent runtime default.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>Gets or sets the amount of the scrollable content that is currently visible.</summary>
      <returns>The amount of the scrollable content that is currently visible. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>Identifies the ViewportSize dependency property.</summary>
      <returns>The identifier for the ViewportSize dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.Scroll">
      <summary>Occurs one or more times as content scrolls in a ScrollBar when the user moves the Thumb by using the mouse.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs">
      <summary>Provides data for the Scroll event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs.#ctor">
      <summary>Initializes a new instance of the ScrollEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>Gets the new Value of the ScrollBar.</summary>
      <returns>The Value of the ScrollBar after the event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>Gets a ScrollEventType describing the event.</summary>
      <returns>A ScrollEventType describing the event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler">
      <summary>Represents the method that will handle the Scroll event of a ScrollBar.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A ScrollEventArgs that contains the event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType">
      <summary>Defines constants that specify the type of Scroll event that occurred.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>The Thumb was dragged to a new position and is now no longer being dragged by the user.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.First">
      <summary>The Thumb moved to the Minimum position of the ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>The Thumb moved a distance specified by the value of LargeChange. The Thumb moved to the left for a horizontal ScrollBar or upward for a vertical ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>The Thumb moved a distance specified by the value of LargeChange. The Thumb moved to the right for a horizontal ScrollBar or downward for a vertical ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.Last">
      <summary>The Thumb moved to the Maximum position of the ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>The Thumb moved a distance specified by the value of SmallChange. The Thumb moved to the left for a horizontal ScrollBar or upward for a vertical ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>The Thumb moved a distance specified by the value of SmallChange. The Thumb moved to the right for a horizontal ScrollBar or downward for a vertical ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>The Thumb moved to a new position because the user selected **Scroll Here** in the shortcut menu of the ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>The Thumb was dragged and caused a PointerMoved event. A Scroll event of this ScrollEventType may occur more than one time when the Thumb is dragged in the ScrollBar.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode">
      <summary>Defines constants that specify input-specific transition animations that are part of the default template for ScrollBar.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode.MouseIndicator">
      <summary>Use input-specific transitions that are appropriate for mouse input.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode.None">
      <summary>Do not use input-specific transitions.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode.TouchIndicator">
      <summary>Use input-specific transitions that are appropriate for touch input.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.Selector">
      <summary>Represents a control that enables a user to select an item from a collection of items.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property.</summary>
      <returns>**true** if the SelectedItem is always synchronized with the current item in the ItemCollection; **false** if the SelectedItem is never synchronized with the current item; **null** if the SelectedItem is synchronized with the current item only if the Selector uses an ICollectionView. The default value is **null**/indeterminate.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>Identifies the IsSynchronizedWithCurrentItem dependency property.</summary>
      <returns>The identifier for the IsSynchronizedWithCurrentItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndex">
      <summary>Gets or sets the index of the selected item.</summary>
      <returns>The index of the selected item. The default is -1, which indicates that no item is selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
      <returns>The identifier for the SelectedIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The selected item. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>The identifier for the SelectedItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValue">
      <summary>Gets or sets the value of the selected item, obtained by using the SelectedValuePath.</summary>
      <returns>The value of the selected item, obtained by using the SelectedValuePath, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValuePath">
      <summary>Gets or sets the property path that is used to get the SelectedValue property of the SelectedItem property.</summary>
      <returns>The property path that is used to get the SelectedValue property of the SelectedItem property. The default is String.Empty.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary>Gets the identifier for the SelectedValuePath dependency property.</summary>
      <returns>The identifier for the SelectedValuePath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>Gets the identifier for the SelectedValue dependency property.</summary>
      <returns>The identifier for the SelectedValue dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Selector.GetIsSelectionActive(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets a value that indicates whether the specified Selector has the focus.</summary>
      <param name="element">The Selector to evaluate.</param>
      <returns>**true** to indicate that the Selector has the focus; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.SelectorItem">
      <summary>Provides a base class for item types in a selection control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.SelectorItem.#ctor">
      <summary>Provides base class initialization behavior for SelectorItem -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SelectorItem.IsSelected">
      <summary>Gets or sets a value that indicates whether the item is selected in a selector.</summary>
      <returns>**true** if the item is selected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
      <returns>The identifier for the IsSelected dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo">
      <summary>Defines constants that specify how a Slider or related range control class conforms the indicator position to its steps or tick marks.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo.StepValues">
      <summary>Conform the indicator to the step values.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo.Ticks">
      <summary>Conform the indicator to the tick marks.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment">
      <summary>Defines constants that specify options for snap point alignment relative to an edge. Which edge depends on the orientation of the object where the alignment is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment.Center">
      <summary>Use snap points that are centered in the orientation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment.Far">
      <summary>Use snap points grouped farther from the orientation edge.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment.Near">
      <summary>Use snap points grouped closer to the orientation edge.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a SplitView. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.CompactPaneGridLength">
      <summary>Gets the CompactPaneLength value as a GridLength.</summary>
      <returns>The CompactPaneLength value as a GridLength.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLength">
      <summary>Gets the negative of the OpenPaneLength value.</summary>
      <returns>The negative of the OpenPaneLength value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLengthMinusCompactLength">
      <summary>Gets the negative of the value calculated by subtracting the CompactPaneLength value from the OpenPaneLength value.</summary>
      <returns>The negative of the OpenPaneLength value minus the CompactPaneLength value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneGridLength">
      <summary>Gets the OpenPaneLength value as a GridLength.</summary>
      <returns>The OpenPaneLength value as a GridLength.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLength">
      <summary>Gets the OpenPaneLength value.</summary>
      <returns>The OpenPaneLength value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLengthMinusCompactLength">
      <summary>Gets a value calculated by subtracting the CompactPaneLength value from the OpenPaneLength value.</summary>
      <returns>The value calculated by subtracting the CompactPaneLength value from the OpenPaneLength value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.Thumb">
      <summary>Represents a control that can be dragged by the user.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Thumb.#ctor">
      <summary>Initializes a new instance of the Thumb class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Thumb.IsDragging">
      <summary>Gets whether the Thumb control has focus and mouse capture.</summary>
      <returns>**true** if the Thumb control has focus and mouse capture; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>Identifies the IsDragging dependency property.</summary>
      <returns>The identifier for the IsDragging dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Thumb.DragCompleted">
      <summary>Fires when the Thumb control loses mouse capture.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Thumb.DragDelta">
      <summary>Fires one or more times as the mouse pointer is moved when a Thumb control has logical focus and mouse capture.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Thumb.DragStarted">
      <summary>Fires when a Thumb control receives logical focus and mouse capture.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Thumb.CancelDrag">
      <summary>Cancels a drag operation for the Thumb.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.TickBar">
      <summary>Represents a tick mark on a Slider control. Not intended for general use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.TickBar.#ctor">
      <summary>Initializes a new instance of the TickBar class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.TickBar.Fill">
      <summary>Gets or sets the Brush that draws on the background area of the TickBar.</summary>
      <returns>The Brush that draws on the background area of the TickBar.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.TickBar.FillProperty">
      <summary>Identifies the Fill dependency property.</summary>
      <returns>The identifier for the Fill dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement">
      <summary>Defines constants that specify the position of tick marks in a Slider in relation to the track that the control implements.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement.BottomRight">
      <summary>Tick marks appear below the track for a horizontal Slider, or to the right of the track for a vertical Slider.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement.Inline">
      <summary>Tick marks appear directly on the track.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement.None">
      <summary>No tick marks appear.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement.Outside">
      <summary>Tick marks appear on both sides of either a horizontal or vertical track.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.TickPlacement.TopLeft">
      <summary>Tick marks appear above the track for a horizontal Slider, or to the left of the track for a vertical Slider.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton">
      <summary>Represents a control that a user can select (check) or clear (uncheck). Base class for controls that can switch states, such as CheckBox and RadioButton.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.#ctor">
      <summary>Initializes a new instance of the ToggleButton class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsChecked">
      <summary>Gets or sets whether the ToggleButton is checked.</summary>
      <returns>**true** if the ToggleButton is checked; **false** if the ToggleButton is unchecked; otherwise **null**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>Identifies the IsChecked dependency property.</summary>
      <returns>The identifier for the IsChecked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>Gets or sets a value that indicates whether the control supports three states.</summary>
      <returns>**True** if the control supports three states; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>Identifies the IsThreeState dependency property.</summary>
      <returns>The identifier for the IsThreeState dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.Checked">
      <summary>Fires when a ToggleButton is checked.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>Fires when the state of a ToggleButton is switched to the indeterminate state.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.Unchecked">
      <summary>Occurs when a ToggleButton is unchecked.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.OnToggle">
      <summary>Called when the ToggleButton receives toggle stimulus.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ToggleSwitch control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOffOffset">
      <summary>Gets the calculated value of the offset for the "curtain" element of the ToggleSwitch, calculated for an "Off" action and current switch position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOnOffset">
      <summary>Gets the calculated value of the offset for the "curtain" element of the ToggleSwitch, calculated for an "On" action and current switch position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOffToOnOffset">
      <summary>Gets the calculated value of the offset for the "curtain" element of the ToggleSwitch, in "Off" to "On" direction.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOnToOffOffset">
      <summary>Gets the calculated value of the offset for the "curtain" element of the ToggleSwitch, in "On" to "Off" direction.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOffOffset">
      <summary>Gets the calculated value of the offset for the "knob" element of the ToggleSwitch, calculated for an "Off" action and current switch position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOnOffset">
      <summary>Gets the calculated value of the offset for the "knob" element of the ToggleSwitch, calculated for an "On" action and current switch position.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOffToOnOffset">
      <summary>Gets the calculated value of the offset for the "knob" element of the ToggleSwitch, in "Off" to "On" direction.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOnToOffOffset">
      <summary>Gets the calculated value of the offset for the "knob" element of the ToggleSwitch, in "On" to "Off" direction.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings">
      <summary>Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a ToolTip control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromHorizontalOffset">
      <summary>Gets the offset that is appropriate as a value for **FromHorizontalOffset** in theme animations.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromVerticalOffset">
      <summary>Gets the offset that is appropriate as a value for **FromVerticalOffset** in theme animations.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindableAttribute">
      <summary>Specifies that a type defined in C++ can be used for binding.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.BindableAttribute.#ctor">
      <summary>Initializes a new instance of the BindableAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.Binding">
      <summary>Defines a binding that connects the properties of binding targets and data sources.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.Binding.#ctor">
      <summary>Initializes a new instance of the Binding class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.Converter">
      <summary>Gets or sets the converter object that is called by the binding engine to modify the data as it is passed between the source and target, or vice versa.</summary>
      <returns>The IValueConverter object that modifies the data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.ConverterLanguage">
      <summary>Gets or sets a value that names the language to pass to any converter specified by the Converter property.</summary>
      <returns>A string that names a language. Interpretation of this value is ultimately up to the converter logic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.ConverterParameter">
      <summary>Gets or sets a parameter that can be used in the Converter logic.</summary>
      <returns>A parameter to be passed to the Converter. This can be used in the conversion logic. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.ElementName">
      <summary>Gets or sets the name of the element to use as the binding source for the Binding.</summary>
      <returns>The value of the Name property or x:Name attribute for the element you want to use as the binding source. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.FallbackValue">
      <summary>Gets or sets the value to use when the binding is unable to return a value.</summary>
      <returns>The value to use when the binding is unable to return a value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
      <returns>One of the BindingMode values. The default is **OneWay**: the source updates the target, but changes to the target value do not update the source.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
      <returns>The property path for the source of the binding.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.RelativeSource">
      <summary>Gets or sets the binding source by specifying its location relative to the position of the binding target. This is most often used in bindings within XAML control templates.</summary>
      <returns>The relative location of the binding source to use. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.Source">
      <summary>Gets or sets the data source for the binding.</summary>
      <returns>The source object that contains the data for the binding.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.TargetNullValue">
      <summary>Gets or sets the value that is used in the target when the value of the source is **null**.</summary>
      <returns>The value that is used in the binding target when the value of the source is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.Binding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates for two-way bindings.</summary>
      <returns>One of the UpdateSourceTrigger values. The default is **Default**, which evaluates as a **PropertyChanged** update behavior.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindingBase">
      <summary>Provides a base class for the Binding class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.BindingBase.#ctor">
      <summary>Initializes a new instance of the BindingBase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindingExpression">
      <summary>Contains information about a single instance of a Binding.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.BindingExpression.DataItem">
      <summary>Gets the binding source object that this BindingExpression uses.</summary>
      <returns>The binding source object that this BindingExpression uses.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.BindingExpression.ParentBinding">
      <summary>Gets the Binding object of this BindingExpression.</summary>
      <returns>The Binding object of the current binding expression.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.BindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source property in **TwoWay** bindings.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindingExpressionBase">
      <summary>Represents the base class for BindingExpression.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindingMode">
      <summary>Describes how the data propagates in a binding.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.BindingMode.OneTime">
      <summary>Updates the target property when the binding is created.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.BindingMode.OneWay">
      <summary>Updates the target property when the binding is created. Changes to the source object can also propagate to the target.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.BindingMode.TwoWay">
      <summary>Updates either the target or the source object when either changes. When the binding is created, the target property is updated from the source.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.BindingOperations">
      <summary>Provides the static SetBinding method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.BindingOperations.SetBinding(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.DependencyProperty,Microsoft.UI.Xaml.Data.BindingBase)">
      <summary>Associates a Binding with a target property on a target object. This method is the code equivalent to using a {Binding} markup extension in XAML markup.</summary>
      <param name="target">The object that should be the target of the evaluated binding.</param>
      <param name="dp">The property on the target to bind, specified by its identifier. These identifiers are usually available as static read-only properties on the type that defines the *target* object, or one of its base types. You can also bind to attached properties, but see Remarks.</param>
      <param name="binding">The binding to assign to the target property. This Binding should be initialized: important Binding properties such as Path should already be set before passing it as the parameter.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.CollectionViewSource">
      <summary>Provides a data source that adds grouping and current-item support to collection classes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.CollectionViewSource.#ctor">
      <summary>Initializes a new instance of the CollectionViewSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.IsSourceGrouped">
      <summary>Gets or sets a value that indicates whether source data is grouped.</summary>
      <returns>**true** if data is grouped. **false** if data is not grouped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.IsSourceGroupedProperty">
      <summary>Identifies the IsSourceGrouped dependency property.</summary>
      <returns>The identifier for the IsSourceGrouped dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.ItemsPath">
      <summary>Gets or sets the property path to follow from the top level item to find groups within the CollectionViewSource.</summary>
      <returns>The property path to follow from the top level item to find groups. The default is a PropertyPath created from an empty string. This path implies that the object itself is the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.ItemsPathProperty">
      <summary>Identifies the ItemsPath dependency property.</summary>
      <returns>The identifier for the ItemsPath dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.Source">
      <summary>Gets or sets the collection object from which to create this view.</summary>
      <returns>The collection to create the view from.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.SourceProperty">
      <summary>Identifies the Source dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.View">
      <summary>Gets the view object that is currently associated with this instance of CollectionViewSource.</summary>
      <returns>The view object that is currently associated with this instance of CollectionViewSource.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CollectionViewSource.ViewProperty">
      <summary>Identifies the View dependency property.</summary>
      <returns>The identifier for the View dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.CurrentChangingEventArgs">
      <summary>Provides data for the CurrentChanging event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.CurrentChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the CurrentChangingEventArgs class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the CurrentChangingEventArgs class.</summary>
      <param name="isCancelable">**true** to disable the ability to cancel a CurrentItem change; **false** to enable cancellation.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CurrentChangingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the CurrentItem change should be canceled.</summary>
      <returns>**true** if the event should be canceled; otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.CurrentChangingEventArgs.IsCancelable">
      <summary>Gets a value that indicates whether the CurrentItem change can be canceled.</summary>
      <returns>**true** if the event can be canceled; **false** if the event cannot be canceled.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.CurrentChangingEventHandler">
      <summary>Represents a method that can handle the CurrentChanging event of an ICollectionView implementation.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ICollectionView">
      <summary>Enables collections to support current record management, grouping, and incremental loading (data virtualization).</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.CollectionGroups">
      <summary>Returns any collection groups that are associated with the view.</summary>
      <returns>A vector collection of possible views.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current item in the view or null if there is no current item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.CurrentPosition">
      <summary>Gets the ordinal position of the CurrentItem within the view.</summary>
      <returns>The ordinal position of the CurrentItem within the view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.HasMoreItems">
      <summary>Gets a sentinel value that supports incremental loading implementations. See also LoadMoreItemsAsync.</summary>
      <returns>**true** if additional unloaded items remain in the view; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the CurrentItem of the view is beyond the end of the collection.</summary>
      <returns>**true** if the CurrentItem of the view is beyond the end of the collection; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionView.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the CurrentItem of the view is beyond the beginning of the collection.</summary>
      <returns>**true** if the CurrentItem of the view is beyond the beginning of the collection; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Data.ICollectionView.CurrentChanged">
      <summary>When implementing this interface, fire this event after the current item has been changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Data.ICollectionView.CurrentChanging">
      <summary>When implementing this interface, fire this event before changing the current item. The event handler can cancel this event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.LoadMoreItemsAsync(System.UInt32)">
      <summary>Initializes incremental loading from the view.</summary>
      <param name="count">The number of items to load.</param>
      <returns>The wrapped results of the load operation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item to be the CurrentItem in the view.</summary>
      <param name="item">The item to set as the CurrentItem.</param>
      <returns>**true** if the resulting CurrentItem is within the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the CurrentItem.</summary>
      <returns>**true** if the resulting CurrentItem is an item within the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the CurrentItem.</summary>
      <returns>**true** if the resulting CurrentItem is an item within the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentToNext">
      <summary>Sets the item after the CurrentItem in the view as the CurrentItem.</summary>
      <returns>**true** if the resulting CurrentItem is an item within the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the CurrentItem in the view.</summary>
      <param name="index">The index of the item to move to.</param>
      <returns>**true** if the resulting CurrentItem is an item within the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the CurrentItem in the view as the CurrentItem.</summary>
      <returns>**true** if the resulting CurrentItem is an item within the view; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ICollectionViewFactory">
      <summary>Supports creation of the relevant ICollectionView implementation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICollectionViewFactory.CreateView">
      <summary>Creates an ICollectionView instance using default settings.</summary>
      <returns>The default view.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ICollectionViewGroup">
      <summary>Represents any grouped items within a view.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionViewGroup.Group">
      <summary>Gets or sets the grouping context used for grouping the data, which sets the data context for the default HeaderTemplate.</summary>
      <returns>The grouping context used for grouping the data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICollectionViewGroup.GroupItems">
      <summary>Gets the collection of grouped items that this ICollectionViewGroup implementation represents.</summary>
      <returns>A collection of items for the group.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ICustomProperty">
      <summary>Implements custom property definition support for data binding sources that are implemented using COM.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICustomProperty.CanRead">
      <summary>Gets a value that determines whether the custom property supports read access.</summary>
      <returns>**true** if the property value can be read as a data source. **false** if the property cannot be a data source value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICustomProperty.CanWrite">
      <summary>Gets a value that determines whether the custom property supports write access.</summary>
      <returns>**true** if the value can be written to through a data source relationship in a two-way binding. **false** if the property cannot be written to.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICustomProperty.Name">
      <summary>Gets the path-relevant name of the property.</summary>
      <returns>The name of the property as it would be specified in a binding expression.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICustomProperty.Type">
      <summary>Gets the underlying type of the custom property.</summary>
      <returns>The underlying type, with relevant information as the values of the TypeName structure. TypeName provides the infrastructure such that property backing does not have to resemble common language runtime (CLR) and **System.Type** definitions.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomProperty.GetIndexedValue(System.Object,System.Object)">
      <summary>Gets the value at an index location, for cases where the custom property has indexer support.</summary>
      <param name="target">The owning instance.</param>
      <param name="index">The index to get.</param>
      <returns>The retrieved value at the index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomProperty.GetValue(System.Object)">
      <summary>Gets the value of the custom property from a particular instance.</summary>
      <param name="target">The owning instance.</param>
      <returns>The retrieved value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomProperty.SetIndexedValue(System.Object,System.Object,System.Object)">
      <summary>Sets the value at an index location, for cases where the custom property has indexer support.</summary>
      <param name="target">The owner instance.</param>
      <param name="value">The value to set.</param>
      <param name="index">The index location to set to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomProperty.SetValue(System.Object,System.Object)">
      <summary>Sets the custom property value on a specified instance.</summary>
      <param name="target">The owner instance.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ICustomPropertyProvider">
      <summary>Provides lookup service for ICustomProperty support. This interface is implemented by objects so that their custom defined properties can be used as run-time binding sources.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ICustomPropertyProvider.Type">
      <summary>Gets the underlying type of the custom property.</summary>
      <returns>The underlying type, with relevant information as the values of the TypeName structure. TypeName provides the infrastructure such that property backing does not have to take a dependency on the common language runtime (CLR) and **System.Type**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomPropertyProvider.GetCustomProperty(System.String)">
      <summary>Gets a custom property's ICustomProperty support object by specifying a property name.</summary>
      <param name="name">The name of the property to get the support object for.</param>
      <returns>The returned support object for the custom property, or **nullptr**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomPropertyProvider.GetIndexedProperty(System.String,Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Gets a custom property's ICustomProperty support object by specifying a property name and the type of the indexed collection.</summary>
      <param name="name">The name of the property to get the support object for.</param>
      <param name="type">The type of the indexed collection, specified as a TypeName wrapper.</param>
      <returns>The returned support object for the custom property, or **nullptr**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ICustomPropertyProvider.GetStringRepresentation">
      <summary>Provides support for "GetStringFromObject" and/or "ToString" logic on the assumption that the implementation supports System.Object. This logic might be accessed by features or services such as generating UI Automation values based on data content.</summary>
      <returns>The provided string.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.IItemsRangeInfo">
      <summary>Provides info about a range of items in the data source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.IItemsRangeInfo.RangesChanged(Microsoft.UI.Xaml.Data.ItemIndexRange,Windows.Foundation.Collections.IVectorView{Microsoft.UI.Xaml.Data.ItemIndexRange})">
      <summary>Updates the ranges of items in the data source that are visible in the list control and that are tracked in the instance of the object that implements the IItemsRangeInfo interface.</summary>
      <param name="visibleRange">The updated range of items in the data source that are visible in the list control.</param>
      <param name="trackedItems">The updated collection of ranges of items in the data source that are tracked in the instance of the object that implements the IItemsRangeInfo interface.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.INotifyPropertyChanged">
      <summary>Notifies clients that a property value has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Data.INotifyPropertyChanged.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ISelectionInfo">
      <summary>Manages whether items and ranges of items in the data source are selected in the list control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ISelectionInfo.DeselectRange(Microsoft.UI.Xaml.Data.ItemIndexRange)">
      <summary>Marks the items in the data source specified by *itemIndexRange* as not selected in the list control.</summary>
      <param name="itemIndexRange">A range of items in the data source.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ISelectionInfo.GetSelectedRanges">
      <summary>Returns the collection of ranges of items in the data source that are selected in the list control.</summary>
      <returns>A collection of ranges of items in the data source that are selected in the list control..</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ISelectionInfo.IsSelected(System.Int32)">
      <summary>Provides info about whether the item in the data source at the specified *index* is selected in the list control.</summary>
      <param name="index">The index of an item in the data source.</param>
      <returns>**true** if the item in the data source at the specified *index* is selected in the list control; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ISelectionInfo.SelectRange(Microsoft.UI.Xaml.Data.ItemIndexRange)">
      <summary>Marks the items in the data source specified by *itemIndexRange* as selected in the list control.</summary>
      <param name="itemIndexRange">A range of items in the data source.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ISupportIncrementalLoading">
      <summary>Specifies a calling contract for collection views that support incremental loading.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ISupportIncrementalLoading.HasMoreItems">
      <summary>Gets a sentinel value that supports incremental loading implementations.</summary>
      <returns>**true** if additional unloaded items remain in the view; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)">
      <summary>Initializes incremental loading from the view.</summary>
      <param name="count">The number of items to load.</param>
      <returns>The wrapped results of the load operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.ItemIndexRange">
      <summary>Provides info about a range of items in the data source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.ItemIndexRange.#ctor(System.Int32,System.UInt32)">
      <summary>Initializes an instance of the ItemIndexRange class.</summary>
      <param name="firstIndex">The index of the first item in the instance of the ItemIndexRange class.</param>
      <param name="length">The number of items in the instance of the ItemIndexRange class.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ItemIndexRange.FirstIndex">
      <summary>Gets the index of the first item in the instance of the ItemIndexRange class.</summary>
      <returns>The index of the first item in the instance of the ItemIndexRange class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ItemIndexRange.LastIndex">
      <summary>Gets the index of the last item in the instance of the ItemIndexRange class.</summary>
      <returns>The index of the last item in the instance of the ItemIndexRange class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.ItemIndexRange.Length">
      <summary>Gets the number of items in the instance of the ItemIndexRange class.</summary>
      <returns>The number of items in the instance of the ItemIndexRange class.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.IValueConverter">
      <summary>Exposes methods that allow the data to be modified as it passes through the binding engine.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.IValueConverter.Convert(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Modifies the source data before passing it to the target for display in the UI.</summary>
      <param name="value">The source data being passed to the target.</param>
      <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The language of the conversion.</param>
      <returns>The value to be passed to the target dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.IValueConverter.ConvertBack(System.Object,Microsoft.UI.Xaml.Interop.TypeName,System.Object,System.String)">
      <summary>Modifies the target data before passing it to the source object. This method is called only in **TwoWay** bindings.</summary>
      <param name="value">The target data being passed to the source.</param>
      <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">An optional parameter to be used in the converter logic.</param>
      <param name="language">The language of the conversion.</param>
      <returns>The value to be passed to the source object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.LoadMoreItemsResult">
      <summary>Wraps the asynchronous results of a LoadMoreItemsAsync call.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.LoadMoreItemsResult.Count">
      <summary>The number of items that were actually loaded.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.PropertyChangedEventArgs">
      <summary>Provides data for the PropertyChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.PropertyChangedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the PropertyChangedEventArgs class.</summary>
      <param name="name">The short name of the property that changed.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.PropertyChangedEventArgs.PropertyName">
      <summary>Gets the name of the property that changed.</summary>
      <returns>The name of the property that changed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.PropertyChangedEventHandler">
      <summary>Represents the method that will handle the PropertyChanged event. When programming with Microsoft .NET this delegate is hidden, use the System.ComponentModel.PropertyChangedEventHandler delegate.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.RelativeSource">
      <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Data.RelativeSource.#ctor">
      <summary>Initializes a new instance of the RelativeSource class by using default relative source mode.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Data.RelativeSource.Mode">
      <summary>Gets or sets a value that describes the location of the binding source relative to the position of the binding target.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.RelativeSourceMode">
      <summary>Defines constants that describe the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.RelativeSourceMode.None">
      <summary>Don't use this value of RelativeSourceMode; always use either **Self** or **TemplatedParent**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.RelativeSourceMode.Self">
      <summary>Refers to the element on which you are setting the binding and allows you to bind one property of that element to another property on the same element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.RelativeSourceMode.TemplatedParent">
      <summary>Refers to the element to which the template (in which the data-bound element exists) is applied. This is similar to setting a TemplateBinding Markup Extension and is only applicable if the Binding is within a template.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Data.UpdateSourceTrigger">
      <summary>Defines constants that indicate when a binding source is updated by its binding target in two-way binding.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.UpdateSourceTrigger.Default">
      <summary>Use default behavior from the dependency property that uses the binding. In Windows Runtime, this evaluates the same as a value with **PropertyChanged**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.UpdateSourceTrigger.Explicit">
      <summary>The binding source is updated only when you call the BindingExpression.UpdateSource method.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.UpdateSourceTrigger.LostFocus">
      <summary>The binding source is updated whenever the binding target element loses focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>The binding source is updated whenever the binding target value changes. This is detected automatically by the binding system.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Block">
      <summary>An abstract class that provides a base for all block-level content elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Block.#ctor">
      <summary>Provides base class initialization behavior for Block derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.HorizontalTextAlignment">
      <summary>Gets or sets a value that indicates how text is aligned in the Block.</summary>
      <returns>One of the TextAlignment enumeration values that specifies how text is aligned. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.HorizontalTextAlignmentProperty">
      <summary>Identifies the HorizontalTextAlignment dependency property.</summary>
      <returns>The identifier for the HorizontalTextAlignment dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.LineHeight">
      <summary>Gets or sets the height of each line of content.</summary>
      <returns>The pixel height of each line as modified by LineStackingStrategy. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.LineHeightProperty">
      <summary>Identifies the LineHeight dependency property.</summary>
      <returns>The identifier for the LineHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.LineStackingStrategy">
      <summary>Gets or sets a value that indicates how a line box is determined for each line of text in the Block.</summary>
      <returns>A value that indicates how a line box is determined for each line of text in the Block. The default is **MaxHeight**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.LineStackingStrategyProperty">
      <summary>Identifies the LineStackingStrategy dependency property.</summary>
      <returns>The identifier for the LineStackingStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.Margin">
      <summary>Gets or sets the amount of space around a Block element.</summary>
      <returns>The amount of space around a Block element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.MarginProperty">
      <summary>Identifies the Margin dependency property.</summary>
      <returns>The identifier for the Margin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.TextAlignment">
      <summary>Gets or sets the horizontal alignment of the text content.</summary>
      <returns>The horizontal alignment of the text content. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Block.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
      <returns>The identifier for the TextAlignment dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.BlockCollection">
      <summary>Represents a collection of Block elements.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.BlockCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.Append(Microsoft.UI.Xaml.Documents.Block)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Block value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Documents.Block[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.IndexOf(Microsoft.UI.Xaml.Documents.Block,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Documents.Block)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.ReplaceAll(Microsoft.UI.Xaml.Documents.Block[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.BlockCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Documents.Block)">
      <summary>Sets the value at the specified index to the Block value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Bold">
      <summary>Provides an inline-level content element that causes content to render with a bold font weight.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Bold.#ctor">
      <summary>Initializes a new instance of the Bold class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.ContactContentLinkProvider">
      <summary>Defines a ContentLink that contains a contact.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContactContentLinkProvider.#ctor">
      <summary>Initializes a new instance of the ContactContentLinkProvider class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.ContentLink">
      <summary>Provides an inline-level content element that provides facilities for hosting links to contextual information.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLink.#ctor">
      <summary>Initializes a new instance of the ContentLink class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.Background">
      <summary>Gets or sets a brush that provides the background color of the link.</summary>
      <returns>The brush that provides the background color of the link.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.Cursor">
      <summary>Gets or sets the type of cursor to show when the pointer is over the link.</summary>
      <returns>The type of cursor to show when the pointer is over the link.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.CursorProperty">
      <summary>Identifies the Cursor dependency property.</summary>
      <returns>The identifier for the Cursor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.ElementSoundMode">
      <summary>Gets or sets a value that specifies the control's preference for whether it plays sounds.</summary>
      <returns>An enumeration value that specifies the control's preference for whether it plays sounds. The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.ElementSoundModeProperty">
      <summary>Identifies the ElementSoundMode dependency property.</summary>
      <returns>The identifier for the ElementSoundMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.FocusState">
      <summary>Gets a value that specifies whether this link has focus, and the mode by which focus was obtained.</summary>
      <returns>A value of the enumeration. A value of **Unfocused** indicates that the link does not have focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.FocusStateProperty">
      <summary>Identifies the FocusState dependency property.</summary>
      <returns>The identifier for the FocusState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.Info">
      <summary>Gets or sets the information that the ContentLink contains.</summary>
      <returns>The information that the ContentLink contains.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.IsTabStop">
      <summary>Gets or sets a value that indicates whether the link is included in tab navigation.</summary>
      <returns>**true** if the control is included in tab navigation; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.IsTabStopProperty">
      <summary>Identifies the IsTabStop dependency property.</summary>
      <returns>The identifier for the IsTabStop dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.TabIndex">
      <summary>Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by pressing the Tab key.</summary>
      <returns>A value that determines the order of logical navigation for a device. The default value is MaxValue.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.TabIndexProperty">
      <summary>Identifies the TabIndex dependency property.</summary>
      <returns>The identifier for the TabIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusDown">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) down.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD) down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusDownNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a down navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusDownNavigationStrategyProperty">
      <summary>Identifies the XYFocusDownNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusDownNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusDownProperty">
      <summary>Identifies the XYFocusDown dependency property.</summary>
      <returns>The identifier for the XYFocusDown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusLeft">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) left.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD) left.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusLeftNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a left navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusLeftNavigationStrategyProperty">
      <summary>Identifies the XYFocusLeftNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusLeftNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusLeftProperty">
      <summary>Identifies the XYFocusLeft dependency property.</summary>
      <returns>The identifier for the XYFocusLeft dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusRight">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) right.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD) right.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusRightNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a right navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusRightNavigationStrategyProperty">
      <summary>Identifies the XYFocusRightNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusRightNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusRightProperty">
      <summary>Identifies the XYFocusRight dependency property.</summary>
      <returns>The identifier for the XYFocusRight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusUp">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) up.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD) up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusUpNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of an up navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusUpNavigationStrategyProperty">
      <summary>Identifies the XYFocusUpNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusUpNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLink.XYFocusUpProperty">
      <summary>Identifies the XYFocusUp dependency property.</summary>
      <returns>The identifier for the XYFocusUp dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.ContentLink.GotFocus">
      <summary>Occurs when a link receives focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.ContentLink.Invoked">
      <summary>Occurs when user interaction activates the link.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.ContentLink.LostFocus">
      <summary>Occurs when a link loses focus.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLink.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Attempts to set the focus on the link.</summary>
      <param name="value">Specifies how focus was set, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the link, or focus was already on the link. **false** if the link is not focusable.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.ContentLinkInvokedEventArgs">
      <summary>Provides event data for the ContentLink.Invoked event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLinkInvokedEventArgs.ContentLinkInfo">
      <summary>Gets the ContentLinkInfo object that contains the data for the invoked link.</summary>
      <returns>The ContentLinkInfo object that contains the data for the invoked link.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLinkInvokedEventArgs.Handled">
      <summary>Gets or sets a value that marks the event as handled.</summary>
      <returns>**true** to mark the event as handled; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.ContentLinkProvider">
      <summary>Defines the type of ContentLink used in a text control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProvider.#ctor">
      <summary>Provides base-class initialization behavior for ContentLinkProvider derived class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection">
      <summary>Represents a collection of ContentLinkProvider objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.#ctor">
      <summary>Initializes a new instance of the ContentLinkProviderCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.Append(Microsoft.UI.Xaml.Documents.ContentLinkProvider)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The ContentLinkProvider at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Documents.ContentLinkProvider[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.IndexOf(Microsoft.UI.Xaml.Documents.ContentLinkProvider,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Documents.ContentLinkProvider)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.ReplaceAll(Microsoft.UI.Xaml.Documents.ContentLinkProvider[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.ContentLinkProviderCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Documents.ContentLinkProvider)">
      <summary>Sets the value at the specified index to the ContentLinkProvider value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Glyphs">
      <summary>Provides a visual representation of letters, characters, or symbols, in a specific font and style.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Glyphs.#ctor">
      <summary>Initializes a new instance of the Glyphs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.ColorFontPaletteIndex">
      <summary>Gets or sets the index of the palette to use for the color font.</summary>
      <returns>The index of the palette to use for the color font.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.ColorFontPaletteIndexProperty">
      <summary>Identifies the ColorFontPaletteIndex dependency property.</summary>
      <returns>The identifier for the ColorFontPaletteIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.Fill">
      <summary>Gets or sets the Brush that is used to render the glyphs.</summary>
      <returns>The brush to use to render the glyphs. The default is **null**, which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.FillProperty">
      <summary>Identifies the Fill dependency property.</summary>
      <returns>The identifier for the Fill dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.FontRenderingEmSize">
      <summary>Gets or sets the em size used for rendering the glyphs.</summary>
      <returns>The em size used for rendering. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>Identifies the FontRenderingEmSize dependency property.</summary>
      <returns>The identifier for the FontRenderingEmSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.FontUri">
      <summary>Gets or sets the location of the font used for rendering the glyphs.</summary>
      <returns>An object describing the Uniform Resource Identifier (URI) source of the font. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.FontUriProperty">
      <summary>Identifies the FontUri dependency property.</summary>
      <returns>The identifier for the FontUri dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.Indices">
      <summary>Gets or sets a collection of glyph specifications that represents the Glyphs object.</summary>
      <returns>A collection of glyph specifications that represents the Glyphs object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.IndicesProperty">
      <summary>Identifies the Indices dependency property.</summary>
      <returns>The identifier for the Indices dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.IsColorFontEnabled">
      <summary>Gets or sets a value that determines whether font glyphs that contain color layers, such as Segoe UI Emoji, are rendered in color.</summary>
      <returns>**true** if color glyphs show in color; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.IsColorFontEnabledProperty">
      <summary>Identifies the IsColorFontEnabled dependency property.</summary>
      <returns>The identifier for the IsColorFontEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.OriginX">
      <summary>Gets or sets the x origin for the glyphs.</summary>
      <returns>The x origin of the Glyphs, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.OriginXProperty">
      <summary>Identifies the OriginX dependency property.</summary>
      <returns>The identifier for the OriginX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.OriginY">
      <summary>Gets or sets the y origin for the glyphs.</summary>
      <returns>The y origin of the Glyphs, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.OriginYProperty">
      <summary>Identifies the OriginY dependency property.</summary>
      <returns>The identifier for the OriginY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.StyleSimulations">
      <summary>Gets or sets the style simulations applied to the glyphs.</summary>
      <returns>One of the enumeration values that specifies the style simulations to apply to the glyphs. The default is "None".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.StyleSimulationsProperty">
      <summary>Identifies the StyleSimulations dependency property.</summary>
      <returns>The identifier for the StyleSimulations dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.UnicodeString">
      <summary>Gets or sets the Unicode string to render in glyphs.</summary>
      <returns>A Unicode string with XAML-compatible encoding. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Glyphs.UnicodeStringProperty">
      <summary>Identifies the UnicodeString dependency property.</summary>
      <returns>The identifier for the UnicodeString dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Hyperlink">
      <summary>Provides an inline-level content element that provides facilities for hosting hyperlinks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Hyperlink.#ctor">
      <summary>Initializes a new instance of the Hyperlink class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.ElementSoundMode">
      <summary>Gets or sets a value that specifies the control's preference for whether it plays sounds.</summary>
      <returns>An enumeration value that specifies the control's preference for whether it plays sounds. The default is **Default**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.ElementSoundModeProperty">
      <summary>Identifies the ElementSoundMode dependency property.</summary>
      <returns>The identifier for the ElementSoundMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.FocusState">
      <summary>Gets a value that specifies whether this hyperlink has focus, and the mode by which focus was obtained.</summary>
      <returns>A value of the enumeration. A value of **Unfocused** indicates that the hyperlink does not have focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.FocusStateProperty">
      <summary>Identifies the FocusState dependency property.</summary>
      <returns>The identifier for the FocusState dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.IsTabStop">
      <summary>Gets or sets a value that indicates whether the hyperlink is included in tab navigation.</summary>
      <returns>**true** if the control is included in tab navigation; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.IsTabStopProperty">
      <summary>Identifies the IsTabStop dependency property.</summary>
      <returns>The identifier for the IsTabStop dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.NavigateUri">
      <summary>Gets or sets the Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated.</summary>
      <returns>The Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.NavigateUriProperty">
      <summary>Identifies the NavigateUri dependency property.</summary>
      <returns>The identifier for the NavigateUri dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.TabIndex">
      <summary>Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by pressing the Tab key.</summary>
      <returns>A value that determines the order of logical navigation for a device. The default value is MaxValue.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.TabIndexProperty">
      <summary>Identifies the TabIndex dependency property.</summary>
      <returns>The identifier for the TabIndex dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.UnderlineStyle">
      <summary>Gets or sets a value that indicates what kind of underline is shown under the hyperlink.</summary>
      <returns>An enumeration value that specifies what kind of underline is shown. The default is **Single**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.UnderlineStyleProperty">
      <summary>Identifies the UnderlineStyle dependency property.</summary>
      <returns>The identifier for the UnderlineStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDown">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) down.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDownNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a down navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDownNavigationStrategyProperty">
      <summary>Identifies the XYFocusDownNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusDownNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDownProperty">
      <summary>Identifies the XYFocusDown dependency property.</summary>
      <returns>The identifier for the XYFocusDown dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeft">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) left.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeftNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a left navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeftNavigationStrategyProperty">
      <summary>Identifies the XYFocusLeftNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusLeftNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeftProperty">
      <summary>Identifies the XYFocusLeft dependency property.</summary>
      <returns>The identifier for the XYFocusLeft dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRight">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) right.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRightNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of a right navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRightNavigationStrategyProperty">
      <summary>Identifies the XYFocusRightNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusRightNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRightProperty">
      <summary>Identifies the XYFocusRight dependency property.</summary>
      <returns>The identifier for the XYFocusRight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUp">
      <summary>Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) up.</summary>
      <returns>The object that gets focus when a user presses the Directional Pad (DPAD).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUpNavigationStrategy">
      <summary>Gets or sets a value that specifies the strategy used to determine the target element of an up navigation.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUpNavigationStrategyProperty">
      <summary>Identifies the XYFocusUpNavigationStrategy dependency property.</summary>
      <returns>The identifier for the XYFocusUpNavigationStrategy dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUpProperty">
      <summary>Identifies the XYFocusUp dependency property.</summary>
      <returns>The identifier for the XYFocusUp dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.Hyperlink.Click">
      <summary>Occurs when the Hyperlink is clicked.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.Hyperlink.GotFocus">
      <summary>Occurs when a **Hyperlink** receives focus.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.Hyperlink.LostFocus">
      <summary>Occurs when a **Hyperlink** loses focus.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Hyperlink.Focus(Microsoft.UI.Xaml.FocusState)">
      <summary>Attempts to set the focus on the hyperlink.</summary>
      <param name="value">Specifies how focus was set, as a value of the enumeration.</param>
      <returns>**true** if focus was set to the hyperlink, or focus was already on the hyperlink. **false** if the hyperlink is not focusable.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs">
      <summary>Provides data for the Hyperlink.Click event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Inline">
      <summary>Provides a base class for inline text elements, such as Span and Run.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Inline.#ctor">
      <summary>Provides base class initialization behavior for Inline derived classes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.InlineCollection">
      <summary>Represents a collection of Inline elements.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.InlineCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.Append(Microsoft.UI.Xaml.Documents.Inline)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Inline value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Documents.Inline[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.IndexOf(Microsoft.UI.Xaml.Documents.Inline,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Documents.Inline)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.ReplaceAll(Microsoft.UI.Xaml.Documents.Inline[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Documents.Inline)">
      <summary>Sets the value at the specified index to the Inline value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.InlineUIContainer">
      <summary>Provides an inline content element that enables UIElement types to be embedded in the content of a RichTextBlock.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.InlineUIContainer.#ctor">
      <summary>Initializes a new instance of the InlineUIContainer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.InlineUIContainer.Child">
      <summary>Gets or sets the UIElement hosted by the InlineUIContainer.</summary>
      <returns>The UIElement hosted by the InlineUIContainer.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Italic">
      <summary>Provides an inline-level flow content element that causes content to render with an italic font style.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Italic.#ctor">
      <summary>Initializes a new instance of the Italic class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.LineBreak">
      <summary>Represents an inline element that causes a new line to begin in content when rendered in a text container.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.LineBreak.#ctor">
      <summary>Initializes a new instance of the LineBreak class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.LogicalDirection">
      <summary>Specifies a logical direction in which to perform certain text operations, such as inserting, retrieving, or navigating through text relative to a specified position (a TextPointer ).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.LogicalDirection.Backward">
      <summary>Backward, or from right to left.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.LogicalDirection.Forward">
      <summary>Forward, or from left to right.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Paragraph">
      <summary>Provides a block-level content element that is used to group content into a paragraph.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Paragraph.#ctor">
      <summary>Initializes a new instance of the Paragraph class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Paragraph.Inlines">
      <summary>Gets an InlineCollection containing the top-level Inline elements that include the contents of the Paragraph.</summary>
      <returns>An InlineCollection containing the Inline elements that include the contents of the Paragraph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Paragraph.TextIndent">
      <summary>Gets or sets the indentation of the first line of text in a paragraph, in pixels.</summary>
      <returns>The offset amount, in pixels, of the first line of text in a paragraph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Paragraph.TextIndentProperty">
      <summary>Identifies the TextIndent dependency property.</summary>
      <returns>The identifier for the TextIndent dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.PlaceContentLinkProvider">
      <summary>Defines a ContentLink that contains a place.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.PlaceContentLinkProvider.#ctor">
      <summary>Initializes a new instance of the PlaceContentLinkProvider class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Run">
      <summary>Represents a discrete section of formatted or unformatted text.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Run.#ctor">
      <summary>Initializes a new instance of the Run class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Run.FlowDirection">
      <summary>Gets or sets the direction that text and other user interface elements flow within the Run element that controls their layout.</summary>
      <returns>The direction that text and other user interface (UI) elements flow within the Run element. The default value is **LeftToRight**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Run.FlowDirectionProperty">
      <summary>Identifies the FlowDirection  dependency property.</summary>
      <returns>The identifier of the FlowDirection  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Run.Text">
      <summary>Gets or sets the text contents of the Run.</summary>
      <returns>A string that specifies the text contents of the Run. The default is String.Empty.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Span">
      <summary>Groups other Inline content elements. Parent class for Bold, Hyperlink, Italic and Underline.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Span.#ctor">
      <summary>Initializes a new instance of the Span class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Span.Inlines">
      <summary>Gets an InlineCollection containing the top-level inline elements that include the contents of Span.</summary>
      <returns>An InlineCollection containing the inline elements that include the contents of the Span. This property has no default value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.TextElement">
      <summary>An abstract class used as the base class for the also-abstract Block and Inline classes. TextElement supports common API for classes involved in the XAML text object model, such as properties that control text size, font families and so on.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AccessKey">
      <summary>Gets or sets the access key for this element.</summary>
      <returns>The access key for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyProperty">
      <summary>Identifies the AccessKey dependency property.</summary>
      <returns>The identifier for the AccessKey dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyScopeOwner">
      <summary>Gets or sets a source element that provides the access key scope for this element, even if it's not in the visual tree of the source element.</summary>
      <returns>The element that defines the access key scope.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyScopeOwnerProperty">
      <summary>Identifies the **AccessKeyScopeOwner** dependency property.</summary>
      <returns>The identifier for the **AccessKeyScopeOwner** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AllowFocusOnInteraction">
      <summary>Gets or sets a value that indicates whether the element automatically gets focus when the user interacts with it.</summary>
      <returns>**true** if the element gets focus when a user interacts with it; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.AllowFocusOnInteractionProperty">
      <summary>Identifies the AllowFocusOnInteraction dependency property.</summary>
      <returns>The identifier for the AllowFocusOnInteraction dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.CharacterSpacing">
      <summary>Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.</summary>
      <returns>The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.CharacterSpacingProperty">
      <summary>Identifies the CharacterSpacing dependency property.</summary>
      <returns>The identifier for the CharacterSpacing dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ContentEnd">
      <summary>Gets a TextPointer that represents the end of the content in the element.</summary>
      <returns>A TextPointer that represents the end of the content in the TextElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ContentStart">
      <summary>Gets a TextPointer that represents the start of content in the element.</summary>
      <returns>A TextPointer that represents the start of the content in the TextElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ElementEnd">
      <summary>Gets a TextPointer that represents the position just after the end of the element.</summary>
      <returns>A TextPointer that represents the position just after the end of the TextElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ElementStart">
      <summary>Gets a TextPointer that represents the position just before the start of the element.</summary>
      <returns>A TextPointer that represents the position just before the start of the TextElement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ExitDisplayModeOnAccessKeyInvoked">
      <summary>Gets or sets a value that specifies whether the access key display is dismissed when an access key is invoked.</summary>
      <returns>**true** to dismiss the access key display when an access key is invoked; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ExitDisplayModeOnAccessKeyInvokedProperty">
      <summary>Identifies the ExitDisplayModeOnAccessKeyInvoked dependency property.</summary>
      <returns>The identifier for the ExitDisplayModeOnAccessKeyInvoked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the content of the element.</summary>
      <returns>The preferred font family, or a primary preferred font family with one or more fallback font families. See FontFamily for default information.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontFamilyProperty">
      <summary>Identifies the FontFamily dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontSize">
      <summary>Gets or sets the font size for the content of the element.</summary>
      <returns>The desired font size in pixels. The default is 11 pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontSizeProperty">
      <summary>Identifies the FontSize dependency property.</summary>
      <returns>Identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontStretch">
      <summary>Gets or sets the glyph width of the font in a family to select.</summary>
      <returns>One of the FontStretch constant names, specifying the desired font stretch. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontStretchProperty">
      <summary>Identifies the FontStretch dependency property.</summary>
      <returns>Identifier for the FontStretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontStyle">
      <summary>Gets or sets the font style for the content in this element.</summary>
      <returns>One of the FontStyle constant names, specifying the font style. The default is **Normal**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontStyleProperty">
      <summary>Identifies the FontStyle dependency property.</summary>
      <returns>Identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontWeight">
      <summary>Gets or sets the top-level font weight to select from the font family for the content in this element.</summary>
      <returns>One of the FontWeights property values, specifying the font weight. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.FontWeightProperty">
      <summary>Identifies the FontWeight dependency property.</summary>
      <returns>Identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.Foreground">
      <summary>Gets or sets the Brush to apply to the content in this element.</summary>
      <returns>The brush that is applied to the text content. The default is a SolidColorBrush with Color value Black.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>Identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.IsAccessKeyScope">
      <summary>Gets or sets a value that indicates whether an element defines its own access key scope.</summary>
      <returns>**true** if an element defines its own scope; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.IsAccessKeyScopeProperty">
      <summary>Identifies the **IsAccessKeyScope** dependency property.</summary>
      <returns>The identifier for the **IsAccessKeyScope** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.IsTextScaleFactorEnabled">
      <summary>Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>**true** if automatic text enlargement is enabled; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.IsTextScaleFactorEnabledProperty">
      <summary>Identifies the IsTextScaleFactorEnabled  dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipHorizontalOffset">
      <summary>Gets or sets a value that indicates how far left or right the keytip is placed in relation to the text element.</summary>
      <returns>The number of pixels to move the KeyTip. Positive values move it right. Negative values move it left.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipHorizontalOffsetProperty">
      <summary>Identifies the **KeyTipHorizontalOffset** dependency property.</summary>
      <returns>The identifier for the **KeyTipHorizontalOffset** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipPlacementMode">
      <summary>Gets or sets a value that indicates where the KeyTip is placed in relation to the text element.</summary>
      <returns>A value of the enumeration. The default is **Auto**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipPlacementModeProperty">
      <summary>Identifies the **KeyTipPlacementMode** dependency property.</summary>
      <returns>The identifier for the **KeyTipPlacementMode** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipVerticalOffset">
      <summary>Gets or sets a value that indicates how far up or down the keytip is placed in relation to the text element.</summary>
      <returns>The number of pixels to move the KeyTip. Positive values move it down. Negative values move it up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.KeyTipVerticalOffsetProperty">
      <summary>Identifies the **KeyTipVerticalOffset** dependency property.</summary>
      <returns>The identifier for the **KeyTipVerticalOffset** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.Language">
      <summary>Gets or sets localization/globalization language information that applies to a TextElement.</summary>
      <returns>A string specifying language and culture that follows the RFC 3066 / ISO 639-1 standards. For example, U.S. English is "en-US".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.LanguageProperty">
      <summary>Identifies the Language dependency property.</summary>
      <returns>The identifier for the Language dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.Name">
      <summary>Gets or sets a unique identification for the object. Name can only be set from initial parsing of XAML.</summary>
      <returns>The unique identifier for the object. This property is read-only for code, but write-only for XAML, due to special parser handling of XAML properties named "Name".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.TextDecorations">
      <summary>Gets or sets a value that indicates what decorations are applied to the text.</summary>
      <returns>A value of the enumeration. The default is **None**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.TextDecorationsProperty">
      <summary>Identifies the **TextDecorations** dependency property.</summary>
      <returns>The identifier for the **TextDecorations** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextElement.XamlRoot">
      <summary>Gets or sets the XamlRoot in which this element is being viewed.</summary>
      <returns>The XamlRoot in which this element is being viewed. The default is **null**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyDisplayDismissed">
      <summary>Occurs when the access key sequence is complete to notify controls that they should hide access key visuals.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyDisplayRequested">
      <summary>Occurs when the access key sequence is started to notify controls that they should show access key visuals.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Documents.TextElement.AccessKeyInvoked">
      <summary>Occurs when a user completes an access key sequence to notify the element that the access key action should be invoked.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.TextElement.FindName(System.String)">
      <summary>Retrieves an object in the object model / runtime object graph by referencing the object's **x:Name** or **Name** attribute value.</summary>
      <param name="name">The name of the object to retrieve.</param>
      <returns>The object that has the specified name, or null if no object is retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.TextElement.OnDisconnectVisualChildren">
      <summary>Override this method to implement how layout and logic should behave when items are removed from a class-specific content or child property.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.TextHighlighter">
      <summary>Represents an object that highlights one or more ranges of text.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.TextHighlighter.#ctor">
      <summary>Initializes a new instance of the TextHighlighter class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextHighlighter.Background">
      <summary>Gets or sets the brush used to highlight the text.</summary>
      <returns>The brush used to highlight the text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextHighlighter.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground">
      <summary>Gets or sets the brush used to color highlighted text.</summary>
      <returns>The brush used to color highlighted text.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextHighlighter.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextHighlighter.Ranges">
      <summary>Gets the text ranges to highlight.</summary>
      <returns>The collection of text ranges to highlight.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.TextHighlighterBase">
      <summary>The base class for TextHighlighter.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.TextPointer">
      <summary>Represents a position within a text element.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextPointer.LogicalDirection">
      <summary>Gets the logical direction associated with the current position, which is used to disambiguate content associated with the current position.</summary>
      <returns>The LogicalDirection value that is associated with the current position.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextPointer.Offset">
      <summary>Gets the character index of a TextPointer within its container.</summary>
      <returns>The character index of a TextPointer within its container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextPointer.Parent">
      <summary>Gets the logical parent that contains the current position.</summary>
      <returns>The logical parent that contains the current position. Can return the RichEditBox when at the top of the content stack.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.TextPointer.VisualParent">
      <summary>Gets the user interface (UI) element that "owns" this TextPointer.</summary>
      <returns>The UI element that "owns" this TextPointer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.TextPointer.GetCharacterRect(Microsoft.UI.Xaml.Documents.LogicalDirection)">
      <summary>Returns a bounding box for content that borders the current TextPointer in the specified logical direction.</summary>
      <param name="direction">One of the LogicalDirection values that specifies the logical direction in which to find a content bounding box.</param>
      <returns>A Rect for content that borders the current TextPointer in the specified direction, or a Rect that evaluates as Empty if current and valid layout information is unavailable.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.TextPointer.GetPositionAtOffset(System.Int32,Microsoft.UI.Xaml.Documents.LogicalDirection)">
      <summary>Returns a TextPointer to the position indicated by the specified offset, in symbols, from the beginning of the current TextPointer and in the specified direction.</summary>
      <param name="offset">An offset, in symbols, for which to calculate and return the position. If the offset is negative, the returned TextPointer precedes the current TextPointer; otherwise, it follows.</param>
      <param name="direction">One of the LogicalDirection values that specifies the logical direction of the returned TextPointer.</param>
      <returns>A TextPointer to the position indicated by the specified offset and in the direction specified by the direction parameter, or null if the offset extends past the end of the content.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.TextRange">
      <summary>Represents a selection of text content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.TextRange.Length">
      <summary>The length of the current selection, in Unicode characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.TextRange.StartIndex">
      <summary>The position that marks the beginning of the current selection, measured in Unicode characters from the beginning of the text.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Typography">
      <summary>Provides access to a set of Microsoft OpenType typography properties. These properties are implemented as XAML attached properties such that they can be set from text object model properties as well as from specific text controls.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.AnnotationAlternatesProperty">
      <summary>Identifies the AnnotationAlternates attached property.</summary>
      <returns>The identifier for the AnnotationAlternates attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.CapitalSpacingProperty">
      <summary>Identifies the CapitalSpacing attached property.</summary>
      <returns>The identifier for the CapitalSpacing attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.CapitalsProperty">
      <summary>Identifies the Capitals attached property.</summary>
      <returns>The identifier for the Capitals attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>Identifies the CaseSensitiveForms attached property.</summary>
      <returns>The identifier for the CaseSensitiveForms attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.ContextualAlternatesProperty">
      <summary>Identifies the ContextualAlternates attached property.</summary>
      <returns>The identifier for the ContextualAlternates attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.ContextualLigaturesProperty">
      <summary>Identifies the ContextualLigatures attached property.</summary>
      <returns>The identifier for the ContextualLigatures attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.ContextualSwashesProperty">
      <summary>Identifies the ContextualSwashes attached property.</summary>
      <returns>The identifier for the ContextualSwashes attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>Identifies the DiscretionaryLigatures attached property.</summary>
      <returns>The identifier for the DiscretionaryLigatures attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>Identifies the EastAsianExpertForms attached property.</summary>
      <returns>The identifier for the EastAsianExpertForms attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.EastAsianLanguageProperty">
      <summary>Identifies the EastAsianLanguage attached property.</summary>
      <returns>The identifier for the EastAsianLanguage attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.EastAsianWidthsProperty">
      <summary>Identifies the EastAsianWidths attached property.</summary>
      <returns>The identifier for the EastAsianWidths attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.FractionProperty">
      <summary>Identifies the Fraction attached property.</summary>
      <returns>The identifier for the Fraction attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.HistoricalFormsProperty">
      <summary>Identifies the HistoricalForms attached property.</summary>
      <returns>The identifier for the HistoricalForms attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.HistoricalLigaturesProperty">
      <summary>Identifies the HistoricalLigatures attached property.</summary>
      <returns>The identifier for the HistoricalLigatures attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.KerningProperty">
      <summary>Identifies the Kerning attached property.</summary>
      <returns>The identifier for the Kerning attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.MathematicalGreekProperty">
      <summary>Identifies the MathematicalGreek attached property.</summary>
      <returns>The identifier for the MathematicalGreek attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.NumeralAlignmentProperty">
      <summary>Identifies the NumeralAlignment attached property.</summary>
      <returns>The identifier for the NumeralAlignment attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.NumeralStyleProperty">
      <summary>Identifies the NumeralStyle attached property.</summary>
      <returns>The identifier for the NumeralStyle attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.SlashedZeroProperty">
      <summary>Identifies the SlashedZero attached property.</summary>
      <returns>The identifier for the SlashedZero attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StandardLigaturesProperty">
      <summary>Identifies the StandardLigatures attached property.</summary>
      <returns>The identifier for the StandardLigatures attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StandardSwashesProperty">
      <summary>Identifies the StandardSwashes attached property.</summary>
      <returns>The identifier for the StandardSwashes attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticAlternatesProperty">
      <summary>Identifies the StylisticAlternates attached property.</summary>
      <returns>The identifier for the StylisticAlternates attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet10Property">
      <summary>Identifies the StylisticSet10 attached property.</summary>
      <returns>The identifier for the StylisticSet10 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet11Property">
      <summary>Identifies the StylisticSet11 attached property.</summary>
      <returns>The identifier for the StylisticSet11 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet12Property">
      <summary>Identifies the StylisticSet12 attached property.</summary>
      <returns>The identifier for the StylisticSet12 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet13Property">
      <summary>Identifies the StylisticSet13 attached property.</summary>
      <returns>The identifier for the StylisticSet13 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet14Property">
      <summary>Identifies the StylisticSet14 attached property.</summary>
      <returns>The identifier for the StylisticSet14 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet15Property">
      <summary>Identifies the StylisticSet15 attached property.</summary>
      <returns>The identifier for the StylisticSet15 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet16Property">
      <summary>Identifies the StylisticSet16 attached property.</summary>
      <returns>The identifier for the StylisticSet16 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet17Property">
      <summary>Identifies the StylisticSet17 attached property.</summary>
      <returns>The identifier for the StylisticSet17 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet18Property">
      <summary>Identifies the StylisticSet18 attached property.</summary>
      <returns>The identifier for the StylisticSet18 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet19Property">
      <summary>Identifies the StylisticSet19 attached property.</summary>
      <returns>The identifier for the StylisticSet19 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet1Property">
      <summary>Identifies the StylisticSet1 attached property.</summary>
      <returns>The identifier for the StylisticSet1 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet20Property">
      <summary>Identifies the StylisticSet20 attached property.</summary>
      <returns>The identifier for the StylisticSet20 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet2Property">
      <summary>Identifies the StylisticSet2 attached property.</summary>
      <returns>The identifier for the StylisticSet2 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet3Property">
      <summary>Identifies the StylisticSet3 attached property.</summary>
      <returns>The identifier for the StylisticSet3 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet4Property">
      <summary>Identifies the StylisticSet4 attached property.</summary>
      <returns>The identifier for the StylisticSet4 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet5Property">
      <summary>Identifies the StylisticSet5 attached property.</summary>
      <returns>The identifier for the StylisticSet5 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet6Property">
      <summary>Identifies the StylisticSet6 attached property.</summary>
      <returns>The identifier for the StylisticSet6 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet7Property">
      <summary>Identifies the StylisticSet7 attached property.</summary>
      <returns>The identifier for the StylisticSet7 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet8Property">
      <summary>Identifies the StylisticSet8 attached property.</summary>
      <returns>The identifier for the StylisticSet8 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.StylisticSet9Property">
      <summary>Identifies the StylisticSet9 attached property.</summary>
      <returns>The identifier for the StylisticSet9 attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Documents.Typography.VariantsProperty">
      <summary>Identifies the Variants attached property.</summary>
      <returns>The identifier for the Variants attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetAnnotationAlternates(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the AnnotationAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the AnnotationAlternates property.</param>
      <returns>The current value of the AnnotationAlternates attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetCapitals(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the Capitals  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the Capitals property.</param>
      <returns>The current value of the Capitals attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetCapitalSpacing(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the CapitalSpacing  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the CapitalSpacing property.</param>
      <returns>The current value of the CapitalSpacing attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetCaseSensitiveForms(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the CaseSensitiveForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the CaseSensitiveForms property.</param>
      <returns>The current value of the CaseSensitiveForms attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetContextualAlternates(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the ContextualAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the ContextualAlternates property.</param>
      <returns>The current value of the ContextualAlternates attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetContextualLigatures(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the ContextualLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the ContextualLigatures property.</param>
      <returns>The current value of the ContextualLigatures attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetContextualSwashes(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the ContextualSwashes  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the ContextualSwashes property.</param>
      <returns>The current value of the ContextualSwashes attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetDiscretionaryLigatures(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the DiscretionaryLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the DiscretionaryLigatures property.</param>
      <returns>The current value of the DiscretionaryLigatures attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetEastAsianExpertForms(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the EastAsianExpertForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the EastAsianExpertForms property.</param>
      <returns>The current value of the EastAsianExpertForms attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetEastAsianLanguage(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the EastAsianLanguage  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the EastAsianLanguage property.</param>
      <returns>The current value of the EastAsianLanguage attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetEastAsianWidths(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the EastAsianWidths  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the EastAsianWidths property.</param>
      <returns>The current value of the EastAsianWidths attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetFraction(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the Fraction  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the Fraction property.</param>
      <returns>The current value of the Fraction attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetHistoricalForms(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the HistoricalForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the HistoricalForms property.</param>
      <returns>The current value of the HistoricalForms attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetHistoricalLigatures(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the HistoricalLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the HistoricalLigatures property.</param>
      <returns>The current value of the HistoricalLigatures attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetKerning(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the Kerning  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the Kerning property.</param>
      <returns>The current value of the Kerning attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetMathematicalGreek(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the MathematicalGreek  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the MathematicalGreek property.</param>
      <returns>The current value of the MathematicalGreek attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetNumeralAlignment(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the NumeralAlignment  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the NumeralAlignment property.</param>
      <returns>The current value of the NumeralAlignment attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetNumeralStyle(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the NumeralStyle  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the NumeralStyle property.</param>
      <returns>The current value of the NumeralStyle attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetSlashedZero(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the SlashedZero  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the SlashedZero property.</param>
      <returns>The current value of the SlashedZero attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStandardLigatures(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StandardLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StandardLigatures property.</param>
      <returns>The current value of the StandardLigatures attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStandardSwashes(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StandardSwashes  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StandardSwashes property.</param>
      <returns>The current value of the StandardSwashes attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticAlternates(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticAlternates property.</param>
      <returns>The current value of the StylisticAlternates attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet1(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet1  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet1 property.</param>
      <returns>The current value of the StylisticSet1 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet10(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet10  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet10 property.</param>
      <returns>The current value of the StylisticSet10 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet11(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet11  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet11 property.</param>
      <returns>The current value of the StylisticSet11 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet12(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet12  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet12 property.</param>
      <returns>The current value of the StylisticSet12 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet13(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet13  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet13 property.</param>
      <returns>The current value of the StylisticSet13 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet14(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet14  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet14 property.</param>
      <returns>The current value of the StylisticSet14 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet15(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet15  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet15 property.</param>
      <returns>The current value of the StylisticSet15 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet16(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet16  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet16 property.</param>
      <returns>The current value of the StylisticSet16 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet17(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet17  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet17 property.</param>
      <returns>The current value of the StylisticSet17 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet18(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet18  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet18 property.</param>
      <returns>The current value of the StylisticSet18 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet19(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet19  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet19 property.</param>
      <returns>The current value of the StylisticSet19 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet2(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet2  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet2 property.</param>
      <returns>The current value of the StylisticSet2 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet20(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet20  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet20 property.</param>
      <returns>The current value of the StylisticSet20 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet3(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet3  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet3 property.</param>
      <returns>The current value of the StylisticSet3 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet4(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet4  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet4 property.</param>
      <returns>The current value of the StylisticSet4 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet5(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet5  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet5 property.</param>
      <returns>The current value of the StylisticSet5 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet6(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet6  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet6 property.</param>
      <returns>The current value of the StylisticSet6 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet7(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet7  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet7 property.</param>
      <returns>The current value of the StylisticSet7 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet8(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet8  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet8 property.</param>
      <returns>The current value of the StylisticSet8 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetStylisticSet9(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the StylisticSet9  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the StylisticSet9 property.</param>
      <returns>The current value of the StylisticSet9 attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.GetVariants(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the value of the Variants  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to retrieve the value of the Variants property.</param>
      <returns>The current value of the Variants attached property on the specified dependency object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetAnnotationAlternates(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the AnnotationAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the AnnotationAlternates property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetCapitals(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontCapitals)">
      <summary>Sets the value of the Capitals  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the Capitals property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetCapitalSpacing(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the CapitalSpacing  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the CapitalSpacing property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetCaseSensitiveForms(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the CaseSensitiveForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the CaseSensitiveForms property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetContextualAlternates(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the ContextualAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the ContextualAlternates property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetContextualLigatures(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the ContextualLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the ContextualLigatures property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetContextualSwashes(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the ContextualSwashes  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the ContextualSwashes property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetDiscretionaryLigatures(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the DiscretionaryLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the DiscretionaryLigatures property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetEastAsianExpertForms(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the EastAsianExpertForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the EastAsianExpertForms property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetEastAsianLanguage(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontEastAsianLanguage)">
      <summary>Sets the value of the EastAsianLanguage  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the EastAsianLanguage property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetEastAsianWidths(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontEastAsianWidths)">
      <summary>Sets the value of the EastAsianWidths  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the EastAsianWidths property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetFraction(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontFraction)">
      <summary>Sets the value of the Fraction  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the Fraction property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetHistoricalForms(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the HistoricalForms  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the HistoricalForms property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetHistoricalLigatures(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the HistoricalLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the HistoricalLigatures property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetKerning(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the Kerning  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the Kerning property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetMathematicalGreek(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the MathematicalGreek  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the MathematicalGreek property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetNumeralAlignment(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontNumeralAlignment)">
      <summary>Sets the value of the NumeralAlignment  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the NumeralAlignment property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetNumeralStyle(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontNumeralStyle)">
      <summary>Sets the value of the NumeralStyle  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the NumeralStyle property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetSlashedZero(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the SlashedZero  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the SlashedZero property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStandardLigatures(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StandardLigatures  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StandardLigatures property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStandardSwashes(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the StandardSwashes  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StandardSwashes property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticAlternates(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Sets the value of the StylisticAlternates  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticAlternates property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet1(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet1  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet1 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet10(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet10  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet10 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet11(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet11  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet11 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet12(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet12  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet12 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet13(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet13  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet13 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet14(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet14  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet14 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet15(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet15  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet15 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet16(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet16  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet16 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet17(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet17  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet17 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet18(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet18  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet18 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet19(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet19  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet19 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet2(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet2  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet2 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet20(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet20  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet20 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet3(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet3  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet3 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet4(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet4  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet4 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet5(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet5  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet5 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet6(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet6  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet6 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet7(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet7  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet7 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet8(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet8  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet8 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetStylisticSet9(Microsoft.UI.Xaml.DependencyObject,System.Boolean)">
      <summary>Sets the value of the StylisticSet9  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the StylisticSet9 property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Typography.SetVariants(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FontVariants)">
      <summary>Sets the value of the Variants  attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the Variants property.</param>
      <param name="value">The new value to set the property to.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.Underline">
      <summary>Provides an inline-level content element that causes content to render with an underlined text decoration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Documents.Underline.#ctor">
      <summary>Initializes a new instance of the Underline class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Documents.UnderlineStyle">
      <summary>Defines constants that specify the look of the underline used for an element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.UnderlineStyle.None">
      <summary>The element is not underlined.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Documents.UnderlineStyle.Single">
      <summary>The element is underlined with a single, solid line.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview">
      <summary>Enables access to composition visual objects that back XAML elements in the XAML composition tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.GetElementChildVisual(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves a Microsoft.UI.Composition.Visual object previously set by a call to SetElementChildVisual.</summary>
      <param name="element">The element to retrieve the Visual for.</param>
      <returns>A Microsoft.UI.Composition.Visual object previously set by a call to SetElementChildVisual.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.GetElementVisual(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves the Microsoft.UI.Composition.Visual object that backs a XAML element in the XAML composition tree.</summary>
      <param name="element">The element to retrieve the Visual for.</param>
      <returns>The Microsoft.UI.Composition.Visual object that backs the XAML element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.GetPointerPositionPropertySet(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves the pointer position relative to a UIElement.</summary>
      <param name="targetElement">The element that the pointer position is relative to.</param>
      <returns>The position properties of the pointer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.GetScrollViewerManipulationPropertySet(Microsoft.UI.Xaml.Controls.ScrollViewer)">
      <summary>Retrieves the composition properties of a ScrollViewer element.</summary>
      <param name="scrollViewer">The ScrollViewer element to get the composition properties for.</param>
      <returns>The composition properties of the specified ScrollViewer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.SetElementChildVisual(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Composition.Visual)">
      <summary>Sets a custom Microsoft.UI.Composition.Visual as the last child of the element’s visual tree.</summary>
      <param name="element">The element to add the child Visual to.</param>
      <param name="visual">The Visual to add to the element's visual tree.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.SetImplicitHideAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Associates the specified hide animation with a UIElement.</summary>
      <param name="element">The UIElement to associate the animation with.</param>
      <param name="animation">The animation to play when the UIElement is hidden. A **Null** value prevents hide animations from playing for this element until the method is called again with an animation value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.SetImplicitShowAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Associates the specified show animation with a UIElement.</summary>
      <param name="element">The UIElement to associate the animation with.</param>
      <param name="animation">The animation to play when the UIElement is shown. A **Null** value prevents show animations from playing for this element until the method is called again with an animation value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Hosting.ElementCompositionPreview.SetIsTranslationEnabled(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Toggles the ability to set, animate, and use a render-time post-layout translate transform to position XAML elements on screen using Composition APIs.</summary>
      <param name="element">The element on which to enable or disable translate transforms.</param>
      <param name="value">**true** to enable translate transforms; **false** to disable translate transforms.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs">
      <summary>Provides event data for the AccessKeyDisplayDismissed event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs.#ctor">
      <summary>Initializes a new instance of the AccessKeyDisplayDismissedEventArgs class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs">
      <summary>Provides event data for the AccessKeyDisplayRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the AccessKeyDisplayRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs.PressedKeys">
      <summary>Gets the keys that were pressed to start the access key sequence.</summary>
      <returns>The keys that were pressed to start the access key sequence.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs">
      <summary>Provides event data for the AccessKeyInvoked event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs.#ctor">
      <summary>Initializes a new instance of the AccessKeyInvokedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.AccessKeyManager">
      <summary>A helper class that enables access keys (mnemonics) for XAML user interfaces.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.AccessKeyManager.AreKeyTipsEnabled">
      <summary>Gets or sets a value that specifies whether KeyTips are shown for access keys.</summary>
      <returns>**true** to show KeyTips; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.AccessKeyManager.IsDisplayModeEnabled">
      <summary>Gets a value that indicates whether the app has started an access key sequence.</summary>
      <returns>**true** if an access key sequence has started; otherwise, **false**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.AccessKeyManager.IsDisplayModeEnabledChanged">
      <summary>Occurs when the app enters or exits an access key sequence.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.AccessKeyManager.ExitDisplayMode">
      <summary>Causes the app to exit an access key sequence.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs">
      <summary>Provides event data for the CanExecuteRequested event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs.CanExecute">
      <summary>Gets or sets a value indicating whether the ICommand that raised this event is able to execute.</summary>
      <returns>**true** if the ICommand is able to execute; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs.Parameter">
      <summary>Gets the command parameter passed into the CanExecute method that raised this event.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs">
      <summary>Provides event data for the UIElement.CharacterReceived  routed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs.Character">
      <summary>Gets the composed character associated with the UIElement.CharacterReceived event. </summary>
      <returns>The composed character associated with the UIElement.CharacterReceived event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs.KeyStatus">
      <summary>Gets the status of the physical key that raised the character-received event.</summary>
      <returns>The status of the key that was pressed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ContextRequestedEventArgs">
      <summary>Provides event data for the ContextRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ContextRequestedEventArgs.#ctor">
      <summary>Initializes a new instance of the ContextRequestedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ContextRequestedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ContextRequestedEventArgs.TryGetPosition(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Point@)">
      <summary>Gets the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied UIElement.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <param name="point">A Point that represents the current x- and y-coordinates of the mouse pointer position. If **null** was passed as *relativeTo*, this coordinate is for the overall window. If a *relativeTo* value other than **null** was passed, this coordinate is relative to the object referenced by *relativeTo*.</param>
      <returns>**true** if the context request was initiated by a pointer device; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.DoubleTappedEventHandler">
      <summary>Represents the method that will handle the DoubleTapped event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs">
      <summary>Provides event data for the DoubleTapped event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the DoubleTappedRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device that initiated the associated input event.</summary>
      <returns>The PointerDeviceType for this event occurrence.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied UIElement.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <returns>A Point that represents the current x- and y-coordinates of the mouse pointer position. If **null** was passed as *relativeTo*, this coordinate is for the overall window. If a *relativeTo* value other than **null** was passed, this coordinate is relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs">
      <summary>Provides event data for the ExecuteRequested event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs.Parameter">
      <summary>Gets the command parameter passed into the Execute method that raised this event.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FindNextElementOptions">
      <summary>Provides options to help identify the next element that can programmatically receive navigation focus.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FindNextElementOptions.#ctor">
      <summary>Initializes a new instance of the FindNextElementOptions class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FindNextElementOptions.ExclusionRect">
      <summary>Gets or sets a bounding rectangle where all overlapping navigation candidates are excluded from navigation focus.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FindNextElementOptions.HintRect">
      <summary>Gets or sets a bounding rectangle used to identify the focus candidates most likely to receive navigation focus.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FindNextElementOptions.SearchRoot">
      <summary>Gets or sets the object that must be the root from which to identify the next focus candidate to receive navigation focus.</summary>
      <returns>The root object. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FindNextElementOptions.XYFocusNavigationStrategyOverride">
      <summary>Gets or sets the focus navigation strategy used to identify the best candidate element to receive focus.</summary>
      <returns>The focus navigation strategy.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusInputDeviceKind">
      <summary>Specifies the input device types from which input events are received.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.GameController">
      <summary>Game controller/remote control input device.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.Keyboard">
      <summary>Keyboard input device.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.Mouse">
      <summary>Mouse input device.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.None">
      <summary>No input. Used only when the focus is moved programmatically.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.Pen">
      <summary>Pen input device.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusInputDeviceKind.Touch">
      <summary>Touch input device.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusManager">
      <summary>A helper class that enables global management of focus actions and events across all elements in an application.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.FocusManager.GettingFocus">
      <summary>Occurs before an element actually receives focus. This event is raised synchronously to ensure focus isn't moved while the event is bubbling.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.FocusManager.GotFocus">
      <summary>Occurs when an element within a container element (a focus scope) receives focus. This event is raised asynchronously, so focus might move before bubbling is complete.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.FocusManager.LosingFocus">
      <summary>Occurs before focus moves from the current element with focus to the target element. This event is raised synchronously to ensure focus isn't moved while the event is bubbling.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.FocusManager.LostFocus">
      <summary>Occurs when an element within a container element (a focus scope) loses focus. This event is raised asynchronously, so focus might move again before bubbling is complete.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindFirstFocusableElement(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Retrieves the first element that can receive focus based on the specified scope.</summary>
      <param name="searchScope">The root object from which to search. If **null**, the search scope is the current window.</param>
      <returns>The first focusable object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindLastFocusableElement(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Retrieves the last element that can receive focus based on the specified scope.</summary>
      <param name="searchScope">The root object from which to search. If **null**, the search scope is the current window.</param>
      <returns>The last focusable object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindNextElement(Microsoft.UI.Xaml.Input.FocusNavigationDirection)">
      <summary>Retrieves the element that should receive focus based on the specified navigation direction.</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the app UI.</param>
      <returns>The next object to receive focus.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindNextElement(Microsoft.UI.Xaml.Input.FocusNavigationDirection,Microsoft.UI.Xaml.Input.FindNextElementOptions)">
      <summary>Retrieves the element that should receive focus based on the specified navigation direction (cannot be used with tab navigation, see remarks).</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the app UI.</param>
      <param name="focusNavigationOptions">The options to help identify the next element to receive focus with keyboard/controller/remote navigation.</param>
      <returns>The next object to receive focus.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindNextFocusableElement(Microsoft.UI.Xaml.Input.FocusNavigationDirection)">
      <summary>Retrieves the element that should receive focus based on the specified navigation direction.</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the application UI.</param>
      <returns>**null** if focus cannot be set in the specified direction.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.FindNextFocusableElement(Microsoft.UI.Xaml.Input.FocusNavigationDirection,Windows.Foundation.Rect)">
      <summary>Retrieves the element that should receive focus based on the specified navigation direction and hint rectangle.</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the app UI.</param>
      <param name="hintRect">A bounding rectangle used to influence which element is most likely to be considered the next to receive focus. Examples where this can be useful include:</param>
      <returns>**null** if focus cannot be set in the specified direction.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.GetFocusedElement">
      <summary>Retrieves the element in the UI that has focus.</summary>
      <returns>The object that has focus. Typically, this is a Control class.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.GetFocusedElement(Microsoft.UI.Xaml.XamlRoot)">
      <summary>
      </summary>
      <param name="xamlRoot">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.TryFocusAsync(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.FocusState)">
      <summary>Asynchronously attempts to set focus on an element when the application is initialized.</summary>
      <param name="element">The object on which to set focus.</param>
      <param name="value">One of the values from the FocusState enumeration that specify how an elemnent can obtain focus.</param>
      <returns>The FocusMovementResult that indicates whether focus was successfully set.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.TryMoveFocus(Microsoft.UI.Xaml.Input.FocusNavigationDirection)">
      <summary>Attempts to change focus from the element with focus to the next focusable element in the specified direction.</summary>
      <param name="focusNavigationDirection">The direction to traverse (in tab order).</param>
      <returns>**true** if focus moved; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.TryMoveFocus(Microsoft.UI.Xaml.Input.FocusNavigationDirection,Microsoft.UI.Xaml.Input.FindNextElementOptions)">
      <summary>Attempts to change focus from the element with focus to the next focusable element in the specified direction, using the specified navigation options.</summary>
      <param name="focusNavigationDirection">The direction to traverse (in tab order).</param>
      <param name="focusNavigationOptions">The options to help identify the next element to receive focus with keyboard/controller/remote navigation.</param>
      <returns>**true** if focus moved; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.TryMoveFocusAsync(Microsoft.UI.Xaml.Input.FocusNavigationDirection)">
      <summary>Asynchronously attempts to change focus from the current element with focus to the next focusable element in the specified direction.</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the app UI.</param>
      <returns>The FocusMovementResult that indicates whether focus was successfully set.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.FocusManager.TryMoveFocusAsync(Microsoft.UI.Xaml.Input.FocusNavigationDirection,Microsoft.UI.Xaml.Input.FindNextElementOptions)">
      <summary>Asynchronously attempts to change focus from the current element with focus to the next focusable element in the specified direction and subject to the specified navigation options.</summary>
      <param name="focusNavigationDirection">The direction that focus moves from element to element within the app UI.</param>
      <param name="focusNavigationOptions">The navigation options used to identify the focus candidate.</param>
      <returns>The FocusMovementResult that indicates whether focus was successfully set.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs">
      <summary>Provides data for the GotFocus event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs.CorrelationId">
      <summary>Gets the unique ID generated when a focus movement event is initiated.</summary>
      <returns>The unique ID, if any. Otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs.NewFocusedElement">
      <summary>Gets the most recent focused element.</summary>
      <returns>The most recent focused element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs">
      <summary>Provides data for the LostFocus event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs.CorrelationId">
      <summary>Gets the unique ID generated when a focus movement event is initiated.</summary>
      <returns>The unique ID, if any. Otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs.OldFocusedElement">
      <summary>Gets the last focused element.</summary>
      <returns>The last focused element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusMovementResult">
      <summary>Represents the status of a focus operation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.FocusMovementResult.Succeeded">
      <summary>Gets a boolean value that indicates whether focus can be assigned to an object.</summary>
      <returns>True, if focus can be assigned; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.FocusNavigationDirection">
      <summary>Specifies the direction that you can programmatically move focus from one element to another element within the app UI.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Down">
      <summary>An element below the element with focus. </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Left">
      <summary>An element to the left of the element with focus. </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Next">
      <summary>The next element in the tab order.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.None">
      <summary>No change in focus.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Previous">
      <summary>The previous element in the tab order.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Right">
      <summary>An element to the right of the element with focus. </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.FocusNavigationDirection.Up">
      <summary>An element above the element with focus. </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.GettingFocusEventArgs">
      <summary>Provides data for the FocusManager.GettingFocus and UIElement.GettingFocus events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.Cancel">
      <summary>Gets or sets whether focus navigation should be canceled.</summary>
      <returns>**true** if focus navigation should be canceled. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.CorrelationId">
      <summary>Gets the unique ID generated when a focus movement event is initiated.</summary>
      <returns>The unique ID, if any. Otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.Direction">
      <summary>Gets the direction that focus moved from element to element within the app UI.</summary>
      <returns>The direction of focus movement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.FocusState">
      <summary>Gets the input mode through which an element obtained focus.</summary>
      <returns>How the element obtained focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.InputDevice">
      <summary>Gets the input device type from which input events are received.</summary>
      <returns>The input device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.NewFocusedElement">
      <summary>Gets the most recent focused object.</summary>
      <returns>The most recent focused object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.OldFocusedElement">
      <summary>Gets the last focused object.</summary>
      <returns>The last focused object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.TryCancel">
      <summary>Attempts to cancel the ongoing focus action.</summary>
      <returns>True, if the focus action is canceled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.GettingFocusEventArgs.TrySetNewFocusedElement(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Attempts to redirect focus to the specified element instead of the original targeted element.</summary>
      <param name="element">The object on which to set focus.</param>
      <returns>True, if the focus action is redirected; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.HoldingEventHandler">
      <summary>Represents the method that will handle the Holding event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs">
      <summary>Provides event data for the Holding event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the HoldingRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs.HoldingState">
      <summary>Gets the underlying HoldingState for the interaction</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device that initiated the associated input event.</summary>
      <returns>The PointerDeviceType for this event occurrence.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied UIElement.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <returns>A Point that represents the current x- and y-coordinates of the mouse pointer position. If **null** was passed as *relativeTo*, this coordinate is for the overall window. If a *relativeTo* value other than **null** was passed, this coordinate is relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ICommand">
      <summary>Defines the command behavior of an interactive UI element that performs an action when invoked, such as sending an email, deleting an item, or submitting a form.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.ICommand.CanExecuteChanged">
      <summary>Occurs whenever something happens that affects whether the command can execute.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ICommand.CanExecute(System.Object)">
      <summary>Retrieves whether the command can execute in its current state.</summary>
      <param name="parameter">Data used by the command. If the command does not require data, this object can be set to null.</param>
      <returns>**true** if this command can be executed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ICommand.Execute(System.Object)">
      <summary>Defines the method to be called when the command is invoked.</summary>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this value can be null.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InertiaExpansionBehavior">
      <summary>Controls the deceleration of a resizing manipulation during inertia.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredDeceleration">
      <summary>Gets or sets the rate that resizing slows.</summary>
      <returns>The rate that resizing slows.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredExpansion">
      <summary>Gets or sets the amount the element resizes at the end of inertia.</summary>
      <returns>The amount the element resizes at the end of inertia.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InertiaRotationBehavior">
      <summary>Controls the deceleration of a rotation manipulation during inertia.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredDeceleration">
      <summary>Gets or sets the rate the rotation slows in degrees per squared millisecond.</summary>
      <returns>The rate the rotation slows in degrees per squared millisecond.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredRotation">
      <summary>Gets or sets the rotation, in degrees, at the end of the inertial movement.</summary>
      <returns>The rotation, in degrees, at the end of the inertial movement.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InertiaTranslationBehavior">
      <summary>Controls deceleration on a translation manipulation during inertia.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDeceleration">
      <summary>Gets or sets the rate the linear movement slows in device-independent units (1/96th inch per unit) per squared millisecond.</summary>
      <returns>The rate the linear movement slows in device-independent units (1/96th inch per unit) per squared millisecond.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDisplacement">
      <summary>Gets or sets the linear movement of the manipulation at the end of inertia.</summary>
      <returns>The linear movement of the manipulation at the end of inertia.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InputScope">
      <summary>Represents information related to the data provided by an input method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.InputScope.#ctor">
      <summary>Initializes a new instance of the InputScope class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InputScope.Names">
      <summary>Gets a collection of valid InputScopeName items that are relevant to this InputScope.</summary>
      <returns>A collection of valid InputScopeName items. Valid input scope names are specifed by the InputScopeNameValue enumeration.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InputScopeName">
      <summary>Identifies a particular named input scope that is relevant to an overall InputScope.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.InputScopeName.#ctor">
      <summary>Initializes a new instance of the InputScopeName class with no initial value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.InputScopeName.#ctor(Microsoft.UI.Xaml.Input.InputScopeNameValue)">
      <summary>Initializes a new instance of the InputScopeName class, using an input name based on the InputScopeNameValue enumeration.</summary>
      <param name="nameValue">An input name based on the InputScopeNameValue enumeration.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.InputScopeName.NameValue">
      <summary>Gets or sets the specific input scope name value for this InputScopeName.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.InputScopeNameValue">
      <summary>Specifies a particular named input mode (InputScopeName ) used to populate an InputScope.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.AlphanumericFullWidth">
      <summary>Input scope is intended for alphanumeric full-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.AlphanumericHalfWidth">
      <summary>Input scope is intended for alphanumeric half-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.AlphanumericPin">
      <summary>Expected input is an alphanumeric PIN.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Chat">
      <summary>Input scope is intended for chat strings.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.ChatWithoutEmoji">
      <summary>Expected input does not include emoji. Advises input processors to not show the emoji key.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.ChineseFullWidth">
      <summary>Input scope is intended for Chinese full-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.ChineseHalfWidth">
      <summary>Input scope is intended for Chinese half-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.CurrencyAmount">
      <summary>Input scope is intended for working with a currency amount (no currency symbol).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.CurrencyAmountAndSymbol">
      <summary>Input scope is intended for working with amount and symbol of currency.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.DateDayNumber">
      <summary>Input scope is intended for working with a numeric day of the month.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.DateMonthNumber">
      <summary>Input scope is intended for working with a numeric month of the year.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.DateYear">
      <summary>Input scope is intended for working with a numeric year.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Default">
      <summary>No input scope is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Digits">
      <summary>Input scope is intended for working with a collection of numbers.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.EmailNameOrAddress">
      <summary>Input scope is intended for working with an email name or full email address.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.EmailSmtpAddress">
      <summary>Input scope is intended for working with a Simple Mail Transport Protocol (SMTP) form e-mail address (accountnamehost).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Formula">
      <summary>Input scope is intended for spreadsheet formula strings.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.FormulaNumber">
      <summary>Expected input is a mathematical formula. Advises input processors to show the number page.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.HangulFullWidth">
      <summary>Input scope is intended for Hangul full-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.HangulHalfWidth">
      <summary>Input scope is intended for Hangul half-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Hanja">
      <summary>Input scope is intended for Hanja characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Hiragana">
      <summary>Input scope is intended for Hiragana characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.KatakanaFullWidth">
      <summary>Input scope is intended for Katakana full-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.KatakanaHalfWidth">
      <summary>Input scope is intended for Katakana half-width characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Maps">
      <summary>Input scope is intended for working with a map location.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.NameOrPhoneNumber">
      <summary>Input scope is intended for working with a name or telephone number.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.NativeScript">
      <summary>Input scope is intended for native script.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Number">
      <summary>Input scope is intended for working with digits 0-9.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.NumberFullWidth">
      <summary>Input scope is intended for full-width number characters.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.NumericPassword">
      <summary>Expected input is a numeric password, or PIN.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.NumericPin">
      <summary>Expected input is a numeric PIN.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Password">
      <summary>Input scope is intended for working with an alphanumeric password, including other symbols, such as punctuation and mathematical symbols.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.PersonalFullName">
      <summary>Input scope is intended for working with a complete personal name.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Search">
      <summary>Input scope is intended for search strings.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.SearchIncremental">
      <summary>Input scope is intended for search boxes where incremental results are displayed as the user types.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TelephoneAreaCode">
      <summary>Input scope is intended for working with a numeric telephone area code.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TelephoneCountryCode">
      <summary>Input scope is intended for working with a numeric telephone country code.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TelephoneLocalNumber">
      <summary>Input scope is intended for working with a local telephone number.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TelephoneNumber">
      <summary>Input scope is intended for working with telephone numbers.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Text">
      <summary>Input scope is intended for working with text.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TimeHour">
      <summary>Input scope is intended for working with a numeric hour of the day.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.TimeMinutesOrSeconds">
      <summary>Input scope is intended for working with a numeric minute of the hour, or second of the minute.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.InputScopeNameValue.Url">
      <summary>Indicates a Uniform Resource Identifier (URI). This can include URL, File, or File Transfer Protocol (FTP) formats.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyboardAccelerator">
      <summary>Represents a keyboard shortcut (or accelerator) that lets a user perform an action using the keyboard instead of navigating the app UI (directly or through access keys). </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.KeyboardAccelerator.#ctor">
      <summary>Initializes a new instance of the KeyboardAccelerator class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.IsEnabled">
      <summary>Gets or sets whether a keyboard shortcut (accelerator) is available to the user.</summary>
      <returns>**true** if the shortcut is available; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.IsEnabledProperty">
      <summary>Identifies the IsEnabled dependency property.</summary>
      <returns>The identifier for the IsEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.Key">
      <summary>Gets or sets the virtual key (used in conjunction with one or more modifier keys) for a keyboard shortcut (accelerator).</summary>
      <returns>The virtual key.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.KeyProperty">
      <summary>Identifies the Key dependency property.</summary>
      <returns>The identifier for the Key dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.Modifiers">
      <summary>Gets or sets the virtual key used to modify another keypress for a keyboard shortcut (accelerator).</summary>
      <returns>The virtual key.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.ModifiersProperty">
      <summary>Identifies the Modifiers dependency property.</summary>
      <returns>The identifier for the Modifiers dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner">
      <summary>Gets or sets the scope (or target) of the keyboard accelerator.</summary>
      <returns>The default is null (global scope).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwnerProperty">
      <summary>Identifies the ScopeOwner dependency property.</summary>
      <returns>The identifier for the ScopeOwner dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.KeyboardAccelerator.Invoked">
      <summary>Occurs when the key combination for this KeyboardAccelerator is pressed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs">
      <summary>Provides event data for the Invoked event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs.Element">
      <summary>Gets the object associated with the keyboard shortcut (or accelerator).</summary>
      <returns>A reference to the object associated with the keyboard shortcut (or accelerator).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs.Handled">
      <summary>Gets or sets a value that marks the event as handled.</summary>
      <returns>**true** to mark the event handled; **false** to leave the event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs.KeyboardAccelerator">
      <summary>Gets the keyboard shortcut (or accelerator) object associated with the Invoked event.</summary>
      <returns>
      </returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode">
      <summary>Defines constants that specify whether a keyboard shortcut (accelerator) is displayed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode.Auto">
      <summary>The keyboard accelerator is displayed. Default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode.Hidden">
      <summary>The keyboard accelerator is not shown.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyboardNavigationMode">
      <summary>Specifies the tabbing behavior across tab stops for a tabbing sequence within a container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Cycle">
      <summary>Focus returns to the first or the last keyboard navigation stop inside of a container when the first or last keyboard navigation stop is reached.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Local">
      <summary>Tab indexes are considered on the local subtree only inside this container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyboardNavigationMode.Once">
      <summary>The container and all of its child elements as a whole receive focus only once.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyEventHandler">
      <summary>Represents the method that handles the KeyUp and KeyDown  events.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs">
      <summary>Provides event data for the KeyUp and KeyDown routed events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs.DeviceId">
      <summary>Gets a unique ID for the input device that generated this key event.</summary>
      <returns>A unique identifier for the input device associated with the key event, or an empty string for an unsupported device. The same device can be assigned a different ID each time it is connected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs.Key">
      <summary>Gets the virtual key associated with the event.</summary>
      <returns>A system value that indicates the code for the key referenced by the event.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs.KeyStatus">
      <summary>Gets a structure value that reports various system-detected characteristics of the key press, including repeat count and menu status.</summary>
      <returns>A structure value with flags that report status.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.KeyRoutedEventArgs.OriginalKey">
      <summary>Gets the original, unmapped virtual key associated with the event.</summary>
      <returns>A system value that indicates the code for the key referenced by the event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.KeyTipPlacementMode">
      <summary>Defines constants that specify where a Key Tip is placed in relation to a UIElement.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Auto">
      <summary>The placement of the Key Tip is determined by the system.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Bottom">
      <summary>The Key Tip is placed below the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Center">
      <summary>The Key Tip is centered on the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Hidden">
      <summary>The Key Tip is not shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Left">
      <summary>The Key Tip is placed left of the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Right">
      <summary>The Key Tip is placed right of the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.KeyTipPlacementMode.Top">
      <summary>The Key Tip is placed above the element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.LosingFocusEventArgs">
      <summary>Provides data for the FocusManager.LosingFocus and UIElement.LosingFocus events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.Cancel">
      <summary>Gets or sets whether focus navigation should be canceled.</summary>
      <returns>**true** if focus navigation should be canceled. Otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.CorrelationId">
      <summary>Gets the unique ID generated when a focus movement event is initiated.</summary>
      <returns>The unique ID, if any. Otherwise, **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.Direction">
      <summary>Gets the direction that focus moved from element to element within the app UI.</summary>
      <returns>The direction of focus movement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.FocusState">
      <summary>Gets the input mode through which an element obtained focus.</summary>
      <returns>How the element obtained focus.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.InputDevice">
      <summary>Gets the input device type from which input events are received.</summary>
      <returns>The input device type.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.NewFocusedElement">
      <summary>Gets the most recent focused object.</summary>
      <returns>The most recent focused object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.OldFocusedElement">
      <summary>Gets the last focused object.</summary>
      <returns>The last focused object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.TryCancel">
      <summary>Attempts to cancel the ongoing focus action.</summary>
      <returns>True, if the focus action is canceled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.LosingFocusEventArgs.TrySetNewFocusedElement(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Attempts to redirect focus from the targeted element to the specified element.</summary>
      <param name="element">The object on which to set focus.</param>
      <returns>True, if the focus action is redirected; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler">
      <summary>Represents the method that will handle ManipulationCompleted and related events.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs">
      <summary>Provides data for the ManipulationCompleted event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the ManipulationCompletedRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.Container">
      <summary>Gets the UIElement that is considered the container of the manipulation.</summary>
      <returns>The UIElement that is considered the container of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.Cumulative">
      <summary>Gets the overall changes since the beginning of the manipulation.</summary>
      <returns>The overall changes since the beginning of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.IsInertial">
      <summary>Gets whether the ManipulationCompleted event occurs during inertia.</summary>
      <returns>**true** if the ManipulationCompleted event occurs during inertia; **false** if the event occurs while the user's input device has contact with the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device involved in the manipulation.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.Position">
      <summary>Gets the x- and y- screen coordinates of the touch input at completed position.</summary>
      <returns>The x- and y- screen coordinates of the touch input at completed position.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs.Velocities">
      <summary>Gets the velocities that are used for the manipulation.</summary>
      <returns>The velocities that are used for the manipulation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler">
      <summary>Represents the method that will handle ManipulationDelta and related events.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs">
      <summary>Provides data for the ManipulationDelta event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the ManipulationDeltaRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Container">
      <summary>Gets the UIElement that is considered the container of the manipulation.</summary>
      <returns>The UIElement that is considered the container of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Cumulative">
      <summary>Gets the overall changes since the beginning of the manipulation.</summary>
      <returns>The overall changes since the beginning of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Delta">
      <summary>Gets the most recent changes of the current manipulation, as a ManipulationDelta.</summary>
      <returns>The most recent changes of the current manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.IsInertial">
      <summary>Gets whether the ManipulationDelta event occurs during inertia.</summary>
      <returns>**true** if the ManipulationDelta event occurs during inertia; **false** if the event occurs while the user's input device has contact with the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device involved in the manipulation.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Position">
      <summary>Gets the point from which the manipulation originated.</summary>
      <returns>The point from which the manipulation originated.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Velocities">
      <summary>Gets the rates of the most recent changes to the manipulation.</summary>
      <returns>The rates of the most recent changes to the manipulation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs.Complete">
      <summary>Completes the manipulation without inertia.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler">
      <summary>Represents the method that will handle the ManipulationInertiaStarting event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs">
      <summary>Provides data for the ManipulationInertiaStarting event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the ManipulationInertiaStartingRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.Container">
      <summary>Gets the UIElement that is considered the container of the manipulation.</summary>
      <returns>The UIElement that is considered the container of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.Cumulative">
      <summary>Gets the overall changes since the beginning of the manipulation.</summary>
      <returns>The overall changes since the beginning of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.Delta">
      <summary>Gets the most recent changes of the current manipulation, as a ManipulationDelta.</summary>
      <returns>The most recent changes of the current manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.ExpansionBehavior">
      <summary>Get or sets the rate of slowdown of expansion inertial movement.</summary>
      <returns>The rate of slowdown of expansion inertial movement</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device involved in the manipulation.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.RotationBehavior">
      <summary>Gets information about the rotation information associated with the manipulation for this event occurrence.</summary>
      <returns>Manipulation rotation information.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.TranslationBehavior">
      <summary>Gets information about the translation information associated with the manipulation for this event occurrence.</summary>
      <returns>Manipulation translation information.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs.Velocities">
      <summary>Gets the rates of the most recent changes to the manipulation.</summary>
      <returns>The rates of the most recent changes to the manipulation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationModes">
      <summary>Specifies how a target UI element interprets manipulation events. This enumeration is flagwise, so you can set multiple modes for the ManipulationMode property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.All">
      <summary>Enable all manipulation interaction modes except those supported through Direct Manipulation</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.None">
      <summary>Do not present graphic interaction with manipulation events.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.Rotate">
      <summary>Permit manipulation actions that rotate the target.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.RotateInertia">
      <summary>Apply inertia to rotate actions.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.Scale">
      <summary>Permit manipulation actions that scale the target.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.ScaleInertia">
      <summary>Apply inertia to scale actions.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.System">
      <summary>Enable system-driven touch interactions supported through Direct Manipulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.TranslateInertia">
      <summary>Apply inertia to translate actions.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.TranslateRailsX">
      <summary>Permit manipulation actions that translate the target on the X axis but using a rails mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.TranslateRailsY">
      <summary>Permit manipulation actions that translate the target on the Y axis but using a rails mode.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.TranslateX">
      <summary>Permit manipulation actions that translate the target on the X axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.ManipulationModes.TranslateY">
      <summary>Permit manipulation actions that translate the target on the Y axis.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationPivot">
      <summary>Specifies how a rotation occurs with one point of user input.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationPivot.#ctor">
      <summary>Initializes a new instance of the ManipulationPivot class with no initial values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationPivot.#ctor(Windows.Foundation.Point,System.Double)">
      <summary>Initializes a new instance of the ManipulationPivot class with the specified center and radius values.</summary>
      <param name="center">The center point of the pivot.</param>
      <param name="radius">The pivot radius.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationPivot.Center">
      <summary>Gets or sets the center point for rotation manipulations.</summary>
      <returns>The center point for rotation manipulations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationPivot.Radius">
      <summary>Gets or sets the effective radius of rotation for rotation manipulations.</summary>
      <returns>A value in pixels.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler">
      <summary>Represents the method that will handle ManipulationStarted and related events.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs">
      <summary>Provides data for the ManipulationStarted event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the ManipulationStartedRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.Container">
      <summary>Gets the UIElement that is considered the container of the manipulation.</summary>
      <returns>The UIElement that is considered the container of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.Cumulative">
      <summary>Gets the overall changes since the beginning of the manipulation.</summary>
      <returns>The overall changes since the beginning of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device involved in the manipulation.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.Position">
      <summary>Gets the point from which the manipulation originated.</summary>
      <returns>The point from which the manipulation originated.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs.Complete">
      <summary>Completes the manipulation without inertia.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler">
      <summary>Represents the method that will handle the ManipulationStarting event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs">
      <summary>Provides data for the ManipulationStarting, event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the ManipulationStartingRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs.Container">
      <summary>Gets the UIElement that is considered the container of the manipulation.</summary>
      <returns>The UIElement that is considered the container of the manipulation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs.Mode">
      <summary>Gets or sets which types of manipulations are possible.</summary>
      <returns>One of the enumeration values. The default is **All**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs.Pivot">
      <summary>Gets or sets an object that describes the pivot for a single-point manipulation.</summary>
      <returns>An object that describes the pivot for a single-point manipulation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs">
      <summary>Provides data for the NoFocusCandidateFound event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs.Direction">
      <summary>Gets the direction that focus moved from element to element within the app UI.</summary>
      <returns>The direction of focus movement.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs.InputDevice">
      <summary>Gets the input device type from which input events are received.</summary>
      <returns>The input device type.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.Pointer">
      <summary>Provides basic properties for the input pointer associated with a single mouse, pen/stylus, or touch contact.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.Pointer.IsInContact">
      <summary>Gets a value that determines whether the pointer device was in contact with a sensor or digitizer at the time that the event was reported.</summary>
      <returns>**true** if the pointer device was in contact; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.Pointer.IsInRange">
      <summary>Gets a value that indicates whether the pointer device is within detection range of a sensor or digitizer.</summary>
      <returns>**true** if touch or pen is within detection range or mouse is over; otherwise **false**</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.Pointer.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device.</summary>
      <returns>The PointerDeviceType for this pointer reference.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.Pointer.PointerId">
      <summary>Gets the system-generated identifier for this pointer reference.</summary>
      <returns>The system-generated identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.PointerEventHandler">
      <summary>Represents the method that will handle pointer message events such as PointerPressed.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs">
      <summary>Contains the arguments returned by the last pointer event message.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled, and prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.IsGenerated">
      <summary>Gets a value that indicates whether the pointer event occurred from direct interaction with an object by the user, or was generated by the platform based on changes to the UI of the application.</summary>
      <returns>True if the event was generated by the platform; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.KeyModifiers">
      <summary>Gets a value that indicates which key modifiers were active at the time that the pointer event was initiated.</summary>
      <returns>A value or values of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.Pointer">
      <summary>Gets a reference to a pointer token.</summary>
      <returns>A pointer token.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.GetCurrentPoint(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves a PointerPoint object that provides basic info on the pointer associated with the event.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <returns>A PointerPoint value that represents the pointer point associated with this event. If **null** was passed as *relativeTo*, the coordinates are in the frame of reference of the overall window. If a *relativeTo* value other than **null** was passed, the coordinates are relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.PointerRoutedEventArgs.GetIntermediatePoints(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves a collection of PointerPoint objects that represent the pointer history from the last pointer event up to and including the current pointer event. Each PointerPoint in the collection provides basic info on the pointer associated with the event.The last item in the collection is equivalent to the PointerPoint object returned by GetCurrentPoint.</summary>
      <param name="relativeTo">Provides the context for the pointer data. Can be any UIElement -derived object that is connected to the same object tree. If **null**, location coordinates are in the context of the app.</param>
      <returns>The collection of PointerPoint objects corresponding to the pointer history associated with the event. If *relativeTo* is **null**, location coordinates are in the context of the app. Otherwise, the coordinates are relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs">
      <summary>Provides event data for the ProcessKeyboardAccelerators event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs.Handled">
      <summary>Gets or sets a value that marks the event as handled.</summary>
      <returns>**true** to mark the event handled. **false** to leave the event unhandled. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs.Key">
      <summary>Gets the virtual key (used in conjunction with one or more modifier keys) for a keyboard shortcut (accelerator).</summary>
      <returns>The virtual key.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs.Modifiers">
      <summary>Gets the virtual key used to modify another keypress for a keyboard shortcut (accelerator). </summary>
      <returns>The virtual key.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.RightTappedEventHandler">
      <summary>Represents the method that will handle a RightTapped routed event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs">
      <summary>Provides event data for the RightTapped event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the RightTappedRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device that initiated the associated input event.</summary>
      <returns>The PointerDeviceType for this event occurrence.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied UIElement.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <returns>A Point that represents the current x- and y-coordinates of the mouse pointer position. If **null** was passed as *relativeTo*, this coordinate is for the overall window. If a *relativeTo* value other than **null** was passed, this coordinate is relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.StandardUICommand">
      <summary>Derives from XamlUICommand, adding a set of standard platform commands with pre-defined properties.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.StandardUICommand.#ctor">
      <summary>Initializes a new instance of the StandardUICommand class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.StandardUICommand.#ctor(Microsoft.UI.Xaml.Input.StandardUICommandKind)">
      <summary>Initializes a new instance of the StandardUICommand class of the specified kind.</summary>
      <param name="kind">The pre-defined command (including behavior, and various UI-related properties, methods, and events).</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.StandardUICommand.Kind">
      <summary>Gets the pre-defined command (including behavior, and various UI-related properties, methods, and events) that can be used with a StandardUICommand.</summary>
      <returns>The pre-defined command.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.StandardUICommand.KindProperty">
      <summary>Identifies the Kind dependency property.</summary>
      <returns>The identifier for the Kind dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.StandardUICommandKind">
      <summary>Specifies the pre-defined commands (including behavior, and various UI-related properties, methods, and events) that can be used with a StandardUICommand.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Backward">
      <summary>Specifies the backward command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Close">
      <summary>Specifies the close command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Copy">
      <summary>Specifies the copy command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Cut">
      <summary>Specifies the cut command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Delete">
      <summary>Specifies the delete command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Forward">
      <summary>Specifies the forward command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.None">
      <summary>No command.  Default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Open">
      <summary>Specifies the open command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Paste">
      <summary>Specifies the paste command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Pause">
      <summary>Specifies the pause command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Play">
      <summary>Specifies the play command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Redo">
      <summary>Specifies the redo command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Save">
      <summary>Specifies the save command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.SelectAll">
      <summary>Specifies the select all command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Share">
      <summary>Specifies the share command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Stop">
      <summary>Specifies the stop command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.StandardUICommandKind.Undo">
      <summary>Specifies the undo command.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.TappedEventHandler">
      <summary>Represents the method that will handle the Tapped event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.TappedRoutedEventArgs">
      <summary>Provides event data for the Tapped event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.TappedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the TappedRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.TappedRoutedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A **true** value for **Handled** prevents most handlers along the event route from handling the same event again.</summary>
      <returns>**true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.TappedRoutedEventArgs.PointerDeviceType">
      <summary>Gets the PointerDeviceType for the pointer device that initiated the associated input event.</summary>
      <returns>The PointerDeviceType for this event occurrence.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.TappedRoutedEventArgs.GetPosition(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied UIElement.</summary>
      <param name="relativeTo">Any UIElement -derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a *relativeTo*  value of **null**.</param>
      <returns>A Point that represents the current x- and y-coordinates of the mouse pointer position. If **null** was passed as *relativeTo*, this coordinate is for the overall window. If a value other than **null** for *relativeTo* was passed, this coordinate is relative to the object referenced by *relativeTo*.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.XamlUICommand">
      <summary>Implements the ICommand interface, adding various UI properties, methods, and events to provide a base class for defining the command behavior of an interactive UI element that performs an action when invoked (such as sending an email, deleting an item, or submitting a form).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.XamlUICommand.#ctor">
      <summary>Initializes a new instance of the XamlUICommand class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.AccessKey">
      <summary>Gets or sets the access key (mnemonic) for this element.</summary>
      <returns>The access key (mnemonic) for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.AccessKeyProperty">
      <summary>Identifies the AccessKey dependency property.</summary>
      <returns>The identifier for the AccessKey dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.Command">
      <summary>Gets or sets the command behavior of an interactive UI element that performs an action when invoked, such as sending an email, deleting an item, or submitting a form.</summary>
      <returns>The command behavior of the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.Description">
      <summary>Gets or sets a description for this element.</summary>
      <returns>The description for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
      <returns>The identifier for the Description dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.IconSource">
      <summary>Gets or sets a glyph from the Segoe MDL2 Assets font for this element.</summary>
      <returns>A glyph from the Segoe MDL2 Assets font for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.IconSourceProperty">
      <summary>Identifies the IconSource dependency property.</summary>
      <returns>The identifier for the IconSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators">
      <summary>Gets or sets the collection of key combinations for this element that invoke an action using the keyboard.</summary>
      <returns>The keyboard accelerators for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAcceleratorsProperty">
      <summary>Identifies the KeyboardAccelerators dependency property.</summary>
      <returns>The identifier for the KeyboardAccelerators dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.Label">
      <summary>Gets or sets the label for this element.</summary>
      <returns>The label for this element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Input.XamlUICommand.LabelProperty">
      <summary>Identifies the Label dependency property.</summary>
      <returns>The identifier for the Label dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteChanged">
      <summary>Occurs whenever something happens that affects whether the command can execute.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteRequested">
      <summary>Occurs when a CanExecute call is made.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Input.XamlUICommand.ExecuteRequested">
      <summary>Occurs when an Execute call is made.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.XamlUICommand.CanExecute(System.Object)">
      <summary>Retrieves whether the command can execute in its current state.</summary>
      <param name="parameter">Data used by the command. If the command does not require data, this object can be set to null.</param>
      <returns>**true** if this command can be executed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.XamlUICommand.Execute(System.Object)">
      <summary>Invokes the command.</summary>
      <param name="parameter">Data used by the command. If the command does not require data, this object can be set to null.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Input.XamlUICommand.NotifyCanExecuteChanged">
      <summary>Notifies the system that the command state has changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode">
      <summary>Specifies the 2D directional navigation behavior when using the keyboard arrow keys.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Auto">
      <summary>Behavior is inherited from the elements ancestors. If all ancestors have a value of **Auto**, the fallback behavior is **Disabled**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Disabled">
      <summary>Arrow keys cannot be used for 2D directional navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Enabled">
      <summary>Arrow keys can be used for 2D directional navigation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy">
      <summary>Specifies the disambiguation strategy used for navigating between multiple candidate targets using XYFocusDownNavigationStrategy, XYFocusLeftNavigationStrategy, XYFocusRightNavigationStrategy, and XYFocusUpNavigationStrategy. </summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.Auto">
      <summary>Indicates that navigation strategy is inherited from the element's ancestors. If all ancestors have a value of **Auto**, the fallback strategy is **Projection**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.NavigationDirectionDistance">
      <summary>Indicates that focus moves to the element closest to the axis of the navigation direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.Projection">
      <summary>Indicates that focus moves to the first element encountered when projecting the edge of the currently focused element in the direction of navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy.RectilinearDistance">
      <summary>Indicates that focus moves to the closest element based on the shortest 2D distance (Manhattan metric). </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride">
      <summary>Specifies how the XAML framework determines the target of an XY navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride.Auto">
      <summary>Indicates that navigation strategy is inherited from the element's ancestors. If all ancestors have a value of **Auto**, the fallback strategy is **Projection**.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride.NavigationDirectionDistance">
      <summary>Indicates that focus moves to the element closest to the axis of the navigation direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride.None">
      <summary>No navigation override is applied.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride.Projection">
      <summary>Indicates that focus moves to the first element encountered when projecting the edge of the currently focused element in the  direction of navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride.RectilinearDistance">
      <summary>Indicates that focus moves to the closest element based on the shortest 2D distance (Manhattan metric). </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler">
      <summary>Represents the method that will handle the VectorChanged event.</summary>
      <param name="vector">The object where the handler is attached.</param>
      <param name="e">Event data, loosely typed.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.IBindableIterable">
      <summary>Extends IIterable to enable data-binding infrastructure requirements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableIterable.First">
      <summary>Returns a bindable iterator that iterates over the items in the collection.</summary>
      <returns>The bindable iterator.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.IBindableIterator">
      <summary>Supports bindable iteration over a collection.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.IBindableIterator.Current">
      <summary>Gets the current item in the collection.</summary>
      <returns>The current item in the collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.IBindableIterator.HasCurrent">
      <summary>Gets a value that indicates whether there is a current item or the iterator is at the end of the collection.</summary>
      <returns>**true** if the iterator refers to a valid item that is in the collection; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableIterator.MoveNext">
      <summary>Moves the iterator forward to the next item and returns HasCurrent.</summary>
      <returns>**true** if the iterator refers to a valid item that is in the collection; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.IBindableObservableVector">
      <summary>Extends IBindableVector by adding a VectorChanged event for change notification.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Interop.IBindableObservableVector.VectorChanged">
      <summary>Occurs when the vector collection changes (add, delete, item change).</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.IBindableVector">
      <summary>Represents a writeable vector collection of objects that is bindable.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.IBindableVector.Size">
      <summary>Gets the number of items in the vector.</summary>
      <returns>The number of items in the vector.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.Append(System.Object)">
      <summary>Appends an item to the end of the vector.</summary>
      <param name="value">The item to append to the vector.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.Clear">
      <summary>Removes all items from the vector.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.GetAt(System.UInt32)">
      <summary>Returns the item at the specified index in the vector.</summary>
      <param name="index">The zero-based index of the item in the vector to return.</param>
      <returns>The item at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.GetView">
      <summary>Returns an immutable view of the vector.</summary>
      <returns>The view of the vector.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.IndexOf(System.Object,System.UInt32@)">
      <summary>Returns the index of a specified item in the vector.</summary>
      <param name="value">The item to find in the vector.</param>
      <param name="index">The zero-based index of the item if found. 0 is returned if the item is not found, so be sure to check the return value.</param>
      <returns>**true** if the item is found; **false** if the item is not found.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.InsertAt(System.UInt32,System.Object)">
      <summary>Inserts an item into a vector at a specified index.</summary>
      <param name="index">The index at which to insert.</param>
      <param name="value">The item to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index in the vector.</summary>
      <param name="index">The zero-based index of the vector, at which to remove the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.RemoveAtEnd">
      <summary>Removes the last item in the vector.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVector.SetAt(System.UInt32,System.Object)">
      <summary>Sets the item value at the specified index of the vector.</summary>
      <param name="index">The zero-based index of the vector, at which to set the value.</param>
      <param name="value">The item value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.IBindableVectorView">
      <summary>Represents a read-only vector collection of objects that is bindable.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.IBindableVectorView.Size">
      <summary>Gets the number of items in the vector.</summary>
      <returns>The number of items in the vector.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVectorView.GetAt(System.UInt32)">
      <summary>Returns the item at the specified index in the vector.</summary>
      <param name="index">The zero-based index of the item in the vector to return.</param>
      <returns>The item at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.IBindableVectorView.IndexOf(System.Object,System.UInt32@)">
      <summary>Returns the index of a specified item in the vector.</summary>
      <param name="value">The item to find in the vector.</param>
      <param name="index">The zero-based index of the item if found. 0 is returned if the item is not found, so be sure to check the return value.</param>
      <returns>**true** if the item is found; **false** if the item is not found.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.INotifyCollectionChanged">
      <summary>Provides a collection-changed pattern interface for C++ bindable classes.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Interop.INotifyCollectionChanged.CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction">
      <summary>Describes the action that caused a CollectionChanged event.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction.Add">
      <summary>One or more items were added to the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction.Move">
      <summary>One or more items were moved within the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction.Remove">
      <summary>One or more items were removed from the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction.Replace">
      <summary>One or more items were replaced in the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction.Reset">
      <summary>The content of the collection changed dramatically.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs">
      <summary>Provides the event data for a CollectionChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.#ctor(Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction,Microsoft.UI.Xaml.Interop.IBindableVector,Microsoft.UI.Xaml.Interop.IBindableVector,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the NotifyCollectionChangedEventArgs class.</summary>
      <param name="action">The Action value to report.</param>
      <param name="newItems">The NewItems value to report.</param>
      <param name="oldItems">The OldItems value to report.</param>
      <param name="newIndex">The NewStartingIndex value to report.</param>
      <param name="oldIndex">The OldStartingIndex value to report.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.Action">
      <summary>Gets the description of the action that caused the event.</summary>
      <returns>The description of the action that caused the event, as a value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.NewItems">
      <summary>Gets the items affected by an action.</summary>
      <returns>The bindable vector of items affected by an action.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>Gets the index at which the change occurred.</summary>
      <returns>The index at which the change occurred.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.OldItems">
      <summary>Gets the item affected by a **Replace** or **Remove** action.</summary>
      <returns>The bindable vector of items affected by a **Replace** or **Remove** action.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>Gets the starting index at which a **Move**, **Remove**, or **Replace** action occurred.</summary>
      <returns>The zero-based index at which a **Move**, **Remove**, or **Replace** action occurred.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventHandler">
      <summary>Represents the method that will handle the CollectionChanged event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.TypeKind">
      <summary>Provides basic guidance about the origin of a type. Used as a value by TypeName.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.TypeKind.Custom">
      <summary>The type is a custom type declared by means other than WinMD.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.TypeKind.Metadata">
      <summary>The type is declared through WinMD (Windows Runtime metadata).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.TypeKind.Primitive">
      <summary>The type is a language-level primitive.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Interop.TypeName">
      <summary>Substitutes for **System.Type** such that type information reported by other API does not have a dependency on the common language runtime (CLR). This structure is used as a value by properties such as UnderlyingType and Type.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.TypeName.Kind">
      <summary>Basic guidance regarding the origin of the type.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Interop.TypeName.Name">
      <summary>Name of the type.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.ContentPropertyAttribute">
      <summary>Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.ContentPropertyAttribute.Name">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.ContentPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the ContentPropertyAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.FullXamlMetadataProviderAttribute">
      <summary>Indicates that the XAML metadata in a component library is complete.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.FullXamlMetadataProviderAttribute.#ctor">
      <summary>Initializes a new instance of the FullXamlMetadataProviderAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IComponentConnector">
      <summary>Provides infrastructure support for event wiring and build actions.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to XAML-initiated content.</summary>
      <param name="connectionId">An identifier token to distinguish calls.</param>
      <param name="target">The target to connect events and names to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IComponentConnector.GetBindingConnector(System.Int32,System.Object)">
      <summary>Returns the IComponentConnector for this connection.</summary>
      <param name="connectionId">An identifier token to distinguish calls.</param>
      <param name="target">The target to connect events and names to.</param>
      <returns>The IComponentConnector for this connection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IDataTemplateComponent">
      <summary>Provides methods that enable the XAML parser to communicate with generated binding code.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IDataTemplateComponent.ProcessBindings(System.Object,System.Int32,System.Int32,System.Int32@)">
      <summary>Updates the compiled data bindings.</summary>
      <param name="item">The data item.</param>
      <param name="itemIndex">The index of the data item.</param>
      <param name="phase">The number of times ProcessBindings has been called.</param>
      <param name="nextPhase">The phase on the next call to ProcessBindings.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IDataTemplateComponent.Recycle">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics">
      <summary>Provides methods that enable a debugger to disable generated binding code.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics.Disable(System.Int32,System.Int32)">
      <summary>Disables a binding while running in a debugger.</summary>
      <param name="lineNumber">The line number of the x:Bind in the XAML source file.</param>
      <param name="columnNumber">The column number of the x:Bind in the XAML source file.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IXamlMember">
      <summary>Provides the means to report XAML-type system specifics about XAML members. Using this interface contract, XAML parsers can load any custom types and members thereof that are defined in your app and are referenced in XAML files.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.IsAttachable">
      <summary>Gets a value that indicates whether the XAML member is an attachable member.</summary>
      <returns>**true** if the XAML member is an attachable member; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.IsDependencyProperty">
      <summary>Gets a value that indicates whether the XAML member is implemented as a dependency property.</summary>
      <returns>**true** if the XAML member is implemented as a dependency property; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.IsReadOnly">
      <summary>Gets whether the XAML member is read-only in its backing implementation.</summary>
      <returns>**true** if the backing member is read-only; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.Name">
      <summary>Gets the XamlName name string that declares the XAML member.</summary>
      <returns>The XamlName name string that declares the XAML member.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.TargetType">
      <summary>Gets the IXamlType of the type where the member can exist.</summary>
      <returns>The IXamlType of the type where the member can exist.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlMember.Type">
      <summary>Gets the IXamlType of the type that is used by the member.</summary>
      <returns>The IXamlType of the type that is used by the member.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlMember.GetValue(System.Object)">
      <summary>Provides a get-value utility for this IXamlMember.</summary>
      <param name="instance">The object instance to get the member value from.</param>
      <returns>The member value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlMember.SetValue(System.Object,System.Object)">
      <summary>Provides a set-value utility for this IXamlMember.</summary>
      <param name="instance">The object instance to set the member value on.</param>
      <param name="value">The member value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IXamlMetadataProvider">
      <summary>Implements XAML schema context concepts that support XAML parsing.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType(System.String)">
      <summary>Implements XAML schema context access to underlying type mapping, based on specifying a full type name.</summary>
      <param name="fullName">The name of the class for which to return a XAML type mapping.</param>
      <returns>The schema context's implementation of the IXamlType concept.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Implements XAML schema context access to underlying type mapping, based on providing a helper value that describes a type.</summary>
      <param name="type">The type as represented by the relevant type system or interoperation support type.</param>
      <returns>The schema context's implementation of the IXamlType concept.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions">
      <summary>Gets the set of XMLNS (XAML namespace) definitions that apply to the context.</summary>
      <returns>The set of XMLNS (XAML namespace) definitions.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.IXamlType">
      <summary>Provides the means to report XAML-type system specifics about XAML types. Using this interface contract, XAML parsers can load any custom types and members thereof that are defined in your app and are referenced in XAML files.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.BaseType">
      <summary>Gets the IXamlType for the immediate base type of the XAML type. Determination of this value is based on the underlying type for core types.</summary>
      <returns>The IXamlType for the immediate base type of the XAML type.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.ContentProperty">
      <summary>Gets the IXamlMember information for the XAML content property of this IXamlType.</summary>
      <returns>IXamlMember information for the XAML content property of the IXamlType. May be null if no XAML content property exists.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.FullName">
      <summary>Gets the full class name of the underlying type.</summary>
      <returns>The full class name of the underlying type.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsArray">
      <summary>Gets a value that indicates whether the IXamlType represents an array.</summary>
      <returns>**true** if the IXamlType represents an array; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsBindable">
      <summary>Gets a value that declares whether the type is bindable.</summary>
      <returns>**true** if the type is bindable, **false** if the type is not bindable.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsCollection">
      <summary>Gets a value that indicates whether this IXamlType represents a collection.</summary>
      <returns>**true** if this IXamlType represents a collection; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsConstructible">
      <summary>Gets a value that indicates whether this IXamlType represents a constructible type, as per the XAML definition.</summary>
      <returns>**true** if this IXamlType represents a constructible type; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsDictionary">
      <summary>Gets a value that indicates whether this IXamlType represents a dictionary/map.</summary>
      <returns>**true** if this IXamlType represents a dictionary/map; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.IsMarkupExtension">
      <summary>Gets a value that indicates whether the IXamlType represents a markup extension.</summary>
      <returns>**true** if the IXamlType represents a markup extension; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.ItemType">
      <summary>Gets a value that provides the type information for the **Items** property of this IXamlType.</summary>
      <returns>The IXamlType information for the type of the items in the collection; otherwise, null if this IXamlType does not represent a collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.KeyType">
      <summary>Gets a value that provides the type information for the **Key** property of this IXamlType, if this IXamlType represents a dictionary/map.</summary>
      <returns>The IXamlType information for the type of the key for dictionary usage; otherwise, null if this IXamlType does not represent a dictionary/map.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.UnderlyingType">
      <summary>Gets information for the backing type.</summary>
      <returns>The backing type as represented by the relevant type system or interop support type. This is a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.ActivateInstance">
      <summary>Given a XAML type, sets its values for initialization and returns a usable instance.</summary>
      <returns>The usable instance.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.AddToMap(System.Object,System.Object,System.Object)">
      <summary>Adds an item to a custom map type.</summary>
      <param name="instance">The type instance to set the map item to.</param>
      <param name="key">The key of the map item to add.</param>
      <param name="value">The value of the map item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.AddToVector(System.Object,System.Object)">
      <summary>Adds an item to a custom vector type.</summary>
      <param name="instance">The type instance to set the item to.</param>
      <param name="value">The value of the item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.CreateFromString(System.String)">
      <summary>Creates a type system representation based on a string. The main scenario for this usage is creating an enumeration value and mapping the appropriate enumeration.</summary>
      <param name="value">The string to create from.</param>
      <returns>The resulting type system representation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.GetMember(System.String)">
      <summary>Returns the IXamlMember information for a specific named member from this IXamlType.</summary>
      <param name="name">The name of the member to get (as a string).</param>
      <returns>The IXamlMember information for the member, if a member as specified by *name* was found; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.IXamlType.RunInitializer">
      <summary>Invokes any necessary pre-activation logic as required by the XAML schema context and its platform dependencies.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.IXamlType.BoxedType">
      <summary>Gets the IXamlType for the boxed type of the XAML type. Determination of this value is based on the underlying type for core types.</summary>
      <returns>The IXamlType for the boxed type of the XAML type.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.MarkupExtension">
      <summary>Provides a base class for XAML markup extension implementations.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.MarkupExtension.#ctor">
      <summary>Initializes a new instance of the MarkupExtension class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.MarkupExtension.ProvideValue">
      <summary>When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</summary>
      <returns>The object value to set on the property where the extension is applied.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.MarkupExtensionReturnTypeAttribute">
      <summary>Reports the type that a markup extension can return.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary>
      </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary>Initializes a new instance of the MarkupExtensionReturnTypeAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XamlBinaryWriter">
      <summary>Produces a pre-parsed binary representation of a XAML production.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBinaryWriter.Write(Windows.Foundation.Collections.IVector{Windows.Storage.Streams.IRandomAccessStream},Windows.Foundation.Collections.IVector{Windows.Storage.Streams.IRandomAccessStream},Microsoft.UI.Xaml.Markup.IXamlMetadataProvider)">
      <summary>Produces a binary representation of XAML. Input streams are produced in text representation, and output streams are populated with XAML in binary (XBF) representation.</summary>
      <param name="inputStreams">The set of input streams. These are expected to access the text representation of the XAML to write into XBF format.</param>
      <param name="outputStreams">The set of output streams. When the method returns each output stream provides access to the XBF binary representation. You'd typically use this stream to create a file.</param>
      <param name="xamlMetadataProvider">A helper object that maps types for XAML productions.</param>
      <returns>A structure that captures any error information that is reported by the conversion into XBF format.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XamlBinaryWriterErrorInformation">
      <summary>Records error information produced by calls to XamlBinaryWriter.Write.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.XamlBinaryWriterErrorInformation.InputStreamIndex">
      <summary>The index of the stream in the original *inputStreams* parameter for XamlBinaryWriter.Write where the error occurred.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.XamlBinaryWriterErrorInformation.LineNumber">
      <summary>The line number in the input XAML text representation where the error was encountered.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.XamlBinaryWriterErrorInformation.LinePosition">
      <summary>The line position in the input XAML text representation where the error was encountered.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XamlBindingHelper">
      <summary>Provides helper methods for data binding.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Markup.XamlBindingHelper.DataTemplateComponentProperty">
      <summary>Identifies the DataTemplateComponent attached property.</summary>
      <returns>The identifier for the DataTemplateComponent attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(Microsoft.UI.Xaml.Interop.TypeName,System.Object)">
      <summary>Converts a value from a source type to a target type.</summary>
      <param name="type">The type to convert the value from.</param>
      <param name="value">The value to convert.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.GetDataTemplateComponent(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Gets the value of the DataTemplateComponent XAML attached property for a target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The DataTemplateComponent XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.ResumeRendering(Microsoft.UI.Xaml.UIElement)">
      <summary>Resumes rendering of the specified element.</summary>
      <param name="target">The element for which to resume rendering.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Markup.IDataTemplateComponent)">
      <summary>Sets the value of the DataTemplateComponent XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromBoolean(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Boolean)">
      <summary>Sets a DependencyProperty from a Boolean value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromByte(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Byte)">
      <summary>Sets a DependencyProperty from a Byte value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromChar16(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Char)">
      <summary>Sets a DependencyProperty from a Char value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromDateTime(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.DateTime)">
      <summary>Sets a DependencyProperty from a DateTime value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromDouble(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Double)">
      <summary>Sets a DependencyProperty from a Double value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromInt32(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Int32)">
      <summary>Sets a DependencyProperty from a Int32 value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromInt64(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Int64)">
      <summary>Sets a DependencyProperty from a Int64 value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromObject(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Object)">
      <summary>Sets a DependencyProperty from a Object value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromPoint(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.Point)">
      <summary>Sets a DependencyProperty from a Point value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromRect(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.Rect)">
      <summary>Sets a DependencyProperty from a Rect value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromSingle(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.Single)">
      <summary>Sets a DependencyProperty from a Single value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromSize(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.Size)">
      <summary>Sets a DependencyProperty from a Size value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromString(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.String)">
      <summary>Sets a DependencyProperty from a String value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromTimeSpan(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.TimeSpan)">
      <summary>Sets a DependencyProperty from a TimeSpan value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromUInt32(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.UInt32)">
      <summary>Sets a DependencyProperty from a UInt32 value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromUInt64(System.Object,Microsoft.UI.Xaml.DependencyProperty,System.UInt64)">
      <summary>Sets a DependencyProperty from a UInt64 value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetPropertyFromUri(System.Object,Microsoft.UI.Xaml.DependencyProperty,Windows.Foundation.Uri)">
      <summary>Sets a DependencyProperty from a Uri value.</summary>
      <param name="dependencyObject">The object to which the property being set belongs.</param>
      <param name="propertyToSet">The property to which the value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlBindingHelper.SuspendRendering(Microsoft.UI.Xaml.UIElement)">
      <summary>Suspends rendering of the specified element.</summary>
      <param name="target">The element for which to suspend rendering.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XamlMarkupHelper">
      <summary>Provides helper methods for the XAML compiler.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Unloads an element from the XAML visual tree.</summary>
      <param name="element">The element to unload.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XamlReader">
      <summary>Provides a XAML processor engine for parsing XAML and creating corresponding object trees.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlReader.Load(System.String)">
      <summary>Parses a well-formed XAML fragment and creates a corresponding object tree, and returns the root of the object tree.</summary>
      <param name="xaml">A string that contains a valid XAML fragment.</param>
      <returns>The root object of the created object tree.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Markup.XamlReader.LoadWithInitialTemplateValidation(System.String)">
      <summary>Parses a well-formed XAML fragment creates a corresponding object tree, and returns the root of the object tree. Also performs load-time validation of any linked templates.</summary>
      <param name="xaml">A string that contains a valid XAML fragment.</param>
      <returns>The root object of the created object tree.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Markup.XmlnsDefinition">
      <summary>Specifies a mapping on a per-assembly basis between a XAML namespace and a library-code namespace for backing types, which is then used for type resolution by a XAML object writer or XAML schema context.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.XmlnsDefinition.Namespace">
      <summary>The library-code namespace, specified as a string.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Markup.XmlnsDefinition.XmlNamespace">
      <summary>The XAML namespace identifier specified in the attribute.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AcrylicBrush">
      <summary>Paints an area with a semi-transparent material that uses multiple effects including blur and a noise texture.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.AcrylicBrush.#ctor">
      <summary>Initializes a new instance of the AcrylicBrush class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallback">
      <summary>Gets or sets a value that specifies whether the brush is forced to the solid fallback color.</summary>
      <returns>**true** to always replace the acrylic material with the solid fallback color. Otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallbackProperty">
      <summary>Identifies the AlwaysUseFallback dependency property.</summary>
      <returns>The identifier for the AlwaysUseFallback dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintColor">
      <summary>Gets or sets the color tint for the semi-transparent acrylic material.</summary>
      <returns>The color tint for the semi-transparent acrylic material.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintColorProperty">
      <summary>Identifies the TintColor dependency property.</summary>
      <returns>The identifier for the TintColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacity">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacityProperty">
      <summary>Identifies the TintLuminosityOpacity dependency property.</summary>
      <returns>The identifier for the TintLuminosityOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintOpacity">
      <summary>Gets or sets the degree of opacity of the color tint.</summary>
      <returns>The opacity expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintOpacityProperty">
      <summary>Identifies the TintOpacity dependency property.</summary>
      <returns>The identifier for the TintOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintTransitionDuration">
      <summary>Gets or sets the length of the automatic transition animation used when the TintColor changes.</summary>
      <returns>The length of the automatic transition animation used when the TintColor changes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintTransitionDurationProperty">
      <summary>Identifies the TintTransitionDuration dependency property.</summary>
      <returns>The identifier for the TintTransitionDuration dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AlignmentX">
      <summary>Describes how content is positioned horizontally in a container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentX.Center">
      <summary>The contents align toward the center of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentX.Left">
      <summary>The contents align toward the left of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentX.Right">
      <summary>The contents align toward the right of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AlignmentY">
      <summary>Describes how content is positioned vertically in a container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentY.Bottom">
      <summary>The contents align toward the lower edge of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentY.Center">
      <summary>The contents align toward the center of the container.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AlignmentY.Top">
      <summary>The contents align toward the upper edge of the container.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ArcSegment">
      <summary>Represents an elliptical arc between two points.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.ArcSegment.#ctor">
      <summary>Initializes a new instance of the ArcSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.IsLargeArc">
      <summary>Gets or sets a value that indicates whether the arc should be greater than 180 degrees.</summary>
      <returns>**true** if the arc should be greater than 180 degrees; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.IsLargeArcProperty">
      <summary>Identifies the IsLargeArc dependency property.</summary>
      <returns>The IsLargeArc dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.Point">
      <summary>Gets or sets the endpoint of the elliptical arc.</summary>
      <returns>The point to which the arc is drawn. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.PointProperty">
      <summary>Identifies the Point dependency property.</summary>
      <returns>The Point dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.RotationAngle">
      <summary>Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.</summary>
      <returns>The amount (in degrees) by which the ellipse is rotated about the x-axis. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.RotationAngleProperty">
      <summary>Identifies the RotationAngle dependency property.</summary>
      <returns>The RotationAngle dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.Size">
      <summary>Gets or sets the x-radius and y-radius of the arc as a Size structure.</summary>
      <returns>A Size structure that describes the x-radius and y-radius of the elliptical arc. The Size structure's **Width** value specifies the arc's x-radius; its **Height** value specifies the arc's y-radius. The default is a Size with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.SizeProperty">
      <summary>Identifies the Size dependency property.</summary>
      <returns>The Size dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.SweepDirection">
      <summary>Gets or sets a value that specifies whether the arc is drawn in the **Clockwise** or **Counterclockwise** direction.</summary>
      <returns>One of the enumeration values that specifies the direction in which the arc is drawn. The default is **Counterclockwise**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ArcSegment.SweepDirectionProperty">
      <summary>Identifies the SweepDirection dependency property.</summary>
      <returns>The SweepDirection dependency property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AudioCategory">
      <summary>Describes the purpose of the audio information in an audio stream. Used as a value by AudioCategory.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Alerts">
      <summary>Audio is for system or application notifications, for example ring tones.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.BackgroundCapableMedia">
      <summary>Audio is for general media, for example audio for video, or streaming audio, and can be played as background. This enumeration value is deprecated. For more information, see **Remarks**.</summary>
      <deprecated type="deprecate">BackgroundCapableMedia is deprecated and might not work on all platforms. For more info, see MSDN.</deprecated>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Communications">
      <summary>Audio is for peer-to-peer communications, for example chat or VoIP.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.ForegroundOnlyMedia">
      <summary>Audio is for general media, for example audio for video, or streaming audio, but should not be played as background. This enumeration value is deprecated. For more information, see **Remarks**.</summary>
      <deprecated type="deprecate">ForegroundOnlyMedia is deprecated and might not work on all platforms. For more info, see MSDN.</deprecated>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.GameChat">
      <summary>Game chat audio. Similar to **Communications** except that **GameChat** will not attenuate other streams.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.GameEffects">
      <summary>Audio is for game-specific sound effects.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.GameMedia">
      <summary>Audio is background (non-event or ambient) audio for games.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Media">
      <summary>Stream that includes audio without dialog.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Movie">
      <summary>Stream that includes audio with dialog.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Other">
      <summary>All other streams.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.SoundEffects">
      <summary>Audio is for sound effects.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioCategory.Speech">
      <summary>Audio is speech.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AudioDeviceType">
      <summary>Describes the primary usage of the device that is being used to play back audio. This value is used by AudioDeviceType.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioDeviceType.Communications">
      <summary>The device is primarily for voice communications.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioDeviceType.Console">
      <summary>The device is a console and the audio session might support games, notifications, voice commands, and so on.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.AudioDeviceType.Multimedia">
      <summary>The device is intended for multimedia playback and/or recording.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.BezierSegment">
      <summary>Represents a cubic Bezier curve drawn between two points.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BezierSegment.#ctor">
      <summary>Initializes a new instance of the BezierSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point1">
      <summary>Gets or sets the first control point of the curve.</summary>
      <returns>The first control point of the curve. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point1Property">
      <summary>Identifies the Point1 dependency property.</summary>
      <returns>The identifier for the Point1 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point2">
      <summary>Gets or sets the second control point of the curve.</summary>
      <returns>The second control point of the curve.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point2Property">
      <summary>Identifies the Point2 dependency property.</summary>
      <returns>The identifier for the Point2 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point3">
      <summary>Gets or sets the end point of the curve.</summary>
      <returns>The end point of the curve.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BezierSegment.Point3Property">
      <summary>Identifies the Point3 dependency property.</summary>
      <returns>The identifier for the Point3 dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Brush">
      <summary>Defines objects used to paint graphical objects. Classes that derive from Brush describe how the area is painted.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Brush.#ctor">
      <summary>Provides base class initialization behavior for Brush -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.Opacity">
      <summary>Gets or sets the degree of opacity of a Brush.</summary>
      <returns>The value of the Opacity property is expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.OpacityProperty">
      <summary>Identifies the Opacity dependency property.</summary>
      <returns>The Opacity dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.RelativeTransform">
      <summary>Gets or sets the transformation that is applied to the brush using relative coordinates.</summary>
      <returns>The transformation that is applied to the brush using relative coordinates. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.RelativeTransformProperty">
      <summary>Identifies the RelativeTransform dependency property.</summary>
      <returns>The RelativeTransform dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.Transform">
      <summary>Gets or sets the transformation that is applied to the brush.</summary>
      <returns>The transformation to apply to the brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Brush.TransformProperty">
      <summary>Identifies the Transform dependency property.</summary>
      <returns>The Transform dependency property identifier.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Brush.PopulatePropertyInfo(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>Defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="propertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Brush.PopulatePropertyInfoOverride(System.String,Microsoft.UI.Composition.AnimationPropertyInfo)">
      <summary>When overridden in a derived class, defines a property that can be animated.</summary>
      <param name="propertyName">The property that can be animated.</param>
      <param name="animationPropertyInfo">Information about the property to be animated.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.BrushCollection">
      <summary>Represents an ordered collection of Brush values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.#ctor">
      <summary>Initializes a new instance of the BrushCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.BrushCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.Append(Microsoft.UI.Xaml.Media.Brush)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Brush at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Brush[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.IndexOf(Microsoft.UI.Xaml.Media.Brush,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Brush)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Brush[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.BrushCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Brush)">
      <summary>Sets the value at the specified index to the Brush value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.BrushMappingMode">
      <summary>Specifies the coordinate system used by a Brush.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.BrushMappingMode.Absolute">
      <summary>The coordinate system is not relative to a bounding box. Values are interpreted directly in local space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.BrushMappingMode.RelativeToBoundingBox">
      <summary>The coordinate system is relative to a bounding box: 0 indicates 0 percent of the bounding box, and 1 indicates 100 percent of the bounding box. For example, (0.5, 0.5) describes a point in the middle of the bounding box, and (1, 1) describes a point at the lower right of the bounding box.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.CacheMode">
      <summary>[deprecated] Unused, remains only for compatibility.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.CacheMode.#ctor">
      <summary>[deprecated] Unused, remains only for compatibility.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ColorInterpolationMode">
      <summary>Determines how the colors in a gradient are interpolated.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.ColorInterpolationMode.ScRgbLinearInterpolation">
      <summary>Colors are interpolated in the scRGB color space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.ColorInterpolationMode.SRgbLinearInterpolation">
      <summary>Colors are interpolated in the sRGB color space.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.CompositeTransform">
      <summary>Applies multiple transform operations to an object.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.CompositeTransform.#ctor">
      <summary>Initializes a new instance of the CompositeTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the center point for all transforms specified by the CompositeTransform in device-independent pixel (DIP) relative to the upper left-hand corner of the element.</summary>
      <returns>The x-coordinate of the center point for all transforms specified by the CompositeTransform.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.CenterXProperty">
      <summary>Identifies the CenterX dependency property.</summary>
      <returns>The identifier for the CenterX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the center point for all transforms specified by the CompositeTransform in device-independent pixel (DIP) relative to the upper left-hand corner of the element.</summary>
      <returns>The y-coordinate of the center point for all transforms specified by the CompositeTransform.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.CenterYProperty">
      <summary>Identifies the CenterY dependency property.</summary>
      <returns>The identifier for the CenterY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.Rotation">
      <summary>Gets or sets the angle, in degrees, of clockwise rotation.</summary>
      <returns>The angle, in degrees, of clockwise rotation. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.RotationProperty">
      <summary>Identifies the Rotation dependency property.</summary>
      <returns>The identifier for the Rotation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.ScaleX">
      <summary>Gets or sets the x-axis scale factor. You can use this property to stretch or shrink an object horizontally.</summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.ScaleXProperty">
      <summary>Identifies the ScaleX dependency property.</summary>
      <returns>The identifier for the ScaleX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.ScaleY">
      <summary>Gets or sets the y-axis scale factor. You can use this property to stretch or shrink an object vertically.</summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.ScaleYProperty">
      <summary>Identifies the ScaleY dependency property.</summary>
      <returns>The identifier for the ScaleY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.SkewX">
      <summary>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. A skew transform can be useful for creating the illusion of three-dimensional depth in a two-dimensional object.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the y-axis. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.SkewXProperty">
      <summary>Identifies the SkewX dependency property.</summary>
      <returns>The identifier for the SkewX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.SkewY">
      <summary>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. A skew transform can be useful for creating the illusion of three-dimensional depth in a two-dimensional object.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the x-axis. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.SkewYProperty">
      <summary>Identifies the SkewY dependency property.</summary>
      <returns>The identifier for the SkewY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.TranslateX">
      <summary>Gets or sets the distance to translate along the x-axis.</summary>
      <returns>The distance to translate (move) an object along the x-axis, in pixels. This property is read/write. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.TranslateXProperty">
      <summary>Identifies the TranslateX dependency property.</summary>
      <returns>The identifier for the TranslateX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.TranslateY">
      <summary>Gets or sets the distance to translate (move) an object along the y-axis.</summary>
      <returns>The distance to translate (move) an object along the y-axis, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.CompositeTransform.TranslateYProperty">
      <summary>Identifies the TranslateY dependency property.</summary>
      <returns>The identifier for the TranslateY dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.CompositionTarget">
      <summary>Represents the composited display surface for an app. This class is mainly for Microsoft DirectX content interop scenarios.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.CompositionTarget.Rendered">
      <summary>Occurs immediately after the core rendering process renders a frame. This event lets you determine how long each frame takes to render.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.CompositionTarget.Rendering">
      <summary>Occurs when the core rendering process renders a frame.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.CompositionTarget.SurfaceContentsLost">
      <summary>Occurs when an underlying major change occurs, such as a DirectX device change. Typically the application must regenerate its surface contents when notified of this event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.DoubleCollection">
      <summary>Represents an ordered collection of Double values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.#ctor">
      <summary>Initializes a new instance of the DoubleCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.DoubleCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.Append(System.Double)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The **Double** value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.GetMany(System.UInt32,System.Double[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.IndexOf(System.Double,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.InsertAt(System.UInt32,System.Double)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.ReplaceAll(System.Double[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.DoubleCollection.SetAt(System.UInt32,System.Double)">
      <summary>Sets the value at the specified index to the **Double** value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ElementCompositeMode">
      <summary>Declares alternate composition and blending modes for elements in mixed XAML / Microsoft DirectX UI.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.ElementCompositeMode.Inherit">
      <summary>Uses values from successive parents in the visual tree. This is the default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.ElementCompositeMode.MinBlend">
      <summary>Uses the minimum of the source and destination value for each pixel. This corresponds to D2D1_PRIMITIVE_BLEND_MIN.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.ElementCompositeMode.SourceOver">
      <summary>Uses standard XAML source-over-destination mode. This corresponds to D2D1_PRIMITIVE_BLEND_SOURCE_OVER.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.EllipseGeometry">
      <summary>Represents the geometry of a circle or ellipse.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.EllipseGeometry.#ctor">
      <summary>Initializes a new instance of the EllipseGeometry class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.Center">
      <summary>Gets or sets the center point of the EllipseGeometry.</summary>
      <returns>The center point of the EllipseGeometry.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.CenterProperty">
      <summary>Identifies the Center dependency property.</summary>
      <returns>The Center dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusX">
      <summary>Gets or sets the x-radius value of the EllipseGeometry.</summary>
      <returns>The x-radius value of the EllipseGeometry.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusXProperty">
      <summary>Identifies the RadiusX dependency property.</summary>
      <returns>The RadiusX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusY">
      <summary>Gets or sets the y-radius value of the EllipseGeometry.</summary>
      <returns>The y-radius value of the EllipseGeometry.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusYProperty">
      <summary>Identifies the RadiusY dependency property.</summary>
      <returns>The RadiusY dependency property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour">
      <summary>Defines constants that specify how MediaTransportControls fast-forward/backward buttons behave.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour.Disable">
      <summary>If the media doesn't support fast-forward/fast-rewind, the buttons are disabled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour.Hide">
      <summary>If the media doesn't support fast-forward/fast-rewind, the buttons are hidden.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour.Skip">
      <summary>If the media doesn't support fast-forward/fast-rewind, the media skips 30 seconds.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.FillRule">
      <summary>Specifies how the intersecting areas of PathFigure objects contained in a Geometry are combined to form the area of the Geometry.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.FillRule.EvenOdd">
      <summary>Rule that determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction and counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.FillRule.Nonzero">
      <summary>Rule that determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside the path. Otherwise, it is inside.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.FontFamily">
      <summary>Represents a family of related fonts.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.FontFamily.#ctor(System.String)">
      <summary>Initializes a new instance of the FontFamily class from the specified font family string.</summary>
      <param name="familyName">The family name of the font to represent. This can include a hashed suffix. </param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.FontFamily.Source">
      <summary>Gets the font family name that is used to construct the FontFamily object.</summary>
      <returns>The font family name of the FontFamily object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.FontFamily.XamlAutoFontFamily">
      <summary>Gets the default font family based on an app's language settings.</summary>
      <returns>The default font family based on an app's language settings. See Remarks.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GeneralTransform">
      <summary>Provides generalized transformation support for objects. GeneralTransform is a base class that's in the hierarchy of practical transform classes such as TranslateTransform.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.#ctor">
      <summary>Provides base class initialization behavior for GeneralTransform -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeneralTransform.Inverse">
      <summary>Gets the inverse transformation of this GeneralTransform, if possible.</summary>
      <returns>An inverse of this instance, if possible; otherwise null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeneralTransform.InverseCore">
      <summary>Implements the behavior for return value of Inverse in a derived or custom GeneralTransform.</summary>
      <returns>The value that should be returned as Inverse by the GeneralTransform.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.TransformBounds(Windows.Foundation.Rect)">
      <summary>Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</summary>
      <param name="rect">The bounding box to transform.</param>
      <returns>The smallest axis-aligned bounding box possible that contains the transformed *rect*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.TransformBoundsCore(Windows.Foundation.Rect)">
      <summary>Provides the means to override the TransformBounds behavior in a derived transform class.</summary>
      <param name="rect">The bounding box to transform.</param>
      <returns>The smallest axis-aligned bounding box possible that contains the transformed *rect*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.TransformPoint(Windows.Foundation.Point)">
      <summary>Uses this transformation object's logic to transform the specified point, and returns the result.</summary>
      <param name="point">The point to transform using the transformation logic.</param>
      <returns>The result of transforming *point*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.TryTransform(Windows.Foundation.Point,Windows.Foundation.Point@)">
      <summary>Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</summary>
      <param name="inPoint">The point to transform.</param>
      <param name="outPoint">The result of transforming *inPoint*.</param>
      <returns>**true** if *inPoint* was transformed; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeneralTransform.TryTransformCore(Windows.Foundation.Point,Windows.Foundation.Point@)">
      <summary>Provides the means to override the TryTransform behavior in a derived transform class.</summary>
      <param name="inPoint">The point to transform.</param>
      <param name="outPoint">The result of transforming *inPoint*.</param>
      <returns>**true** if *inPoint* was transformed; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Geometry">
      <summary>Provides a base class for objects that define geometric shapes. Geometry objects can be used for clipping regions and as geometry definitions for rendering two-dimensional graphical data as a Path.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Geometry.Bounds">
      <summary>Gets a Rect that specifies the axis-aligned bounding box of the Geometry.</summary>
      <returns>The axis-aligned bounding box of the Geometry.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Geometry.Empty">
      <summary>Gets an empty geometry object.</summary>
      <returns>The empty geometry object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Geometry.StandardFlatteningTolerance">
      <summary>Gets the standard tolerance used for polygonal approximation.</summary>
      <returns>The standard tolerance. The default value is 0.25.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Geometry.Transform">
      <summary>Gets or sets the Transform object applied to a Geometry.</summary>
      <returns>The transformation applied to the Geometry. Note that this value may be a single Transform or a list of Transform items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Geometry.TransformProperty">
      <summary>Identifies the Transform dependency property.</summary>
      <returns>The identifier for the Transform dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GeometryCollection">
      <summary>Represents a collection of Geometry objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.#ctor">
      <summary>Initializes a new instance of the GeometryCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeometryCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.Append(Microsoft.UI.Xaml.Media.Geometry)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Geometry[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.IndexOf(Microsoft.UI.Xaml.Media.Geometry,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Geometry)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Geometry[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Geometry)">
      <summary>Sets the value at the specified index to the value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GeometryGroup">
      <summary>Represents a composite geometry, composed of other Geometry objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GeometryGroup.#ctor">
      <summary>Initializes a new instance of the GeometryGroup class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeometryGroup.Children">
      <summary>Gets or sets the GeometryCollection that contains the objects that define this GeometryGroup.</summary>
      <returns>A collection containing the children of this GeometryGroup.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeometryGroup.ChildrenProperty">
      <summary>Identifies the Children dependency property.</summary>
      <returns>The identifier for the Children dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeometryGroup.FillRule">
      <summary>Gets or sets how the intersecting areas of the objects contained in this GeometryGroup are combined.</summary>
      <returns>One of the enumeration values that specifies how the intersecting areas are combined to form the resulting area. The default is **EvenOdd**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GeometryGroup.FillRuleProperty">
      <summary>Identifies the FillRule dependency property.</summary>
      <returns>The identifier for the FillRule dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GradientBrush">
      <summary>An abstract class that describes a gradient, composed of gradient stops. Parent class for LinearGradientBrush.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientBrush.#ctor">
      <summary>Provides base class initialization behavior for GradientBrush -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.ColorInterpolationMode">
      <summary>Gets or sets a ColorInterpolationMode enumeration value that specifies how the gradient's colors are interpolated.</summary>
      <returns>Specifies how the colors in a gradient are interpolated. The default is **SRgbLinearInterpolation**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.ColorInterpolationModeProperty">
      <summary>Identifies the ColorInterpolationMode dependency property.</summary>
      <returns>The identifier for the ColorInterpolationMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.GradientStops">
      <summary>Gets or sets the brush's gradient stops.</summary>
      <returns>A collection of the GradientStop objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty GradientStopCollection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.GradientStopsProperty">
      <summary>Identifies the GradientStops dependency property.</summary>
      <returns>The identifier for the GradientStops dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.MappingMode">
      <summary>Gets or sets a BrushMappingMode enumeration value that specifies whether the positioning coordinates of the gradient brush are absolute or relative to the output area.</summary>
      <returns>A BrushMappingMode value that specifies how to interpret the gradient brush's positioning coordinates. The default is **RelativeToBoundingBox**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.MappingModeProperty">
      <summary>Identifies the MappingMode dependency property.</summary>
      <returns>The identifier for the MappingMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.SpreadMethod">
      <summary>Gets or sets the type of spread method that specifies how to draw a gradient that starts or ends inside the bounds of the object to be painted.</summary>
      <returns>The type of spread method used to paint the gradient. The default is **Pad**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientBrush.SpreadMethodProperty">
      <summary>Identifies the SpreadMethod dependency property.</summary>
      <returns>The identifier for the SpreadMethod dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GradientSpreadMethod">
      <summary>Specifies how to draw the gradient outside a gradient brush's gradient vector or space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.GradientSpreadMethod.Pad">
      <summary>The color values at the ends of the gradient vector fill the remaining space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.GradientSpreadMethod.Reflect">
      <summary>The gradient is repeated in the reverse direction until the space is filled.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.GradientSpreadMethod.Repeat">
      <summary>The gradient is repeated in the original direction until the space is filled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GradientStop">
      <summary>Describes the location and color of a transition point in a gradient.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStop.#ctor">
      <summary>Initializes a new instance of the GradientStop class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientStop.Color">
      <summary>Gets or sets the color of the gradient stop.</summary>
      <returns>The color of the gradient stop. The default is Transparent.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientStop.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientStop.Offset">
      <summary>Gets the location of the gradient stop within the gradient vector.</summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientStop.OffsetProperty">
      <summary>Identifies the Offset dependency property.</summary>
      <returns>The identifier for the Offset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.GradientStopCollection">
      <summary>Represents a collection of GradientStop objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.#ctor">
      <summary>Initializes a new instance of the GradientStopCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.GradientStopCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.Append(Microsoft.UI.Xaml.Media.GradientStop)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The GradientStop value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.GradientStop[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.IndexOf(Microsoft.UI.Xaml.Media.GradientStop,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.GradientStop)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.ReplaceAll(Microsoft.UI.Xaml.Media.GradientStop[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.GradientStopCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.GradientStop)">
      <summary>Sets the value at the specified index to the **GradientStop** value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ImageBrush">
      <summary>Paints an area with an image. The image source is typically obtained from file formats such as Joint Photographic Experts Group (JPEG).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.ImageBrush.#ctor">
      <summary>Initializes a new instance of the ImageBrush class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ImageBrush.ImageSource">
      <summary>Gets or sets the image source displayed by this ImageBrush. In code you set this with an ImageSource subclass instance, in XAML you set this with a URI to an image source file.</summary>
      <returns>An object representing the image source, to be displayed by this ImageBrush when it's applied to content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ImageBrush.ImageSourceProperty">
      <summary>Identifies the ImageSource dependency property.</summary>
      <returns>The identifier for the ImageSource dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.ImageBrush.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.ImageBrush.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ImageSource">
      <summary>Provides an object source type for the Image.Source and ImageBrush.ImageSource properties.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LinearGradientBrush">
      <summary>Paints an area with a linear gradient.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LinearGradientBrush.#ctor">
      <summary>Initializes a new instance of the LinearGradientBrush class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LinearGradientBrush.#ctor(Microsoft.UI.Xaml.Media.GradientStopCollection,System.Double)">
      <summary>Initializes a new instance of the LinearGradientBrush class that has the specified GradientStopCollection and angle.</summary>
      <param name="gradientStopCollection">The GradientStops to set on this brush.</param>
      <param name="angle">A System.Double that represents the angle, in degrees, of the gradient. A value of 0 creates a horizontal gradient, and a value of 90 creates a vertical gradient. Negative values are permitted, as are values over 360 (which are treated as **mod** 360).</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient.</summary>
      <returns>The ending two-dimensional coordinates of the linear gradient. The default is a Point with value 1,1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LinearGradientBrush.EndPointProperty">
      <summary>Identifies the EndPoint dependency property.</summary>
      <returns>The identifier for the EndPoint dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient.</summary>
      <returns>The starting two-dimensional coordinates for the linear gradient. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LinearGradientBrush.StartPointProperty">
      <summary>Identifies the StartPoint dependency property.</summary>
      <returns>The identifier for the StartPoint dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LineGeometry">
      <summary>Represents the geometry of a line.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LineGeometry.#ctor">
      <summary>Initializes a new instance of the LineGeometry class that has no length.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineGeometry.EndPoint">
      <summary>Gets or sets the end point of a line.</summary>
      <returns>The end point of the line. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineGeometry.EndPointProperty">
      <summary>Identifies the EndPoint dependency property.</summary>
      <returns>The identifier for the EndPoint dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineGeometry.StartPoint">
      <summary>Gets or sets the start point of the line.</summary>
      <returns>The start point of the line. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineGeometry.StartPointProperty">
      <summary>Identifies the StartPoint dependency property.</summary>
      <returns>The identifier for the StartPoint dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LineSegment">
      <summary>Represents a line drawn between two points, which can be part of a PathFigure within Path data.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LineSegment.#ctor">
      <summary>Initializes a new instance of the LineSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineSegment.Point">
      <summary>Gets or sets the end point of the line segment.</summary>
      <returns>The end point of the line segment. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LineSegment.PointProperty">
      <summary>Identifies the Point dependency property.</summary>
      <returns>The identifier for the Point dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs">
      <summary>Provides event data for the LoadedImageSurface.LoadCompleted event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs.Status">
      <summary>Gets a value that indicates whether the operation was successful. If it failed, indicates the reason for the failure.</summary>
      <returns>A value of the enumeration that indicates whether the operation was successful. If it failed, indicates the reason for the failure.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus">
      <summary>Defines constants that specify whether an image loaded, or why it failed to load.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus.InvalidFormat">
      <summary>The image did not load because the image format is invalid.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus.NetworkError">
      <summary>The image did not load due to a network error.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus.Other">
      <summary>The image did not load for some other reason.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus.Success">
      <summary>The image loaded.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.LoadedImageSurface">
      <summary>Represents a composition surface that an image can be downloaded, decoded and loaded onto. You can load an image using a Uniform Resource Identifier (URI) that references an image source file, or supplying a IRandomAccessStream.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedPhysicalSize">
      <summary>Gets the size of the decoded image in physical pixels.</summary>
      <returns>The size of the decoded image in physical pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedSize">
      <summary>Gets the size of the decoded image in device independent pixels.</summary>
      <returns>The size of the decoded image in device independent pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.LoadedImageSurface.NaturalSize">
      <summary>Gets the natural size of the image in physical pixels, which is defined in the original image source.</summary>
      <returns>The natural size of the image in physical pixels.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.LoadedImageSurface.LoadCompleted">
      <summary>Occurs when the image has been downloaded, decoded and loaded to the underlying ICompositionSurface.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LoadedImageSurface.Close">
      <summary>Disposes of the LoadedImageSurface and associated resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LoadedImageSurface.StartLoadFromStream(Windows.Storage.Streams.IRandomAccessStream)">
      <summary>Loads an image onto a LoadedImageSurface from the provided IRandomAccessStream at the natural size</summary>
      <param name="stream">The stream from which the image is loaded.</param>
      <returns>An instance of LoadedImageSurface with the image loaded onto its surface.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LoadedImageSurface.StartLoadFromStream(Windows.Storage.Streams.IRandomAccessStream,Windows.Foundation.Size)">
      <summary>Loads an image into a LoadedImageSurface from the provided IRandomAccessStream with the desired maximum size.</summary>
      <param name="stream">The stream from which the image is loaded.</param>
      <param name="desiredMaxSize">The desired maximum size of the image surface in device independent pixels.</param>
      <returns>An instance of LoadedImageSurface with the image loaded onto its surface.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LoadedImageSurface.StartLoadFromUri(Windows.Foundation.Uri)">
      <summary>Loads an image into a LoadedImageSurface from the provided Uniform Resource Identifier (URI) at the natural size defined in the image source.</summary>
      <param name="uri">The URI from which the image is loaded.</param>
      <returns>An instance of LoadedImageSurface with the image loaded onto its surface.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.LoadedImageSurface.StartLoadFromUri(Windows.Foundation.Uri,Windows.Foundation.Size)">
      <summary>Loads an image into a LoadedImageSurface from the provided Uniform Resource Identifier (URI) with the desired maximum size.</summary>
      <param name="uri">The URI from which the image is loaded.</param>
      <param name="desiredMaxSize">The desired maximum size of the image surface in device independent pixels.</param>
      <returns>An instance of LoadedImageSurface with the image loaded onto its surface.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Matrix">
      <summary>Represents a 3 × 3 affine transformation matrix used for transformations in two-dimensional space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.M11">
      <summary>The value of the first row and first column of this Matrix structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.M12">
      <summary>The value of the first row and second column of this Matrix structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.M21">
      <summary>The value of the second row and first column of this Matrix structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.M22">
      <summary>The value of the second row and second column of this Matrix structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.OffsetX">
      <summary>Gets or sets the value of the third row and first column of this Matrix structure.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Matrix.OffsetY">
      <summary>Gets or sets the value of the third row and second column of this Matrix structure.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Matrix3DProjection">
      <summary>Applies a Matrix3D projection to an object.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Matrix3DProjection.#ctor">
      <summary>Initializes a new instance of a Matrix3DProjection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix">
      <summary>Gets or sets the Matrix3D that is used for the projection that is applied to the object.</summary>
      <returns>The Matrix3D that is used for the projection that is applied to the object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrixProperty">
      <summary>Identifies the ProjectionMatrix dependency property.</summary>
      <returns>The identifier for the ProjectionMatrix dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.MatrixHelper">
      <summary>Provides static helper methods for processing Matrix values. C# and Microsoft Visual Basic code should use members of Matrix instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.MatrixHelper.Identity">
      <summary>Gets a static constructed Matrix where the values established are representative of an **Identity** transform. C# and Microsoft Visual Basic code should use Identity instead.</summary>
      <returns>A static constructed Matrix where the values established are representative of an **Identity** transform.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MatrixHelper.FromElements(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Creates a new Matrix based on provided initial Matrix data values. C# and Microsoft Visual Basic code should use Matrix constructor instead.</summary>
      <param name="m11">The initial value of **M11** for the created Matrix.</param>
      <param name="m12">The initial value of **M12** for the created Matrix.</param>
      <param name="m21">The initial value of **M21** for the created Matrix.</param>
      <param name="m22">The initial value of **M22** for the created Matrix.</param>
      <param name="offsetX">The initial value of **OffsetX** for the created Matrix.</param>
      <param name="offsetY">The initial value of **OffsetY** for the created Matrix.</param>
      <returns>The created Matrix.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MatrixHelper.GetIsIdentity(Microsoft.UI.Xaml.Media.Matrix)">
      <summary>Returns whether the provided Matrix represents an **Identity** transform. C# and Microsoft Visual Basic code should use IsIdentity instead.</summary>
      <param name="target">The target Matrix to evaluate.</param>
      <returns>**true** if the Matrix represents an **Identity** transform; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MatrixHelper.Transform(Microsoft.UI.Xaml.Media.Matrix,Windows.Foundation.Point)">
      <summary>Transforms a provided Matrix using a Point input, and returns a Point result. C# and Microsoft Visual Basic code should use Transform instead.</summary>
      <param name="target">The target Matrix to evaluate.</param>
      <param name="point">The Point input for the transform operation.</param>
      <returns>The Point result of the transform.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.MatrixTransform">
      <summary>Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a two-dimensional plane.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MatrixTransform.#ctor">
      <summary>Initializes a new instance of the MatrixTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.MatrixTransform.Matrix">
      <summary>Gets or sets the Matrix that defines this transformation.</summary>
      <returns>The Matrix structure that defines this transformation. The default is an identity Matrix. An identity matrix has a value of 1 in coefficients [1,1], [2,2], and [3,3]; and a value of 0 in the rest of the coefficients.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.MatrixTransform.MatrixProperty">
      <summary>Identifies the Matrix dependency property.</summary>
      <returns>The identifier for the Matrix dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.MediaCanPlayResponse">
      <summary>Describes the likelihood that the media engine can play a media source based on its file type and characteristics.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaCanPlayResponse.Maybe">
      <summary>Media engine might support the media source.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaCanPlayResponse.NotSupported">
      <summary>Media engine cannot support the media source.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaCanPlayResponse.Probably">
      <summary>Media engine can probably support the media source.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.MediaElementState">
      <summary>Defines the potential states of a MediaElement object.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Buffering">
      <summary>The MediaElement is loading the media for playback. Its Position does not advance during this state. If the MediaElement was already playing video, it continues to display the last displayed frame.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Closed">
      <summary>The MediaElement contains no media. The MediaElement displays a transparent frame.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Opening">
      <summary>The MediaElement is validating and attempting to load the specified source.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Paused">
      <summary>The MediaElement does not advance its Position. If the MediaElement was playing video, it continues to display the current frame.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Playing">
      <summary>The MediaElement is playing the current media source.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.MediaElementState.Stopped">
      <summary>The MediaElement contains media but is not playing or paused. Its Position is 0 and does not advance. If the loaded media is video, the MediaElement displays the first frame.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs">
      <summary>Provides data for the MediaTransportControls.ThumbnailRequested event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs.GetDeferral">
      <summary>Returns a deferral that can be used to defer the completion of the ThumbnailRequested event while the thumbnail is generated.</summary>
      <returns>A deferral object that you can use to identify when the thumbnail request is complete.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs.SetThumbnailImage(Windows.Storage.Streams.IInputStream)">
      <summary>Sets the source of the thumbnail image.</summary>
      <param name="source">The source of the thumbnail image.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs">
      <summary>Provides data for the PartialMediaFailureDetected event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs.#ctor">
      <summary>Initializes a new instance of the PartialMediaFailureDetectedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs.ExtendedError">
      <summary>Gets error info for the media failure.</summary>
      <returns>The error info for the media failure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs.StreamKind">
      <summary>Gets a value indicating whether the stream that failed to decode contains audio or video.</summary>
      <returns>A value indicating whether the stream that failed to decode contains audio or video.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PathFigure">
      <summary>Represents a subsection of a geometry, a single connected series of two-dimensional geometric segments.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigure.#ctor">
      <summary>Initializes a new instance of the PathFigure class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.IsClosed">
      <summary>Gets or sets a value that indicates whether this figure's first and last segments are connected.</summary>
      <returns>**true** if the first and last segments of the figure are connected; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.IsClosedProperty">
      <summary>Identifies the IsClosed dependency property.</summary>
      <returns>The identifier for the IsClosed dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.IsFilled">
      <summary>Gets or sets a value that indicates whether the contained area of this PathFigure is to be used for hit-testing, rendering, and clipping.</summary>
      <returns>**true** if the contained area of this PathFigure is to be used for hit-testing, rendering, and clipping; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.IsFilledProperty">
      <summary>Identifies the IsFilled dependency property.</summary>
      <returns>The identifier for the IsFilled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.Segments">
      <summary>Gets or sets the collection of segments that define the shape of this PathFigure object.</summary>
      <returns>The collection of segments that define the shape of this PathFigure object. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.SegmentsProperty">
      <summary>Identifies the Segments dependency property.</summary>
      <returns>The identifier for the Segments dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.StartPoint">
      <summary>Gets or sets the Point where the PathFigure begins.</summary>
      <returns>The Point where the PathFigure begins. The default is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigure.StartPointProperty">
      <summary>Identifies the StartPoint dependency property.</summary>
      <returns>The identifier for the StartPoint dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PathFigureCollection">
      <summary>Represents a collection of PathFigure objects that collectively make up the geometry of a PathGeometry.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.#ctor">
      <summary>Initializes a new instance of the PathFigureCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathFigureCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.Append(Microsoft.UI.Xaml.Media.PathFigure)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The PathFigure value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.PathFigure[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.IndexOf(Microsoft.UI.Xaml.Media.PathFigure,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.PathFigure)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.ReplaceAll(Microsoft.UI.Xaml.Media.PathFigure[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathFigureCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.PathFigure)">
      <summary>Sets the value at the specified index to the PathFigure value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PathGeometry">
      <summary>Represents a complex vector-based shape that may be composed of arcs, curves, ellipses, lines, and rectangles.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathGeometry.#ctor">
      <summary>Initializes a new instance of the PathGeometry class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathGeometry.Figures">
      <summary>Gets or sets the collection of PathFigure objects that describe the contents of a path.</summary>
      <returns>A collection of PathFigure objects that describe the contents of a path. Each individual PathFigure describes a shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathGeometry.FiguresProperty">
      <summary>Identifies the Figures dependency property.</summary>
      <returns>The identifier for the Figures dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathGeometry.FillRule">
      <summary>Gets or sets a value that determines how the intersecting areas contained in the PathGeometry are combined.</summary>
      <returns>A FillRule enumeration value that indicates how the intersecting areas of the PathGeometry are combined. The default is **EvenOdd**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathGeometry.FillRuleProperty">
      <summary>Identifies the FillRule dependency property.</summary>
      <returns>The identifier for the FillRule dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PathSegment">
      <summary>Represents a segment of a PathFigure object. Derived classes of PathFigure describe different types of segments.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PathSegmentCollection">
      <summary>Represents a collection of PathSegment objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.#ctor">
      <summary>Initializes a new instance of the PathSegmentCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PathSegmentCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.Append(Microsoft.UI.Xaml.Media.PathSegment)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The PathSegment value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.PathSegment[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.IndexOf(Microsoft.UI.Xaml.Media.PathSegment,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.PathSegment)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.ReplaceAll(Microsoft.UI.Xaml.Media.PathSegment[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PathSegmentCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.PathSegment)">
      <summary>Sets the value at the specified index to the PathSegment value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PenLineCap">
      <summary>Describes the shape at the end of a line or segment.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineCap.Flat">
      <summary>A cap that does not extend past the last point of the line. Comparable to no line cap.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineCap.Square">
      <summary>A rectangle that has a height equal to the line thickness and a length equal to half the line thickness.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineCap.Triangle">
      <summary>An isosceles right triangle whose base length is equal to the thickness of the line.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PenLineJoin">
      <summary>Describes the shape that joins two lines or segments.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineJoin.Bevel">
      <summary>Line joins use beveled vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineJoin.Miter">
      <summary>Line joins use regular angular vertices.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.PenLineJoin.Round">
      <summary>Line joins use rounded vertices.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PlaneProjection">
      <summary>Represents a perspective transform (a 3-D-like effect) on an object.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PlaneProjection.#ctor">
      <summary>Initializes a new instance of the PlaneProjection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationX">
      <summary>Gets or sets the x-coordinate of the center of rotation of the object that you rotate.</summary>
      <returns>The x-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationXProperty">
      <summary>Identifies the CenterOfRotationX  dependency property.</summary>
      <returns>The identifier for the CenterOfRotationX  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationY">
      <summary>Gets or sets the y-coordinate of the center of rotation of the object that you rotate.</summary>
      <returns>The y-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationYProperty">
      <summary>Identifies the CenterOfRotationY  dependency property.</summary>
      <returns>The identifier for the CenterOfRotationY  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZ">
      <summary>Gets or sets the z-coordinate of the center of rotation of the object that you rotate.</summary>
      <returns>The z-coordinate of the center of rotation of the object that you rotate. The default is 0. Values greater than 0 correspond to coordinates in front of the plane of the object, and negative values correspond to coordinates behind the plane of the object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZProperty">
      <summary>Identifies the CenterOfRotationZ  dependency property.</summary>
      <returns>The identifier for the CenterOfRotationZ  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetX">
      <summary>Gets or sets the distance that the object is translated along the x-axis of the screen.</summary>
      <returns>The distance that the object is translated along the x-axis of the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetXProperty">
      <summary>Identifies the GlobalOffsetX  dependency property.</summary>
      <returns>The identifier for the GlobalOffsetX  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetY">
      <summary>Gets or sets the distance that the object is translated along the y-axis of the screen.</summary>
      <returns>The distance that the object is translated along the y-axis of the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetYProperty">
      <summary>Identifies the GlobalOffsetY  dependency property.</summary>
      <returns>The identifier for the GlobalOffsetY  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZ">
      <summary>Gets or sets the distance that the object is translated along the z-axis of the screen.</summary>
      <returns>The distance that the object is translated along the z-axis of the screen.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZProperty">
      <summary>Identifies the GlobalOffsetZ  dependency property.</summary>
      <returns>The identifier for the GlobalOffsetZ  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetX">
      <summary>Gets or sets the distance that the object is translated along the x-axis of the plane of the object.</summary>
      <returns>The distance that the object is translated along the x-axis of the plane of the object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetXProperty">
      <summary>Identifies the LocalOffsetX  dependency property.</summary>
      <returns>The identifier for the LocalOffsetX  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetY">
      <summary>Gets or sets the distance that the object is translated along the y-axis of the plane of the object.</summary>
      <returns>The distance that the object is translated along the y-axis of the plane of the object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetYProperty">
      <summary>Identifies the LocalOffsetY  dependency property.</summary>
      <returns>The identifier for the LocalOffsetY  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZ">
      <summary>Gets or sets the distance that the object is translated along the z-axis of the plane of the object.</summary>
      <returns>The distance that the object is translated along the z-axis of the plane of the object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZProperty">
      <summary>Identifies the LocalOffsetZ  dependency property.</summary>
      <returns>The identifier for the LocalOffsetZ  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.ProjectionMatrix">
      <summary>Gets the projection matrix of the PlaneProjection.</summary>
      <returns>The projection matrix of the PlaneProjection. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.ProjectionMatrixProperty">
      <summary>Identifies the ProjectionMatrix dependency property.</summary>
      <returns>The identifier for the ProjectionMatrix dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationX">
      <summary>Gets or sets the number of degrees to rotate the object around the x-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the x-axis of rotation. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationXProperty">
      <summary>Identifies the RotationX  dependency property.</summary>
      <returns>The identifier for the RotationX  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationY">
      <summary>Gets or sets the number of degrees to rotate the object around the y-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the y-axis of rotation. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationYProperty">
      <summary>Identifies the RotationY  dependency property.</summary>
      <returns>The identifier for the RotationY  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationZ">
      <summary>Gets or sets the number of degrees to rotate the object around the z-axis of rotation.</summary>
      <returns>The number of degrees to rotate the object around the z-axis of rotation. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PlaneProjection.RotationZProperty">
      <summary>Identifies the RotationZ  dependency property.</summary>
      <returns>The identifier for the RotationZ  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PointCollection">
      <summary>Represents a collection of Point values that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.#ctor">
      <summary>Initializes a new instance of the PointCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PointCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.Append(Windows.Foundation.Point)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">Adds a new item to the collection.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Point value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.GetMany(System.UInt32,Windows.Foundation.Point[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.IndexOf(Windows.Foundation.Point,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.InsertAt(System.UInt32,Windows.Foundation.Point)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.ReplaceAll(Windows.Foundation.Point[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PointCollection.SetAt(System.UInt32,Windows.Foundation.Point)">
      <summary>Sets the value at the specified index to the Point value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PolyBezierSegment">
      <summary>Represents one or more cubic Bezier curves.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PolyBezierSegment.#ctor">
      <summary>Initializes a new instance of the PolyBezierSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyBezierSegment.Points">
      <summary>Gets or sets the Point collection that defines this PolyBezierSegment object.</summary>
      <returns>The collection of points that defines this PolyBezierSegment object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyBezierSegment.PointsProperty">
      <summary>Identifies the Points  dependency property.</summary>
      <returns>The identifier for the Points  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PolyLineSegment">
      <summary>Represents a set of line segments defined by a Point collection with each Point specifying the end point of a line segment.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PolyLineSegment.#ctor">
      <summary>Initializes a new instance of the PolyLineSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyLineSegment.Points">
      <summary>Gets or sets the collection of Point values that defines this PolyLineSegment object.</summary>
      <returns>The points that define this PolyLineSegment object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyLineSegment.PointsProperty">
      <summary>Identifies the Points  dependency property.</summary>
      <returns>The identifier for the Points  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment">
      <summary>Represents a set of quadratic Bezier segments.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.#ctor">
      <summary>Initializes a new instance of the PolyQuadraticBezierSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points">
      <summary>Gets or sets the Point collection that defines this PolyQuadraticBezierSegment object.</summary>
      <returns>A collection of points that defines the shape of this PolyQuadraticBezierSegment object. The default value is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.PointsProperty">
      <summary>Identifies the Points  dependency property.</summary>
      <returns>The identifier for the Points  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Projection">
      <summary>Provides a base class for projections, which describe how to transform an object in 3-D space using perspective transforms.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Projection.#ctor">
      <summary>Provides base class initialization behavior for Projection -derived classes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.QuadraticBezierSegment">
      <summary>Creates a quadratic Bezier curve between two points in a PathFigure.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.QuadraticBezierSegment.#ctor">
      <summary>Initializes a new instance of the QuadraticBezierSegment class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point1">
      <summary>Gets or sets the control point of the curve.</summary>
      <returns>The control point of this QuadraticBezierSegment. The default value is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point1Property">
      <summary>Identifies the Point1  dependency property.</summary>
      <returns>The identifier for the Point1  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point2">
      <summary>Gets or sets the end Point of this QuadraticBezierSegment.</summary>
      <returns>The end point of this QuadraticBezierSegment. The default value is a Point with value 0,0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point2Property">
      <summary>Identifies the Point2  dependency property.</summary>
      <returns>The identifier for the Point2  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RateChangedRoutedEventArgs">
      <summary>Provides event data for the RateChanged event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RateChangedRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the RateChangedRoutedEventArgs class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RateChangedRoutedEventHandler">
      <summary>Represents the method that will handle the RateChanged event. This event fires when PlaybackRate or DefaultPlaybackRate change either via user interaction or from code.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RectangleGeometry">
      <summary>Describes a two-dimensional rectangular geometry.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RectangleGeometry.#ctor">
      <summary>Initializes a new instance of the RectangleGeometry class and creates a rectangle with zero area.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RectangleGeometry.Rect">
      <summary>Gets or sets the dimensions of the rectangle.</summary>
      <returns>The Rect structure that describes the position and size of the rectangle. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RectangleGeometry.RectProperty">
      <summary>Identifies the Rect  dependency property.</summary>
      <returns>The identifier for the Rect  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RenderedEventArgs">
      <summary>Provides event data for the Rendered event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RenderedEventArgs.FrameDuration">
      <summary>Gets the duration of the time it took to render the most recent frame.</summary>
      <returns>The duration of the time it took to render the most recent frame.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RenderingEventArgs">
      <summary>Provides event data for the Rendering event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RenderingEventArgs.RenderingTime">
      <summary>Gets the time when the frame rendered, for timing purposes</summary>
      <returns>The time when the frame rendered.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBackgroundBrush">
      <summary>Paints a control background with a reveal effect using composition brush and light effects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBackgroundBrush.#ctor">
      <summary>Initializes a new instance of the RevealBackgroundBrush class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBorderBrush">
      <summary>Paints a control border with a reveal effect using composition brush and light effects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBorderBrush.#ctor">
      <summary>Initializes a new instance of the RevealBorderBrush class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBrush">
      <summary>Base class for brushes that use composition effects and lighting to implement the reveal visual design treatment.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.#ctor">
      <summary>Provides base class initialization behavior for RevealBrush-derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.AlwaysUseFallback">
      <summary>Gets or sets a value that specifies whether the brush is forced to the solid fallback color.</summary>
      <returns>**true** to always replace the reveal effect with the solid fallback color. Otherwise, **false**. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.AlwaysUseFallbackProperty">
      <summary>Identifies the AlwaysUseFallback dependency property.</summary>
      <returns>The identifier for the AlwaysUseFallback dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.Color">
      <summary>Gets or sets a value that specifies the base background color for the brush.</summary>
      <returns>The base background color for the brush. The default value is transparent white (0x00FFFFFF).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.StateProperty">
      <summary>Identifies the RevealBrush.State attached property</summary>
      <returns>The identifier for the RevealBrush.State attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.TargetTheme">
      <summary>Gets or sets a value that specifies the theme used to draw the brush and light, to ensure that the correct composition effect recipe is used for the desired theme.</summary>
      <returns>An ApplicationTheme value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.TargetThemeProperty">
      <summary>Identifies the TargetTheme dependency property.</summary>
      <returns>The identifier for the TargetTheme dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.GetState(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RevealBrush.State XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RevealBrush.State XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.SetState(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Media.RevealBrushState)">
      <summary>Sets the value of the RevealBrush.State XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBrushState">
      <summary>Defines constants that specify the pointer state of an element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.Normal">
      <summary>The element is in its default state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.PointerOver">
      <summary>The pointer is over the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.Pressed">
      <summary>The element is pressed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RotateTransform">
      <summary>Rotates an object around a specified point in a two-dimensional x-y coordinate system.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RotateTransform.#ctor">
      <summary>Initializes a new instance of the RotateTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.Angle">
      <summary>Gets or sets the angle, in degrees, of clockwise rotation.</summary>
      <returns>The angle, in degrees, of clockwise rotation. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.AngleProperty">
      <summary>Identifies the Angle dependency property.</summary>
      <returns>The identifier for the Angle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the rotation center point for this transformation.</summary>
      <returns>The x-coordinate of the center of rotation, in pixels within the transform's frame of reference. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.CenterXProperty">
      <summary>Identifies the CenterX dependency property.</summary>
      <returns>The identifier for the CenterX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the rotation center point for this transformation.</summary>
      <returns>The y-coordinate of the center of rotation, in pixels within the transform's frame of reference. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RotateTransform.CenterYProperty">
      <summary>Identifies the CenterY dependency property.</summary>
      <returns>The identifier for the CenterY dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ScaleTransform">
      <summary>Scales an object in the two-dimensional x-y coordinate system.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.ScaleTransform.#ctor">
      <summary>Initializes a new instance of the ScaleTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the center point of this ScaleTransform.</summary>
      <returns>The x-coordinate of the center point of this ScaleTransform. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.CenterXProperty">
      <summary>Identifies the CenterX dependency property.</summary>
      <returns>The identifier for the CenterX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the center point of this ScaleTransform.</summary>
      <returns>The y-coordinate of the center point of this ScaleTransform. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.CenterYProperty">
      <summary>Identifies the CenterY dependency property.</summary>
      <returns>The identifier for the CenterY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.ScaleX">
      <summary>Gets or sets the x-axis scale factor.</summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.ScaleXProperty">
      <summary>Identifies the ScaleX dependency property.</summary>
      <returns>The identifier for the ScaleX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.ScaleY">
      <summary>Gets or sets the y-axis scale factor.</summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ScaleTransform.ScaleYProperty">
      <summary>Identifies the ScaleY dependency property.</summary>
      <returns>The identifier for the ScaleY dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Shadow">
      <summary>The base class for shadow effects that can be applied to a XAML element.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.SkewTransform">
      <summary>Represents a two-dimensional skew.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.SkewTransform.#ctor">
      <summary>Initializes a new instance of the SkewTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.AngleX">
      <summary>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the y-axis. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.AngleXProperty">
      <summary>Identifies the AngleX dependency property.</summary>
      <returns>The identifier for the AngleX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.AngleY">
      <summary>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the x-axis. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.AngleYProperty">
      <summary>Identifies the AngleY dependency property.</summary>
      <returns>The identifier for the AngleY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the transform center.</summary>
      <returns>The x-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.CenterXProperty">
      <summary>Identifies the CenterX dependency property.</summary>
      <returns>The identifier for the CenterX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the transform center.</summary>
      <returns>The y-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SkewTransform.CenterYProperty">
      <summary>Identifies the CenterY dependency property.</summary>
      <returns>The identifier for the CenterY dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.SolidColorBrush">
      <summary>Paints an area with a solid color. The solid color is defined by a Color value.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.SolidColorBrush.#ctor">
      <summary>Initializes a new instance of the SolidColorBrush class with no color.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.SolidColorBrush.#ctor(Windows.UI.Color)">
      <summary>Initializes a new instance of the SolidColorBrush class with the specified Color.</summary>
      <param name="color">The color to apply to the brush.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SolidColorBrush.Color">
      <summary>Gets or sets the color of this SolidColorBrush.</summary>
      <returns>The brush's color. The default value is Transparent.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.SolidColorBrush.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Stereo3DVideoPackingMode">
      <summary>Describes the frame-packing mode for stereo 3-D video content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stereo3DVideoPackingMode.None">
      <summary>Regular 2-D video.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stereo3DVideoPackingMode.SideBySide">
      <summary>Stereo 3-D content packing with components side-by-side.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stereo3DVideoPackingMode.TopBottom">
      <summary>Stereo 3-D content packing with components top and bottom.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Stereo3DVideoRenderMode">
      <summary>Describes the stereo 3-D video render mode for the current media source.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stereo3DVideoRenderMode.Mono">
      <summary>Regular 2-D video.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stereo3DVideoRenderMode.Stereo">
      <summary>Stereo 3-D video.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Stretch">
      <summary>Describes how content is resized to fill its allocated space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stretch.Fill">
      <summary>The content is resized to fill the destination dimensions. The aspect ratio is not preserved.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stretch.None">
      <summary>The content preserves its original size.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stretch.Uniform">
      <summary>The content is resized to fit in the destination dimensions while it preserves its native aspect ratio.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Stretch.UniformToFill">
      <summary>The content is resized to fill the destination dimensions while it preserves its native aspect ratio. If the aspect ratio of the destination rectangle differs from the source, the source content is clipped to fit in the destination dimensions.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.StyleSimulations">
      <summary>Describes the simulation style of a font.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.StyleSimulations.BoldItalicSimulation">
      <summary>Bold and italic style simulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.StyleSimulations.BoldSimulation">
      <summary>Bold style simulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.StyleSimulations.ItalicSimulation">
      <summary>Italic style simulation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.StyleSimulations.None">
      <summary>No font style simulation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.SweepDirection">
      <summary>Specifies the direction in which an elliptical arc is drawn.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.SweepDirection.Clockwise">
      <summary>Arcs are drawn in a clockwise (positive-angle) direction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.SweepDirection.Counterclockwise">
      <summary>Arcs are drawn in a counterclockwise (negative-angle) direction.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.ThemeShadow">
      <summary>Represents a preconfigured shadow effect that can be applied to a XAML element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.ThemeShadow.#ctor">
      <summary>Initializes a new instance of the ThemeShadow class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.ThemeShadow.Receivers">
      <summary>Gets a collection of UI elements that this shadow is cast on.</summary>
      <returns>A collection of UI elements that this shadow is cast on.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TileBrush">
      <summary>Base class that describes a way to paint a region. Parent of ImageBrush.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TileBrush.#ctor">
      <summary>Provides base class initialization behavior for TileBrush -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.AlignmentX">
      <summary>Gets or sets the horizontal alignment of content in the TileBrush base tile.</summary>
      <returns>A value that specifies the horizontal position of TileBrush content in its base tile. The default value is **Center**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.AlignmentXProperty">
      <summary>Identifies the AlignmentX dependency property.</summary>
      <returns>The identifier for the AlignmentX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.AlignmentY">
      <summary>Gets or sets the vertical alignment of content in the TileBrush base tile.</summary>
      <returns>A value that specifies the vertical position of TileBrush content in its base tile. The default value is **Center**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.AlignmentYProperty">
      <summary>Identifies the AlignmentY dependency property.</summary>
      <returns>The identifier for the AlignmentY dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.Stretch">
      <summary>Gets or sets a value that specifies how the content of this TileBrush stretches to fit its tiles.</summary>
      <returns>A value that specifies how this TileBrush content is projected onto its base tile. The default value is **Fill**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TileBrush.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TimelineMarker">
      <summary>Represents metadata associated with a specific point in a media file.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarker.#ctor">
      <summary>Initializes a new instance of the TimelineMarker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.Text">
      <summary>Gets or sets the text value of a TimelineMarker.</summary>
      <returns>The text value of the TimelineMarker. The default value is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.Time">
      <summary>Gets or sets the time at which a TimelineMarker is reached.</summary>
      <returns>The time at which the TimelineMarker is reached. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.TimeProperty">
      <summary>Identifies the Time dependency property.</summary>
      <returns>The identifier for the Time dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.Type">
      <summary>Gets or sets the marker type of a TimelineMarker.</summary>
      <returns>A string that describes the type of this TimelineMarker. The default value is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarker.TypeProperty">
      <summary>Identifies the Type dependency property.</summary>
      <returns>The identifier for the Type dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TimelineMarkerCollection">
      <summary>Represents a collection of TimelineMarker objects that can be individually accessed by index. A TimelineMarkerCollection is an ordered list where the order is determined by the Time value of each TimelineMarker item contained in the collection. For more info on how this affects the collection API, see Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.#ctor">
      <summary>Initializes a new instance of the TimelineMarkerCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.Append(Microsoft.UI.Xaml.Media.TimelineMarker)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The TimelineMarker value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.TimelineMarker[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.IndexOf(Microsoft.UI.Xaml.Media.TimelineMarker,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.TimelineMarker)">
      <summary>Inserts the specified item.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.ReplaceAll(Microsoft.UI.Xaml.Media.TimelineMarker[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.TimelineMarker)">
      <summary>Sets the value at the specified index to the TimelineMarker value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventArgs">
      <summary>Provides event data for the MarkerReached event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the TimelineMarkerRoutedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventArgs.Marker">
      <summary>Gets the TimelineMarker that triggered this event.</summary>
      <returns>The TimelineMarker that triggered this event.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventHandler">
      <summary>Represents methods that will handle various routed events related to timeline markers.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Transform">
      <summary>Defines functionality that enables transformations in a two-dimensional plane.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TransformCollection">
      <summary>Represents a collection of Transform objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.#ctor">
      <summary>Initializes a new instance of the TransformCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TransformCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.Append(Microsoft.UI.Xaml.Media.Transform)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Transform value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Transform[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.IndexOf(Microsoft.UI.Xaml.Media.Transform,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Transform)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Transform[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Transform)">
      <summary>Sets the value at the specified index to the Transform value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TransformGroup">
      <summary>Represents a composite Transform composed of other Transform objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TransformGroup.#ctor">
      <summary>Initializes a new instance of the TransformGroup class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TransformGroup.Children">
      <summary>Gets or sets the collection of child Transform objects.</summary>
      <returns>The collection of child Transform objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TransformGroup.ChildrenProperty">
      <summary>Identifies the Children dependency property.</summary>
      <returns>The identifier for the Children dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TransformGroup.Value">
      <summary>Gets the Matrix structure that describes the transformation represented by this TransformGroup.</summary>
      <returns>A composite of the Transform objects in this TransformGroup.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.TranslateTransform">
      <summary>Translates (moves) an object in the two-dimensional x-y coordinate system.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.TranslateTransform.#ctor">
      <summary>Initializes a new instance of the TranslateTransform class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TranslateTransform.X">
      <summary>Gets or sets the distance to translate along the x-axis.</summary>
      <returns>The distance to translate (move) an object along the x-axis, in pixels. This property is read/write. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TranslateTransform.XProperty">
      <summary>Identifies the X dependency property.</summary>
      <returns>The identifier for the X dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TranslateTransform.Y">
      <summary>Gets or sets the distance to translate (move) an object along the y-axis.</summary>
      <returns>The distance to translate (move) an object along the y-axis, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.TranslateTransform.YProperty">
      <summary>Identifies the Y dependency property.</summary>
      <returns>The identifier for the Y dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.VisualTreeHelper">
      <summary>Provides utility methods that can be used to traverse object relationships (along child-object or parent-object axes) in the visual tree of your app.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.DisconnectChildrenRecursive(Microsoft.UI.Xaml.UIElement)">
      <summary>Explicitly removes all references from a target UIElement, with the goal of cleaning up reference cycles.</summary>
      <param name="element">The target object to disconnect children and remove references from.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.FindElementsInHostCoordinates(Windows.Foundation.Point,Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves a set of objects that are located within a specified x-y coordinate point of an app UI. The set of objects represents the components of a visual tree that share that point.</summary>
      <param name="intersectingPoint">The point to use as the determination point. This point is using the coordinate space of the app window, not of any specific element (and not of *subtree* if specified).</param>
      <param name="subtree">An object to search for. If the *subtree* object exists in the overall set of elements that exist at the specified *intersectingPoint* coordinates, then the return value contains only the *subtree* object and any objects that have a higher z-order than *subtree*, listed by inverse of z-order. If the *subtree* object doesn't exist at *intersectingPoint* coordinates, the return value will be empty.</param>
      <returns>An enumerable set of UIElement objects in the visual tree composition at the specified point, listed by inverse of z-order.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.FindElementsInHostCoordinates(Windows.Foundation.Point,Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Retrieves a set of objects that are located within a specified x-y coordinate point of an app UI. The set of objects represents the components of a visual tree that share that point.</summary>
      <param name="intersectingPoint">The point to use as the determination point. This point is using the coordinate space of the app window, not of any specific element (and not of *subtree* if specified).</param>
      <param name="subtree">An object to search for. If the *subtree* object exists in the overall set of elements that exist at the specified *intersectingPoint* coordinates, then the return value contains only the *subtree* object and any objects that have a higher z-order than *subtree*, listed by inverse of z-order. If the *subtree* object doesn't exist at *intersectingPoint* coordinates, the return value will be empty.</param>
      <param name="includeAllElements">**true** to include all elements that intersect, including those elements considered to be invisible to hit testing. **false** to find only visible, hit-testable elements. The default is **false**.</param>
      <returns>An enumerable set of UIElement objects that are determined to be located in the visual tree composition at the specified point, listed by inverse of z-order.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.FindElementsInHostCoordinates(Windows.Foundation.Rect,Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves a set of objects that are located within a specified Rect frame of an app UI. The set of objects represents the components of a visual tree that share a rectangular area, and might include elements that overdraw.</summary>
      <param name="intersectingRect">The Rect to use as the determination area. This frame is using the coordinate space of the app window, not of any specific element (and not of *subtree* if specified).</param>
      <param name="subtree">An object to search for. If the *subtree* object exists in the overall set of elements that exist within the specified *intersectingRect*, then the return value contains only the *subtree* object and elements that are drawing on top of its space. If the *subtree* object doesn't exist within the *intersectingRect* frame, the return value will be empty.</param>
      <returns>An enumerable set of UIElement objects that are in the visual tree composition in the specified Rect frame.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.FindElementsInHostCoordinates(Windows.Foundation.Rect,Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Retrieves a set of objects that are located within a specified Rect frame of an app UI. The set of objects represents the components of a visual tree that share a rectangular area, and might include elements that overdraw.</summary>
      <param name="intersectingRect">The Rect to use as the determination area. This frame is using the coordinate space of the app window, not of any specific element (and not of *subtree* if specified).</param>
      <param name="subtree">An object to search for. If the *subtree* object exists in the overall set of elements that exist within the specified *intersectingRect*, then the return value contains only the *subtree* object and elements that are drawing on top of its space. If the *subtree* object doesn't exist within the *intersectingRect* frame, the return value will be empty.</param>
      <param name="includeAllElements">**true** to include all elements that intersect, including those elements considered to be invisible to hit testing. **false** to find only visible, hit-testable elements. The default is **false**.</param>
      <returns>An enumerable set of UIElement objects that are determined to be located in the visual tree composition in the specified Rect frame.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.GetChild(Microsoft.UI.Xaml.DependencyObject,System.Int32)">
      <summary>Using the provided index, obtains a specific child object of the provided object by examining the visual tree.</summary>
      <param name="reference">The object that holds the child collection.</param>
      <param name="childIndex">The index of the requested child object in the *reference* child collection.</param>
      <returns>The child object as referenced by *childIndex*.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.GetChildrenCount(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the number of children that exist in an object's child collection in the visual tree.</summary>
      <param name="reference">The source visual.</param>
      <returns>The number of visual children for the provided source visual.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.GetOpenPopups(Microsoft.UI.Xaml.Window)">
      <summary>Retrieves a collection of all open popup controls from the target Window.</summary>
      <param name="window">The current Window instance to retrieve the popups from.</param>
      <returns>The list of all open popups. If no popups are open, the list is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.GetOpenPopupsForXamlRoot(Microsoft.UI.Xaml.XamlRoot)">
      <summary>Retrieves a collection of all open popup controls from the target XamlRoot.</summary>
      <param name="xamlRoot">The current XamlRoot instance to retrieve the popups from.</param>
      <returns>The list of all open popups. If no popups are open, the list is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.VisualTreeHelper.GetParent(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns an object's parent object in the visual tree.</summary>
      <param name="reference">The object for which to get the parent object.</param>
      <returns>The parent object of the *reference* object in the visual tree.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase">
      <summary>Provides a base class used to create XAML brushes that paint an area with a CompositionBrush.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.#ctor">
      <summary>Provides base class initialization behavior for **XamlCompositionBrushBase** derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.CompositionBrush">
      <summary>Gets or sets the CompositionBrush used by this XAML brush.</summary>
      <returns>The instance of CompositionBrush used by this XAML brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FallbackColor">
      <summary>The color to use for rendering in case the CompositionBrush can't be rendered.</summary>
      <returns>The color to use for rendering in place of the composition brush.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FallbackColorProperty">
      <summary>Identifies the **FallbackColor** dependency property.</summary>
      <returns>The identifier for the **FallbackColor** dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.OnConnected">
      <summary>Invoked when a brush is first used on screen to paint an element. </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.OnDisconnected">
      <summary>Invoked when the brush is no longer being used to paint any elements. </summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.XamlLight">
      <summary>Provides a base class used to create XAML lights that use a CompositionLight to apply lighting effects to XAML elements and brushes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.#ctor">
      <summary>Initializes a new instance of the **XamlLight** class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.XamlLight.CompositionLight">
      <summary>Gets or sets the CompositionLight instance used to apply lighting effects.</summary>
      <returns>An instance of a CompositionLight derived class used to apply lighting effects.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.AddTargetBrush(System.String,Microsoft.UI.Xaml.Media.Brush)">
      <summary>Sets a Brush as a target of a XamlLight.</summary>
      <param name="lightId">The identifier for the XamlLight that should target the Brush.</param>
      <param name="brush">The Brush that the light should target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.AddTargetElement(System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets a UIElement as a target of a XamlLight.</summary>
      <param name="lightId">The identifier for the XamlLight that should target the UIElement.</param>
      <param name="element">The UIElement that the light should target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.GetId">
      <summary>Returns the identifier for the custom XamlLight type.</summary>
      <returns>The identifier for the XamlLight.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.OnConnected(Microsoft.UI.Xaml.UIElement)">
      <summary>This method is automatically called when the XamlLight is first in use on the screen, or after being previously disconnected then used again.</summary>
      <param name="newElement">The UIElement that the light is attached to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.OnDisconnected(Microsoft.UI.Xaml.UIElement)">
      <summary>This method is automatically called when the XamlLight is no longer in use anywhere on the screen.</summary>
      <param name="oldElement">The UIElement that the light is attached to.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.RemoveTargetBrush(System.String,Microsoft.UI.Xaml.Media.Brush)">
      <summary>Stops a Brush from being a target of a XamlLight.</summary>
      <param name="lightId">The identifier for the XamlLight that should no longer target the Brush.</param>
      <param name="brush">The Brush that the light should no longer target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.XamlLight.RemoveTargetElement(System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Stops a UIElement from being a target of a XamlLight.</summary>
      <param name="lightId">The identifier for the XamlLight that should no longer target the UIElement.</param>
      <param name="element">The UIElement that the light should no longer target.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition">
      <summary>Provides the animated transition behavior for when controls add or delete children of a panel. For example, if you have a collection of photos displayed in a Grid, you can associate this animation to the Grid so that when photos are added or deleted, the photos will animate in and out of view.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition.#ctor">
      <summary>Initializes a new instance of the AddDeleteThemeTransition class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.BackEase">
      <summary>Represents an easing function that changes a value in the opposite direction of the main function during part of a duration, then reverses and finishes the function-over-time behavior in a conventional way.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.BackEase.#ctor">
      <summary>Initializes a new instance of the BackEase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BackEase.Amplitude">
      <summary>Gets or sets the amplitude of retraction associated with a BackEase animation.</summary>
      <returns>The amplitude of retraction associated with a BackEase animation. This value must be greater than or equal to 0. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BackEase.AmplitudeProperty">
      <summary>Identifies the Amplitude dependency property.</summary>
      <returns>The identifier for the Amplitude dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration">
      <summary>An object that configures the connected animation as a linear transition from the source to the destination.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration.#ctor">
      <summary>Initializes a new instance of the BasicConnectedAnimationConfiguration class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.BeginStoryboard">
      <summary>A trigger action that begins a Storyboard. Not commonly used. See Remarks.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.#ctor">
      <summary>Initializes a new instance of the BeginStoryboard class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard">
      <summary>Gets or sets the Storyboard that this BeginStoryboard starts.</summary>
      <returns>The Storyboard that the BeginStoryboard starts. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>Identifies the BeginStoryboard.Storyboard  dependency property.</summary>
      <returns>The identifier for the BeginStoryboard.Storyboard  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.BounceEase">
      <summary>Represents an easing function that creates an animated bouncing effect.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.BounceEase.#ctor">
      <summary>Initializes a new instance of the BounceEase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounces">
      <summary>Gets or sets the number of bounces.</summary>
      <returns>The number of bounces. The value must be greater or equal to zero. Negative values will resolve to zero. The default is 3.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BounceEase.BouncesProperty">
      <summary>Identifies the Bounces dependency property.</summary>
      <returns>The identifier for the Bounces dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounciness">
      <summary>Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little loss of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).</summary>
      <returns>The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.BounceEase.BouncinessProperty">
      <summary>Identifies the Bounciness dependency property.</summary>
      <returns>The identifier for the Bounciness dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.CircleEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.CircleEase.#ctor">
      <summary>Initializes a new instance of the CircleEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ClockState">
      <summary>Describes the potential states of an animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ClockState.Active">
      <summary>The current animation changes in direct relation to the animation of its parent.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ClockState.Filling">
      <summary>The animation continues and does not change in relation to the animation of its parent.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ClockState.Stopped">
      <summary>The animation is stopped.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ColorAnimation">
      <summary>Animates the value of a Color property between two target values using linear interpolation over a specified Duration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.#ctor">
      <summary>Initializes a new instance of the ColorAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.ByProperty">
      <summary>Identifies the By  dependency property.</summary>
      <returns>The identifier for the By  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunctionProperty">
      <summary>Identifies the EasingFunction  dependency property.</summary>
      <returns>The identifier for the EasingFunction   dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.FromProperty">
      <summary>Identifies the From  dependency property.</summary>
      <returns>The identifier for the From  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimation.ToProperty">
      <summary>Identifies the To  dependency property.</summary>
      <returns>The identifier for the To  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames">
      <summary>Animates the value of a Color property along a set of key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the ColorAnimationUsingKeyFrames class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of ColorKeyFrame objects that define the animation.</summary>
      <returns>The collection of ColorKeyFrame objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame">
      <summary>Provides a base class for specific animation key-frame techniques that define an animation segment with a Color target value. Derived classes each provide a different key-frame interpolation method for a Color value that is provided for a ColorAnimationUsingKeyFrames animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.#ctor">
      <summary>Provides base class initialization behavior for ColorKeyFrame -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target Value should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its Value property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.KeyTimeProperty">
      <summary>Identifies the KeyTime dependency property.</summary>
      <returns>The identifier for the KeyTime  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value at its specified KeyTime. The default is a Color with an ARGB value of #00000000.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for the Value  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection">
      <summary>Represents a collection of ColorKeyFrame objects that can be individually accessed by index. ColorKeyFrameCollection is the value of the ColorAnimationUsingKeyFrames.KeyFrames property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the ColorKeyFrameCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.Append(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The ColorKeyFrame value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)">
      <summary>Sets the value at the specified index to the ColorKeyFrame value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo">
      <summary>Provides common parameters for navigation transition animations.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the CommonNavigationTransitionInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.IsStaggerElementProperty">
      <summary>Identifies the CommonNavigationTransitionInfo.IsStaggerElement attached property.</summary>
      <returns>The identifier for the CommonNavigationTransitionInfo.IsStaggerElement attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.IsStaggeringEnabled">
      <summary>Gets or sets a Boolean value indicating if staggering is enabled for the navigation transition.</summary>
      <returns>A Boolean value indicating if staggering is enabled for the navigation transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.IsStaggeringEnabledProperty">
      <summary>Identifies the IsStaggeringEnabled dependency property.</summary>
      <returns>The identifier for the IsStaggeringEnabled dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.GetIsStaggerElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a Boolean value indicating if the specified **UIElement** is the stagger element for the navigation transition.</summary>
      <param name="element">The **UIElement** to check as being the stagger element.</param>
      <returns>Returns **true** if *element* is the stagger element; otherwise **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.SetIsStaggerElement(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets a Boolean value indicating if the specified **UIElement** is the stagger element for the navigation transition.</summary>
      <param name="element">The **UIElement** about which to set the stagger element indicator.</param>
      <param name="value">Set this value to **true** if *element* is the stagger element; otherwise set it to **false**.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute">
      <summary>Not intended for general use. See also IndependentlyAnimatableAttribute.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute.#ctor">
      <summary>Initializes a new instance of the ConditionallyIndependentlyAnimatableAttribute class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation">
      <summary>Represents an animation that simultaneously animates the exit of one element and the entrance of another element.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Configuration">
      <summary>Gets or sets the configuration that describes the type of connected animation to play.</summary>
      <returns>A configuration that describes the type of connected animation to play.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.IsScaleAnimationEnabled">
      <summary>Gets or sets a value that indicates whether the scale component of the connected animation should be used.</summary>
      <returns>**true** if the scale component of the connected animation should be used. otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Completed">
      <summary>Occurs when the animation is finished.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Cancel">
      <summary>Stops the connected animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.SetAnimationComponent(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent,Microsoft.UI.Composition.ICompositionAnimationBase)">
      <summary>Sets a custom CompositionAnimation to change the motion of a particular part of the connected animation.</summary>
      <param name="component">The part of the connected animation to change.</param>
      <param name="animation">The animation to use in place of the default one.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.TryStart(Microsoft.UI.Xaml.UIElement)">
      <summary>Attempts to start the animation.</summary>
      <param name="destination">The element that is animated into view.</param>
      <returns>**true** if the animation started; **false** if the animation has already been started, if it is no longer active, or if the destination element is the same as the source element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.TryStart(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Collections.IIterable{Microsoft.UI.Xaml.UIElement})">
      <summary>Attempts to start the animation on the destination element and specified secondary elements.</summary>
      <param name="destination">The element that is animated into view.</param>
      <param name="coordinatedElements">The collection of secondary elements. These elements will play an entrance animation where they travel alongside the connected animation target in a "coordinated animation".</param>
      <returns>**true** if the animation started; **false** if the animation has already been started, if it is no longer active, or if the destination element is the same as the source element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent">
      <summary>Defines constants that specify the component animations that make up a connected animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent.CrossFade">
      <summary>The crossfade animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent.OffsetX">
      <summary>The X component of the translation animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent.OffsetY">
      <summary>The Y component of the translation animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent.Scale">
      <summary>The scale animation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration">
      <summary>An object that describes the type of animation to play during a connected animation.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService">
      <summary>Represents a service that provides properties and methods to display a ConnectedAnimation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService.DefaultDuration">
      <summary>Gets or sets the default time that the animation runs.</summary>
      <returns>The default time that the animation runs.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService.DefaultEasingFunction">
      <summary>Gets or sets the default CompositionEasingFunction used by the animation.</summary>
      <returns>The default CompositionEasingFunction used by the animation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService.GetAnimation(System.String)">
      <summary>Returns the animation with the specified key.</summary>
      <param name="key">The key for the animation.</param>
      <returns>The animation with the specified key; or **null** if no animation has been prepared for that key, or if the animation is no longer active.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService.GetForCurrentView">
      <summary>Returns an instance of ConnectedAnimationService for the current view.</summary>
      <returns>An instance of ConnectedAnimationService for the current view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService.PrepareToAnimate(System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a connected animation that's associated with the specified key and source element.</summary>
      <param name="key">The key for the animation.</param>
      <param name="source">The element that is animated out of view.</param>
      <returns>The animation with the specified key.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition">
      <summary>Provides the animated transition behavior for when the content of a control is changing. This might be applied in addition to AddDeleteThemeTransition.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.#ctor">
      <summary>Initializes a new instance of the ContentThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.HorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the transition is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.HorizontalOffsetProperty">
      <summary>Identifies the HorizontalOffset dependency property.</summary>
      <returns>The identifier for the HorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.VerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the transition is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.VerticalOffsetProperty">
      <summary>Identifies the VerticalOffset dependency property.</summary>
      <returns>The identifier for the VerticalOffset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo">
      <summary>Specifies the object that will fly between pages to provide context during a continuum transition.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the ContinuumNavigationTransitionInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.ExitElement">
      <summary>Gets or sets the element that will fly between pages during a continuum navigation transition.</summary>
      <returns>The element that will fly between pages during a continuum navigation transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.ExitElementContainerProperty">
      <summary>Identifies the ContinuumNavigationTransitionInfo.ExitElementContainer attached property.</summary>
      <returns>The identifier for the ContinuumNavigationTransitionInfo.ExitElementContainer attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.ExitElementProperty">
      <summary>Identifies the ExitElement dependency property.</summary>
      <returns>The identifier for the ExitElement dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.IsEntranceElementProperty">
      <summary>Identifies the ContinuumNavigationTransitionInfo.IsEntranceElement attached property.</summary>
      <returns>The identifier for the ContinuumNavigationTransitionInfo.IsEntranceElement attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.IsExitElementProperty">
      <summary>Identifies the ContinuumNavigationTransitionInfo.IsExitElement attached property.</summary>
      <returns>The identifier for the ContinuumNavigationTransitionInfo.IsExitElement attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.GetExitElementContainer(Microsoft.UI.Xaml.Controls.ListViewBase)">
      <summary>Returns a Boolean value indicating if the specified element is the ExitElement container.</summary>
      <param name="element">The element to be checked as being the container.</param>
      <returns>Returns **true** if *element* is the container; otherwise **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.GetIsEntranceElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a Boolean value indicating if the specified **UIElement** is the entrance element for the continuum navigation.</summary>
      <param name="element">The **UIElement** to check as being the entrance element.</param>
      <returns>Returns **true** if *element* is the entrance element; otherwise **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.GetIsExitElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Returns a Boolean value indicating if the specified **UIElement** is the exit element of the continuum navigation.</summary>
      <param name="element">The **UIElement** to check as being the exit element.</param>
      <returns>Returns **true** if *element* is the exit element; otherwise **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.SetExitElementContainer(Microsoft.UI.Xaml.Controls.ListViewBase,System.Boolean)">
      <summary>Sets a Boolean value indicating that the specified element is the exit element container for the continuum navigation.</summary>
      <param name="element">The element about which to set the exit element container indicator.</param>
      <param name="value">Set this value to **true** if *element* is the exit element; otherwise set it to **false**.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.SetIsEntranceElement(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets a Boolean value indicating if the specified **UIElement** is the entrance element for the continuum navigation.</summary>
      <param name="element">The **UIElement** about which to set the entrance element indicator.</param>
      <param name="value">Set this value to **true** if *element* is the entrance element; otherwise set it to **false**.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.SetIsExitElement(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets a Boolean value indicating if the specified **UIElement** is the exit element for the continuum navigation.</summary>
      <param name="element">The **UIElement** about which to set the exit element indicator.</param>
      <param name="value">Set this value to **true** if *element* is the exit element; otherwise set it to **false**.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.CubicEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f* (*t*) = *t*&lt;sup&gt;3&lt;/sup&gt;.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.CubicEase.#ctor">
      <summary>Initializes a new instance of the CubicEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DirectConnectedAnimationConfiguration">
      <summary>An object that configures the connected animation to play a quick linear animation between source and destination.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DirectConnectedAnimationConfiguration.#ctor">
      <summary>Initializes a new instance of the DirectConnectedAnimationConfiguration class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame">
      <summary>Animates from the Color value of the previous key frame to its own Value using discrete values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the DiscreteColorKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame">
      <summary>Animates from the Double value of the previous key frame to its own Value using discrete values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the DiscreteDoubleKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame">
      <summary>Animates from the Object value of the previous key frame to its own Value using discrete values.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the DiscreteObjectKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame">
      <summary>Animates from the Point value of the previous key frame to its own Value using discrete frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the DiscretePointKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation">
      <summary>Animates the value of a Double property between two target values using linear interpolation over a specified Duration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.#ctor">
      <summary>Initializes a new instance of the DoubleAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.ByProperty">
      <summary>Identifies the By  dependency property.</summary>
      <returns>The identifier for the By  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunctionProperty">
      <summary>Identifies the EasingFunction  dependency property.</summary>
      <returns>The identifier for the EasingFunction  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.FromProperty">
      <summary>Identifies the From  dependency property.</summary>
      <returns>The identifier for the From  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.ToProperty">
      <summary>Identifies the To  dependency property.</summary>
      <returns>The identifier for the To  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames">
      <summary>Animates the value of a Double property along a set of key frames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the DoubleAnimationUsingKeyFrames class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of DoubleKeyFrame objects that define the animation.</summary>
      <returns>The collection of DoubleKeyFrame objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame">
      <summary>An abstract class that defines an animation segment with its own target value and interpolation method for a DoubleAnimationUsingKeyFrames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.#ctor">
      <summary>Provides base class initialization behavior for DoubleKeyFrame -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target Value should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its Value property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.KeyTimeProperty">
      <summary>Identifies the KeyTime dependency property.</summary>
      <returns>The identifier for the KeyTime dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified KeyTime. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for the Value dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection">
      <summary>Represents a collection of DoubleKeyFrame objects that can be individually accessed by index. DoubleKeyFrameCollection is the value of the DoubleAnimationUsingKeyFrames.KeyFrames property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the DoubleKeyFrameCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.Append(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.GetAt(System.UInt32)">
      <summary>Returns the DoubleKeyFrame located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The DoubleKeyFrame value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)">
      <summary>Sets the value at the specified index to the DoubleKeyFrame value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation">
      <summary>Represents the preconfigured animation that applies to item elements being dragged.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation.#ctor">
      <summary>Initializes a new instance of the DragItemThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation">
      <summary>Represents the preconfigured animation that applies to the elements underneath an element being dragged.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.#ctor">
      <summary>Initializes a new instance of the DragOverThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.Direction">
      <summary>Gets or sets the direction that the target should translate, when the animation is active.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.DirectionProperty">
      <summary>Identifies the Direction dependency property.</summary>
      <returns>The identifier for the Direction dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.ToOffset">
      <summary>Gets or sets the distance by which the target is translated when the animation is active.</summary>
      <returns>The offset, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.ToOffsetProperty">
      <summary>Identifies the ToOffset dependency property.</summary>
      <returns>The identifier for the ToOffset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DrillInNavigationTransitionInfo">
      <summary>Specifies the animation to run when a user navigates forward in a logical hierarchy, like from a master list to a detail page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DrillInNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the DrillInNavigationTransitionInfo class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation">
      <summary>Represents a preconfigured animation that runs when a user navigates forward in a logical hierarchy, like from a master page to a detail page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.#ctor">
      <summary>Initializes a new instance of the DrillInThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTarget">
      <summary>Gets or sets the element that is animating into view, such as a detail page.</summary>
      <returns>The element that is animating into view, such as a detail page.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTargetName">
      <summary>Gets or sets the name of the element that is animating into view.</summary>
      <returns>The name of the element that is animating into view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTargetNameProperty">
      <summary>Identifies the EntranceTargetName dependency property.</summary>
      <returns>The identifier for the EntranceTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTargetProperty">
      <summary>Identifies the EntranceTarget dependency property.</summary>
      <returns>The identifier for the EntranceTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTarget">
      <summary>Gets or sets the element that is animating out of view, such as a master page.</summary>
      <returns>The element that is animating out of view, such as a master page.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTargetName">
      <summary>Gets of sets the name of the element that is animating out of view.</summary>
      <returns>The name of the element that is animating out of view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTargetNameProperty">
      <summary>Identifies the ExitTargetName dependency property.</summary>
      <returns>The identifier for the ExitTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTargetProperty">
      <summary>Identifies the ExitTarget dependency property.</summary>
      <returns>The identifier for the ExitTarget dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation">
      <summary>Represents a preconfigured animation that runs when a user navigates backward in a logical hierarchy, like from a detail page to a master page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.#ctor">
      <summary>Initializes a new instance of the DrillOutThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTarget">
      <summary>Gets or sets the element that is animating into view, such as a master page.</summary>
      <returns>The element that is animating into view, such as a master page.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTargetName">
      <summary>Gets or sets the name of the element that is animating into view.</summary>
      <returns>The name of the element that is animating into view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTargetNameProperty">
      <summary>Identifies the EntranceTargetName dependency property.</summary>
      <returns>The identifier for the EntranceTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTargetProperty">
      <summary>Identifies the EntranceTarget dependency property.</summary>
      <returns>The identifier for the EntranceTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTarget">
      <summary>Gets or sets the element that is animating out of view, such as a detail page.</summary>
      <returns>The element that is animating out of view, such as a detail page.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTargetName">
      <summary>Gets of sets the name of the element that is animating out of view.</summary>
      <returns>The name of the element that is animating out of view.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTargetNameProperty">
      <summary>Identifies the ExitTargetName dependency property.</summary>
      <returns>The identifier for the ExitTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTargetProperty">
      <summary>Identifies the ExitTarget dependency property.</summary>
      <returns>The identifier for the ExitTarget dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation">
      <summary>Represents the preconfigured animation that applies to potential drop target elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation.#ctor">
      <summary>Initializes a new instance of the DropTargetItemThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame">
      <summary>Associates easing functions with a ColorAnimationUsingKeyFrames key-frame animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the EasingColorKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunctionProperty">
      <summary>Identifies the EasingFunction dependency property.</summary>
      <returns>The identifier for the EasingFunction dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame">
      <summary>Associates an easing function with a DoubleAnimationUsingKeyFrames key-frame animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the EasingDoubleKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunctionProperty">
      <summary>Identifies the EasingFunction dependency property.</summary>
      <returns>The identifier for the EasingFunction dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase">
      <summary>Provides the base class for all the easing functions.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase.EasingMode">
      <summary>Gets or sets a value that specifies how the animation interpolates.</summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is **EaseOut**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase.EasingModeProperty">
      <summary>Identifies the EasingMode dependency property.</summary>
      <returns>The identifier for the EasingMode dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase.Ease(System.Double)">
      <summary>Transforms normalized time to control the pace of an animation.</summary>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
      <returns>A double that represents the transformed progress.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EasingMode">
      <summary>Specifies how the animation associated with an easing function interpolates.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseIn">
      <summary>Interpolation follows the mathematical formula associated with the easing function.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut">
      <summary>Interpolation uses **EaseIn** for the first half of the animation and **EaseOut** for the second half.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseOut">
      <summary>Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame">
      <summary>Associates an easing function with a PointAnimationUsingKeyFrames key-frame animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the EasingPointKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function that is applied to the key frame.</summary>
      <returns>The easing function that is applied to the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunctionProperty">
      <summary>Identifies the EasingFunction dependency property.</summary>
      <returns>The identifier for the EasingFunction dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition">
      <summary>Provides the animated transition behavior for an edge UI transition. </summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition.#ctor">
      <summary>Initializes a new instance of the EdgeUIThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition.Edge">
      <summary>Gets or sets the edge position to use for the transition.</summary>
      <returns>A value of the enumeration. The default is **Top**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition.EdgeProperty">
      <summary>Identifies the Edge dependency property.</summary>
      <returns>The identifier for the Edge dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ElasticEase">
      <summary>Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ElasticEase.#ctor">
      <summary>Initializes a new instance of the ElasticEase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ElasticEase.Oscillations">
      <summary>Gets or sets the number of times the target slides back and forth over the animation destination.</summary>
      <returns>The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ElasticEase.OscillationsProperty">
      <summary>Identifies the Oscillations dependency property.</summary>
      <returns>The identifier for the Oscillations dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ElasticEase.Springiness">
      <summary>Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</summary>
      <returns>A positive number that specifies the stiffness of the spring. The default value is 3.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ElasticEase.SpringinessProperty">
      <summary>Identifies the Springiness dependency property.</summary>
      <returns>The identifier for the Springiness dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo">
      <summary>Specifies the animation to run when content appears on a Page.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the EntranceNavigationTransitionInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo.IsTargetElementProperty">
      <summary>Identifies the EntranceNavigationTransitionInfo.IsTargetElement XAML attached property.</summary>
      <returns>The identifier for the EntranceNavigationTransitionInfo.IsTargetElement XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo.GetIsTargetElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the EntranceNavigationTransitionInfo.IsTargetElement XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The EntranceNavigationTransitionInfo.IsTargetElement attached property value of the specified object. **true** if the element is the animation target; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo.SetIsTargetElement(Microsoft.UI.Xaml.UIElement,System.Boolean)">
      <summary>Sets the value of the EntranceNavigationTransitionInfo.IsTargetElement XAML attached property for a target element.</summary>
      <param name="element">The object to which the property value is written.</param>
      <param name="value">The value to set. **true** if the element is the animation target; otherwise, **false**.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition">
      <summary>Provides the animated transition behavior on controls when they first appear. You can use this on individual objects or on containers of objects. In the latter case, child elements will animate into view in sequence rather than all at the same time.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.#ctor">
      <summary>Initializes a new instance of the EntranceThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromHorizontalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromVerticalOffsetProperty">
      <summary>Identifies the FromVerticalOffset dependency property.</summary>
      <returns>The identifier for the FromVerticalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.IsStaggeringEnabled">
      <summary>Gets or sets a value that determines whether the transition staggers rendering of multiple items, or renders all items at once.</summary>
      <returns>**true** if the animation staggers rendering of multiple items. **false** if the animation renders all items at once.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.IsStaggeringEnabledProperty">
      <summary>Identifies the IsStaggeringEnabled dependency property.</summary>
      <returns>The identifier for the IsStaggeringEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ExponentialEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ExponentialEase.#ctor">
      <summary>Initializes a new instance of the ExponentialEase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ExponentialEase.Exponent">
      <summary>Gets or sets the exponent used to determine the interpolation of the animation.</summary>
      <returns>The exponent used to determine the interpolation of the animation. The default is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ExponentialEase.ExponentProperty">
      <summary>Identifies the Exponent  dependency property.</summary>
      <returns>The identifier for the Exponent  dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation">
      <summary>Represents the preconfigured opacity animation that applies to controls when they are first shown.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation.#ctor">
      <summary>Initializes a new instance of the FadeInThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation">
      <summary>Represents the preconfigured opacity animation that applies to controls when they are removed from the UI or hidden.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation.#ctor">
      <summary>Initializes a new instance of the FadeOutThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.FillBehavior">
      <summary>Specifies how a Timeline behaves when it is outside its active period but its parent is inside its active or hold period.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.FillBehavior.HoldEnd">
      <summary>After it reaches the end of its active period, the timeline holds its progress until the end of its parent's active and hold periods.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.FillBehavior.Stop">
      <summary>The timeline stops if it is outside its active period while its parent is inside its active period.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration">
      <summary>An object that configures the connected animation to play using the gravity configuration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration.#ctor">
      <summary>Initializes a new instance of the GravityConnectedAnimationConfiguration class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration.IsShadowEnabled">
      <summary>Gets or sets a value that indicates whether a shadow effect is shown.</summary>
      <returns>**true** if a shadow effect is shown; otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.IndependentlyAnimatableAttribute">
      <summary>Not intended for general use. This attribute is used by design tools such as Microsoft Visual Studio. Microsoft Visual Studio interprets the attribute and informs app developers how an animation-property combination will work as far as performance and restrictions.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.IndependentlyAnimatableAttribute.#ctor">
      <summary>Initializes a new instance of the FadeOutThemeAnimation class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.KeySpline">
      <summary>Represents a spline key frame to define animation progress.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.KeySpline.#ctor">
      <summary>Initializes a new instance of the KeySpline class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint1">
      <summary>Gets or sets the first control point used to define a Bezier curve that describes a KeySpline.</summary>
      <returns>The first control point used to define a Bezier curve that describes a KeySpline.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint2">
      <summary>Gets or sets the second control point used to define a Bezier curve that describes a KeySpline.</summary>
      <returns>The second control point used to define a Bezier curve that describes a KeySpline.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.KeyTime">
      <summary>Specifies when a particular key frame should take place during an animation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.KeyTime.TimeSpan">
      <summary>The time component of this KeyTime.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.KeyTimeHelper">
      <summary>Provides utility methods for working with KeyTime values. C# and Microsoft Visual Basic code should use members of KeyTime instead.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.KeyTimeHelper.FromTimeSpan(Windows.Foundation.TimeSpan)">
      <summary>Generates a new KeyTime with initial data based on the specified TimeSpan. C# and Microsoft Visual Basic code should use FromTimeSpan instead.</summary>
      <param name="timeSpan">The TimeSpan data value to establish.</param>
      <returns>The generated KeyTime value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame">
      <summary>Animates from the Color value of the previous key frame to its own Value using linear interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the LinearColorKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame">
      <summary>Animates from the Double value of the previous key frame to its own Value using linear interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the LinearDoubleKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame">
      <summary>Animates from the Point value of the previous key frame to its own Value, using linear interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the LinearPointKeyFrame class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition">
      <summary>Provides page navigation animations.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition.#ctor">
      <summary>Initializes a new instance of the NavigationThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition.DefaultNavigationTransitionInfo">
      <summary>Gets or sets the default transition used when navigating between pages.</summary>
      <returns>The default transition used when navigating between pages.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition.DefaultNavigationTransitionInfoProperty">
      <summary>Identifies the DefaultNavigationTransitionInfo dependency property.</summary>
      <returns>Identifier for the DefaultNavigationTransitionInfo dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo">
      <summary>Provides parameter info for the Frame.Navigate method. Controls how the transition animation runs during the navigation action.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the NavigationTransitionInfo class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.GetNavigationStateCore">
      <summary>When implemented in a derived class, gets the navigation state string that is reported for navigation actions through Frame.Navigate and similar API.</summary>
      <returns>The string to use for navigation state info.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.SetNavigationStateCore(System.String)">
      <summary>When implemented in a derived class, sets the navigation state string that is passed for navigation actions through Frame.Navigate and similar API.</summary>
      <param name="navigationState">The string to use for navigation state info.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames">
      <summary>Animates the value of an Object property along a set of KeyFrames over a specified Duration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the ObjectAnimationUsingKeyFrames class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of ObjectKeyFrame objects that define the animation.</summary>
      <returns>The collection of ObjectKeyFrame objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for an ObjectAnimationUsingKeyFrames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.#ctor">
      <summary>Provides base class initialization behavior for ObjectKeyFrame -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target Value should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its Value property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
      <summary>Identifies the KeyTime dependency property.</summary>
      <returns>The identifier for the KeyTime dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified KeyTime. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for the Value dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection">
      <summary>Represents a collection of ObjectKeyFrame objects that can be individually accessed by index. ObjectKeyFrameCollection is the value of the ObjectAnimationUsingKeyFrames.KeyFrames property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the ObjectKeyFrameCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.Append(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The ObjectKeyFrame value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)">
      <summary>Sets the value at the specified index to the ObjectKeyFrame value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition">
      <summary>Provides the animated transition behavior for a panel UI transition.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition.#ctor">
      <summary>Initializes a new instance of the PaneThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition.Edge">
      <summary>Gets or sets the edge position to use for the transition.</summary>
      <returns>A value of the enumeration. The default is **Left**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition.EdgeProperty">
      <summary>Identifies the Edge dependency property.</summary>
      <returns>The identifier for the Edge dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointAnimation">
      <summary>Animates the value of a Point property between two target values using linear interpolation over a specified Duration.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointAnimation.#ctor">
      <summary>Initializes a new instance of the PointAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
      <returns>The total amount by which the animation changes its starting value. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.ByProperty">
      <summary>Identifies the By dependency property.</summary>
      <returns>The identifier for the By  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction">
      <summary>Gets or sets the easing function you are applying to the animation.</summary>
      <returns>The easing function you are applying to the animation. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunctionProperty">
      <summary>Identifies the EasingFunction dependency property.</summary>
      <returns>The identifier for the EasingFunction  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.From">
      <summary>Gets or sets the animation's starting value.</summary>
      <returns>The starting value of the animation. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.FromProperty">
      <summary>Identifies the From dependency property.</summary>
      <returns>The identifier for the From dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.To">
      <summary>Gets or sets the animation's ending value.</summary>
      <returns>The ending value of the animation. The default is **null**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimation.ToProperty">
      <summary>Identifies the To dependency property.</summary>
      <returns>The identifier for the To dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames">
      <summary>Animates the value of a Point property along a set of KeyFrames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the PointAnimationUsingKeyFrames class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.EnableDependentAnimation">
      <summary>Gets or sets a value that declares whether animated properties that are considered dependent animations should be permitted to use this animation declaration.</summary>
      <returns>**true** if the animation can be used for a dependent animation case. **false** if the animation cannot be used for a dependent animation case. The default is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.EnableDependentAnimationProperty">
      <summary>Identifies the EnableDependentAnimation dependency property.</summary>
      <returns>The identifier for the EnableDependentAnimation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
      <summary>Gets the collection of PointKeyFrame objects that define the animation.</summary>
      <returns>The collection of PointKeyFrame objects that define the animation. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation">
      <summary>Represents a preconfigured animation that runs when a pointer down is detected on an item or element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation.#ctor">
      <summary>Initializes a new instance of the PointerDownThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The name of the control element being targeted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation">
      <summary>Represents a preconfigured animation that runs after a pointer down is detected on an item or element and the tap action is released.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation.#ctor">
      <summary>Initializes a new instance of the PointerDownThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for a PointAnimationUsingKeyFrames.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.#ctor">
      <summary>Provides base class initialization behavior for PointKeyFrame -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target Value should be reached.</summary>
      <returns>The time at which the key frame's current value should be equal to its Value property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.KeyTimeProperty">
      <summary>Identifies the KeyTime dependency property.</summary>
      <returns>The identifier for the KeyTime dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.</summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified KeyTime. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for the Value dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection">
      <summary>Represents a collection of PointKeyFrame objects that can be individually accessed by index. PointKeyFrameCollection is the value of the PointAnimation.KeyFrames property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the PointKeyFrameCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.Append(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index of the value to retrieve.</param>
      <returns>The PointKeyFrame value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.PointKeyFrame[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to insert the value.</param>
      <param name="value">The value to insert.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)">
      <summary>Sets the value at the specified index to the PointKeyFrame value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation">
      <summary>Represents the preconfigured animation that applies to pop-in components of controls (for example, tooltip-like UI on an object) as they appear. This animation combines opacity and translation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.#ctor">
      <summary>Initializes a new instance of the PopInThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromHorizontalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromVerticalOffsetProperty">
      <summary>Identifies the FromVerticalOffset dependency property.</summary>
      <returns>The identifier for the FromVerticalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation">
      <summary>Represents the preconfigured animation that applies to pop-in components of controls (for example, tooltip-like UI on an object) as they are closed/removed. This animation combines opacity and translation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation.#ctor">
      <summary>Initializes a new instance of the PopOutThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition">
      <summary>Provides the animated transition behavior that applies to pop-in components of controls (for example, tooltip-like UI on an object) as they appear.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.#ctor">
      <summary>Initializes a new instance of the PopUpThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromHorizontalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromVerticalOffsetProperty">
      <summary>Identifies the FromVerticalOffset dependency property.</summary>
      <returns>The identifier for the FromVerticalOffset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.PowerEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f* (*t*) = *t**&lt;sup&gt;p&lt;/sup&gt;* where *p* is equal to the Power property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.PowerEase.#ctor">
      <summary>Initializes a new instance of the PowerEase class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PowerEase.Power">
      <summary>Gets or sets the exponential power of the animation interpolation. For example, a value of 7 creates an animation interpolation curve that follows the formula *f* (*t*) = *t*&lt;sup&gt;7&lt;/sup&gt;.</summary>
      <returns>The exponential power of the animation interpolation. This value must be greater or equal to 0. The default is 2.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.PowerEase.PowerProperty">
      <summary>Identifies the Power dependency property.</summary>
      <returns>The identifier for the Power dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.QuadraticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f* (*t*) = *t*&lt;sup&gt;2&lt;/sup&gt;</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.QuadraticEase.#ctor">
      <summary>Initializes a new instance of the QuadraticEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.QuarticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f* (*t*) = *t*&lt;sup&gt;4&lt;/sup&gt;.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.QuarticEase.#ctor">
      <summary>Initializes a new instance of the QuarticEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.QuinticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f* (*t*) = *t*&lt;sup&gt;5&lt;/sup&gt;.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.QuinticEase.#ctor">
      <summary>Initializes a new instance of the QuinticEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition">
      <summary>Provides the animated transition behavior for when list-view controls items change order. Typically this is due to a drag-drop operation. Different controls and themes potentially have varying characteristics for the animations involved.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition.#ctor">
      <summary>Initializes a new instance of the ReorderThemeTransition class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.RepeatBehavior">
      <summary>Describes how a Timeline repeats its simple duration.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Count">
      <summary>The number of times a Timeline should repeat.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Duration">
      <summary>The time span for which a Timeline should repeat.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Type">
      <summary>The mode or type of repeat behavior that this instance represents, as a value of the enumeration.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper">
      <summary>Provides basic utility methods for processing RepeatBehavior values. C# and Microsoft Visual Basic code should use members of RepeatBehavior instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.Forever">
      <summary>Gets a static RepeatBehavior that represents the special "Forever" value. C# and Microsoft Visual Basic code should use Forever instead.</summary>
      <returns>A static RepeatBehavior that represents the special "Forever" value.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.Equals(Microsoft.UI.Xaml.Media.Animation.RepeatBehavior,Microsoft.UI.Xaml.Media.Animation.RepeatBehavior)">
      <summary>Determines whether two RepeatBehavior values have equivalent values. C# and Microsoft Visual Basic code should use the equality operator instead.</summary>
      <param name="target">The first RepeatBehavior to compare.</param>
      <param name="value">The second RepeatBehavior to compare.</param>
      <returns>**true** if *target* and *value* hold equivalent values; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.FromCount(System.Double)">
      <summary>Creates a new RepeatBehavior based on a repeat count. This corresponds to the *int***x** form when provided as XAML attribute value. C# and Microsoft Visual Basic code should use RepeatBehavior(Double) instead.</summary>
      <param name="count">The number of times that the target animation should repeat.</param>
      <returns>The created RepeatBehavior, which has a **RepeatBehaviorType** of **Count**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.FromDuration(Windows.Foundation.TimeSpan)">
      <summary>Creates a new RepeatBehavior based on a timespan. C# and Microsoft Visual Basic code should use RepeatBehavior(TimeSpan) instead.</summary>
      <param name="duration">The time span that declares the desired repeat behavior.</param>
      <returns>The created RepeatBehavior, which has a **RepeatBehaviorType** value of **Duration**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.GetHasCount(Microsoft.UI.Xaml.Media.Animation.RepeatBehavior)">
      <summary>Returns whether a specified RepeatBehavior has a **RepeatBehaviorType** of **Count** and a nonzero **Count** value. C# and Microsoft Visual Basic code should use HasCount instead.</summary>
      <param name="target">The RepeatBehavior to evaluate.</param>
      <returns>**true** if *target* has a **RepeatBehaviorType** of **Count** and a nonzero **Count** value. Otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper.GetHasDuration(Microsoft.UI.Xaml.Media.Animation.RepeatBehavior)">
      <summary>Returns whether a specified RepeatBehavior has a **RepeatBehaviorType** of **Duration** and a nonzero **Duration** value. C# and Microsoft Visual Basic code should use HasDuration instead.</summary>
      <param name="target">The RepeatBehavior to evaluate.</param>
      <returns>**true** if *target* has a **RepeatBehaviorType** of **Duration** and a nonzero **Duration** value. Otherwise, **false**.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType">
      <summary>Specifies the repeat mode that a RepeatBehavior raw value represents.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType.Count">
      <summary>The RepeatBehavior represents a case where the timeline should repeat for a fixed number of complete runs.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType.Duration">
      <summary>The RepeatBehavior represents a case where the timeline should repeat for a time duration, which might result in an animation terminating part way through.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType.Forever">
      <summary>The RepeatBehavior represents a case where the timeline should repeat indefinitely.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation">
      <summary>Use to animate an object that is being repositioned.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.#ctor">
      <summary>Initializes a new instance of the RepositionThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromHorizontalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromVerticalOffsetProperty">
      <summary>Identifies the FromVerticalOffset dependency property.</summary>
      <returns>The identifier for the FromVerticalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition">
      <summary>Reacts to layout moves when no context is set and a trigger of *move* is passed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition.#ctor">
      <summary>Initializes a new instance of the RepositionThemeTransition class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition.IsStaggeringEnabled">
      <summary>Gets or sets a value that determines whether the transition staggers rendering of multiple items, or renders all items at once.</summary>
      <returns>**true** if the animation staggers rendering of multiple items. **false** if the animation renders all items at once. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition.IsStaggeringEnabledProperty">
      <summary>Identifies the IsStaggeringEnabled dependency property.</summary>
      <returns>The identifier for the IsStaggeringEnabled dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SineEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a sine formula.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SineEase.#ctor">
      <summary>Initializes a new instance of the SineEase class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect">
      <summary>Defines constants that describe the type of animation to play during a slide transition.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect.FromBottom">
      <summary>The exiting page fades out and the entering page enters from the bottom.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect.FromLeft">
      <summary>The exiting page leaves to the right of the panel and the entering page enters from the left.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect.FromRight">
      <summary>The exiting page leaves to the left of the panel and the entering page enters from the right.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo">
      <summary>Provides the parameters for a slide navigation transition.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the **SlideNavigationTransitionInfo** class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo.Effect">
      <summary>Gets or sets the type of animation effect to play during the slide transition.</summary>
      <returns>The type of animation effect to play during the slide transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo.EffectProperty">
      <summary>Identifies the Effect dependency property.</summary>
      <returns>The identifier for the Effect dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame">
      <summary>Animates from the Color value of the previous key frame to its own Value using splined interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the SplineColorKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.</summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySplineProperty">
      <summary>Identifies the KeySpline dependency property.</summary>
      <returns>The identifier for the KeySpline dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame">
      <summary>Animates from the Double value of the previous key frame to its own Value using splined interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the SplineDoubleKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.</summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty">
      <summary>Identifies the KeySpline dependency property.</summary>
      <returns>The identifier for the KeySpline dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame">
      <summary>Animates from the Point value of the previous key frame to its own Value using splined interpolation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the SplinePointKeyFrame class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.</summary>
      <returns>The two control points that specify the cubic Bezier curve that defines the progress of the key frame.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySplineProperty">
      <summary>Identifies the KeySpline dependency property.</summary>
      <returns>The identifier for the KeySpline dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation">
      <summary>Represents the preconfigured animation that conceals a target UI using a *split* animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.#ctor">
      <summary>Initializes a new instance of the SplitCloseThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedLength">
      <summary>Gets or sets the initial size of the target element in the animation direction.</summary>
      <returns>The initial size of the target in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedLengthProperty">
      <summary>Identifies the ClosedLength dependency property.</summary>
      <returns>The identifier for the ClosedLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTarget">
      <summary>Gets or sets the UI element that specifies the initial clip size.</summary>
      <returns>The UI element that specifies the initial clip size.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTargetName">
      <summary>Gets or sets the identifying name of the UI element that specifies the initial clip size.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTargetNameProperty">
      <summary>Identifies the ClosedTargetName dependency property.</summary>
      <returns>The identifier for the ClosedTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTargetProperty">
      <summary>Identifies the ClosedTarget dependency property.</summary>
      <returns>The identifier for the ClosedTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTarget">
      <summary>Gets or sets the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName or OpenedTarget.</summary>
      <returns>The UI element that will be translated.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTargetName">
      <summary>Gets or sets the identifying name of the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName.</summary>
      <returns>The name of the UI element that will be translated.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTargetNameProperty">
      <summary>Identifies the ContentTargetName dependency property.</summary>
      <returns>The identifier for the ContentTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTargetProperty">
      <summary>Identifies the ContentTarget dependency property.</summary>
      <returns>The identifier for the ContentTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationDirection">
      <summary>Gets or sets a value that determines which direction the content should translate when the animation runs.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationDirectionProperty">
      <summary>Identifies the ContentTranslationDirection dependency property.</summary>
      <returns>The identifier for the ContentTranslationDirection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationOffset">
      <summary>Gets or sets the pixels to translate by when the animation runs.</summary>
      <returns>A distance in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationOffsetProperty">
      <summary>Identifies the ContentTranslationOffset dependency property.</summary>
      <returns>The identifier for the ContentTranslationOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OffsetFromCenter">
      <summary>Gets or sets an offset from the center of the *opened* target.</summary>
      <returns>An offset in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OffsetFromCenterProperty">
      <summary>Identifies the OffsetFromCenter dependency property.</summary>
      <returns>The identifier for the OffsetFromCenter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedLength">
      <summary>Gets or sets the final size of the target UI element.</summary>
      <returns>The final size. If left unset, the value defaults to the size of the opened target.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedLengthProperty">
      <summary>Identifies the OpenedLength dependency property.</summary>
      <returns>The identifier for the OpenedLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTarget">
      <summary>Gets or sets the UI element that will be clipped.</summary>
      <returns>The UI element that will be clipped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTargetName">
      <summary>Gets or sets the identifying name of the UI element that will be clipped.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTargetNameProperty">
      <summary>Identifies the OpenedTargetName dependency property.</summary>
      <returns>The identifier for the OpenedTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTargetProperty">
      <summary>Identifies the OpenedTarget dependency property.</summary>
      <returns>The identifier for the OpenedTarget dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation">
      <summary>Represents the preconfigured animation that reveals a target UI using a *split* animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.#ctor">
      <summary>Initializes a new instance of the SplitOpenThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedLength">
      <summary>Gets or sets the initial size of the target element in the animation direction.</summary>
      <returns>The initial size of the target in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedLengthProperty">
      <summary>Identifies the ClosedLength dependency property.</summary>
      <returns>The identifier for the ClosedLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTarget">
      <summary>Gets or sets the UI element that specifies the initial clip size.</summary>
      <returns>The UI element that specifies the initial clip size.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTargetName">
      <summary>Gets or sets the identifying name of the UI element that specifies the initial clip size.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTargetNameProperty">
      <summary>Identifies the ClosedTargetName dependency property.</summary>
      <returns>The identifier for the ClosedTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTargetProperty">
      <summary>Identifies the ClosedTarget dependency property.</summary>
      <returns>The identifier for the ClosedTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTarget">
      <summary>Gets or sets the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName or OpenedTarget.</summary>
      <returns>The UI element that will be translated.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTargetName">
      <summary>Gets or sets the identifying name of the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTargetNameProperty">
      <summary>Identifies the ContentTargetName dependency property.</summary>
      <returns>The identifier for the ContentTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTargetProperty">
      <summary>Identifies the ContentTarget dependency property.</summary>
      <returns>The identifier for the ContentTarget dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationDirection">
      <summary>Gets or sets a value that determines which direction the content should translate when the animation runs.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationDirectionProperty">
      <summary>Identifies the ContentTranslationDirection dependency property.</summary>
      <returns>The identifier for the ContentTranslationDirection dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationOffset">
      <summary>Gets or sets the pixels to translate by when the animation runs.</summary>
      <returns>A distance in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationOffsetProperty">
      <summary>Identifies the ContentTranslationOffset dependency property.</summary>
      <returns>The identifier for the ContentTranslationOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OffsetFromCenter">
      <summary>Gets or sets an offset from the center of the *opened* target.</summary>
      <returns>An offset in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OffsetFromCenterProperty">
      <summary>Identifies the OffsetFromCenter dependency property.</summary>
      <returns>The identifier for the OffsetFromCenter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedLength">
      <summary>Gets or sets the final size of the target UI element.</summary>
      <returns>The final size. If left unset, the value defaults to the size of the opened target.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedLengthProperty">
      <summary>Identifies the OpenedLength dependency property.</summary>
      <returns>The identifier for the OpenedLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTarget">
      <summary>Gets or sets the UI element that will be clipped.</summary>
      <returns>The UI element that will be clipped.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTargetName">
      <summary>Gets or sets the identifying name of the UI element that will be clipped.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTargetNameProperty">
      <summary>Identifies the OpenedTargetName dependency property.</summary>
      <returns>The identifier for the OpenedTargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTargetProperty">
      <summary>Identifies the OpenedTarget dependency property.</summary>
      <returns>The identifier for the OpenedTarget dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.Storyboard">
      <summary>Controls animations with a timeline, and provides object and property targeting information for its child animations.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.#ctor">
      <summary>Initializes a new instance of the Storyboard class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Storyboard.Children">
      <summary>Gets the collection of child Timeline objects.</summary>
      <returns>The collection of child Timeline objects. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetNameProperty">
      <summary>Identifies the Storyboard.TargetName XAML attached property.</summary>
      <returns>The identifier for the Storyboard.TargetName XAML attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>Identifies the Storyboard.TargetProperty XAML attached property.</summary>
      <returns>The identifier for the Storyboard.TargetProperty XAML attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.Begin">
      <summary>Initiates the set of animations associated with the storyboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.GetCurrentState">
      <summary>Gets the clock state of the Storyboard.</summary>
      <returns>One of the enumeration values. Can be: **Active**, **Filling**, or **Stopped**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.GetCurrentTime">
      <summary>Gets the current animation clock time of the Storyboard.</summary>
      <returns>The current animation time of the Storyboard per the running animation clock, or **null** if the animation clock is **Stopped**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.GetTargetName(Microsoft.UI.Xaml.Media.Animation.Timeline)">
      <summary>Gets the value of the Storyboard.TargetName  XAML attached property from a target element.</summary>
      <param name="element">The target element from which to get the value.</param>
      <returns>The Storyboard.TargetName value of the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.GetTargetProperty(Microsoft.UI.Xaml.Media.Animation.Timeline)">
      <summary>Gets the value of the Storyboard.TargetProperty  XAML attached property from a target element.</summary>
      <param name="element">The target element from which to get the value.</param>
      <returns>The Storyboard.TargetProperty value of the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.Pause">
      <summary>Pauses the animation clock associated with the storyboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.Resume">
      <summary>Resumes the animation clock, or run-time state, associated with the storyboard.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.Seek(Windows.Foundation.TimeSpan)">
      <summary>Moves the storyboard to the specified animation position. The storyboard performs the requested seek when the next clock tick occurs.</summary>
      <param name="offset">A positive or negative time value that describes the amount by which the timeline should move forward or backward from the beginning of the animation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.SeekAlignedToLastTick(Windows.Foundation.TimeSpan)">
      <summary>Moves the storyboard to the specified animation position immediately (synchronously).</summary>
      <param name="offset">A positive or negative time value that describes the amount by which the timeline should move forward or backward from the beginning of the animation.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.SetTarget(Microsoft.UI.Xaml.Media.Animation.Timeline,Microsoft.UI.Xaml.DependencyObject)">
      <summary>Causes the specified Timeline to target the specified object.</summary>
      <param name="timeline">The timeline that targets the specified dependency object.</param>
      <param name="target">The actual instance of the object to target.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.SetTargetName(Microsoft.UI.Xaml.Media.Animation.Timeline,System.String)">
      <summary>Sets the value of the Storyboard.TargetName  XAML attached property for a target element.</summary>
      <param name="element">The target element to set the value for.</param>
      <param name="name">The Storyboard.TargetName value of the target element to set. This should correspond to an existing Name or **x:Name** value on the UI element that the animation targets.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.SetTargetProperty(Microsoft.UI.Xaml.Media.Animation.Timeline,System.String)">
      <summary>Sets the value of the Storyboard.TargetProperty  XAML attached property for a target element.</summary>
      <param name="element">The target element for which to set the value.</param>
      <param name="path">The Storyboard.TargetProperty value of the target element to set. This specifies a qualification path that targets the dependency property where the animation applies. See Remarks.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.SkipToFill">
      <summary>Advances the current time of the storyboard's clock to the end of its active period.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Storyboard.Stop">
      <summary>Stops the storyboard.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SuppressNavigationTransitionInfo">
      <summary>Specifies that animations are suppressed during navigation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SuppressNavigationTransitionInfo.#ctor">
      <summary>Initializes a new instance of the SuppressNavigationTransitionInfo class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation">
      <summary>Represents the preconfigured animation that applies to controls when an element slides back into its layout slot after a **Swipe** interaction.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.#ctor">
      <summary>Initializes a new instance of the SwipeBackThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromHorizontalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromVerticalOffsetProperty">
      <summary>Identifies the FromHorizontalOffset dependency property.</summary>
      <returns>The identifier for the FromHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation">
      <summary>Represents the preconfigured animation that indicates that a **Swipe** gesture is now possible.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.#ctor">
      <summary>Initializes a new instance of the SwipeHintThemeAnimation class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.TargetName">
      <summary>Gets or sets the reference name of the control element being targeted.</summary>
      <returns>The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.TargetNameProperty">
      <summary>Identifies the TargetName dependency property.</summary>
      <returns>The identifier for the TargetName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToHorizontalOffset">
      <summary>Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.</summary>
      <returns>The horizontal offset translation, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToHorizontalOffsetProperty">
      <summary>Identifies the ToHorizontalOffset dependency property.</summary>
      <returns>The identifier for the ToHorizontalOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToVerticalOffset">
      <summary>Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.</summary>
      <returns>The vertical offset, in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToVerticalOffsetProperty">
      <summary>Identifies the ToVerticalOffset dependency property.</summary>
      <returns>The identifier for the ToVerticalOffset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.Timeline">
      <summary>Defines a duration and other behavior properties for a Windows Runtime animation. Timeline is the base class for Storyboard and all the Windows Runtime animation types, including those from the animation library and those used for custom animations in visual states or page-level XAML.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.Timeline.#ctor">
      <summary>Provides base class initialization behavior for Timeline -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.AllowDependentAnimations">
      <summary>Gets or sets a value that determines whether dependent animations should be permitted to run, throughout the app.</summary>
      <returns>**true** if animations can run in the app for dependent animation cases. Otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.AutoReverse">
      <summary>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</summary>
      <returns>**true** if the timeline plays in reverse at the end of each iteration; otherwise, **false**. The default value is **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.AutoReverseProperty">
      <summary>Identifies the AutoReverse  dependency property.</summary>
      <returns>The identifier for the AutoReverse  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime">
      <summary>Gets or sets the time at which this Timeline should begin.</summary>
      <returns>The start time of the time line. The default value is zero. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTimeProperty">
      <summary>Identifies the BeginTime  dependency property.</summary>
      <returns>The identifier for the BeginTime  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.Duration">
      <summary>Gets or sets the length of time for which this timeline plays, not counting repetitions.</summary>
      <returns>The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is a Duration that evaluates as Automatic.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.DurationProperty">
      <summary>Identifies the Duration  dependency property.</summary>
      <returns>The identifier for the Duration  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.FillBehavior">
      <summary>Gets or sets a value that specifies how the animation behaves after it reaches the end of its active period.</summary>
      <returns>A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is **HoldEnd**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.FillBehaviorProperty">
      <summary>Identifies the FillBehavior  dependency property.</summary>
      <returns>The identifier for the FillBehavior  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.RepeatBehavior">
      <summary>Gets or sets the repeating behavior of this timeline.</summary>
      <returns>An iteration **Count** that specifies the number of times the timeline should play, a **TimeSpan** value that specifies the total length of this timeline's active period, or the special value **Forever**, which specifies that the timeline should repeat indefinitely. The default value is a RepeatBehavior with a **Count** value of 1, which indicates that the timeline plays once.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.RepeatBehaviorProperty">
      <summary>Identifies the RepeatBehavior  dependency property.</summary>
      <returns>The identifier for the RepeatBehavior  dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.SpeedRatio">
      <summary>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline.</summary>
      <returns>A finite value greater than 0 that specifies the rate at which time progresses for this timeline, relative to the speed of the timeline's parent. If this timeline is a root timeline, specifies the default timeline speed. The value is expressed as a factor where 1 represents normal speed, 2 is double speed, 0.5 is half speed, and so on. The default value is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.Timeline.SpeedRatioProperty">
      <summary>Identifies for the SpeedRatio  dependency property.</summary>
      <returns>The identifier for the SpeedRatio  dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Animation.Timeline.Completed">
      <summary>Occurs when the Storyboard object has completed playing.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.TimelineCollection">
      <summary>Represents a collection of Timeline objects (specific type animations). A TimelineCollection is the value of the Storyboard.Children property.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.#ctor">
      <summary>Initializes a new instance of the TimelineCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.Append(Microsoft.UI.Xaml.Media.Animation.Timeline)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.GetAt(System.UInt32)">
      <summary>Returns the Timeline located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Timeline value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Timeline[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.Timeline,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Timeline)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.Timeline[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TimelineCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Timeline)">
      <summary>Sets the value at the specified index to the Timeline value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.Transition">
      <summary>Represents a visual behavior that occurs for predefined actions or state changes. Specific theme transitions (various Transition derived classes) can be applied to individual elements using the UIElement.Transitions property, or applied for scenario-specific theme transition properties such as ContentControl.ContentTransitions.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Animation.TransitionCollection">
      <summary>Represents a collection of Transition objects. Each Transition object represents a different theme transition, part of the Windows Runtime animation library.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.#ctor">
      <summary>Initializes a new instance of the TransitionCollection class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.Append(Microsoft.UI.Xaml.Media.Animation.Transition)">
      <summary>Adds a new item to the collection.</summary>
      <param name="value">The new item to add.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.First">
      <summary>Returns the iterator for iteration over the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is at the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
      <returns>The Transition value at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.GetMany(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Transition[])">
      <summary>Retrieves multiple elements in a single pass through the iterator.</summary>
      <param name="startIndex">The index from which to start retrieval.</param>
      <param name="items">Provides the destination for the result. Size the initial array size as a *capacity* in order to specify how many results should be retrieved.</param>
      <returns>The number of items retrieved.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.IndexOf(Microsoft.UI.Xaml.Media.Animation.Transition,System.UInt32@)">
      <summary>Retrieves the index of the specified item.</summary>
      <param name="value">The value to find in the collection.</param>
      <param name="index">The index of the item to find, if found.</param>
      <returns>**true** if an item with the specified value was found; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.InsertAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Transition)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.ReplaceAll(Microsoft.UI.Xaml.Media.Animation.Transition[])">
      <summary>Initially clears the collection, then inserts the provided array as new items.</summary>
      <param name="items">The new collection items.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Animation.TransitionCollection.SetAt(System.UInt32,Microsoft.UI.Xaml.Media.Animation.Transition)">
      <summary>Sets the value at the specified index to the Transition value specified.</summary>
      <param name="index">The index at which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions">
      <summary>Specifies initialization options for a bitmap image.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions.IgnoreImageCache">
      <summary>Loads images without using an existing image cache. This option should be selected only when images in a cache need to be refreshed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions.None">
      <summary>No options are specified.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.BitmapImage">
      <summary>Provides the practical object source type for the Image.Source and ImageBrush.ImageSource properties. You can define a BitmapImage by using a Uniform Resource Identifier (URI) that references an image source file, or by calling SetSourceAsync and supplying a stream.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.#ctor">
      <summary>Initializes a new instance of the BitmapImage class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.#ctor(Windows.Foundation.Uri)">
      <summary>Initializes a new instance of the BitmapImage class, using the supplied Uniform Resource Identifier (URI).</summary>
      <param name="uriSource">A reference to the image source file.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlay">
      <summary>Gets or sets a value that indicates whether an animated image should play as soon as it loads.</summary>
      <returns>**true** if an animated image should play as soon as it loads; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlayProperty">
      <summary>Identifies the AutoPlay dependency property.</summary>
      <returns>The identifier for the AutoPlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptions">
      <summary>Gets or sets the BitmapCreateOptions for a BitmapImage.</summary>
      <returns>The BitmapCreateOptions used for this BitmapImage. The default is **None**. With this default, a BitmapImage uses cached content when it is available. For a BitmapImage that is created by referencing an image source file by Uniform Resource Identifier (URI), the Uniform Resource Identifier (URI) controls the internal caching scheme.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptionsProperty">
      <summary>Identifies the CreateOptions dependency property.</summary>
      <returns>The identifier for the CreateOptions dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeight">
      <summary>Gets or sets the height to use for image decoding operations.</summary>
      <returns>The height (in pixels) to use for image decoding operations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeightProperty">
      <summary>Identifies the DecodePixelHeight dependency property.</summary>
      <returns>The identifier for the DecodePixelHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelType">
      <summary>Gets or sets a value that determines how DecodePixelWidth and DecodePixelHeight values are interpreted for decoding operations.</summary>
      <returns>A value of the enumeration. The default is **Physical**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelTypeProperty">
      <summary>Identifies the DecodePixelType dependency property.</summary>
      <returns>The identifier for the DecodePixelType dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidth">
      <summary>Gets or sets the width to use for image decoding operations.</summary>
      <returns>The width (in pixels) to use for image decoding operations.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidthProperty">
      <summary>Identifies the DecodePixelWidth dependency property.</summary>
      <returns>The identifier for the DecodePixelWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmap">
      <summary>Gets a value that indicates whether an image is animated.</summary>
      <returns>**true** if the image is animated; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmapProperty">
      <summary>Identifies the IsAnimatedBitmap dependency property.</summary>
      <returns>The identifier for the IsAnimatedBitmap dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlaying">
      <summary>Gets a value that indicates whether an animated image is playing.</summary>
      <returns>**true** if the animated image is playing; otherwise, **false**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlayingProperty">
      <summary>Identifies the IsPlaying dependency property.</summary>
      <returns>The identifier for the IsPlaying dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSource">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the graphics source file that generated this BitmapImage.</summary>
      <returns>An object describing the Uniform Resource Identifier (URI) of the graphics source file that generated this BitmapImage.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSourceProperty">
      <summary>Identifies the UriSource dependency property.</summary>
      <returns>The identifier for the UriSource dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DownloadProgress">
      <summary>Occurs when a significant change has occurred in the download progress of the BitmapImage content.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageFailed">
      <summary>Occurs when there is an error associated with image retrieval or format.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageOpened">
      <summary>Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.Play">
      <summary>Starts the animation of an animated image.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapImage.Stop">
      <summary>Ends the animation of an animated image.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.BitmapSource">
      <summary>Provides a source object for properties that use a bitmap-format image source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.#ctor">
      <summary>Provides base class initialization behavior for BitmapSource -derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelHeight">
      <summary>Gets the height of the bitmap in pixels.</summary>
      <returns>The height of the bitmap in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelHeightProperty">
      <summary>Identifies the PixelHeight dependency property.</summary>
      <returns>The identifier for the PixelHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelWidth">
      <summary>Gets the width of the bitmap in pixels.</summary>
      <returns>The width of the bitmap in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelWidthProperty">
      <summary>Identifies the PixelWidth dependency property.</summary>
      <returns>The identifier for the PixelWidth dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.SetSource(Windows.Storage.Streams.IRandomAccessStream)">
      <summary>Sets the source image for a BitmapSource by accessing a stream. Most callers should use SetSourceAsync instead.</summary>
      <param name="streamSource">The stream source that sets the image source value.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.BitmapSource.SetSourceAsync(Windows.Storage.Streams.IRandomAccessStream)">
      <summary>Sets the source image for a BitmapSource by accessing a stream and processing the result asynchronously.</summary>
      <param name="streamSource">The stream source that sets the image source value.</param>
      <returns>An asynchronous handler called when the operation is complete.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.DecodePixelType">
      <summary>Provides values that can be used for decoding operations to optimize for logical versus physical pixels in the source image file.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.DecodePixelType.Logical">
      <summary>Use a logical pixel value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.DecodePixelType.Physical">
      <summary>Use a physical pixel value.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs">
      <summary>Provides event data for the DownloadProgress event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs.Progress">
      <summary>Gets download progress as a value that is between 0 and 100.</summary>
      <returns>The download progress. A value of 0 indicates no progress; 100 indicates that the download is complete.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler">
      <summary>Represents the method that will handle the DownloadProgress event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap">
      <summary>Represents an image source that can be populated with the combined contents of a XAML visual tree. See  for some notable limitations on which XAML visuals can be captured in a RenderTargetBitmap.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.#ctor">
      <summary>Initializes a new instance of the RenderTargetBitmap class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelHeight">
      <summary>Gets the height of the rendered bitmap in pixels.</summary>
      <returns>The height of the rendered bitmap in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelHeightProperty">
      <summary>Identifies the PixelHeight dependency property.</summary>
      <returns>The identifier for the PixelHeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelWidth">
      <summary>Gets the width of the rendered bitmap in pixels.</summary>
      <returns>The width of the rendered bitmap in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelWidthProperty">
      <summary>Identifies the PixelWidth dependency property.</summary>
      <returns>The identifier for the PixelWidth dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.GetPixelsAsync">
      <summary>Retrieves the previously rendered RenderTargetBitmap image as a buffered stream of bytes in **BGRA8** format.</summary>
      <returns>When this method returns, an IBuffer stream that contains bytes. This is the binary data for the image and can be converted to a byte array in **BGRA8** format</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.RenderAsync(Microsoft.UI.Xaml.UIElement)">
      <summary>Renders a snapshot of a UIElement visual tree to an image source.</summary>
      <param name="element">A UIElement that represents the visual tree fragment to render.</param>
      <returns>When this method returns, an IAsyncAction object that can be used to control the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.RenderAsync(Microsoft.UI.Xaml.UIElement,System.Int32,System.Int32)">
      <summary>Renders a snapshot of a UIElement visual tree to an image source. Specify values for *scaledWidth* and *scaledHeight* to alter the original source's rendering dimension.</summary>
      <param name="element">A UIElement that represents the visual tree fragment to render.</param>
      <param name="scaledWidth">Specifies the target width at which to render. The default is 0. *scaledWidth* and/or *scaledHeight* can be optional; see Remarks.</param>
      <param name="scaledHeight">Specifies the target height at which to render. The default is 0. *scaledWidth* and/or *scaledHeight* can be optional; see Remarks.</param>
      <returns>When this method returns, an IAsyncAction object that can be used to control the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource">
      <summary>Provides a source object, backed by a SoftwareBitmap, for properties that use a bitmap-format image source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.#ctor">
      <summary>Initializes a new instance of the SoftwareBitmapSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.Close">
      <summary>Disposes of the object and associated resources.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.SetBitmapAsync(Windows.Graphics.Imaging.SoftwareBitmap)">
      <summary>Sets the source SoftwareBitmap to be used as an image source.</summary>
      <param name="softwareBitmap">The SoftwareBitmap to be used as an image source.</param>
      <returns>An asynchronous action.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource">
      <summary>Provides Microsoft DirectX shared surfaces to draw into and then composes the bits into app content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the SurfaceImageSource class, specifying the size of the drawing area.</summary>
      <param name="pixelWidth">Width of the drawing area in pixels.</param>
      <param name="pixelHeight">Height of the drawing area in pixels.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the SurfaceImageSource class, specifying the size of the drawing area, and whether opacity is expected to be always full opacity. Use this with `isOpaque=true` if SurfaceImageSource should not support transparency; this can increase performance.</summary>
      <param name="pixelWidth">Width of the drawing area in pixels.</param>
      <param name="pixelHeight">Height of the drawing area in pixels.</param>
      <param name="isOpaque">**true** if the area should render opaque. **false** to render with possible alpha transparency. A value of **true** can provide a performance benefit if the content is not transparent.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource">
      <summary>Provides a source object for properties that use a Scalable Vector Graphics (SVG) source. You can define a SvgImageSource by using a Uniform Resource Identifier (URI) that references a SVG file, or by calling SetSourceAsync(IRandomAccessStream) and supplying a stream.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.#ctor">
      <summary>Initializes a new instance of the SvgImageSource class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.#ctor(Windows.Foundation.Uri)">
      <summary>Initializes a new instance of the SvgImageSource class, using the supplied Uniform Resource Identifier (URI).</summary>
      <param name="uriSource">A reference to the SVG source file.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelHeight">
      <summary>Gets or sets the height to use for SVG rasterization operations.</summary>
      <returns>The height (in logical pixels) to use for SVG decoding operations. The default is **Double.NaN**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelHeightProperty">
      <summary>Identifies the **RasterizePixelHeight** dependency property.</summary>
      <returns>The identifier for the **RasterizePixelHeight** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelWidth">
      <summary>Gets or sets the width to use for SVG rasterization operations.</summary>
      <returns>The width (in logical pixels) to use for SVG decoding operations. The default is **Double.NaN**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelWidthProperty">
      <summary>Identifies the **RasterizePixelWidth** dependency property.</summary>
      <returns>The identifier for the **RasterizePixelWidth** dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.UriSource">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the SVG source file that generated this SvgImageSource.</summary>
      <returns>An object describing the Uniform Resource Identifier (URI) of the SVG source file that generated this SvgImageSource.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.UriSourceProperty">
      <summary>Identifies the **UriSource** dependency property.</summary>
      <returns>The identifier for the **UriSource** dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.Opened">
      <summary>Occurs when the SVG source is downloaded and decoded with no failure.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.OpenFailed">
      <summary>Occurs when there is an error associated with SVG retrieval or format.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.SetSourceAsync(Windows.Storage.Streams.IRandomAccessStream)">
      <summary>Sets the source SVG for a SvgImageSource by accessing a stream and processing the result asynchronously.</summary>
      <param name="streamSource">The stream source that sets the SVG source value.</param>
      <returns>A SvgImageSourceLoadStatus value that indicates whether the operation was successful. If it failed, indicates the reason for the failure.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs">
      <summary>Provides event data for the SvgImageSource.OpenFailed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs.Status">
      <summary>Gets a value that indicates the reason for the SVG loading failure.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus">
      <summary>Defines constants that specify the result of loading an SvgImageSource.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus.InvalidFormat">
      <summary>The SVG did not load because the SVG format is invalid.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus.NetworkError">
      <summary>The SVG did not load due to a network error.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus.Other">
      <summary>The SVG did not load for some other reason.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus.Success">
      <summary>The SVG loaded.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs">
      <summary>Provides event data for the SvgImageSource.Opened event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource">
      <summary>Extends SurfaceImageSource to support scenarios when the content is potentially larger than what can fit on screen and the content must be virtualized to render optimally.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the VirtualSurfaceImageSource class, specifying the size of the drawing area.</summary>
      <param name="pixelWidth">Width of the drawing area in pixels.</param>
      <param name="pixelHeight">Height of the drawing area in pixels.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the VirtualSurfaceImageSource class, specifying the size of the drawing area and a preference for whether to render with an alpha transparency.</summary>
      <param name="pixelWidth">Width of the drawing area in pixels.</param>
      <param name="pixelHeight">Height of the drawing area in pixels.</param>
      <param name="isOpaque">**true** if the area should render opaque. **false** to render with possible alpha transparency.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap">
      <summary>Provides a BitmapSource that can be written to and updated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the WriteableBitmap class.</summary>
      <param name="pixelWidth">The width of the bitmap in pixels.</param>
      <param name="pixelHeight">The height of the bitmap in pixels.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap.PixelBuffer">
      <summary>Gets an access for the direct buffer where each pixel of the WriteableBitmap is written to.</summary>
      <returns>A reference to the pixel buffer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap.Invalidate">
      <summary>Requests a draw or redraw of the entire bitmap.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask">
      <summary>Provides the ability to create a bitmap from a XAML tree in a background task.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask.#ctor">
      <summary>Initializes a new instance of the XamlRenderingBackgroundTask class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask.OnRun(Windows.ApplicationModel.Background.IBackgroundTaskInstance)">
      <summary>Performs the work of the background task. The system calls this method when the associated background task has been triggered.</summary>
      <param name="taskInstance">An interface to an instance of the background task. The system creates this instance when the task has been triggered to run.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D">
      <summary>Represents 3-D scale, rotation, and translate transforms to be applied to an element.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.#ctor">
      <summary>Initializes a new instance of the CompositeTransform3D class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterX">
      <summary>Gets the x-coordinate of the center point in pixels for all transforms specified by the CompositeTransform3D.</summary>
      <returns>The x-coordinate of the center point for all transforms specified by the CompositeTransform3D. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterXProperty">
      <summary>Identifies the CenterX dependency property.</summary>
      <returns>The CenterX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterY">
      <summary>Gets the y-coordinate of the center point in pixels for all transforms specified by the CompositeTransform3D.</summary>
      <returns>The y-coordinate of the center point for all transforms specified by the CompositeTransform3D. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterYProperty">
      <summary>Identifies the CenterY dependency property.</summary>
      <returns>The CenterY dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZ">
      <summary>Gets the z-coordinate of the center point in pixels for all transforms specified by the CompositeTransform3D.</summary>
      <returns>The z-coordinate of the center point for all transforms specified by the CompositeTransform3D. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZProperty">
      <summary>Identifies the CenterZ dependency property.</summary>
      <returns>The CenterZ dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationX">
      <summary>Gets or sets the angle in degrees of counterclockwise rotation around the x-axis.</summary>
      <returns>The angle of rotation around the x-axis, given in degrees in a counterclockwise direction. The default value is 0 degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationXProperty">
      <summary>Identifies the RotationX dependency property.</summary>
      <returns>The RotationX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationY">
      <summary>Gets or sets the angle in degrees of counterclockwise rotation around the y-axis.</summary>
      <returns>The angle of rotation around the y-axis, given in degrees in a counterclockwise direction. The default value is 0 degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationYProperty">
      <summary>Identifies the RotationY dependency property.</summary>
      <returns>The RotationY dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZ">
      <summary>Gets or sets the angle in degrees of counterclockwise rotation around the z-axis.</summary>
      <returns>The angle of rotation around the z-axis, given in degrees in a counterclockwise direction. The default value is 0 degrees.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZProperty">
      <summary>Identifies the RotationZ dependency property.</summary>
      <returns>The RotationZ dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleX">
      <summary>Gets or sets the x-axis scale factor. You can use this property to stretch or shrink an object along this axis.</summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleXProperty">
      <summary>Identifies the ScaleX dependency property.</summary>
      <returns>The ScaleX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleY">
      <summary>Gets or sets the y-axis scale factor. You can use this property to stretch or shrink an object along this axis.</summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleYProperty">
      <summary>Identifies the ScaleY dependency property.</summary>
      <returns>The ScaleY dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZ">
      <summary>Gets or sets the z-axis scale factor. You can use this property to stretch or shrink an object along this axis.</summary>
      <returns>The scale factor along the z-axis. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZProperty">
      <summary>Identifies the ScaleZ dependency property.</summary>
      <returns>The ScaleZ dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateX">
      <summary>Gets or sets the distance to translate along the x-axis in pixels.</summary>
      <returns>The distance to translate (move) an object along the x-axis, in pixels. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateXProperty">
      <summary>Identifies the TranslateX dependency property.</summary>
      <returns>The TranslateX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateY">
      <summary>Gets or sets the distance to translate along the y-axis in pixels.</summary>
      <returns>The distance to translate (move) an object along the y-axis, in pixels. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateYProperty">
      <summary>Identifies the TranslateY dependency property.</summary>
      <returns>The TranslateY dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZ">
      <summary>Gets or sets the distance to translate along the z-axis in pixels.</summary>
      <returns>The distance to translate (move) an object along the z-axis, in pixels. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZProperty">
      <summary>Identifies the TranslateZ dependency property.</summary>
      <returns>The TranslateZ dependency property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Media3D.Matrix3D">
      <summary>Represents a 4 × 4 matrix that is used for transformations in a 3-D space. Used as a value for Matrix3DProjection.ProjectionMatrix.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M11">
      <summary>The value of the first row and first column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M12">
      <summary>The value of the first row and second column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M13">
      <summary>The value of the first row and third column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M14">
      <summary>The value of the first row and fourth column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M21">
      <summary>The value of the second row and first column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M22">
      <summary>The value of the second row and second column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M23">
      <summary>The value of the second row and third column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M24">
      <summary>The value of the second row and fourth column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M31">
      <summary>The value of the third row and first column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M32">
      <summary>The value of the third row and second column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M33">
      <summary>The value of the third row and third column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M34">
      <summary>The value of the third row and fourth column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M44">
      <summary>The value of the fourth row and fourth column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetX">
      <summary>The value of the fourth row and first column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetY">
      <summary>The value of the fourth row and second column of this Matrix3D.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetZ">
      <summary>The value of the fourth row and third column of this Matrix3D.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper">
      <summary>Provides static utilities for Matrix3D. C# and Microsoft Visual Basic code should use members of Matrix3D instead.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.Identity">
      <summary>Gets a static constructed Matrix3D where the values established are representative of an **Identity** transform. C# and Microsoft Visual Basic code should use Identity instead.</summary>
      <returns>A static constructed Matrix3D where the values established are representative of an **Identity** transform.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.FromElements(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Defines a new Matrix3D value, using element values for each of the possible values of a Matrix3D structure. C# and Microsoft Visual Basic code should use Matrix3D constructor instead.</summary>
      <param name="m11">The value to set for **M11** of the Matrix3D.</param>
      <param name="m12">The value to set for **M12** of the Matrix3D..</param>
      <param name="m13">The value to set for **M13** of the Matrix3D.</param>
      <param name="m14">The value to set for **M14** of the Matrix3D.</param>
      <param name="m21">The value to set for **M21** of the Matrix3D.</param>
      <param name="m22">The value to set for **M22** of the Matrix3D.</param>
      <param name="m23">The value to set for **M23** of the Matrix3D.</param>
      <param name="m24">The value to set for **M24** of the Matrix3D.</param>
      <param name="m31">The value to set for **M31** of the Matrix3D.</param>
      <param name="m32">The value to set for **M32** of the Matrix3D.</param>
      <param name="m33">The value to set for **M33** of the Matrix3D.</param>
      <param name="m34">The value to set for **M34** of the Matrix3D.</param>
      <param name="offsetX">The value to set for **OffsetX** (row 4, column 1) of the Matrix3D.</param>
      <param name="offsetY">The value to set for **OffsetY** (row 4, column 2) of the Matrix3D.</param>
      <param name="offsetZ">The value to set for **OffsetZ** (row 4, column 3) of the Matrix3D.</param>
      <param name="m44">The value to set for **M44** of the Matrix3D.</param>
      <returns>The created Matrix3D.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.GetHasInverse(Microsoft.UI.Xaml.Media.Media3D.Matrix3D)">
      <summary>Returns whether the provided Matrix3D is invertible. C# and Microsoft Visual Basic code should use HasInverse instead.</summary>
      <param name="target">The target Matrix3D to evaluate.</param>
      <returns>**true** if the Matrix3D has an inverse; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.GetIsIdentity(Microsoft.UI.Xaml.Media.Media3D.Matrix3D)">
      <summary>Returns whether the provided Matrix3D represents an **Identity** transform. C# and Microsoft Visual Basic code should use IsIdentity instead.</summary>
      <param name="target">The target Matrix3D to evaluate.</param>
      <returns>**true** if the Matrix3D represents an **Identity** transform; otherwise, **false**.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.Invert(Microsoft.UI.Xaml.Media.Media3D.Matrix3D)">
      <summary>Returns a potentially new Matrix3D value that represents the inversion of the provided Matrix3D. C# and Microsoft Visual Basic code should use Invert instead.</summary>
      <param name="target">The target Matrix3D to evaluate.</param>
      <returns>The inversion result Matrix3D.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper.Multiply(Microsoft.UI.Xaml.Media.Media3D.Matrix3D,Microsoft.UI.Xaml.Media.Media3D.Matrix3D)">
      <summary>Multiplies the specified matrices. C# and Microsoft Visual Basic code should use the multiplication operator instead. </summary>
      <param name="matrix1">The first matrix to multiply.</param>
      <param name="matrix2">The second matrix to multiply.</param>
      <returns>A new Matrix3D that is the result of multiplication.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D">
      <summary>Represents a 3-D perspective effect.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.#ctor">
      <summary>Initializes a new instance of the PerspectiveTransform3D class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.Depth">
      <summary>Gets or sets the distance in pixels to the plane where z=0.</summary>
      <returns>The distance to the z=0 plane. This value must be greater than zero. The default value is 1000.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.DepthProperty">
      <summary>Identifies the Depth dependency property.</summary>
      <returns>The Depth dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetX">
      <summary>Gets or sets the x-offset in pixels for the perspective's origin from the center of the element.</summary>
      <returns>The x-offset of the perspective's origin from the center of the element. This distance is measured in pixels and the default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetXProperty">
      <summary>Identifies the OffsetX dependency property.</summary>
      <returns>The OffsetX dependency property identifier.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetY">
      <summary>Gets or sets the y-offset in pixels for the perspective's origin from the center of the element.</summary>
      <returns>The y-offset of the perspective's origin from the center of the element. This distance is measured in pixels and the default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetYProperty">
      <summary>Identifies the OffsetY dependency property.</summary>
      <returns>The OffsetY dependency property identifier.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.Media3D.Transform3D">
      <summary>The base class for the CompositeTransform3D and PerspectiveTransform3D classes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.Media3D.Transform3D.#ctor">
      <summary>Initializes a new instance of the Transform3D class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.FrameNavigationOptions">
      <summary>Represents options for a frame navigation, including whether it is recorded in the navigation stack and what transition animation is used.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.#ctor">
      <summary>Initializes a new instance of the FrameNavigationOptions class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.IsNavigationStackEnabled">
      <summary>Gets or sets a value that indicates whether navigation is recorded in the Frame's ForwardStack or BackStack.</summary>
      <returns>**true** if navigation is recorded in the Frame's ForwardStack or BackStack; otherwise, **false**. The default is **true**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.TransitionInfoOverride">
      <summary>Gets or sets a value that indicates the animated transition associated with the navigation.</summary>
      <returns>Info about the animated transition.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigatedEventHandler">
      <summary>Represents the method that will handle the Navigated event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs">
      <summary>Provides data for the OnNavigatingFrom callback that can be used to cancel a navigation request from origination.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.Cancel">
      <summary>Specifies whether a pending navigation should be canceled.</summary>
      <returns>**true** to cancel the pending cancelable navigation; **false** to continue with navigation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>Gets the value of the *mode* parameter from the originating Navigate call.</summary>
      <returns>The value of the *mode* parameter from the originating Navigate call.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.NavigationTransitionInfo">
      <summary>Gets a value that indicates the animated transition associated with the navigation.</summary>
      <returns>Info about the animated transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.Parameter">
      <summary>Gets the navigation parameter associated with this navigation.</summary>
      <returns>The navigation parameter.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.SourcePageType">
      <summary>Gets the value of the *SourcePageType* parameter from the originating Navigate call.</summary>
      <returns>The value of the *SourcePageType* parameter from the originating Navigate call, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler">
      <summary>Represents the method to use as the OnNavigatingFrom callback override.</summary>
      <param name="sender">The object where the method is implemented.</param>
      <param name="e">Event data that is passed through the callback.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationCacheMode">
      <summary>Specifies caching characteristics for a page involved in a navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationCacheMode.Disabled">
      <summary>The page is never cached and a new instance of the page is created on each visit.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationCacheMode.Enabled">
      <summary>The page is cached, but the cached instance is discarded when the size of the cache for the frame is exceeded.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationCacheMode.Required">
      <summary>The page is cached and the cached instance is reused for every visit regardless of the cache size for the frame.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationEventArgs">
      <summary>Provides data for navigation methods and event handlers that cannot cancel the navigation request.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.Content">
      <summary>Gets the root node of the target page's content.</summary>
      <returns>The root node of the target page's content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.NavigationMode">
      <summary>Gets a value that indicates the direction of movement during navigation</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.NavigationTransitionInfo">
      <summary>Gets a value that indicates the animated transition associated with the navigation.</summary>
      <returns>Info about the animated transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.Parameter">
      <summary>Gets any "Parameter" object passed to the target page for the navigation.</summary>
      <returns>An object that potentially passes parameters to the navigation target. May be null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.SourcePageType">
      <summary>Gets the data type of the source page.</summary>
      <returns>The data type of the source page, represented as *namespace*.*type* or simply *type*.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationEventArgs.Uri">
      <summary>Gets the Uniform Resource Identifier (URI) of the target.</summary>
      <returns>A value that represents the Uniform Resource Identifier (URI).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs">
      <summary>Provides event data for the Frame.NavigationFailed events.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.Exception">
      <summary>Gets the result code for the exception that is associated with the failed navigation.</summary>
      <returns>A system exception result code.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the failure event has been handled.</summary>
      <returns>**true** if the failure event is handled; **false** if the failure event is not yet handled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.SourcePageType">
      <summary>Gets the data type of the target page.</summary>
      <returns>The data type of the target page, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler">
      <summary>Represents a method that will handle the Frame.NavigationFailed events.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationMode">
      <summary>Specifies the navigation stack characteristics of a navigation.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationMode.Back">
      <summary>Navigation is going backward in the stack.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationMode.Forward">
      <summary>Navigation is going forward in the stack.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationMode.New">
      <summary>Navigation is to a new instance of a page (not going forward or backward in the stack).</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Navigation.NavigationMode.Refresh">
      <summary>Navigation is to the current page (perhaps with different data).</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler">
      <summary>Provides event data for the NavigationStopped event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Navigation.PageStackEntry">
      <summary>Represents an entry in the BackStack or ForwardStack of a Frame.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Navigation.PageStackEntry.#ctor(Microsoft.UI.Xaml.Interop.TypeName,System.Object,Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
      <summary>Initializes a new instance of the PageStackEntry class.</summary>
      <param name="sourcePageType">The type of page associated with the navigation entry, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
      <param name="parameter">The navigation parameter associated with the navigation entry.</param>
      <param name="navigationTransitionInfo">Info about the animated transition associated with the navigation entry.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.PageStackEntry.NavigationTransitionInfo">
      <summary>Gets a value that indicates the animated transition associated with the navigation entry.</summary>
      <returns>Info about the animated transition.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.PageStackEntry.Parameter">
      <summary>Gets the navigation parameter associated with this navigation entry.</summary>
      <returns>The navigation parameter.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.PageStackEntry.SourcePageType">
      <summary>Gets the type of page associated with this navigation entry.</summary>
      <returns>The page type of the navigation entry, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Navigation.PageStackEntry.SourcePageTypeProperty">
      <summary>Identifies the SourcePageType dependency property.</summary>
      <returns>The identifier for the SourcePageType dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.AddPagesEventArgs">
      <summary>Provides event data for the AddPages event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.AddPagesEventArgs.#ctor">
      <summary>Initializes a new instance of the AddPagesEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.AddPagesEventArgs.PrintTaskOptions">
      <summary>Gets the PrintTaskOptions for the pages added.</summary>
      <returns>An object that manages the options for print tasks.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.AddPagesEventHandler">
      <summary>Represents the method that will handle the AddPages event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs">
      <summary>Provides event data for the GetPreviewPage event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs.#ctor">
      <summary>Initializes a new instance of the GetPreviewPageEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs.PageNumber">
      <summary>Gets the page number of the potentially repaginated page involved in the preview.</summary>
      <returns>The page number of the potentially repaginated page.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler">
      <summary>Represents the method that will handle the GetPreviewPage event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.PaginateEventArgs">
      <summary>Provides event data for the Paginate event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PaginateEventArgs.#ctor">
      <summary>Initializes a new instance of the PaginateEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.PaginateEventArgs.CurrentPreviewPageNumber">
      <summary>Gets the 1-based page number of the current preview page.</summary>
      <returns>The page number.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.PaginateEventArgs.PrintTaskOptions">
      <summary>Gets the PrintTaskOptions for the pages involved in the event occurrence.</summary>
      <returns>An object that manages the options for print tasks.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.PaginateEventHandler">
      <summary>Represents the method that will handle the Paginate event.</summary>
      <param name="sender">The object where the handler is attached.</param>
      <param name="e">Event data for the event.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.PreviewPageCountType">
      <summary>Describes the basis of the page count.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Printing.PreviewPageCountType.Final">
      <summary>Page count is based on final print job total.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Printing.PreviewPageCountType.Intermediate">
      <summary>Page count is based on an intermediate total.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Printing.PrintDocument">
      <summary>Defines a reusable object that sends output to a printer.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.#ctor">
      <summary>Initializes a new instance of the PrintDocument class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.PrintDocument.DocumentSource">
      <summary>Gets a document source reference for this PrintDocument.</summary>
      <returns>An object representing the document source. </returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Printing.PrintDocument.DocumentSourceProperty">
      <summary>Identifies the DocumentSource dependency property.</summary>
      <returns>The identifier for the DocumentSource dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Printing.PrintDocument.AddPages">
      <summary>Occurs when the PrintManager requests the final collection of pages to send to the printer.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Printing.PrintDocument.GetPreviewPage">
      <summary>Occurs when the PrintManager requests a particular print page to be shown in the preview window.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Printing.PrintDocument.Paginate">
      <summary>Occurs when the PrintManager requests the collection of print pages to be shown in the preview window.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.AddPage(Microsoft.UI.Xaml.UIElement)">
      <summary>Adds a XAML root visual element to the print list.</summary>
      <param name="pageVisual">The root visual element of the page to add to the print list.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.AddPagesComplete">
      <summary>Indicates that the application will not add more pages to the print list, and that the print list is ready to be released.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.InvalidatePreview">
      <summary>References the low-level print preview dialog API and invalidates the current print preview.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.SetPreviewPage(System.Int32,Microsoft.UI.Xaml.UIElement)">
      <summary>Sets the specified print page as the current print preview page.</summary>
      <param name="pageNumber">The sequence number of the page to preview.</param>
      <param name="pageVisual">The root visual object for the requested print page.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Printing.PrintDocument.SetPreviewPageCount(System.Int32,Microsoft.UI.Xaml.Printing.PreviewPageCountType)">
      <summary>Sets the number of pages prepared for print preview and added to the print list.</summary>
      <param name="count">The number of pages included in the preview.</param>
      <param name="type">A value of the enumeration that specifies how to determine the page count.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Resources.CustomXamlResourceLoader">
      <summary>Enables loading of custom resource dictionaries as sources. Override GetResource to provide the logic that a XAML parser can use to look up the necessary resources at load time.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Resources.CustomXamlResourceLoader.#ctor">
      <summary>Initializes a new instance of the CustomXamlResourceLoader class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Resources.CustomXamlResourceLoader.Current">
      <summary>Returns the active CustomXamlResourceLoader instance.</summary>
      <returns>The active CustomXamlResourceLoader instance.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Resources.CustomXamlResourceLoader.GetResource(System.String,System.String,System.String,System.String)">
      <summary>When overridden in a derived class, specifies the logic of resource lookup for this CustomXamlResourceLoader. Given a resource ID and some type information about the expected result, returns the requested resource.</summary>
      <param name="resourceId">The string-form key of the resource to get.</param>
      <param name="objectType">The expected type of the resource.</param>
      <param name="propertyName">The name of the property that serves as the key in the custom resource lookup logic.</param>
      <param name="propertyType">The type of the property that serves as the key, with type represented as a string.</param>
      <returns>The retrieved resource.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Ellipse">
      <summary>Draws an ellipse with a given Height and Width specified in device-independent pixel (DIP).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Ellipse.#ctor">
      <summary>Initializes a new instance of the Ellipse class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Line">
      <summary>Draws a straight line between two points.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Line.#ctor">
      <summary>Initializes a new instance of the Line class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.X1">
      <summary>Gets or sets the x-coordinate of the Line start point.</summary>
      <returns>The x-coordinate for the start point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.X1Property">
      <summary>Identifies the X1 dependency property.</summary>
      <returns>The identifier for the X1 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.X2">
      <summary>Gets or sets the x-coordinate of the Line end point.</summary>
      <returns>The x-coordinate for the end point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.X2Property">
      <summary>Identifies the X2 dependency property.</summary>
      <returns>The identifier for the X2 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.Y1">
      <summary>Gets or sets the y-coordinate of the Line start point.</summary>
      <returns>The y-coordinate for the start point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.Y1Property">
      <summary>Identifies the Y1 dependency property.</summary>
      <returns>The identifier for the Y1 dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.Y2">
      <summary>Gets or sets the y-coordinate of the Line end point.</summary>
      <returns>The y-coordinate for the end point of the line, in pixels. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Line.Y2Property">
      <summary>Identifies the Y2 dependency property.</summary>
      <returns>The identifier for the Y2 dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Path">
      <summary>Draws a series of connected lines and curves. The line and curve dimensions are declared through the Data property, and can be specified either with Move and draw commands syntax, or with an object model.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Path.#ctor">
      <summary>Initializes a new instance of the Path class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Path.Data">
      <summary>Gets or sets a Geometry that specifies the shape to be drawn.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Path.DataProperty">
      <summary>Identifies the Data dependency property.</summary>
      <returns>The identifier for the Data dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Polygon">
      <summary>Draws a polygon, which is a connected series of lines that form a closed shape.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Polygon.#ctor">
      <summary>Initializes a new instance of the Polygon class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polygon.FillRule">
      <summary>Gets or sets a value that specifies how the interior fill of the shape is determined.</summary>
      <returns>A value of the enumeration. The default is **EvenOdd**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polygon.FillRuleProperty">
      <summary>Identifies the FillRule dependency property.</summary>
      <returns>The identifier for the FillRule dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polygon.Points">
      <summary>Gets or sets a collection that contains the vertex points of the polygon.</summary>
      <returns>A collection of Point structures that describes the vertex points of the polygon. The default is null. The value can be expressed as a string for XAML or type conversion.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polygon.PointsProperty">
      <summary>Identifies the Points dependency property.</summary>
      <returns>The identifier for the Points dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Polyline">
      <summary>Draws a series of connected straight lines.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Polyline.#ctor">
      <summary>Initializes a new instance of the Polyline class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polyline.FillRule">
      <summary>Gets or sets a value that specifies how the interior fill of the shape is determined.</summary>
      <returns>A value of the enumeration that specifies the fill behavior. The default is **EvenOdd**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polyline.FillRuleProperty">
      <summary>Identifies the FillRule dependency property.</summary>
      <returns>The identifier for the FillRule dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polyline.Points">
      <summary>Gets or sets a collection that contains the vertex points of the Polyline.</summary>
      <returns>A collection of Point structures that describes the vertex points of the Polyline. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Polyline.PointsProperty">
      <summary>Identifies the Points dependency property.</summary>
      <returns>The identifier for the Points dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Rectangle">
      <summary>Draws a rectangle with a given Height and Width specified in device-independent pixel (DIP).</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Rectangle.#ctor">
      <summary>Initializes a new instance of the Rectangle class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Rectangle.RadiusX">
      <summary>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The x-axis radius of the ellipse that is used to round the corners of the rectangle.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Rectangle.RadiusXProperty">
      <summary>Identifies the RadiusX dependency property.</summary>
      <returns>The identifier for the RadiusX dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Rectangle.RadiusY">
      <summary>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle.</summary>
      <returns>The y-axis radius of the ellipse that is used to round the corners of the rectangle. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Rectangle.RadiusYProperty">
      <summary>Identifies the RadiusY dependency property.</summary>
      <returns>The identifier for the RadiusY dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Shapes.Shape">
      <summary>Provides a base class for shape elements, such as Ellipse, Polygon, and Rectangle.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Shapes.Shape.#ctor">
      <summary>Provides base class initialization behavior for Shape derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.Fill">
      <summary>Gets or sets the Brush that paints the interior area of the shape.</summary>
      <returns>A Brush that paints/fills the shape interior. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.FillProperty">
      <summary>Identifies the Fill dependency property.</summary>
      <returns>The identifier for the Fill dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.GeometryTransform">
      <summary>Gets a value that represents a Transform that is applied to the geometry of a Shape before it is drawn.</summary>
      <returns>A Transform that is applied to the geometry of a Shape before it is drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.Stretch">
      <summary>Gets or sets a Stretch enumeration value that describes how the shape fills its allocated space.</summary>
      <returns>One of the Stretch enumeration values. The default value at run time depends on the type of Shape.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StretchProperty">
      <summary>Identifies the Stretch dependency property.</summary>
      <returns>The identifier for the Stretch dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.Stroke">
      <summary>Gets or sets the Brush that specifies how the Shape outline is painted.</summary>
      <returns>A Brush that specifies how the Shape outline is painted. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashArray">
      <summary>Gets or sets a collection of Double values that indicates the pattern of dashes and gaps that is used to outline shapes.</summary>
      <returns>A collection of Double values that specifies the pattern of dashes and gaps.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashArrayProperty">
      <summary>Identifies the StrokeDashArray dependency property.</summary>
      <returns>The identifier for the StrokeDashArray dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashCap">
      <summary>Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn.</summary>
      <returns>One of the enumeration values for PenLineCap. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashCapProperty">
      <summary>Identifies the StrokeDashCap dependency property.</summary>
      <returns>The identifier for the StrokeDashCap dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashOffset">
      <summary>Gets or sets a value that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A value that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>Identifies the StrokeDashOffset dependency property.</summary>
      <returns>The identifier for the StrokeDashOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeEndLineCap">
      <summary>Gets or sets a PenLineCap enumeration value that describes the Shape at the end of a line.</summary>
      <returns>One of the enumeration values for PenLineCap. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>Identifies the StrokeEndLineCap dependency property.</summary>
      <returns>The identifier for the StrokeEndLineCap dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeLineJoin">
      <summary>Gets or sets a PenLineJoin enumeration value that specifies the type of join that is used at the vertices of a Shape.</summary>
      <returns>A value of the PenLineJoin enumeration that specifies the join appearance. The default value is **Miter**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeLineJoinProperty">
      <summary>Identifies the StrokeLineJoin dependency property.</summary>
      <returns>The identifier for the StrokeLineJoin dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element.</summary>
      <returns>The limit on the ratio of the miter length to the StrokeThickness of a Shape element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>Identifies the StrokeMiterLimit dependency property.</summary>
      <returns>The identifier for the StrokeMiterLimit dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeProperty">
      <summary>Identifies the Stroke dependency property.</summary>
      <returns>The identifier for the Stroke dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeStartLineCap">
      <summary>Gets or sets a PenLineCap enumeration value that describes the Shape at the start of a Stroke.</summary>
      <returns>A value of the PenLineCap enumeration that specifies the shape at the start of a Stroke. The default is **Flat**.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>Identifies the StrokeStartLineCap dependency property.</summary>
      <returns>The identifier for the StrokeStartLineCap dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeThickness">
      <summary>Gets or sets the width of the Shape stroke outline.</summary>
      <returns>The width of the Shape outline, in pixels. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Shapes.Shape.StrokeThicknessProperty">
      <summary>Identifies the StrokeThickness dependency property.</summary>
      <returns>The identifier for the StrokeThickness dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider?text=ColorPickerSlider" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum?text=ColorSpectrum" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.DropDownButton)">
      <param name="owner" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.Collapse" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.Expand" />
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.ExpandCollapseState" />
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer?text=MenuBar" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuBar)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.MenuBarItem)">
      <param name="owner" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" />.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Expand">
      <summary>Displays all child nodes, controls, or content of the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" />.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.Invoke">
      <summary>Sends a request to click the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" /> associated with the automation peer.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.NavigationViewItem?text=NavigationViewItem" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.NavigationViewItem)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.PersonPicture?text=PersonPicture" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.PersonPicture)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RadioButtonsListViewItemAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RadioButtonsListViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.RatingControl?text=RatingControl" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.RatingControl)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ItemsRepeater)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ScrollerAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ScrollerAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.Primitives.Scroller)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.SplitButton)">
      <param name="owner" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.Collapse" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.Expand" />
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.ExpandCollapseState" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.Invoke" />
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TeachingTip)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.ToggleSplitButton)">
      <param name="owner" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.Collapse" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.Expand" />
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.ExpandCollapseState" />
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.Toggle" />
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.ToggleState" />
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.TreeViewItem?text=TreeViewItem" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TreeViewItem)">
      <param name="owner" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.Collapse">
      <summary>Collapses the associated TreeViewItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.Expand">
      <summary>Expands the associated TreeViewItem.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.ExpandCollapseState">
      <summary>Gets a value indicating the expanded or collapsed state of the associated TreeViewItem.</summary>
      <returns>The expanded or collapsed state of the associated TreeViewItem. The default value is Expanded.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer">
      <summary>Exposes <see cref="Microsoft.UI.Xaml.Controls.TreeViewList?text=TreeViewList" /> types to Microsoft UI Automation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.#ctor(Microsoft.UI.Xaml.Controls.TreeViewList)">
      <param name="owner" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer">
      <summary>An element that displays and controls an IAnimatedVisual.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer?text=AnimatedVisualPlayer" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.AutoPlay">
      <summary>Gets or sets a value that indicates whether an animated visual plays immediately when it is loaded.</summary>
      <returns>true if the animated visual plays immediately when it is loaded; otherwise false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.AutoPlayProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.AutoPlay?text=AutoPlay" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.AutoPlay?text=AutoPlay" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Diagnostics">
      <summary>Gets optional diagnostics information about the last attempt to load an animated visual.</summary>
      <returns>Diagnostics information about the last attempt to load an animated visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.DiagnosticsProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Diagnostics?text=Diagnostics" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Diagnostics?text=Diagnostics" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Duration">
      <summary>Gets the duration of the the currently loaded animated visual, or TimeSpan.Zero if no animated visual is loaded.</summary>
      <returns>The duration of the the currently loaded animated visual, or TimeSpan.Zero if no animated visual is loaded.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.DurationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Duration?text=Duration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Duration?text=Duration" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.FallbackContent">
      <summary>Gets or sets content to display if an animated visual fails to load.</summary>
      <returns>Content to display if an animated visual fails to load.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.FallbackContentProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.FallbackContent?text=FallbackContent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.FallbackContent?text=FallbackContent" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsAnimatedVisualLoaded">
      <summary>Gets a value that indicates whether an animated visual is loaded.</summary>
      <returns>true if an animated visual is loaded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsAnimatedVisualLoadedProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsAnimatedVisualLoaded?text=IsAnimatedVisualLoaded" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsAnimatedVisualLoaded?text=IsAnimatedVisualLoaded" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsPlaying">
      <summary>Gets a value that indicates whether an animated visual is loaded and a play is underway.</summary>
      <returns>true if an animated visual is loaded and a play is underway; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsPlayingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsPlaying?text=IsPlaying" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.IsPlaying?text=IsPlaying" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Pause">
      <summary>Pauses the currently playing animated visual, or does nothing if no play is underway.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.PlayAsync(System.Double,System.Double,System.Boolean)">
      <summary>Starts playing the loaded animated visual, or does nothing if no animated visual is loaded.</summary>
      <param name="fromProgress">The point from which to start the animation, as a value from 0 to 1.</param>
      <param name="toProgress">The point at which to finish the animation, as a value from 0 to 1.</param>
      <param name="looped">If true, the animation loops continuously between fromProgress and toProgress. If false, the animation plays once then stops.</param>
      <returns>An async action that is completed when the play is stopped or, if looped is not set, when the play reaches toProgress.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.PlaybackRate">
      <summary>Gets or sets the rate at which the animation plays.</summary>
      <returns>The rate at which the animation plays. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.PlaybackRateProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.PlaybackRate?text=PlaybackRate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.PlaybackRate?text=PlaybackRate" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.ProgressObject">
      <summary>Gets a CompositionObject that is animated along with the progress of the AnimatedVisualPlayer.</summary>
      <returns>A CompositionObject that is animated along with the progress of the AnimatedVisualPlayer.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Resume">
      <summary>Resumes the currently paused animated visual, or does nothing if there is no animated visual loaded or the animated visual is not paused.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.SetProgress(System.Double)">
      <summary>Moves the progress of the animated visual to the given value, or does nothing if no animated visual is loaded.</summary>
      <param name="progress">A value from 0 to 1 that represents the progress of the animated visual.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Source">
      <summary>Gets or sets the provider of the animated visual for the player.</summary>
      <returns>The provider of the animated visual for the player.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.SourceProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Source?text=Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Source?text=Source" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Stop">
      <summary>Stops the current play, or does nothing if no play is underway.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Stretch">
      <summary>Gets or sets a value that describes how an animated visual should be stretched to fill the destination rectangle.</summary>
      <returns>A value that describes how an animated visual should be stretched to fill the destination rectangle. The default is Uniform.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.StretchProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Stretch?text=Stretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.Stretch?text=Stretch" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AnimationContext">
      <summary>Defines constants that specify information about changes to a data collection that is useful for animating data elements.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationContext.CollectionChangeAdd">
      <summary>An item was added to the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationContext.CollectionChangeRemove">
      <summary>An item was removed from the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationContext.CollectionChangeReset">
      <summary>The collection was reset.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationContext.LayoutTransition">
      <summary>The layout of items was changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationContext.None">
      <summary>There was no change.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.AnimationMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationMode.Disabled" />
    <member name="F:Microsoft.UI.Xaml.Controls.AnimationMode.Enabled" />
    <member name="T:Microsoft.UI.Xaml.Controls.BitmapIconSource">
      <summary>Represents an icon source that uses a bitmap as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.BitmapIconSource.#ctor">
      <summary>Initializes a new instance of the BitmapIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochrome">
      <summary>Gets or sets a value that indicates whether the bitmap is shown in a single color.</summary>
      <returns>true to show the bitmap in a single color; false to show the bitmap in full color. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochromeProperty">
      <summary>Identifies the ShowAsMonochrome dependency property.</summary>
      <returns>The identifier for the ShowAsMonochrome dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSource">
      <summary>Gets or sets the Uniform Resource Identifier (URI) of the bitmap to use as the icon content.</summary>
      <returns>The Uri of the bitmap to use as the icon content. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSourceProperty">
      <summary>Identifies the UriSource dependency property.</summary>
      <returns>The identifier for the UriSource dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ChainingMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.ChainingMode.Always" />
    <member name="F:Microsoft.UI.Xaml.Controls.ChainingMode.Auto" />
    <member name="F:Microsoft.UI.Xaml.Controls.ChainingMode.Never" />
    <member name="T:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs">
      <summary>Provides event data for the ColorChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs.NewColor">
      <summary>Gets the color that is currently selected in the control.</summary>
      <returns>The color that is currently selected in the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorChangedEventArgs.OldColor">
      <summary>Gets the color that was previously selected in the control.</summary>
      <returns>The color that was previously selected in the control.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorPicker">
      <summary>Represents a control that lets a user pick a color using a color spectrum, sliders, and text input.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ColorPicker.#ctor">
      <summary>Initializes a new instance of the ColorPicker class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.Color">
      <summary>Gets or sets the current color value.</summary>
      <returns>The current color value.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ColorPicker.ColorChanged">
      <summary>Occurs when the Color property has changed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponents">
      <summary>Gets or sets a value that indicates how the Hue-Saturation-Value (HSV) color components are mapped onto the ColorSpectrum.</summary>
      <returns>A value of the enumeration. The default is HueSaturation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponentsProperty">
      <summary>Identifies the ColorSpectrumComponents dependency property.</summary>
      <returns>The identifier for the ColorSpectrumComponents dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShape">
      <summary>Gets or sets a value that indicates whether the ColorSpectrum is shown as a square or a circle.</summary>
      <returns>A value of the enumeration. The default is Box, which shows the spectrum as a square.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShapeProperty">
      <summary>Identifies the ColorSpectrumShape dependency property.</summary>
      <returns>The identifier for the ColorSpectrumShape dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabled">
      <summary>Gets or sets a value that indicates whether the alpha channel can be modified.</summary>
      <returns>true if the alpha channel is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabledProperty">
      <summary>Identifies the IsAlphaEnabled dependency property.</summary>
      <returns>The identifier for the IsAlphaEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisible">
      <summary>Gets or sets a value that indicates whether the slider control for the alpha channel is shown.</summary>
      <returns>true if the alpha channel slider is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisibleProperty">
      <summary>Identifies the IsAlphaSliderVisible dependency property.</summary>
      <returns>The identifier for the IsAlphaSliderVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisible">
      <summary>Gets or sets a value that indicates whether the text input box for the alpha channel is shown.</summary>
      <returns>true if the alpha channel text input box is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisibleProperty">
      <summary>Identifies the IsAlphaTextInputVisible dependency property.</summary>
      <returns>The identifier for the IsAlphaTextInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisible">
      <summary>Gets or sets a value that indicates whether the text input boxes for the color channels are shown.</summary>
      <returns>true if the color channel text input boxes are shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisibleProperty">
      <summary>Identifies the IsColorChannelTextInputVisible dependency property.</summary>
      <returns>The identifier for the IsColorChannelTextInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisible">
      <summary>Gets or sets a value that indicates whether the color preview bar is shown.</summary>
      <returns>true if the color preview bar is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisibleProperty">
      <summary>Identifies the IsColorPreviewVisible dependency property.</summary>
      <returns>The identifier for the IsColorPreviewVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisible">
      <summary>Gets or sets a value that indicates whether the slider control for the color value is shown.</summary>
      <returns>true if the color slider is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisibleProperty">
      <summary>Identifies the IsColorSliderVisible dependency property.</summary>
      <returns>The identifier for the IsColorSliderVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisible">
      <summary>Gets or sets a value that indicates whether the color spectrum control is shown.</summary>
      <returns>true if the color spectrum is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisibleProperty">
      <summary>Identifies the IsColorSpectrumVisible dependency property.</summary>
      <returns>The identifier for the IsColorSpectrumVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisible">
      <summary>Gets or sets a value that indicates whether the text input box for a HEX color value is shown.</summary>
      <returns>true if the HEX color text input box is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisibleProperty">
      <summary>Identifies the IsHexInputVisible dependency property.</summary>
      <returns>The identifier for the IsHexInputVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisible">
      <summary>Gets or sets a value that indicates whether the 'more' button is shown.</summary>
      <returns>true if the 'more' button is shown; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisibleProperty">
      <summary>Identifies the IsMoreButtonVisible dependency property.</summary>
      <returns>The identifier for the IsMoreButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxHue">
      <summary>Gets or sets the maximum Hue value in the range 0-359.</summary>
      <returns>The maximum Hue value in the range 0-359. The default is 359.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxHueProperty">
      <summary>Identifies the MaxHue dependency property.</summary>
      <returns>The identifier for the MaxHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturation">
      <summary>Gets or sets the maximum Saturation value in the range 0-100.</summary>
      <returns>The maximum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturationProperty">
      <summary>Identifies the MaxSaturation dependency property.</summary>
      <returns>The identifier for the MaxSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxValue">
      <summary>Gets or sets the maximum Value value in the range 0-100.</summary>
      <returns>The maximum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MaxValueProperty">
      <summary>Identifies the MaxValue dependency property.</summary>
      <returns>The identifier for the MaxValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinHue">
      <summary>Gets or sets the minimum Hue value in the range 0-359.</summary>
      <returns>The minimum Hue value in the range 0-359. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinHueProperty">
      <summary>Identifies the MinHue dependency property.</summary>
      <returns>The identifier for the MinHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturation">
      <summary>Gets or sets the minimum Saturation value in the range 0-100.</summary>
      <returns>The minimum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturationProperty">
      <summary>Identifies the MinSaturation dependency property.</summary>
      <returns>The identifier for the MinSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinValue">
      <summary>Gets or sets the minimum Value value in the range 0-100.</summary>
      <returns>The minimum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.MinValueProperty">
      <summary>Identifies the MinValue dependency property.</summary>
      <returns>The identifier for the MinValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColor">
      <summary>Gets or sets the previous color.</summary>
      <returns>The previous color. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColorProperty">
      <summary>Identifies the PreviousColor dependency property.</summary>
      <returns>The identifier for the PreviousColor dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel">
      <summary>Defines contstants that specify which Hue-Saturation-Value-Alpha component a slider in a <see cref="Microsoft.UI.Xaml.Controls.ColorPicker?text=ColorPicker" /> controls.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Alpha">
      <summary>The slider controls the Alpha channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Hue">
      <summary>The slider controls the Hue channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Saturation">
      <summary>The slider controls the Saturation channel.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel.Value">
      <summary>The slider controls the Value channel.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents">
      <summary>Defines constants that specify how the Hue-Saturation-Value (HSV) color components are mapped onto the ColorSpectrum.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation">
      <summary>Hue is mapped to the X axis. Saturation is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueValue">
      <summary>Hue is mapped to the X axis. Value is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationHue">
      <summary>Saturation is mapped to the X axis. Hue is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationValue">
      <summary>Saturation is mapped to the X axis. Value is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueHue">
      <summary>Value is mapped to the X axis. Hue is mapped to the Y axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueSaturation">
      <summary>Value is mapped to the X axis. Saturation is mapped to the Y axis.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ColorSpectrumShape">
      <summary>Defines constants that specify how the ColorSpectrum control is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Box">
      <summary>The ColorSpectrum control is shown as a square.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Ring">
      <summary>The ColorSpectrum control is shown as a circle.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.CommandBarFlyout">
      <summary>Represents a specialized flyout that provides layout for AppBarButton and related command elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.CommandBarFlyout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBarFlyout.PrimaryCommands">
      <summary>Gets the collection of primary command elements for the <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" />.</summary>
      <returns>The collection of primary command elements for the <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" />. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.CommandBarFlyout.SecondaryCommands">
      <summary>Gets the collection of secondary command elements for the <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" />.</summary>
      <returns>The collection of secondary command elements for the <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" />. The default is an empty collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ContentOrientation" />
    <member name="F:Microsoft.UI.Xaml.Controls.ContentOrientation.Horizontal" />
    <member name="F:Microsoft.UI.Xaml.Controls.ContentOrientation.None" />
    <member name="F:Microsoft.UI.Xaml.Controls.ContentOrientation.Vertical" />
    <member name="T:Microsoft.UI.Xaml.Controls.DropDownButton">
      <summary>Represents a button with a chevron intended to open a menu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.DropDownButton.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.DropDownButton?text=DropDownButton" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementAnimationCompleted">
      <param name="sender" />
      <param name="element" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementAnimator">
      <summary>Represents the base class for components that coordinate the animations of elements that are being conceptually added, repositioned/resized, or removed from the live visual tree.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ElementAnimator?text=ElementAnimator" /> class.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ElementAnimator.BoundsChangeAnimationCompleted">
      <summary>Raised by a derived class to notify the framework that a bounds change animation has completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasBoundsChangeAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext,Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Determines whether a bounds change animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <param name="oldBounds">The old bounds used to arrange the element.</param>
      <param name="newBounds">The new bounds used to arrange the element.</param>
      <returns>true if the animation is being provided by this animator.; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasBoundsChangeAnimationCore(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext,Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>When implemented in a derived class, determines whether a bounds change animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <param name="oldBounds">The old bounds used to arrange the element.</param>
      <param name="newBounds">The new bounds used to arrange the element.</param>
      <returns>true if the animation is being provided by this animator; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementAnimator.HasBoundsChangeAnimationsPending">
      <summary>Gets a value that indicates whether a bounds change animation is pending.</summary>
      <returns>true if a bounds change animation is pending; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasHideAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Determines whether a hide animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <returns>true if the animation is being provided by this animator; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasHideAnimationCore(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>When implemented in a derived class, determines whether a hide animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <returns>true if the animation is being provided by this animator; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementAnimator.HasHideAnimationsPending">
      <summary>Gets a value that indicates whether a hide animation is pending.</summary>
      <returns>true if a hide animation is pending; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasShowAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Determines whether a show animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <returns>true if the animation is being provided by this animator; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.HasShowAnimationCore(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>When implemented in a derived class, determines whether a show animation is being provided by this animator.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the reason for the animation.</param>
      <returns>true if the animation is being provided by this animator, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementAnimator.HasShowAnimationsPending">
      <summary>Gets a value that indicates whether a show animation is pending.</summary>
      <returns>true if a show animation is pending; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ElementAnimator.HideAnimationCompleted">
      <summary>Raised by a derived class to notify the framework that a hide animation has completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnBoundsChangeAnimationCompleted(Microsoft.UI.Xaml.UIElement)">
      <summary>Called when a bounds changed animation completes.</summary>
      <param name="element">The element that was animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnElementBoundsChanged(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext,Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Determines whether a bounds changed animation is needed, and prepares the animation if it is.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
      <param name="oldBounds">The old bounds used to arrange the element.</param>
      <param name="newBounds">The new bounds used to arrange the element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnElementHidden(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Determines whether a hide animation is needed, and prepares the animation if it is.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnElementShown(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Determines whether a show animation is needed, and prepares the animation if it is.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnHideAnimationCompleted(Microsoft.UI.Xaml.UIElement)">
      <summary>Called when a hide animation completes.</summary>
      <param name="element">The element that was animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.OnShowAnimationCompleted(Microsoft.UI.Xaml.UIElement)">
      <summary>Called when a show animation completes.</summary>
      <param name="element">The element that was animated.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementAnimator.SharedContext">
      <summary>Gets the union of all animation contexts during the current tick.</summary>
      <returns>The union of all animation contexts during the current tick.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ElementAnimator.ShowAnimationCompleted">
      <summary>Raised by a derived class to notify the framework that a show animation has completed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.StartBoundsChangeAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext,Windows.Foundation.Rect,Windows.Foundation.Rect)">
      <summary>Starts the animation to play when the bounds used to arrange an element change.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
      <param name="oldBounds">The old bounds used to arrange the element.</param>
      <param name="newBounds">The new bounds used to arrange the element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.StartHideAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Starts the animation to play when an element is conceptually removed from the visual tree.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementAnimator.StartShowAnimation(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Controls.AnimationContext)">
      <summary>Starts the animation to play when an element is conceptually added to the visual tree.</summary>
      <param name="element">The element to animate.</param>
      <param name="context">Information about the change that is being animated.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementFactory">
      <summary>Represents the base class for components that create and optionally recycle elements for use in a <see cref="Microsoft.UI.Xaml.Controls.Layout?text=Layout" />.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ElementFactory?text=ElementFactory" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactory.GetElement(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)">
      <summary>Prepares a UIElement to display data.</summary>
      <param name="args">The data to display, and the parent element.</param>
      <returns>A UIElement prepared to display the data specified in the args.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactory.GetElementCore(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)">
      <summary>When implemented in a derived class, prepares a UIElement to display data.</summary>
      <param name="args">The data to display, and the parent element.</param>
      <returns>A UIElement prepared to display the data specified in the args.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactory.RecycleElement(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)">
      <summary>Clears a UIElement to be re-used to display a new data item.</summary>
      <param name="args">The element to recycle, and the parent element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactory.RecycleElementCore(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)">
      <summary>When implemented in a derived class, clears a UIElement to be re-used to display a new data item.</summary>
      <param name="args">The element to recycle, and the parent element.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.ElementFactory.GetElement(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)?text=ElementFactory.GetElement" /> method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs?text=ElementFactoryGetArgs" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs.Data">
      <summary>Gets or sets the data item to prepare an element for.</summary>
      <returns>The data item to prepare an element for.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs.Parent">
      <summary>Gets or sets the parent of the prepared element.</summary>
      <returns>The parent of the prepared element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.ElementFactory.RecycleElement(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)?text=ElementFactory.RecycleElement" /> method.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs?text=ElementFactoryRecycleArgs" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs.Element">
      <summary>Gets or sets the element to recycle.</summary>
      <returns>The element to recycle.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs.Parent">
      <summary>Gets or sets the parent of the recycled element.</summary>
      <returns>The parent of the recycled element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ElementRealizationOptions">
      <summary>Defines constants that specify whether to suppress automatic recycling of the retrieved element or force creation of a new element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ElementRealizationOptions.ForceCreate">
      <summary>Creation of a new element is forced.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ElementRealizationOptions.None">
      <summary>No option is specified.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ElementRealizationOptions.SuppressAutoRecycle">
      <summary>The element is ignored by the automatic recycling logic.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlowLayout">
      <summary>Represents a layout that stacks lines of items. When a line of items is full, items flow to the next line.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout?text=FlowLayout" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.GetAnchorForRealizationRect(Windows.Foundation.Size,Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>Retrives an anchor for a <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RealizationRect?text=RealizationRect" />.</summary>
      <param name="availableSize">The amount of space available.</param>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <returns>An anchor for the <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RealizationRect?text=RealizationRect" /> of the context parameter.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.GetAnchorForTargetElement(System.Int32,Windows.Foundation.Size,Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>Retrives an anchor for a target.</summary>
      <param name="targetIndex">The index of the element that is the target of scrolling.</param>
      <param name="availableSize">The amount of space available.</param>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <returns>The anchor for the target element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.GetExtent(Windows.Foundation.Size,Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,Microsoft.UI.Xaml.UIElement,System.Int32,Windows.Foundation.Rect,Microsoft.UI.Xaml.UIElement,System.Int32,Windows.Foundation.Rect)">
      <summary>Estimates the extent for a specified available size and range of realized items.</summary>
      <param name="availableSize">The available size for the extent.</param>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="firstRealized">The first realized item in the range.</param>
      <param name="firstRealizedItemIndex">The index of the first realized item in the range.</param>
      <param name="firstRealizedLayoutBounds">The layout bounds of the first realized item in the range.</param>
      <param name="lastRealized">The last realized item in the range.</param>
      <param name="lastRealizedItemIndex">The index of the last realized item in the range.</param>
      <param name="lastRealizedLayoutBounds">The layout bounds of the last realized item in the range.</param>
      <returns>The estimated extent.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.GetMeasureSize(System.Int32,Windows.Foundation.Size)">
      <summary>Retrieves the available size for the element at the given index.</summary>
      <param name="index">The index of the element.</param>
      <param name="availableSize">The amount of space the element can use.</param>
      <returns>The available size for the element.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.GetProvisionalArrangeSize(System.Int32,Windows.Foundation.Size,Windows.Foundation.Size)">
      <summary>Retrieves the size intended to eventually arrange the element.</summary>
      <param name="index">The position of the item in the collection.</param>
      <param name="measureSize">The measure size of the item.</param>
      <param name="desiredSize">The preferred size of the item.</param>
      <returns>The size intended to eventually arrange the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.LineAlignment">
      <summary>Gets or sets a value that indicates how items are aligned on the non-scrolling or non-virtualizing axis.</summary>
      <returns>An enumeration value that indicates how items are aligned. The default is Near.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.LineAlignmentProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.LineAlignment?text=LineAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.LineAlignment?text=LineAlignment" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.MinColumnSpacing">
      <summary>Gets or sets the minimum space between items on the horizontal axis.</summary>
      <returns>The minimum space (in pixels) between items on the horizontal axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.MinColumnSpacingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.MinColumnSpacing?text=MinColumnSpacing" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.MinColumnSpacing?text=MinColumnSpacing" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.MinRowSpacing">
      <summary>Gets or sets the minimum space between items on the vertical axis.</summary>
      <returns>The minimum space (in pixels) between items on the vertical axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.MinRowSpacingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.MinRowSpacing?text=MinRowSpacing" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.MinRowSpacing?text=MinRowSpacing" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.OnElementMeasured(Microsoft.UI.Xaml.UIElement,System.Int32,Windows.Foundation.Size,Windows.Foundation.Size,Windows.Foundation.Size,Windows.Foundation.Size,Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>Called when an element has been measured.</summary>
      <param name="element">The measured element.</param>
      <param name="index">The position of the element in the collection.</param>
      <param name="availableSize">The amount of space available for the element.</param>
      <param name="measureSize">The measure size of the element.</param>
      <param name="desiredSize">The preferred size of the element.</param>
      <param name="provisionalArrangeSize">The size intended to eventually arrange the element.</param>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.OnLineArranged(System.Int32,System.Int32,System.Double,Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>Called when a line has been arranged.</summary>
      <param name="startIndex">The index of the first item in the line.</param>
      <param name="countInLine">The number of items in the line.</param>
      <param name="lineSize">The height of the line.</param>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.Orientation">
      <summary>Gets or sets the axis along which items are laid out.</summary>
      <returns>One of the enumeration values that specifies the axis along which items are laid out. The default is Vertical.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FlowLayout.OrientationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.Orientation?text=Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.FlowLayout.Orientation?text=Orientation" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayout.ShouldBreakLine(System.Int32,System.Double)">
      <summary>Determines whether the element at the specified index should be on a new line.</summary>
      <param name="index">The position of the element in the collection.</param>
      <param name="remainingSpace">The amount of space available in the line.</param>
      <returns>true if the item should be placed in a new line; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlowLayoutAnchorInfo">
      <summary>Represents information about the position of an anchor element for a FlowLayout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.FlowLayoutAnchorInfo.Index">
      <summary>The position of the anchor element in the collection.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.FlowLayoutAnchorInfo.Offset">
      <summary>The offset of the anchor element in the virtualizing direction relative to the viewport.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlowLayoutLineAlignment">
      <summary>Defines constants that specify how items are aligned on the non-scrolling or non-virtualizing axis.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FlowLayoutState">
      <summary>Represents the state of a FlowLayout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FlowLayoutState.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.FlowLayoutState?text=FlowLayoutState" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.FontIconSource">
      <summary>Represents an icon source that uses a glyph from the specified font.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.FontIconSource.#ctor">
      <summary>Initializes a new instance of the FontIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontFamily">
      <summary>Gets or sets the font used to display the icon glyph.</summary>
      <returns>The font used to display the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontFamilyProperty">
      <summary>Gets the identifier for the FontFamily dependency property.</summary>
      <returns>The identifier for the FontFamily dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontSize">
      <summary>Gets or sets the size of the icon glyph.</summary>
      <returns>A non-negative value that specifies the font size, measured in pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontSizeProperty">
      <summary>Gets the identifier for the FontSize dependency property.</summary>
      <returns>The identifier for the FontSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontStyle">
      <summary>Gets or sets the font style for the icon glyph.</summary>
      <returns>A named constant of the enumeration that specifies the style in which the icon glyph is rendered. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontStyleProperty">
      <summary>Gets the identifier for the FontStyle dependency property.</summary>
      <returns>The identifier for the FontStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontWeight">
      <summary>Gets or sets the thickness of the icon glyph.</summary>
      <returns>A value that specifies the thickness of the icon glyph. The default is Normal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.FontWeightProperty">
      <summary>Gets the identifier for the FontWeight dependency property.</summary>
      <returns>The identifier for the FontWeight dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.Glyph">
      <summary>Gets or sets the character code that identifies the icon glyph.</summary>
      <returns>The hexadecimal character code for the icon glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.GlyphProperty">
      <summary>Gets the identifier for the Glyph dependency property.</summary>
      <returns>The identifier for the Glyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabled">
      <summary>Gets or sets a value that indicates whether automatic text enlargement, to reflect the system text size setting, is enabled.</summary>
      <returns>true if automatic text enlargement is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabledProperty">
      <summary>Gets the identifier for the IsTextScaleFactorEnabled dependency property.</summary>
      <returns>The identifier for the IsTextScaleFactorEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeft">
      <summary>Gets or sets a value that indicates whether the icon is mirrored when its containing element's FlowDirection is RightToLeft.</summary>
      <returns>true if the icon is mirrored when the FlowDirection is FlowDirection.RightToLeft; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeftProperty">
      <summary>Gets the identifier for the MirroredWhenRightToLeft dependency property.</summary>
      <returns>The identifier for the MirroredWhenRightToLeft dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IAnimatedVisual">
      <summary>An animated visual that can be played by the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer?text=AnimatedVisualPlayer" />.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IAnimatedVisual.Duration">
      <summary>Gets the duration of the animated visual.</summary>
      <returns>The size of the animated visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IAnimatedVisual.RootVisual">
      <summary>Gets the root Visual of the animated visual.</summary>
      <returns>The root Visual of the animated visual.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IAnimatedVisual.Size">
      <summary>Gets the size of the animated visual.</summary>
      <returns>The size of the animated visual.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IAnimatedVisualSource">
      <summary>Provides animated visuals for the <see cref="Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer?text=AnimatedVisualPlayer" /> to play.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IAnimatedVisualSource.TryCreateAnimatedVisual(Microsoft.UI.Composition.Compositor,System.Object@)">
      <summary>Attempts to create an instance of an animated visual.</summary>
      <param name="compositor">The Compositor that will be used to create objects for the animated visual.</param>
      <param name="diagnostics">An optional object containing diagnostics information about the result. The type and contents of the object depend on the implementation of <see cref="Microsoft.UI.Xaml.Controls.IAnimatedVisualSource?text=IAnimatedVisualSource" />.</param>
      <returns>An <see cref="Microsoft.UI.Xaml.Controls.IAnimatedVisual?text=IAnimatedVisual" />, or null.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IconSource">
      <summary>Represents the base class for an icon source.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSource.Foreground">
      <summary>Gets or sets a brush that describes the foreground color.</summary>
      <returns>The brush that paints the foreground of the control. The default is null, (a null brush) which is evaluated as Transparent for rendering. However, this value is typically set by a default system resource at runtime, which is tied to the active theme and other settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.IconSource.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource">
      <summary>When implemented by an <see cref="Microsoft.UI.Xaml.Controls.IAnimatedVisualSource?text=IAnimatedVisualSource" />, indicates to the player that the current animated visual should be discarded.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource.AnimatedVisualInvalidated">
      <summary>Occurs when the animated visual previously provided by the <see cref="Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource?text=IDynamicAnimatedVisualSource" /> should be discarded.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IElementFactoryShim" />
    <member name="M:Microsoft.UI.Xaml.Controls.IElementFactoryShim.GetElement(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)">
      <param name="args" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IElementFactoryShim.RecycleElement(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)">
      <param name="args" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IKeyIndexMapping">
      <summary>Provides methods that support mapping between an item's unique identifier and index.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IKeyIndexMapping.IndexFromKey(System.String)">
      <summary>Retrieves the index of the item that has the specified unique identifier (key).</summary>
      <param name="key">The unique identifier (key) of the item to find the index of.</param>
      <returns>The index of the item with the specified key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IKeyIndexMapping.KeyFromIndex(System.Int32)">
      <summary>Retrieves the unique identifier (key) for the item at the specified index.</summary>
      <param name="index">The index of the item to get the key for.</param>
      <returns>The unique identifier (key) for the item at the specified index.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.IndexPath" />
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.CompareTo(Microsoft.UI.Xaml.Controls.IndexPath)">
      <param name="other" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.CreateFrom(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.CreateFrom(System.Int32,System.Int32)">
      <param name="groupIndex" />
      <param name="itemIndex" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.CreateFromIndices(Windows.Foundation.Collections.IVector{System.Int32})">
      <param name="indices" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.GetAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.GetSize" />
    <member name="M:Microsoft.UI.Xaml.Controls.IndexPath.ToString" />
    <member name="T:Microsoft.UI.Xaml.Controls.InputKind" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.All" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.Gamepad" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.Keyboard" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.MouseWheel" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.None" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.Pen" />
    <member name="F:Microsoft.UI.Xaml.Controls.InputKind.Touch" />
    <member name="T:Microsoft.UI.Xaml.Controls.InteractionState" />
    <member name="F:Microsoft.UI.Xaml.Controls.InteractionState.Animation" />
    <member name="F:Microsoft.UI.Xaml.Controls.InteractionState.Idle" />
    <member name="F:Microsoft.UI.Xaml.Controls.InteractionState.Inertia" />
    <member name="F:Microsoft.UI.Xaml.Controls.InteractionState.Interaction" />
    <member name="T:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual">
      <summary>An <see cref="Microsoft.UI.Xaml.Controls.IAnimatedVisual?text=IAnimatedVisual" /> that is responsible for playing itself, rather than being animated by a composition animation.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.Pause">
      <summary>Pauses the animated visual, or does nothing if no play is underway.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.PlayAsync(System.Double,System.Double,System.Boolean)">
      <summary>Starts playing the animated visual. If another play is active, that play will be stopped and this new play will replace it.</summary>
      <param name="fromProgress">The point from which to start the animation, as a value from 0 to 1.</param>
      <param name="toProgress">The point at which to finish the animation, as a value from 0 to 1.</param>
      <param name="looped">If true, the animation loops continuously between fromProgress and toProgress. If false, the animation plays once then stops.</param>
      <returns>An async action that is completed when the play is stopped or, if looped is not set, when the play reaches toProgress.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.Resume">
      <summary>Resumes the paused animated visual, or does nothing if the animated visual is not paused.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.SetPlaybackRate(System.Double)">
      <summary>Sets the playback rate of the animated visual.</summary>
      <param name="playbackRate">The playback rate of the animated visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.SetProgress(System.Double)">
      <summary>Moves the progress of the animated visual to the given value, or does nothing if no animated visual is loaded.</summary>
      <param name="progress">A value from 0 to 1 that represents the progress of the animated visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.SetProgressObject(Microsoft.UI.Composition.CompositionPropertySet)">
      <summary>Sets the progress object for the animated visual. The animated visual is responsible for updating the "Progress" property on this object to match the current progress of the animated visual.</summary>
      <param name="compositionPropertySet">The progress object for the animated visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.SetSize(Windows.Foundation.Size)">
      <summary>Sets the rendering size of the animated visual. The animated visual is responsible for re-rendering itself to this size.</summary>
      <param name="size">The rendering size of the animated visual.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ISelfPlayingAnimatedVisual.Stop">
      <summary>Stops the current play, or does nothing if no play is underway.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsRepeater">
      <summary>Represents a data-driven collection control that incorporates a flexible layout system, custom views, and virtualization.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsRepeater.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater?text=ItemsRepeater" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.Animator">
      <summary>Gets or sets an element animator that manages animating the items in the layout.</summary>
      <returns>An element animator that manages animating the items in the layout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.AnimatorProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Animator?text=Animator" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Animator?text=Animator" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.Background">
      <summary>Gets or sets a brush that provides the background of the control.</summary>
      <returns>The brush that provides the background of the control. The default is null, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.BackgroundProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Background?text=Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Background?text=Background" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsRepeater.ElementClearing">
      <summary>Occurs each time an element is cleared and made available to be re-used.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsRepeater.ElementIndexChanged">
      <summary>Occurs for each realized UIElement when the index for the item it represents has changed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsRepeater.ElementPrepared">
      <summary>Occurs each time an element is prepared for use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsRepeater.GetElementIndex(Microsoft.UI.Xaml.UIElement)">
      <summary>Retrieves the index of the item from the data source that corresponds to the specified UIElement.</summary>
      <param name="element">The element that corresponds to the item to get the index of.</param>
      <returns>The index of the item from the data source that corresponds to the specified UIElement, or -1 if the element is not supported.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsRepeater.GetOrCreateElement(System.Int32)">
      <summary>Retrieves the UIElement that corresponds to the item at the specified index in the data source.</summary>
      <param name="index">The index of the item.</param>
      <returns>A UIElement that corresponds to the item at the specified index. If the item is not realized, a new UIElement is created.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength">
      <summary>Gets or sets a value that indicates the size of the buffer used to realize items when panning or scrolling horizontally.</summary>
      <returns>A non-negative value that indicates the size of the buffer as a multiple of the viewport size. The default value is determined by the system.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLengthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength?text=HorizontalCacheLength" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength?text=HorizontalCacheLength" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the ItemsRepeater.</summary>
      <returns>The object that is used to generate the content of the ItemsRepeater. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource?text=ItemsSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource?text=ItemsSource" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView">
      <summary>Gets a standardized view of the supported interactions between a given ItemsSource object and the ItemsRepeater control and its associated components.</summary>
      <returns>A standardized view of the supported interactions between an ItemsSource object and the ItemsRepeater.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate">
      <summary>Gets or sets the template used to display each item.</summary>
      <returns>The template that specifies the visualization of the data objects. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplateProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate?text=ItemTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate?text=ItemTemplate" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout">
      <summary>Gets or sets the layout used to size and position elements in the ItemsRepeater.</summary>
      <returns>The layout used to size and position elements. The default is a <see cref="Microsoft.UI.Xaml.Controls.StackLayout?text=StackLayout" /> with vertical orientation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.LayoutProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout?text=Layout" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout?text=Layout" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsRepeater.TryGetElement(System.Int32)">
      <summary>Retrieves the realized UIElement that corresponds to the item at the specified index in the data source.</summary>
      <param name="index">The index of the item.</param>
      <returns>The UIElement that corresponds to the item at the specified index if the item is realized, or null if the item is not realized.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength">
      <summary>Gets or sets a value that indicates the size of the buffer used to realize items when panning or scrolling vertically.</summary>
      <returns>A non-negative value that indicates the size of the buffer as a multiple of the viewport size. The default value is determined by the system.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLengthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength?text=VerticalCacheLength" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength?text=VerticalCacheLength" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs">
      <summary>Provides data for the ItemsRepeater.ElementClearing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs.Element">
      <summary>Gets the element that is being cleared for re-use.</summary>
      <returns>The element that is being cleared.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs">
      <summary>Provides data for the ItemsRepeater.ElementIndexChanged event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs.Element">
      <summary>Get the element for which the index changed.</summary>
      <returns>The element for which the index changed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs.NewIndex">
      <summary>Gets the index of the element after the change.</summary>
      <returns>The index of the element after the change.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs.OldIndex">
      <summary>Gets the index of the element before the change.</summary>
      <returns>The index of the element before the change.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs">
      <summary>Provides data for the ItemsRepeater.ElementPrepared event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs.Element">
      <summary>Gets the prepared element.</summary>
      <returns>The prepared element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs.Index">
      <summary>Gets the index of the item the element was prepared for.</summary>
      <returns>The index of the item the element was prepared for.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost">
      <summary>A helper to coordinate interaction between the <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater?text=ItemsRepeater" /> and ScrollViewer.
Use the ItemsRepeaterScrollHost if your app will run on versions of Windows prior Windows 10 1809 (Build 17763).  If your app will only run on versions of Windows 1809 or higher, there is no need to use this control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.#ctor" />
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.CurrentAnchor">
      <summary>The currently chosen anchor element to use for scroll anchoring.</summary>
      <returns>The most recently chosen UIElement for scroll anchoring after a layout pass, or null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.HorizontalAnchorRatio">
      <summary>Determines the horizontal position of the ScrollViewer's anchor point with respect to the viewport. By default, the ScrollViewer selects an element as its <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.CurrentAnchor?text=CurrentAnchor" /> by identifying the element in its viewport nearest to the anchor point.</summary>
      <returns>A normalized value (0.0 to 1.0). The default is 0.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.ScrollViewer">
      <summary>Gets or sets the ScrollViewer to host.</summary>
      <returns>A ScrollViewer that contains one or more <see cref="Microsoft.UI.Xaml.Controls.ItemsRepeater?text=ItemsRepeater" /> controls.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost.VerticalAnchorRatio">
      <summary>Determines the vertical position of the ScrollViewer's anchor point with respect to the viewport. By default, the ScrollViewer selects an element as its CurrentAnchor by identifying the element in its viewport nearest to the anchor point.</summary>
      <returns>A normalized value (0.0 to 1.0). The default is 0.0.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ItemsSourceView">
      <summary>Represents a standardized view of the supported interactions between a given ItemsSource object and an ItemsRepeater control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsSourceView.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ItemsSourceView?text=ItemsSourceView" /> class for the specified data source.</summary>
      <param name="source">The data source for this view.</param>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ItemsSourceView.CollectionChanged">
      <summary>Occurs when the collection has changed to indicate the reason for the change and which items changed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsSourceView.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsSourceView.GetAt(System.Int32)">
      <summary>Retrieves the item at the specified index.</summary>
      <param name="index">The index of the item to retrieve.</param>
      <returns>The item at the specified index.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ItemsSourceView.HasKeyIndexMapping">
      <summary>Gets a value that indicates whether the items source can provide a unique key for each item.</summary>
      <returns>true if the items source can provide a unique key for each item; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsSourceView.IndexFromKey(System.String)">
      <summary>Retrieves the index of the item that has the specified unique identifier (key).</summary>
      <param name="key">The unique identifier (key) of the item to find the index of.</param>
      <returns>The index of the item with the specified key.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ItemsSourceView.KeyFromIndex(System.Int32)">
      <summary>Retrieves the unique identifier (key) for the item at the specified index.</summary>
      <param name="index">The index of the item to get the key for.</param>
      <returns>The unique identifier (key) for the item at the specified index.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Layout">
      <summary>Represents the base class for an object that sizes and arranges child elements for a host.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.Arrange(Microsoft.UI.Xaml.Controls.LayoutContext,Windows.Foundation.Size)">
      <summary>Positions child elements and determines a size for a container UIElement. Container elements that support attached layouts should call this method from their layout override implementations to form a recursive layout update.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="finalSize">The final size that the container computes for the child in layout.</param>
      <returns>The actual size that is used after the element is arranged in layout.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Layout.ArrangeInvalidated">
      <summary>Occurs when the arrange state (layout) has been invalidated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.InitializeForContext(Microsoft.UI.Xaml.Controls.LayoutContext)">
      <summary>Initializes any per-container state the layout requires when it is attached to a UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.InvalidateArrange">
      <summary>Invalidates the arrange state (layout) for all UIElement containers that reference this layout. After the invalidation, the UIElement will have its layout updated, which occurs asynchronously.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.InvalidateMeasure">
      <summary>Invalidates the measurement state (layout) for all UIElement containers that reference this layout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.Measure(Microsoft.UI.Xaml.Controls.LayoutContext,Windows.Foundation.Size)">
      <summary>Suggests a DesiredSize for a container element. A container element that supports attached layouts should call this method from their own MeasureOverride implementations to form a recursive layout update. The attached layout is expected to call the Measure for each of the container’s UIElement children.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="availableSize">The available space that a container can allocate to a child object. A child object can request a larger space than what is available; the provided size might be accommodated if scrolling or other resize behavior is possible in that particular container.</param>
      <returns>The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects or based on other considerations such as a fixed container size.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Layout.MeasureInvalidated">
      <summary>Occurs when the measurement state (layout) has been invalidated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Layout.UninitializeForContext(Microsoft.UI.Xaml.Controls.LayoutContext)">
      <summary>Removes any state the layout previously stored on the UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.LayoutContext">
      <summary>Represents the base class for an object that facilitates communication between an attached layout and its host container.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutContext.LayoutState">
      <summary>Gets or sets an object that represents the state of a layout.</summary>
      <returns>An object that represents the state of a layout.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutContext.LayoutStateCore">
      <summary>Implements the behavior of <see cref="Microsoft.UI.Xaml.Controls.LayoutContext.LayoutState?text=LayoutState" /> in a derived or custom LayoutContext.</summary>
      <returns>The value that should be returned as <see cref="Microsoft.UI.Xaml.Controls.LayoutContext.LayoutState?text=LayoutState" /> by the LayoutContext.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.LayoutPanel">
      <summary>Represents a container that uses an attached layout object to size and position its child elements.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.LayoutPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel?text=LayoutPanel" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.BorderBrush">
      <summary>Gets or sets a brush that describes the fill of the panel border.</summary>
      <returns>The brush that is used to fill the panel's border. The default is null, (a null brush) which is evaluated as Transparent for rendering.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.BorderBrushProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.BorderBrush?text=BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.BorderBrush?text=BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.BorderThickness">
      <summary>Gets or sets the thickness of the panel border.</summary>
      <returns>The thickness of the panel border.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.BorderThicknessProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.BorderThickness?text=BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.BorderThickness?text=BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.CornerRadius">
      <summary>Gets or sets the radius for the corners of the panel border.</summary>
      <returns>The degree to which the corners are rounded, expressed as values of the CornerRadius structure.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.CornerRadiusProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.CornerRadius?text=CornerRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.CornerRadius?text=CornerRadius" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.Layout">
      <summary>Gets or sets the layout used to size and position elements in the panel.</summary>
      <returns>The attached layout used to size and position elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.LayoutProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.Layout?text=Layout" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.Layout?text=Layout" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.Padding">
      <summary>Gets or sets the distance between the border and the panel content.</summary>
      <returns>The dimensions of the space between the border and the panel content. Thickness is a structure that stores dimension values using pixel measures.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.LayoutPanel.PaddingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.Padding?text=Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.LayoutPanel.Padding?text=Padding" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBar">
      <summary>Represents a specialized container that presents a set of menus in a horizontal row, typically at the top of an app window.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBar.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.MenuBar?text=MenuBar" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBar.Items">
      <summary>Gets the collection of top-level menu items.</summary>
      <returns>The collection of top-level menu items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBar.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBarItem">
      <summary>Represents a top-level menu in a MenuBar control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItem?text=MenuBarItem" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.Items">
      <summary>Gets the collection of commands in a MenuBar menu.</summary>
      <returns>The collection of commands in a MenuBar menu.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
      <returns>The identifier for the Items dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.Title">
      <summary>Gets or sets the text label for a MenuBar menu.</summary>
      <returns>The text label for this menu. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.MenuBarItem.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
      <returns>The identifier for the Title dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.MenuBarItemFlyout">
      <summary>Represents the flyout of a MenuBar item.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.MenuBarItemFlyout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.MenuBarItemFlyout?text=MenuBarItemFlyout" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationView">
      <summary>Represents a container that enables navigation of app content. It has a header, a view for the main content, and a menu pane for navigation commands.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.#ctor">
      <summary>Initializes a new instance of the NavigationView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader">
      <summary>Gets or sets a value that indicates whether the header is always visible.</summary>
      <returns>true if the header is always visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeaderProperty">
      <summary>Identifies the AlwaysShowHeader dependency property.</summary>
      <returns>The identifier for the AlwaysShowHeader dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox">
      <summary>Gets or sets an AutoSuggestBox to be displayed in the NavigationView.</summary>
      <returns>An AutoSuggestBox box to be displayed in the NavigationView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBoxProperty">
      <summary>Identifies the AutoSuggestBox dependency property.</summary>
      <returns>The identifier for the AutoSuggestBox dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.BackRequested">
      <summary>Occurs when the back button receives an interaction such as a click or tap.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth">
      <summary>Gets or sets the minimum window width at which the NavigationView enters Compact display mode.</summary>
      <returns>The minimum window width at which the NavigationView enters Compact display mode. The default is 641 pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidthProperty">
      <summary>Identifies the CompactModeThresholdWidth dependency property.</summary>
      <returns>The identifier for the CompactModeThresholdWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength">
      <summary>Gets or sets the width of the NavigationView pane in its compact display mode.</summary>
      <returns>The width of the pane in its compact display mode. The default is 48 device-independent pixel (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLengthProperty">
      <summary>Identifies the CompactPaneLength dependency property.</summary>
      <returns>The identifier for the CompactPaneLength dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.ContainerFromMenuItem(System.Object)">
      <summary>Returns the container corresponding to the specified menu item.</summary>
      <param name="item">The menu item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified menu item, if the item has a container and exists in the collection; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay">
      <summary>Gets or sets a UI element that is shown at the top of the control, below the pane if PaneDisplayMode is Top.</summary>
      <returns>The element that is shown at the top of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlayProperty">
      <summary>Identifies the ContentOverlay dependency property.</summary>
      <returns>The identifier for the ContentOverlay dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode">
      <summary>Gets a value that specifies how the pane and content areas of a NavigationView are being shown.</summary>
      <returns>A value of the enumeration that specifies how the pane and content areas of a NavigationView are being shown.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.DisplayModeChanged">
      <summary>Occurs when the DisplayMode property changes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.DisplayModeProperty">
      <summary>Identifies the DisplayMode dependency property.</summary>
      <returns>The identifier for the DisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth">
      <summary>Gets or sets the minimum window width at which the NavigationView enters Expanded display mode.</summary>
      <returns>The minimum window width at which the NavigationView enters Expanded display mode. The default is 1008 pixels.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidthProperty">
      <summary>Identifies the ExpandedModeThresholdWidth dependency property.</summary>
      <returns>The identifier for the ExpandedModeThresholdWidth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.Header">
      <summary>Gets or sets the header content.</summary>
      <returns>The header content for the NavigationView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
      <returns>The identifier for the Header dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate">
      <summary>Gets or sets the DataTemplate used to display the control's header.</summary>
      <returns>The DataTemplate used to display the control's header.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
      <returns>The identifier for the HeaderTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible">
      <summary>Gets or sets a value that indicates whether the back button is enabled or disabled.</summary>
      <returns>A value of the enumeration that specifies the visibility of the NavigationView back button. The default is "Auto".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisibleProperty">
      <summary>Identifies the IsBackButtonVisible dependency property.</summary>
      <returns>The identifier for the IsBackButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled">
      <summary>Gets or sets a value that indicates whether the back button is enabled or disabled.</summary>
      <returns>true if the back button is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabledProperty">
      <summary>Identifies the IsBackEnabled dependency property.</summary>
      <returns>The identifier for the IsBackEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen">
      <summary>Gets or sets a value that specifies whether the NavigationView pane is expanded to its full width.</summary>
      <returns>true if the pane is expanded to its full width; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpenProperty">
      <summary>Identifies the IsPaneOpen dependency property.</summary>
      <returns>The identifier for the IsPaneOpen dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible">
      <summary>Gets or sets a value that indicates whether the menu toggle button is shown.</summary>
      <returns>true if the menu button is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisibleProperty">
      <summary>Identifies the IsPaneToggleButtonVisible dependency property.</summary>
      <returns>The identifier for the IsPaneToggleButtonVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible">
      <summary>Gets or sets a value that determines whether the pane is shown.</summary>
      <returns>true is the pane is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisibleProperty">
      <summary>Identifies the IsPaneVisible dependency property.</summary>
      <returns>The identifier for the IsPaneVisible dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible">
      <summary>Gets or sets a value that indicates whether the settings button is shown.</summary>
      <returns>true if the settings button is shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisibleProperty">
      <summary>Identifies the IsSettingsVisible dependency property.</summary>
      <returns>The identifier for the IsSettingsVisible dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.ItemInvoked">
      <summary>Occurs when an item in the menu receives an interaction such a a click or tap.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the menu item containers.</summary>
      <returns>The style applied to the item containers. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleProperty">
      <summary>Identifies the MenuItemContainerStyle dependency property.</summary>
      <returns>The identifier for the MenuItemContainerStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.</summary>
      <returns>A custom StyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelectorProperty">
      <summary>Identifies the MenuItemContainerStyleSelector dependency property.</summary>
      <returns>The identifier for the MenuItemContainerStyleSelector dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItems">
      <summary>Gets the collection of menu items displayed in the NavigationMenu.</summary>
      <returns>The collection of menu items displayed in the NavigationMenu. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsProperty">
      <summary>Identifies the MenuItems dependency property.</summary>
      <returns>The identifier for the MenuItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource">
      <summary>Gets or sets an object source used to generate the content of the NavigationView menu.</summary>
      <returns>The object that is used to generate the content of the NavigationView menu. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSourceProperty">
      <summary>Identifies the MenuItemsSource dependency property.</summary>
      <returns>The identifier for the MenuItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each menu item.</summary>
      <returns>The template that specifies the visualization of the menu data objects. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateProperty">
      <summary>Identifies the MenuItemTemplate dependency property.</summary>
      <returns>The identifier for the MenuItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.</summary>
      <returns>A reference to a custom DataTemplateSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelectorProperty">
      <summary>Identifies the MenuItemTemplateSelector dependency property.</summary>
      <returns>The identifier for the MenuItemTemplateSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength">
      <summary>Gets or sets the width of the NavigationView pane when it's fully expanded.</summary>
      <returns>The width of the NavigationView pane when it's fully expanded. The default is 320 device-independent pixel (DIP).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLengthProperty">
      <summary>Identifies the OpenPaneLength dependency property.</summary>
      <returns>The identifier for the OpenPaneLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode">
      <summary>Gets or sets a value that indicates what text label is shown for the overflow menu.</summary>
      <returns>A value of the enumeration that indicates what text label is shown for the overflow menu. The default is MoreLabel, which shows the text "More".</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelModeProperty">
      <summary>Identifies the OverflowLabelMode dependency property.</summary>
      <returns>The identifier for the OverflowLabelMode dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneClosed">
      <summary>Occurs when the NavigationView pane is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneClosing">
      <summary>Occurs when the NavigationView pane is closing.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent">
      <summary>Gets or sets a UI element that is shown in the NavigationView pane.</summary>
      <returns>The element that is shown in the NavigationView pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContentProperty">
      <summary>Identifies the PaneCustomContent dependency property.</summary>
      <returns>The identifier for the PaneCustomContent dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode">
      <summary>Gets or sets a value that indicates how and where the NavigationView pane is shown.</summary>
      <returns>A value of the enumeration that indicates how and where the NavigationView pane is shown. The default is Auto.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty">
      <summary>Identifies the PaneDisplayMode dependency property.</summary>
      <returns>The identifier for the PaneDisplayMode dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter">
      <summary>Gets or sets the content for the pane footer.</summary>
      <returns>The content of the pane footer. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneFooterProperty">
      <summary>Identifies the PaneFooter dependency property.</summary>
      <returns>The identifier for the PaneFooter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader">
      <summary>Gets or sets the content for the pane header.</summary>
      <returns>The content of the pane header. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneHeaderProperty">
      <summary>Identifies the PaneHeader dependency property.</summary>
      <returns>The identifier for the PaneHeader dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneOpened">
      <summary>Occurs when the NavigationView pane is opened.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.PaneOpening">
      <summary>Occurs when the NavigationView pane is opening.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle">
      <summary>Gets or sets the label adjacent to the menu icon when the NavigationView pane is open.</summary>
      <returns>The label adjacent to the menu icon when the pane is open. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneTitleProperty">
      <summary>Identifies the PaneTitle dependency property.</summary>
      <returns>The identifier for the PaneTitle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle">
      <summary>Gets or sets the Style that defines the look of the menu toggle button.</summary>
      <returns>The Style that defines the look of the menu toggle button. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyleProperty">
      <summary>Identifies the PaneToggleButtonStyle dependency property.</summary>
      <returns>The identifier for the PaneToggleButtonStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The selected item. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
      <returns>The identifier for the SelectedItem dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.NavigationView.SelectionChanged">
      <summary>Occurs when the currently selected item changes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus">
      <summary>Gets or sets a value that indicates whether item selection changes when keyboard focus changes.</summary>
      <returns>A value of the enumeration that indicates whether selection changes when keyboard focus changes. The default is Disabled.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocusProperty">
      <summary>Identifies the SelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem">
      <summary>Gets the navigation item that represents the entry point to app settings.</summary>
      <returns>The item that represents the entry point to app settings.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.SettingsItemProperty">
      <summary>Identifies the SettingsItem dependency property.</summary>
      <returns>The identifier for the SettingsItem dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled">
      <summary>Gets or sets a value that indicates when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView.</summary>
      <returns>A value of the enumeration that indicates when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView. The default is Never.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabledProperty">
      <summary>Identifies the ShoulderNavigationEnabled dependency property.</summary>
      <returns>The identifier for the ShoulderNavigationEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as TemplateBinding sources when defining templates for a NavigationView control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettingsProperty">
      <summary>Identifies the TemplateSettings dependency property.</summary>
      <returns>The identifier for the TemplateSettings dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible">
      <summary>Defines constants that specify whether the back button is visible in NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto">
      <summary>The system chooses whether or not to display the back button, depending on the device/form factor. On phones, tablets, desktops, and hubs, the back button is visible. On Xbox/TV, the back button is collapsed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed">
      <summary>Do not display the back button in NavigationView, and do not reserve space for it in layout.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible">
      <summary>Display the back button in NavigationView.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.BackRequested?text=NavigationView.BackRequested" /> event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode">
      <summary>Defines constants that specify how the pane is shown in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact">
      <summary>The pane always shows as a narrow sliver which can be opened to full width.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded">
      <summary>The pane stays open alongside the content.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal">
      <summary>Only the menu button remains fixed. The pane shows and hides as needed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.DisplayModeChanged?text=NavigationView.DisplayModeChanged" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs.DisplayMode">
      <summary>Gets the new display mode.</summary>
      <returns>The new display mode.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItem">
      <summary>Represents the container for an item in a <see cref="Microsoft.UI.Xaml.Controls.NavigationView?text=NavigationView" /> control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItem.#ctor">
      <summary>Initializes a new instance of the NavigationViewItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength">
      <summary>Gets the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength?text=CompactPaneLength" /> of the NavigationView that hosts this item.</summary>
      <returns>The <see cref="Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength?text=CompactPaneLength" /> of the NavigationView that hosts this item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLengthProperty">
      <summary>Identifies the CompactPaneLength dependency property.</summary>
      <returns>The identifier for the CompactPaneLength dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon">
      <summary>Gets or sets the icon to show next to the menu item text.</summary>
      <returns>The icon to show next to the menu item text. The default in null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
      <returns>The identifier for the Icon dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked">
      <summary>Gets or sets a value that indicates whether invoking a navigation menu item also selects it.</summary>
      <returns>true if invoking a navigation menu item also selects it; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvokedProperty">
      <summary>Identifies the SelectsOnInvoked dependency property.</summary>
      <returns>The identifier for the SelectsOnInvoked dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemBase">
      <summary>Base class for <see cref="Microsoft.UI.Xaml.Controls.NavigationView?text=NavigationView" /> menu items.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemHeader">
      <summary>Represents a header for a group of menu items in a NavigationMenu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemHeader.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemHeader class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.ItemInvoked?text=NavigationView.ItemInvoked" /> event.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemInvokedEventArgs class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.InvokedItem">
      <summary>Gets a reference to the invoked item.</summary>
      <returns>The invoked item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.InvokedItemContainer">
      <summary>Gets the container for the invoked item.</summary>
      <returns>The container for the invoked item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.IsSettingsInvoked">
      <summary>Gets a value that indicates whether the InvokedItem is the menu item for Settings.</summary>
      <returns>true if the InvokedItem is the menu item for Settings; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs.RecommendedNavigationTransitionInfo">
      <summary>Gets the navigation transition recommended for the direction of the navigation.</summary>
      <returns>The navigation transition recommended for the direction of the navigation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator">
      <summary>Represents a line that separates menu items in a NavigationMenu.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator.#ctor">
      <summary>Initializes a new instance of the NavigationViewItemSeparator class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewList">
      <summary>Represents a control that displays menu items in a <see cref="Microsoft.UI.Xaml.Controls.NavigationView?text=NavigationView" /> control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewList.#ctor">
      <summary>Initializes a new instance of the NavigationViewList class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode">
      <summary>Defines constants that specify the label for the overflow button in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel">
      <summary>The text label "More" is shown next to the chevron.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel">
      <summary>No text label is shown, only a chevron.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.PaneClosing?text=NavigationView.PaneClosing" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the event should be canceled.</summary>
      <returns>true to cancel the event; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode">
      <summary>Defines constants that specify how and where the NavigationView pane is shown.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto">
      <summary>The pane is shown on the left side of the control, and changes between minimal, compact, and full states depending on the width of the window.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left">
      <summary>The pane is shown on the left side of the control in its fully open state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact">
      <summary>The pane is shown on the left side of the control. Only the pane icons are shown by default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal">
      <summary>The pane is shown on the left side of the control. Only the pane menu button is shown by default.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top">
      <summary>The pane is shown at the top of the control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.SelectionChanged?text=NavigationView.SelectionChanged" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.IsSettingsSelected">
      <summary>Gets a value that indicates whether the SelectedItem is the menu item for Settings.</summary>
      <returns>true if the SelectedItem is the menu item for Settings; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.RecommendedNavigationTransitionInfo">
      <summary>Gets the navigation transition recommended for the direction of the navigation.</summary>
      <returns>The navigation transition recommended for the direction of the navigation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.SelectedItem">
      <summary>Gets the newly selected menu item.</summary>
      <returns>The newly selected menu item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs.SelectedItemContainer">
      <summary>Gets the container for the selected item.</summary>
      <returns>The container for the selected item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus">
      <summary>Defines constants that specify whether item selection changes when keyboard focus changes in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled">
      <summary>Selection does not change when keyboard focus changes.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled">
      <summary>Selection changes when keyboard focus changes.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled">
      <summary>Defines constants that specify when gamepad bumpers can be used to navigate the top-level navigation items in a NavigationView.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always">
      <summary>Gamepad bumpers always navigate the top-level navigation items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never">
      <summary>Gamepad bumpers never navigate the top-level navigation items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus">
      <summary>Gamepad bumpers navigate the top-level navigation items when the SelectionFollowsFocus property is Enabled.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.NavigationView?text=NavigationView" />. Not intended for general use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings?text=NavigationViewTemplateSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.BackButtonVisibility">
      <summary>Gets the visibility of the back button.</summary>
      <returns>The visibility of the back button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.BackButtonVisibilityProperty">
      <summary>Identifies the BackButtonVisibility dependency property.</summary>
      <returns>The identifier for the BackButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.LeftPaneVisibility">
      <summary>Gets the visibility of the left pane.</summary>
      <returns>The visibility of the left pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.LeftPaneVisibilityProperty">
      <summary>Identifies the LeftPaneVisibility dependency property.</summary>
      <returns>The identifier for the LeftPaneVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.OverflowButtonVisibility">
      <summary>Gets the visibility of the overflow button.</summary>
      <returns>The visibility of the overflow button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.OverflowButtonVisibilityProperty">
      <summary>Identifies the OverflowButtonVisibility dependency property.</summary>
      <returns>The identifier for the OverflowButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.PaneToggleButtonVisibility">
      <summary>Gets the visibility of the pane toggle button.</summary>
      <returns>The visibility of the pane toggle button.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.PaneToggleButtonVisibilityProperty">
      <summary>Identifies the PaneToggleButtonVisibility dependency property.</summary>
      <returns>The identifier for the PaneToggleButtonVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.SingleSelectionFollowsFocus">
      <summary>Gets the <see cref="Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus?text=SelectionFollowsFocus" /> value.</summary>
      <returns>The SelectionFollowsFocus value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.SingleSelectionFollowsFocusProperty">
      <summary>Identifies the SingleSelectionFollowsFocus dependency property.</summary>
      <returns>The identifier for the SingleSelectionFollowsFocus dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPadding">
      <summary>Gets the padding value of the top pane.</summary>
      <returns>The padding value of the top pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaddingProperty">
      <summary>Identifies the TopPadding dependency property.</summary>
      <returns>The identifier for the TopPadding dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaneVisibility">
      <summary>Gets the visibility of the top pane.</summary>
      <returns>The visibility of the top pane.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaneVisibilityProperty">
      <summary>Identifies the TopPaneVisibility dependency property.</summary>
      <returns>The identifier for the TopPaneVisibility dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout">
      <summary>Represents the base class for an object that sizes and arranges child elements for a host and and does not support virtualization.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.NonVirtualizingLayout?text=NonVirtualizingLayout" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout.ArrangeOverride(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext,Windows.Foundation.Size)">
      <summary>When implemented in a derived class, provides the behavior for the "Arrange" pass of layout. Classes can override this method to define their own "Arrange" pass behavior.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="finalSize">The final area within the container that this object should use to arrange itself and its children.</param>
      <returns>The actual size that is used after the element is arranged in layout.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout.InitializeForContextCore(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)">
      <summary>When overridden in a derived class, initializes any per-container state the layout requires when it is attached to a UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout.MeasureOverride(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext,Windows.Foundation.Size)">
      <summary>Provides the behavior for the "Measure" pass of the layout cycle. Classes can override this method to define their own "Measure" pass behavior.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
      <returns>The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects or based on other considerations such as a fixed container size.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayout.UninitializeForContextCore(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)">
      <summary>When overridden in a derived class, removes any state the layout previously stored on the UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext">
      <summary>Represents the base class for layout context types that do not support virtualization.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext?text=NonVirtualizingLayoutContext" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext.Children">
      <summary>Gets the collection of child UIElements from the container that provides the context.</summary>
      <returns>The collection of child elements from the container that provides the context.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext.ChildrenCore">
      <summary>Implements the behavior for getting the return value of <see cref="Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext.Children?text=Children" /> in a derived or custom NonVirtualizingLayoutContext.</summary>
      <returns>The value that should be returned as <see cref="Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext.Children?text=Children" /> by the NonVirtualizingLayoutContext.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind">
      <summary>Defines constants that specify how the source offset values of a ParallaxView are interpreted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind.Absolute">
      <summary>The source start/end offset value is interpreted as an absolute value.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind.Relative">
      <summary>The source start/end offset value is added to the auto-computed source offset.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ParallaxView">
      <summary>Represents a container that ties the scroll position of a foreground element, such as a list, to a background element, such as an image. As you scroll through the foreground element, it animates the background element to create a parallax effect.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.#ctor">
      <summary>Initializes a new instance of the ParallaxView class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.Child">
      <summary>Gets or sets the background content of the ParallaxView.</summary>
      <returns>The background content of the ParallaxView, typically an image. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.ChildProperty">
      <summary>Identifies the Child dependency property.</summary>
      <returns>The identifier for the Child dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalShift">
      <summary>Represents the horizontal range of motion of the child element.</summary>
      <returns>The horizontal range of motion. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalShiftProperty">
      <summary>Identifies the HorizontalShift dependency property.</summary>
      <returns>The identifier for the HorizontalShift dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceEndOffset">
      <summary>Represents the horizontal scroll offset at which the parallax motion ends.</summary>
      <returns>The horizontal scroll offset at which parallax motion ends. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceEndOffsetProperty">
      <summary>Identifies the HorizontalSourceEndOffset dependency property.</summary>
      <returns>The identifier for the HorizontalSourceEndOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceOffsetKind">
      <summary>Gets or sets a value that determines how the horizontal source offset values of a ParallaxView are interpreted.</summary>
      <returns>A value of the enumeration that determines how the horizontal source offset values of a ParallaxView are interpreted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceOffsetKindProperty">
      <summary>Identifies the HorizontalSourceOffsetKind dependency property.</summary>
      <returns>The identifier for the HorizontalSourceOffsetKind dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceStartOffset">
      <summary>Represents the horizontal scroll offset at which parallax motion starts.</summary>
      <returns>The horizontal scroll offset at which parallax motion starts. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.HorizontalSourceStartOffsetProperty">
      <summary>Identifies the HorizontalSourceStartOffset dependency property.</summary>
      <returns>The identifier for the HorizontalSourceStartOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsHorizontalShiftClamped">
      <summary>Gets or sets a value that indicates whether the horizontal parallax ratio is clampled to a specified percentage of the source scroll velocity.</summary>
      <returns>true if the parallax ratio is clampled to a specified percentage of the source scroll velocity; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsHorizontalShiftClampedProperty">
      <summary>Identifies the IsHorizontalShiftClamped dependency property.</summary>
      <returns>The identifier for the IsHorizontalShiftClamped dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsVerticalShiftClamped">
      <summary>Gets or sets a value that indicates whether the vertical parallax ratio is clampled to a specified percentage of the source scroll velocity.</summary>
      <returns>true if the parallax ratio is clampled to a specified percentage of the source scroll velocity; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.IsVerticalShiftClampedProperty">
      <summary>Identifies the IsVerticalShiftClamped dependency property.</summary>
      <returns>The identifier for the IsVerticalShiftClamped dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxHorizontalShiftRatio">
      <summary>Clamps the horizontal parallax ratio to the specified percentage of the source scroll velocity.</summary>
      <returns>The maximum percentage of the source scroll velocity. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxHorizontalShiftRatioProperty">
      <summary>Identifies the MaxHorizontalShiftRatio dependency property.</summary>
      <returns>The identifier for the MaxHorizontalShiftRatio dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxVerticalShiftRatio">
      <summary>Clamps the vertical parallax ratio to the specified percentage of the source scroll velocity.</summary>
      <returns>The maximum percentage of the source scroll velocity. The default is 1.0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.MaxVerticalShiftRatioProperty">
      <summary>Identifies the MaxVerticalShiftRatio dependency property.</summary>
      <returns>The identifier for the MaxVerticalShiftRatio dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.RefreshAutomaticHorizontalOffsets">
      <summary>Forces the automatically computed horizontal offsets to be recomputed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ParallaxView.RefreshAutomaticVerticalOffsets">
      <summary>Forces the automatically computed vertical offsets to be recomputed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.Source">
      <summary>The element that either is or contains the ScrollViewer that controls the parallax operation.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.SourceProperty">
      <summary>Identifies the Source dependency property.</summary>
      <returns>The identifier for the Source dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalShift">
      <summary>Represents the vertical range of motion of the child element.</summary>
      <returns>The vertical range of motion. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalShiftProperty">
      <summary>Identifies the VerticalShift dependency property.</summary>
      <returns>The identifier for the VerticalShift dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceEndOffset">
      <summary>Represents the vertical scroll offset at which the parallax motion ends.</summary>
      <returns>The vertical scroll offset at which parallax motion ends. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceEndOffsetProperty">
      <summary>Identifies the VerticalSourceEndOffset dependency property.</summary>
      <returns>The identifier for the VerticalSourceEndOffset dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceOffsetKind">
      <summary>Gets or sets a value that determines how the vertical source offset values of a ParallaxView are interpreted.</summary>
      <returns>A value of the enumeration that determines how the vertical source offset values of a ParallaxView are interpreted.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceOffsetKindProperty">
      <summary>Identifies the VerticalSourceOffsetKind dependency property.</summary>
      <returns>The identifier for the VerticalSourceOffsetKind dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceStartOffset">
      <summary>Represents the vertical scroll offset at which parallax motion starts.</summary>
      <returns>The vertical scroll offset at which parallax motion starts. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ParallaxView.VerticalSourceStartOffsetProperty">
      <summary>Identifies the VerticalSourceStartOffset dependency property.</summary>
      <returns>The identifier for the VerticalSourceStartOffset dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PathIconSource">
      <summary>Represents an icon source that uses a vector path as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PathIconSource.#ctor">
      <summary>Initializes a new instance of the PathIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIconSource.Data">
      <summary>Gets or sets a Geometry that specifies the shape to be drawn. In XAML. this can also be set using a string that describes Move and draw commands syntax.</summary>
      <returns>A description of the shape to be drawn.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PathIconSource.DataProperty">
      <summary>Identifies the Data dependency property.</summary>
      <returns>The identifier for the Data dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.PersonPicture">
      <summary>Represents a control that displays the avatar image for a person, if one is available; if not, it displays the person's initials or a generic glyph.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.PersonPicture.#ctor">
      <summary>Initializes a new instance of the PersonPicture class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph to display on the badge.</summary>
      <returns>The hexadecimal character code for the badge glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyphProperty">
      <summary>Identifies the BadgeGlyph dependency property.</summary>
      <returns>The identifier for the BadgeGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSource">
      <summary>Gets or sets the source of an image to display on the badge.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSourceProperty">
      <summary>Identifies the BadgeImageSource dependency property.</summary>
      <returns>The identifier for the BadgeImageSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumber">
      <summary>Gets or sets the contact number to display on the badge.</summary>
      <returns>The contact number to display on the badge.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumberProperty">
      <summary>Identifies the BadgeNumber dependency property.</summary>
      <returns>The identifier for the BadgeNumber dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeText">
      <summary>Gets or sets the contact text to display on the badge.</summary>
      <returns>The contact text to display on the badge.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.BadgeTextProperty">
      <summary>Identifies the BadgeText dependency property.</summary>
      <returns>The identifier for the BadgeText dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.Contact">
      <summary>Gets or sets a Contact object that contains information about the person.</summary>
      <returns>A Contact object that contains information about the person.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ContactProperty">
      <summary>Identifies the Contact dependency property.</summary>
      <returns>The identifier for the Contact dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.DisplayName">
      <summary>Gets or sets the contact's display name.</summary>
      <returns>The contact's display name.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.DisplayNameProperty">
      <summary>Identifies the DisplayName dependency property.</summary>
      <returns>The identifier for the DisplayName dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.Initials">
      <summary>Gets or sets the contact's initials.</summary>
      <returns>The contact's initials.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.InitialsProperty">
      <summary>Identifies the Initials dependency property.</summary>
      <returns>The identifier for the Initials dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.IsGroup">
      <summary>Gets or sets a value that indicates whether the PersonPicture represents a group or an individual.</summary>
      <returns>true if the PersonPicture represents a group; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.IsGroupProperty">
      <summary>Identifies the IsGroup dependency property.</summary>
      <returns>The identifier for the IsGroup dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImage">
      <summary>Gets or sets a value that indicates whether a small image is displayed rather than a large image when both are available.</summary>
      <returns>true to display a small image even when a large image is available; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImageProperty">
      <summary>Identifies the PreferSmallImage dependency property.</summary>
      <returns>The identifier for the PreferSmallImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePicture">
      <summary>Gets or sets the source of the contact's profile picture.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePictureProperty">
      <summary>Identifies the ProfilePicture dependency property.</summary>
      <returns>The identifier for the ProfilePicture dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPicture.TemplateSettings" />
    <member name="T:Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings" />
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings.ActualImageBrush" />
    <member name="P:Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings.ActualInitials" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider">
      <summary>Represents a slider in a <see cref="Microsoft.UI.Xaml.Controls.ColorPicker?text=ColorPicker" /> control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.#ctor">
      <summary>Initializes a new instance of the ColorPickerSlider class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.ColorChannel">
      <summary>Gets or sets a value that indicates which color channel the slider modifies.</summary>
      <returns>A value of the enumeration that indicates which color channel the slider modifies.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.ColorChannelProperty">
      <summary>Identifies the ColorChannel dependency property.</summary>
      <returns>The identifier for the ColorChannel dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum">
      <summary>Represents a control that lets a user choose a color from a visual spectrum.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.#ctor">
      <summary>Initializes a new instance of the ColorSpectrum class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Color">
      <summary>Gets or sets the current color value.</summary>
      <returns>The current color value.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ColorChanged">
      <summary>Occurs when the Color property has changed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Components">
      <summary>Gets or sets a value that indicates how the Hue-Saturation-Value (HSV) color components are mapped onto the <see cref="Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum?text=ColorSpectrum" />.</summary>
      <returns>A value of the enumeration. The default is HueSaturation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ComponentsProperty">
      <summary>Identifies the Components dependency property.</summary>
      <returns>The identifier for the Components dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.HsvColor">
      <summary>Gets or sets the current color value as a Vector4.</summary>
      <returns>The current HSV color value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.HsvColorProperty">
      <summary>Identifies the HsvColor dependency property.</summary>
      <returns>The identifier for the HsvColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxHue">
      <summary>Gets or sets the maximum Hue value in the range 0-359.</summary>
      <returns>The maximum Hue value in the range 0-359. The default is 359.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxHueProperty">
      <summary>Identifies the MaxHue dependency property.</summary>
      <returns>The identifier for the MaxHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxSaturation">
      <summary>Gets or sets the maximum Saturation value in the range 0-100.</summary>
      <returns>The maximum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxSaturationProperty">
      <summary>Identifies the MaxSaturation dependency property.</summary>
      <returns>The identifier for the MaxSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxValue">
      <summary>Gets or sets the maximum Value value in the range 0-100.</summary>
      <returns>The maximum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxValueProperty">
      <summary>Identifies the MaxValue dependency property.</summary>
      <returns>The identifier for the MaxValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinHue">
      <summary>Gets or sets the minimum Hue value in the range 0-359.</summary>
      <returns>The minimum Hue value in the range 0-359. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinHueProperty">
      <summary>Identifies the MinHue dependency property.</summary>
      <returns>The identifier for the MinHue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinSaturation">
      <summary>Gets or sets the minimum Saturation value in the range 0-100.</summary>
      <returns>The minimum Saturation value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinSaturationProperty">
      <summary>Identifies the MinSaturation dependency property.</summary>
      <returns>The identifier for the MinSaturation dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinValue">
      <summary>Gets or sets the minimum Value value in the range 0-100.</summary>
      <returns>The minimum Value value in the range 0-100. The default is 100.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.MinValueProperty">
      <summary>Identifies the MinValue dependency property.</summary>
      <returns>The identifier for the MinValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.Shape">
      <summary>Gets or sets a value that indicates whether the ColorSpectrum is shown as a square or a circle.</summary>
      <returns>A value of the enumeration. The default is Box, which shows the spectrum as a square.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.ShapeProperty">
      <summary>Identifies the Shape dependency property.</summary>
      <returns>The identifier for the Shape dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar">
      <summary>Represents a specialized command bar used in a CommandBarFlyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar?text=CommandBarFlyoutCommandBar" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar.FlyoutTemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar?text=CommandBarFlyoutCommandBar" /> control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.CommandBarFlyout?text=CommandBarFlyout" /> control. Not intended for general use.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.CloseAnimationEndPosition">
      <summary>Gets the end position for the close animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ContentClipRect">
      <summary>Gets the rectangle used to clip the content.</summary>
      <returns>The rectangle used to clip the content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.CurrentWidth">
      <summary>Gets the current width of the control.</summary>
      <returns>The current width of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationEndPosition">
      <summary>Gets the end position for the expand down animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationHoldPosition">
      <summary>Gets the hold position for the expand down animation.</summary>
      <returns>The hold position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownAnimationStartPosition">
      <summary>Gets the start position for the expand down animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandDownOverflowVerticalPosition">
      <summary>Gets the vertical position of the overflow when expanded down.</summary>
      <returns>The vertical position of the overflow when expanded down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandedWidth">
      <summary>Gets the width of the control when expanded.</summary>
      <returns>The width of the control when expanded.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationEndPosition">
      <summary>Gets the end position for the expand up animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationHoldPosition">
      <summary>Gets the hold position for the expand up animation.</summary>
      <returns>The hold position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpAnimationStartPosition">
      <summary>Gets the start position for the expand up animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.ExpandUpOverflowVerticalPosition">
      <summary>Gets the vertical position of the overflow when expanded up.</summary>
      <returns>The vertical position of the overflow when expanded up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OpenAnimationEndPosition">
      <summary>Gets the end position for the open animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OpenAnimationStartPosition">
      <summary>Gets the start position for the open animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.OverflowContentClipRect">
      <summary>Gets the rectangle used to clip the overflow content.</summary>
      <returns>The rectangle used to clip the overflow content.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionAnimationEndPosition">
      <summary>Gets the end position for the width expansion animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionAnimationStartPosition">
      <summary>Gets the start position for the width expansion animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionDelta">
      <summary>Gets the amount of change for the width expansion.</summary>
      <returns>The amount of change for the width expansion.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition">
      <summary>Gets the end position for the "more" button width expansion animation.</summary>
      <returns>The end position for the animation.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition">
      <summary>Gets the start position for the "more" button width expansion animation.</summary>
      <returns>The start position for the animation.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.IScrollController" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.AreInteractionsAllowed" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.AreScrollerInteractionsAllowed" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.GetScrollAnimation(Microsoft.UI.Xaml.Controls.ScrollInfo,Windows.Foundation.Numerics.Vector2,Microsoft.UI.Composition.CompositionAnimation)">
      <param name="info" />
      <param name="currentPosition" />
      <param name="defaultAnimation" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.InteractionInfoChanged" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.InteractionRequested" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.InteractionVisual" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.InteractionVisualScrollOrientation" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.IsInteracting" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.IsInteractionVisualRailEnabled" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.OnScrollCompleted(Microsoft.UI.Xaml.Controls.ScrollInfo)">
      <param name="info" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.ScrollByRequested" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.ScrollFromRequested" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.ScrollToRequested" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.SetExpressionAnimationSources(Microsoft.UI.Composition.CompositionPropertySet,System.String,System.String,System.String,System.String)">
      <param name="propertySet" />
      <param name="minOffsetPropertyName" />
      <param name="maxOffsetPropertyName" />
      <param name="offsetPropertyName" />
      <param name="multiplierPropertyName" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.SetScrollMode(Microsoft.UI.Xaml.Controls.ScrollMode)">
      <param name="scrollMode" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.IScrollController.SetValues(System.Double,System.Double,System.Double,System.Double)">
      <param name="minOffset" />
      <param name="maxOffset" />
      <param name="offset" />
      <param name="viewport" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter">
      <summary>Represents the visual elements of a NavigationViewItem.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter?text=NavigationViewItemPresenter" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.Icon">
      <summary>Gets or sets the icon in a NavigationView item.</summary>
      <returns>The NavigationView item's icon.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.IconProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.Icon?text=Icon" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.Icon?text=Icon" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView?text=RadioButtonsListView" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem?text=RadioButtonsListViewItem" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment)">
      <param name="offset" />
      <param name="interval" />
      <param name="start" />
      <param name="end" />
      <param name="alignment" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint.End" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint.Interval" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint.Offset" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint.Start" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <param name="offset" />
      <param name="interval" />
      <param name="start" />
      <param name="end" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint.End" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint.Interval" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint.Offset" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint.Start" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs.#ctor(Microsoft.UI.Input.PointerPoint)">
      <param name="pointerPoint" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs.Handled" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs.PointerPoint" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs.#ctor(System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="offsetDelta" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs.Info" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs.OffsetDelta" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs.Options" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs.#ctor(System.Single,Windows.Foundation.IReference{System.Single})">
      <param name="offsetVelocity" />
      <param name="inertiaDecayRate" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs.InertiaDecayRate" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs.Info" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs.OffsetVelocity" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs.#ctor(System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="offset" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs.Info" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs.Offset" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs.Options" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.Scroller" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller?text=Scroller" /> class.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.AnchorRequested" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.Background" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.BackgroundProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.Background?text=Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.Background?text=Background" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.BringingIntoView" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.Content" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ContentOrientation" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ContentOrientationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ContentOrientation?text=ContentOrientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ContentOrientation?text=ContentOrientation" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ContentProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.Content?text=Content" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.Content?text=Content" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ExpressionAnimationSources" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ExtentChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ExtentHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ExtentWidth" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalAnchorRatio" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalAnchorRatioProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalAnchorRatio?text=HorizontalAnchorRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalAnchorRatio?text=HorizontalAnchorRatio" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalOffset" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollChainingMode?text=HorizontalScrollChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollChainingMode?text=HorizontalScrollChainingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollController" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollMode?text=HorizontalScrollMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollMode?text=HorizontalScrollMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollRailingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollRailingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollRailingMode?text=HorizontalScrollRailingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalScrollRailingMode?text=HorizontalScrollRailingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.HorizontalSnapPoints" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.IgnoredInputKind" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.IgnoredInputKindProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.MaxZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.MaxZoomFactorProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.MaxZoomFactor?text=MaxZoomFactor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.MaxZoomFactor?text=MaxZoomFactor" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.MinZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.MinZoomFactorProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.MinZoomFactor?text=MinZoomFactor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.MinZoomFactor?text=MinZoomFactor" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollableHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollableWidth" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollAnimationStarting" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollBy(System.Double,System.Double)">
      <param name="horizontalOffsetDelta" />
      <param name="verticalOffsetDelta" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollBy(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="horizontalOffsetDelta" />
      <param name="verticalOffsetDelta" />
      <param name="options" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollCompleted" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollFrom(Windows.Foundation.Numerics.Vector2,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="offsetsVelocity" />
      <param name="inertiaDecayRate" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollTo(System.Double,System.Double)">
      <param name="horizontalOffset" />
      <param name="verticalOffset" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ScrollTo(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="horizontalOffset" />
      <param name="verticalOffset" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.State" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.StateChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalAnchorRatio" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalAnchorRatioProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalAnchorRatio?text=VerticalAnchorRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalAnchorRatio?text=VerticalAnchorRatio" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalOffset" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollChainingMode?text=VerticalScrollChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollChainingMode?text=VerticalScrollChainingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollController" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollMode?text=VerticalScrollMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollMode?text=VerticalScrollMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollRailingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollRailingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollRailingMode?text=VerticalScrollRailingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalScrollRailingMode?text=VerticalScrollRailingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.VerticalSnapPoints" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ViewChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ViewportHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ViewportWidth" />
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomAnimationStarting" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomBy(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="zoomFactorDelta" />
      <param name="centerPoint" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomBy(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Microsoft.UI.Xaml.Controls.ZoomOptions)">
      <param name="zoomFactorDelta" />
      <param name="centerPoint" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomChainingMode?text=ZoomChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomChainingMode?text=ZoomChainingMode" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomCompleted" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomFactor" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomFrom(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Windows.Foundation.IReference{System.Single})">
      <param name="zoomFactorVelocity" />
      <param name="centerPoint" />
      <param name="inertiaDecayRate" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomMode?text=ZoomMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomMode?text=ZoomMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomSnapPoints" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomTo(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="zoomFactor" />
      <param name="centerPoint" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.Scroller.ZoomTo(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Microsoft.UI.Xaml.Controls.ZoomOptions)">
      <param name="zoomFactor" />
      <param name="centerPoint" />
      <param name="options" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint.#ctor(System.Double,Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment)">
      <param name="snapPointValue" />
      <param name="alignment" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint.Value" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase" />
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase.Alignment" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment" />
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment.Center" />
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment.Far" />
    <member name="F:Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment.Near" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint" />
    <member name="M:Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint.#ctor(System.Double)">
      <param name="snapPointValue" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint.Value" />
    <member name="T:Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase" />
    <member name="T:Microsoft.UI.Xaml.Controls.RadioButtons" />
    <member name="M:Microsoft.UI.Xaml.Controls.RadioButtons.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons?text=RadioButtons" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RadioButtons.ContainerFromIndex(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RadioButtons.ContainerFromItem(System.Object)">
      <param name="item" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.Header" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.HeaderProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.Header?text=Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.Header?text=Header" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.Items" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.ItemsProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.Items?text=Items" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.Items?text=Items" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSource" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSourceProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSource?text=ItemsSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSource?text=ItemsSource" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplate" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplateProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplate?text=ItemTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplate?text=ItemTemplate" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.MaximumColumns" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.MaximumColumnsProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.MaximumColumns?text=MaximumColumns" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.MaximumColumns?text=MaximumColumns" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndex" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndexProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndex?text=SelectedIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndex?text=SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItem" />
    <member name="P:Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItemProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItem?text=SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItem?text=SelectedItem" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RadioButtons.SelectionChanged" />
    <member name="T:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem" />
    <member name="M:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem?text=RadioMenuFlyoutItem" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GroupName">
      <summary>Gets or sets the name that specifies which RadioMenuFlyoutItem controls are mutually exclusive.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GroupNameProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GroupName?text=GroupName" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GroupName?text=GroupName" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.IsChecked">
      <summary>Gets or sets whether the RadioMenuFlyoutItem is checked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.IsCheckedProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.IsChecked?text=IsChecked" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.IsChecked?text=IsChecked" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RailingMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.RailingMode.Disabled" />
    <member name="F:Microsoft.UI.Xaml.Controls.RailingMode.Enabled" />
    <member name="T:Microsoft.UI.Xaml.Controls.RatingControl">
      <summary>Represents a control that lets a user enter a star rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingControl.#ctor">
      <summary>Initializes a new instance of the RatingControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.Caption">
      <summary>Gets or sets the text label for the control.</summary>
      <returns>The text label for the control. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.CaptionProperty">
      <summary>Identifies the Caption dependency property.</summary>
      <returns>The identifier for Caption dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.InitialSetValue">
      <summary>Gets or sets the initial set rating value.</summary>
      <returns>The initial set rating value. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.InitialSetValueProperty">
      <summary>Identifies the InitialSetValue dependency property.</summary>
      <returns>The identifier for InitialSetValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsClearEnabled">
      <summary>Gets or sets the value that determines if the user can remove the rating.</summary>
      <returns>true if the user can remove the rating; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsClearEnabledProperty">
      <summary>Identifies the IsClearEnabled dependency property.</summary>
      <returns>The identifier for IsClearEnabled dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsReadOnly">
      <summary>Gets or sets the value that determines if the user can change the rating.</summary>
      <returns>true if the rating is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
      <returns>The identifier for IsReadOnly dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ItemInfo">
      <summary>Gets or sets info about the visual states of the items that represent a rating.</summary>
      <returns>A RatingItemInfo-derived object that contains details about the visual states of the items that represent a rating.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ItemInfoProperty">
      <summary>Identifies the ItemInfo dependency property.</summary>
      <returns>The identifier for ItemInfo dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.MaxRating">
      <summary>Gets or sets the maximum allowed rating value.</summary>
      <returns>The maximum allowed rating value. The default is 5.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.MaxRatingProperty">
      <summary>Identifies the MaxRating dependency property.</summary>
      <returns>The identifier for MaxRating dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.PlaceholderValue">
      <summary>Gets or sets the rating that is displayed in the control until the value is changed by a user action or some other operation.</summary>
      <returns>The rating that is displayed in the control when no value is entered. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.PlaceholderValueProperty">
      <summary>Identifies the PlaceholderValue dependency property.</summary>
      <returns>The identifier for PlaceholderValue dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.Value">
      <summary>Gets or sets the rating value.</summary>
      <returns>The rating value. The default is null.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RatingControl.ValueChanged">
      <summary>Occurs when the Value property has changed.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingControl.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
      <returns>The identifier for Value dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemFontInfo">
      <summary>Represents information about the visual states of font elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemFontInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.DisabledGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that is disabled.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.DisabledGlyphProperty">
      <summary>Identifies the DisabledGlyph dependency property.</summary>
      <returns>The identifier for DisabledGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.Glyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has been set by the user.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.GlyphProperty">
      <summary>Identifies the Glyph dependency property.</summary>
      <returns>The identifier for Glyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PlaceholderGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that is showing a placeholder value.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PlaceholderGlyphProperty">
      <summary>Identifies the PlaceholderGlyph dependency property.</summary>
      <returns>The identifier for PlaceholderGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has the pointer over it.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverGlyphProperty">
      <summary>Identifies the PointerOverGlyph dependency property.</summary>
      <returns>The identifier for PointerOverGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverPlaceholderGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element showing a placeholder value with the pointer over it.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.PointerOverPlaceholderGlyphProperty">
      <summary>Identifies the PointerOverPlaceholderGlyph dependency property.</summary>
      <returns>The identifier for PointerOverPlaceholderGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.UnsetGlyph">
      <summary>Gets or sets a Segoe MDL2 Assets font glyph that represents a rating element that has not been set.</summary>
      <returns>The hexadecimal character code for the rating element glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemFontInfo.UnsetGlyphProperty">
      <summary>Identifies the UnsetGlyph dependency property.</summary>
      <returns>The identifier for UnsetGlyph dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemImageInfo">
      <summary>Represents information about the visual states of image elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemImageInfo class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.DisabledImage">
      <summary>Gets or sets an image that represents a rating element that is disabled.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.DisabledImageProperty">
      <summary>Identifies the DisabledImage dependency property.</summary>
      <returns>The identifier for DisabledImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.Image">
      <summary>Gets or sets an image that represents a rating element that has been set by the user.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.ImageProperty">
      <summary>Identifies the Image dependency property.</summary>
      <returns>The identifier for Image dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PlaceholderImage">
      <summary>Gets or sets an image that represents a rating element that is showing a placeholder value.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PlaceholderImageProperty">
      <summary>Identifies the PlaceholderImage dependency property.</summary>
      <returns>The identifier for PlaceholderImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverImage">
      <summary>Gets or sets an image that represents a rating element that has the pointer over it.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverImageProperty">
      <summary>Identifies the PointerOverImage dependency property.</summary>
      <returns>The identifier for PointerOverImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverPlaceholderImage">
      <summary>Gets or sets an image that represents a rating element showing a placeholder value with the pointer over it.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.PointerOverPlaceholderImageProperty">
      <summary>Identifies the PointerOverPlaceholderImage dependency property.</summary>
      <returns>The identifier for PointerOverPlaceholderImage dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.UnsetImage">
      <summary>Gets or sets an image that represents a rating element that has not been set.</summary>
      <returns>An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RatingItemImageInfo.UnsetImageProperty">
      <summary>Identifies the UnsetImage dependency property.</summary>
      <returns>The identifier for UnsetImage dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RatingItemInfo">
      <summary>Represents information about the visual states of the elements that represent a rating.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RatingItemInfo.#ctor">
      <summary>Initializes a new instance of the RatingItemInfo class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RecyclePool">
      <summary>Represents a cache of elements that can be re-used to display data items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.RecyclePool?text=RecyclePool" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.GetPoolInstance(Microsoft.UI.Xaml.DataTemplate)">
      <summary>Gets the value of the RecyclePool.PoolInstance XAML attached property for the target data template.</summary>
      <param name="dataTemplate">The object from which the property value is read.</param>
      <returns>The RecyclePool.PoolInstance XAML attached property value of the specified object.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RecyclePool.PoolInstanceProperty">
      <summary>Identifies the PoolInstance attached property.</summary>
      <returns>The identifier for the PoolInstance attached property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.PutElement(Microsoft.UI.Xaml.UIElement,System.String)">
      <summary>Adds an element to the recycle pool.</summary>
      <param name="element">The element to add to the recycle pool.</param>
      <param name="key">The identifier for the element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.PutElement(Microsoft.UI.Xaml.UIElement,System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Adds an element to the recycle pool with the specified owner.</summary>
      <param name="element">The element to add to the recycle pool.</param>
      <param name="key">The identifier for the element.</param>
      <param name="owner">The parent container for the element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.PutElementCore(Microsoft.UI.Xaml.UIElement,System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Adds an element to the recycle pool with the specified owner. (This method provides the behavior when PutElement is called.)</summary>
      <param name="element">The element to add to the recycle pool.</param>
      <param name="key">The identifier for the element.</param>
      <param name="owner">The parent container for the element.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.SetPoolInstance(Microsoft.UI.Xaml.DataTemplate,Microsoft.UI.Xaml.Controls.RecyclePool)">
      <summary>Sets the value of the RecyclePool.PoolInstance XAML attached property for the target data template.</summary>
      <param name="dataTemplate">The object to which the property value is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.TryGetElement(System.String)">
      <summary>Attempts to retrieve an element identified by the specified key.</summary>
      <param name="key">The identifier for the element.</param>
      <returns>The element identified by key if it can be found; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.TryGetElement(System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Attempts to retrieve an element identified by the specified key, with the specified owner.</summary>
      <param name="key">The identifier for the element.</param>
      <param name="owner">The parent container for the element.</param>
      <returns>The element identified by key if it can be found; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclePool.TryGetElementCore(System.String,Microsoft.UI.Xaml.UIElement)">
      <summary>Attempts to retrieve an element identified by the specified key. (This method provides the behavior when TryGetElement is called.)</summary>
      <param name="key">The identifier for the element.</param>
      <param name="owner">The parent container for the element.</param>
      <returns>The element identified by key if it can be found; otherwise, null.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RecyclingElementFactory">
      <summary>Represents a component that creates and recycles elements for use in a <see cref="Microsoft.UI.Xaml.Controls.Layout?text=Layout" />.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclingElementFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.RecyclingElementFactory?text=RecyclingElementFactory" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RecyclingElementFactory.OnSelectTemplateKeyCore(System.Object,Microsoft.UI.Xaml.UIElement)">
      <summary>Raises the <see cref="Microsoft.UI.Xaml.Controls.RecyclingElementFactory.SelectTemplateKey?text=SelectTemplateKey" /> event.</summary>
      <param name="dataContext">The data item to be displayed by the template.</param>
      <param name="owner">The parent container for the element.</param>
      <returns>The key for the data template.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RecyclingElementFactory.RecyclePool">
      <summary>Gets or sets the pool of elements that can be recycled.</summary>
      <returns>The pool of elements that can be recycled.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RecyclingElementFactory.SelectTemplateKey">
      <summary>Occurs when an element is retrieved in order to get a template key for the element.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RecyclingElementFactory.Templates">
      <returns>Gets or sets the collection of data templates, identified by key, that can be applied to the element.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshContainer">
      <summary>Represents a container control that provides a <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" /> and pull-to-refresh functionality for scrollable content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshContainer.#ctor">
      <summary>Initializes a new instance of the RefreshContainer control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.PullDirection">
      <summary>Gets or sets a value that specifies the direction to pull to initiate a refresh.</summary>
      <returns>An enumeration value that specifies the direction to pull to initiate a refresh.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.PullDirectionProperty">
      <summary>Identifies the PullDirection dependency property.</summary>
      <returns>The identifier for the PullDirection dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshContainer.RefreshRequested">
      <summary>Occurs when an update of the content has been initiated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshContainer.RequestRefresh">
      <summary>Initiates an update of the content.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.Visualizer">
      <summary>Gets or sets the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" /> for this container.</summary>
      <returns>The <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" /> for this container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshContainer.VisualizerProperty">
      <summary>Identifies the Visualizer dependency property.</summary>
      <returns>The identifier for the Visualizer dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs">
      <summary>Provides event data.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs.InteractionRatio">
      <summary>Gets the interaction ratio value.</summary>
      <returns>The interaction ratio value.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshPullDirection">
      <summary>Defines constants that specify the direction to pull a <see cref="Microsoft.UI.Xaml.Controls.RefreshContainer?text=RefreshContainer" /> to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.BottomToTop">
      <summary>Pull from bottom to top to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.LeftToRight">
      <summary>Pull from left to right to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.RightToLeft">
      <summary>Pull from right to left to initiate a refresh.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshPullDirection.TopToBottom">
      <summary>Pull from top to bottom to initiate a refresh.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs">
      <summary>Provides event data for RefreshRequested events.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs.GetDeferral">
      <summary>Gets a deferral object for managing the work done in the RefreshRequested event handler.</summary>
      <returns>A deferral object.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer.RefreshStateChanged?text=RefreshVisualizer.RefreshStateChanged" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs.NewState">
      <summary>Gets a value that indicates the new state of the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" />.</summary>
      <returns>An enumeration value that indicates the new state of the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" />.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs.OldState">
      <summary>Gets a value that indicates the previous state of the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" />.</summary>
      <returns>An enumeration value that indicates the previous state of the <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" />.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizer">
      <summary>Represents a control that provides animated state indicators for content refresh.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshVisualizer.#ctor">
      <summary>Initializes a new instance of the RefreshVisualizer class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.Content">
      <summary>Gets or sets the content of the visualizer.</summary>
      <returns>The content of the visualizer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.InfoProviderProperty">
      <summary>Identifies the InfoProvider dependency property.</summary>
      <returns>The identifier for the InfoProvider dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.Orientation">
      <summary>Gets or sets a value that indicates the orientation of the visualizer.</summary>
      <returns>A value of the enumeration that indicates the orientation of the visualizer. The default is Top.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
      <returns>The identifier for the Orientation dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RefreshRequested">
      <summary>Occurs when an update of the content has been initiated.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RefreshStateChanged">
      <summary>Occurs when the state of the visualizer changes.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.RefreshVisualizer.RequestRefresh">
      <summary>Initiates an update of the content.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.State">
      <summary>Gets a value that indicates the state of the visualizer.</summary>
      <returns>A value of the enumeration that indicates the state of the visualizer.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.RefreshVisualizer.StateProperty">
      <summary>Identifies the State dependency property.</summary>
      <returns>The identifier for the State dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation">
      <summary>Defines constants that specify the orientation of a <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" />.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Auto" />
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Normal" />
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Rotate270DegreesCounterclockwise" />
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation.Rotate90DegreesCounterclockwise" />
    <member name="T:Microsoft.UI.Xaml.Controls.RefreshVisualizerState">
      <summary>Defines constants that specify the state of a <see cref="Microsoft.UI.Xaml.Controls.RefreshVisualizer?text=RefreshVisualizer" /></summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Idle">
      <summary>The visualizer is idle.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Interacting">
      <summary>The user is interacting with the visualizer.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Peeking">
      <summary>The visualizer was pulled in the refresh direction from a position where a refresh is not allowed. Typically, the ScrollViewer was not at position 0 at the start of the pull.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Pending">
      <summary>The visualizer is pending.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.RefreshVisualizerState.Refreshing">
      <summary>The visualizer is being refreshed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter" />
    <member name="M:Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter?text=RevealListViewItemPresenter" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollAnimationStartingEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollAnimationStartingEventArgs.Animation" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollAnimationStartingEventArgs.EndPosition" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollAnimationStartingEventArgs.ScrollInfo" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollAnimationStartingEventArgs.StartPosition" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollBarVisibility" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Auto" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Hidden" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollBarVisibility.Visible" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollCompletedEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollCompletedEventArgs.ScrollInfo" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollerAnchorRequestedEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerAnchorRequestedEventArgs.AnchorCandidates" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerAnchorRequestedEventArgs.AnchorElement" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.Cancel" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.RequestEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.ScrollInfo" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.SnapPointsMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.TargetHorizontalOffset" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs.TargetVerticalOffset" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollInfo" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollInfo.OffsetsChangeId" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollMode.Disabled" />
    <member name="F:Microsoft.UI.Xaml.Controls.ScrollMode.Enabled" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollOptions" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollOptions.#ctor(Microsoft.UI.Xaml.Controls.AnimationMode)">
      <param name="animationMode" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollOptions.#ctor(Microsoft.UI.Xaml.Controls.AnimationMode,Microsoft.UI.Xaml.Controls.SnapPointsMode)">
      <param name="animationMode" />
      <param name="snapPointsMode" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollOptions.AnimationMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollOptions.SnapPointsMode" />
    <member name="T:Microsoft.UI.Xaml.Controls.ScrollViewer" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer?text=ScrollViewer" /> class.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.AnchorRequested" />
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.BringingIntoView" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.Content" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ContentOrientation" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ContentOrientationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ContentOrientation?text=ContentOrientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ContentOrientation?text=ContentOrientation" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ContentProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.Content?text=Content" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.Content?text=Content" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExpressionAnimationSources" />
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentWidth" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatioProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio?text=HorizontalAnchorRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio?text=HorizontalAnchorRatio" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalOffset" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility?text=HorizontalScrollBarVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility?text=HorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollChainingMode?text=HorizontalScrollChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollChainingMode?text=HorizontalScrollChainingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollController" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollControllerProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollController?text=HorizontalScrollController" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollController?text=HorizontalScrollController" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode?text=HorizontalScrollMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode?text=HorizontalScrollMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollRailingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollRailingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollRailingMode?text=HorizontalScrollRailingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollRailingMode?text=HorizontalScrollRailingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IgnoredInputKind" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.IgnoredInputKindProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactorProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor?text=MaxZoomFactor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor?text=MaxZoomFactor" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactorProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor?text=MinZoomFactor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor?text=MinZoomFactor" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.RegisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <param name="element" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableWidth" />
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollAnimationStarting" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollBy(System.Double,System.Double)">
      <param name="horizontalOffsetDelta" />
      <param name="verticalOffsetDelta" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollBy(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="horizontalOffsetDelta" />
      <param name="verticalOffsetDelta" />
      <param name="options" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollCompleted" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollerProperty">
      <summary>Identifies the Scroller dependency property.</summary>
      <returns>The identifier for the Scroller dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollFrom(Windows.Foundation.Numerics.Vector2,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="offsetsVelocity" />
      <param name="inertiaDecayRate" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollTo(System.Double,System.Double)">
      <param name="horizontalOffset" />
      <param name="verticalOffset" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollTo(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollOptions)">
      <param name="horizontalOffset" />
      <param name="verticalOffset" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.State" />
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.StateChanged" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.UnregisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)">
      <param name="element" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatioProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio?text=VerticalAnchorRatio" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio?text=VerticalAnchorRatio" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalOffset" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility?text=VerticalScrollBarVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility?text=VerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollChainingMode?text=VerticalScrollChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollChainingMode?text=VerticalScrollChainingMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollController" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollControllerProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollController?text=VerticalScrollController" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollController?text=VerticalScrollController" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode?text=VerticalScrollMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode?text=VerticalScrollMode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollRailingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollRailingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollRailingMode?text=VerticalScrollRailingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollRailingMode?text=VerticalScrollRailingMode" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportWidth" />
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomAnimationStarting" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomBy(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="zoomFactorDelta" />
      <param name="centerPoint" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomBy(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Microsoft.UI.Xaml.Controls.ZoomOptions)">
      <param name="zoomFactorDelta" />
      <param name="centerPoint" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomChainingMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomChainingModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomChainingMode?text=ZoomChainingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomChainingMode?text=ZoomChainingMode" /> dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomCompleted" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFactor" />
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFrom(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Windows.Foundation.IReference{System.Single})">
      <param name="zoomFactorVelocity" />
      <param name="centerPoint" />
      <param name="inertiaDecayRate" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode?text=ZoomMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode?text=ZoomMode" /> dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomTo(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2})">
      <param name="zoomFactor" />
      <param name="centerPoint" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomTo(System.Single,Windows.Foundation.IReference{Windows.Foundation.Numerics.Vector2},Microsoft.UI.Xaml.Controls.ZoomOptions)">
      <param name="zoomFactor" />
      <param name="centerPoint" />
      <param name="options" />
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionModel">
      <summary>Represents a component that tracks the selection state of items in a data source.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.SelectionModel?text=SelectionModel" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.AnchorIndex">
      <summary>Gets or sets the index of the anchor item of a selected range.</summary>
      <returns>The index of the anchor item of a selected range.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SelectionModel.ChildrenRequested">
      <summary>Occurs when nested items in a multi-level hierarchy are requested.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.ClearSelection">
      <summary>De-selects all items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.Deselect(System.Int32)">
      <summary>De-selects the item at the specified index in a 1-level data structure.</summary>
      <param name="index">The index of the item to de-select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.Deselect(System.Int32,System.Int32)">
      <summary>De-selects the item at the specified index in a 2-level data structure.</summary>
      <param name="groupIndex">The index of the group the item is in.</param>
      <param name="itemIndex">The index of the item to de-select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.DeselectAt(Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>De-selects the item at the specified index in a multi-level data structure.</summary>
      <param name="index">The IndexPath that describes the location of the item in the data structure.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.DeselectRange(Microsoft.UI.Xaml.Controls.IndexPath,Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>De-selects all items between the specified start and end locations.</summary>
      <param name="start">The IndexPath that describes the starting location of the range in the data structure.</param>
      <param name="end">The IndexPath that describes the ending location of the range in the data structure.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.DeselectRangeFromAnchor(System.Int32)">
      <summary>De-selects all items between the AnchorIndex and the specified index in a 1-level data structure.</summary>
      <param name="index">The index of the item at the end of the range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.DeselectRangeFromAnchor(System.Int32,System.Int32)">
      <summary>De-selects all items between the AnchorIndex and the specified index in a 2-level data structure.</summary>
      <param name="groupIndex">The index of the group the item is in.</param>
      <param name="itemIndex">The index of the item at the end of the range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.DeselectRangeFromAnchorTo(Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>De-selects all items between the AnchorIndex and the specified index in a multi-level data structure.</summary>
      <param name="index">The IndexPath that describes the location of the item at the end of the range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.IsSelected(System.Int32)">
      <summary>Retrieves a value that indicates whether the item at the specified index in a 1-level data structure is selected.</summary>
      <param name="index">The index of the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.IsSelected(System.Int32,System.Int32)">
      <summary>Retrieves a value that indicates whether the item at the specified index in a 2-level data structure is selected.</summary>
      <param name="groupIndex" />
      <param name="itemIndex">The index of the item.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.IsSelectedAt(Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>Retrieves a value that indicates whether the item at the specified index in a multi-level data structure is selected.</summary>
      <param name="index">The IndexPath that describes the location of the item in the data structure.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.OnPropertyChanged(System.String)">
      <summary>Called when the value of a selection model property has changed.</summary>
      <param name="propertyName">The name of the property that has changed.</param>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SelectionModel.PropertyChanged">
      <summary>Occurs when the value of a selection model property has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.Select(System.Int32)">
      <summary>Selects the item at the specified index in a 1-level data structure.</summary>
      <param name="index">The index of the item to select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.Select(System.Int32,System.Int32)">
      <summary>Selects the item at the specified index in a 2-level data structure.</summary>
      <param name="groupIndex">The index of the group the item is in.</param>
      <param name="itemIndex">The index of the item to select.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectAll">
      <summary>Selects all items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectAt(Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>Selects the item at the specified index in a multi-level data structure.</summary>
      <param name="index">The IndexPath that describes the location of the item in the data structure.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.SelectedIndex">
      <summary>Gets or sets the index of a single selected item.</summary>
      <returns>The index of a single selected item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.SelectedIndices">
      <summary>Gets the collection of index values for multiple selected items.</summary>
      <returns>The collection of index values for multiple selected items. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.SelectedItem">
      <summary>Gets or sets a single selected item.</summary>
      <returns>The single selected item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.SelectedItems">
      <summary>Gets the collection of multiple selected items.</summary>
      <returns>The collection of multiple selected items. The default is an empty collection.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SelectionModel.SelectionChanged">
      <summary>Occurs when the selection has changed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectRange(Microsoft.UI.Xaml.Controls.IndexPath,Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>Selects all items between the specified start and end locations.</summary>
      <param name="start">The IndexPath that describes the starting location of the range in the data structure.</param>
      <param name="end">The IndexPath that describes the ending location of the range in the data structure.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectRangeFromAnchor(System.Int32)">
      <summary>Selects all items between the AnchorIndex and the specified index in a 1-level data structure.</summary>
      <param name="index">The index of the item at the end of the range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectRangeFromAnchor(System.Int32,System.Int32)">
      <summary>Selects all items between the AnchorIndex and the specified index in a 2-level data structure.</summary>
      <param name="groupIndex">The index of the group the item is in.</param>
      <param name="itemIndex">The index of the item at the end of the range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SelectRangeFromAnchorTo(Microsoft.UI.Xaml.Controls.IndexPath)">
      <summary>Selects all items between the AnchorIndex and the specified index in a multi-level data structure.</summary>
      <param name="index">The IndexPath that describes the location of the item in the data structure.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SetAnchorIndex(System.Int32)">
      <summary>Sets the index of the anchor item in a selection range in a 1-level data structure.</summary>
      <param name="index">The index of the anchor item in a selection range.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SelectionModel.SetAnchorIndex(System.Int32,System.Int32)">
      <summary>Sets the index of the anchor item in a selection range in a multi-level data structure.</summary>
      <param name="groupIndex">The index of the group the item is in.</param>
      <param name="itemIndex">The index of the anchor item.</param>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.SingleSelect">
      <summary>Gets or sets a value that indicates whether only one item can be selected at a time.</summary>
      <returns>true if only one item can be selected at a time; false if more than one item can be selected.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModel.Source">
      <summary>Gets or sets the data source for which item selection is tracked.</summary>
      <returns>The data source for which item selection is tracked. The default is null.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs.Children" />
    <member name="P:Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs.Source" />
    <member name="T:Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs" />
    <member name="T:Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs">
      <summary>Provides data for the <see cref="Microsoft.UI.Xaml.Controls.RecyclingElementFactory.SelectTemplateKey?text=RecyclingElementFactory.SelectTemplateKey" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs.DataContext">
      <summary>Gets or sets the data item to be displayed by the template.</summary>
      <returns>The data item to be displayed by the template.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs.Owner">
      <summary>Gets or sets the parent container for the element.</summary>
      <returns>The parent container for the element.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs.TemplateKey">
      <summary>Gets or sets the key that identifies the data template.</summary>
      <returns>The key that identifies the data template.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SnapPointsMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsMode.Default" />
    <member name="F:Microsoft.UI.Xaml.Controls.SnapPointsMode.Ignore" />
    <member name="T:Microsoft.UI.Xaml.Controls.SplitButton">
      <summary>Represents a button with two parts that can be invoked separately. One part behaves like a standard button and the other part invokes a flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SplitButton.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.SplitButton?text=SplitButton" /> class.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SplitButton.Click">
      <summary>Occurs when a button control is clicked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.Command">
      <summary>Gets or sets the command to invoke when this button is pressed.</summary>
      <returns>The command to invoke when this button is pressed. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="Microsoft.UI.Xaml.Controls.SplitButton.Command?text=Command" /> property.</summary>
      <returns>The parameter to pass to the <see cref="Microsoft.UI.Xaml.Controls.SplitButton.Command?text=Command" /> property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.Flyout">
      <summary>Gets or sets the flyout associated with this button.</summary>
      <returns>The flyout associated with this button. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SplitButton.FlyoutProperty">
      <summary>Identifies the Flyout dependency property.</summary>
      <returns>The identifier for the Flyout dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs">
      <summary>Provides event data for the SplitButton.Click event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.StackLayout">
      <summary>Arranges elements into a single line (with spacing) that can be oriented horizontally or vertically.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackLayout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.StackLayout?text=StackLayout" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackLayout.Orientation">
      <summary>Gets or sets the axis along which items are laid out.</summary>
      <returns>One of the enumeration values that specifies the axis along which items are laid out. The default is Vertical.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackLayout.OrientationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.StackLayout.Orientation?text=Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.StackLayout.Orientation?text=Orientation" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackLayout.Spacing">
      <summary>Gets or sets a uniform distance (in pixels) between stacked items. It is applied in the direction of the StackLayout's Orientation.</summary>
      <returns>The uniform distance (in pixels) between stacked items.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.StackLayout.SpacingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.StackLayout.Spacing?text=Spacing" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.StackLayout.Spacing?text=Spacing" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.StackLayoutState">
      <summary>Represents the state of a StackLayout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.StackLayoutState.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.StackLayoutState?text=StackLayoutState" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked">
      <summary>Defines constants that specify how a <see cref="Microsoft.UI.Xaml.Controls.SwipeControl?text=SwipeControl" /> behaves after a command is invoked.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.Auto">
      <summary>In Reveal mode, the SwipeControl closes after an item is invoked. In Execute mode, the SwipeControl remains open.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.Close">
      <summary>The SwipeControl closes after an item is invoked.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked.RemainOpen">
      <summary>The SwipeControl remains open after an item is invoked.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeControl">
      <summary>Represents a container that provides access to contextual commands through touch interactions.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeControl.#ctor">
      <summary>Initializes a new instance of the SwipeControl class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.BottomItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the bottom up.</summary>
      <returns>The items that can be invoked when the control is swiped from the bottom up.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.BottomItemsProperty">
      <summary>Identifies the BottomItems dependency property.</summary>
      <returns>The identifier for the BottomItems dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeControl.Close">
      <summary>Closes the swipe control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.LeftItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the left side.</summary>
      <returns>The items that can be invoked when the control is swiped from the left side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.LeftItemsProperty">
      <summary>Identifies the LeftItems dependency property.</summary>
      <returns>The identifier for the LeftItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.RightItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the right side.</summary>
      <returns>The items that can be invoked when the control is swiped from the right side.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.RightItemsProperty">
      <summary>Identifies the RightItems dependency property.</summary>
      <returns>The identifier for the RightItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.TopItems">
      <summary>Gets or sets the items that can be invoked when the control is swiped from the top down.</summary>
      <returns>The items that can be invoked when the control is swiped from the top down.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeControl.TopItemsProperty">
      <summary>Identifies the TopItems dependency property.</summary>
      <returns>The identifier for the TopItems dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItem">
      <summary>Represents an individual command in a SwipeControl.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItem.#ctor">
      <summary>Initializes a new instance of the SwipeItem class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Background">
      <summary>Gets or sets a brush that provides the background of the control.</summary>
      <returns>The brush that provides the background of the control.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
      <returns>The identifier for the Background dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BehaviorOnInvoked">
      <summary>Gets or sets a value that indicates how a <see cref="Microsoft.UI.Xaml.Controls.SwipeControl?text=SwipeControl" /> behaves after this item is invoked.</summary>
      <returns>A value that indicates how a <see cref="Microsoft.UI.Xaml.Controls.SwipeControl?text=SwipeControl" /> behaves after this item is invoked. The default is Auto.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.BehaviorOnInvokedProperty">
      <summary>Identifies the BehaviorOnInvoked dependency property.</summary>
      <returns>The identifier for the BehaviorOnInvoked dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Command">
      <summary>Gets or sets the command to execute when this item is invoked.</summary>
      <returns>The command to execute when this item is invoked. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandParameter">
      <summary>Gets or sets the parameter to pass to the Command property.</summary>
      <returns>The parameter to pass to the Command property. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
      <returns>The identifier for the CommandParameter dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
      <returns>The identifier for the Command dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Foreground">
      <summary>Gets or sets the brush that paints the text and icon of the item.</summary>
      <returns>The brush that paints the text and icon of the item.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.ForegroundProperty">
      <summary>Identifies the Foreground dependency property.</summary>
      <returns>The identifier for the Foreground dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.IconSource">
      <summary>Gets or sets the graphic content of the item.</summary>
      <returns>The graphic content of the item. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.IconSourceProperty">
      <summary>Identifies the IconSource dependency property.</summary>
      <returns>The identifier for the IconSource dependency property.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.SwipeItem.Invoked">
      <summary>Occurs when user interaction indicates that the command represented by this item should execute.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.Text">
      <summary>Gets or sets the text description displayed on the item.</summary>
      <returns>The text description displayed on the item. The default is an empty string.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItem.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
      <returns>The identifier for the Text dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.SwipeItem.Invoked?text=SwipeItem.Invoked" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs.SwipeControl">
      <summary>Gets the <see cref="Microsoft.UI.Xaml.Controls.SwipeControl?text=SwipeControl" /> that owns the invoked item.</summary>
      <returns>The SwipeControl that owns the invoked item.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeItems">
      <summary>Represents a collection of <see cref="Microsoft.UI.Xaml.Controls.SwipeItem?text=SwipeItem" /> objects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.#ctor">
      <summary>Initializes a new instance of the SwipeItems class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.Append(Microsoft.UI.Xaml.Controls.SwipeItem)">
      <param name="value" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.First">
      <summary>Returns an iterator for the items in the collection.</summary>
      <returns>The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetAt(System.UInt32)">
      <summary>Returns the item located at the specified index.</summary>
      <param name="index">The integer index for the value to retrieve.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem[])">
      <param name="startIndex" />
      <param name="items" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.GetView">
      <summary>Gets an immutable view into the collection.</summary>
      <returns>An object representing the immutable collection view.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.IndexOf(Microsoft.UI.Xaml.Controls.SwipeItem,System.UInt32@)">
      <param name="value" />
      <param name="index" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.Mode">
      <summary>Gets or sets a value that indicates the effect of a swipe interaction.</summary>
      <returns>A value of the enumeration that indicates the effect of a swipe interaction. The default is Reveal.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.ModeProperty">
      <summary>Identifies the Mode dependency property.</summary>
      <returns>The identifier for the Mode dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.RemoveAt(System.UInt32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.RemoveAtEnd">
      <summary>Removes the last item in the collection.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.ReplaceAll(Microsoft.UI.Xaml.Controls.SwipeItem[])">
      <param name="items" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SwipeItems.SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SwipeItems.Size">
      <summary>Gets the size (count) of the collection.</summary>
      <returns>The count of items in the collection.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SwipeMode">
      <summary>Defines constants that specify the effect of a swipe interaction.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeMode.Execute">
      <summary>A swipe executes a command.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.SwipeMode.Reveal">
      <summary>A swipe reveals a menu of commands.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.SymbolIconSource">
      <summary>Represents an icon source that uses a glyph from the Segoe MDL2 Assets font as its content.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.SymbolIconSource.#ctor">
      <summary>Initializes a new instance of the SymbolIconSource class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIconSource.Symbol">
      <summary>Gets or sets the Segoe MDL2 Assets glyph used as the icon content.</summary>
      <returns>A named constant of the numeration that specifies the Segoe MDL2 Assets glyph to use.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.SymbolIconSource.SymbolProperty">
      <summary>Identifies the Symbol dependency property.</summary>
      <returns>The identifier for the Symbol dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTip">
      <summary>A teaching tip is a semi-persistent and content-rich flyout that provides contextual information. It is often used for informing, reminding, and teaching users about important and new features that may enhance their experience.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TeachingTip.#ctor" />
    <member name="E:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonClick">
      <summary>Occurs after the action button is clicked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonCommand">
      <summary>Gets or sets the command to invoke when the action button is clicked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonCommandParameter">
      <summary>Gets or sets the parameter to pass to the command for the action button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonCommandParameterProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonCommandProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonContent">
      <summary>Gets or sets the text of the teaching tip's action button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonContentProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonStyle">
      <summary>Gets or sets the Style to apply to the action button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ActionButtonStyleProperty" />
    <member name="E:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonClick">
      <summary>Occurs after the close button is clicked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonCommand">
      <summary>Gets or sets the command to invoke when the close button is clicked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonCommandParameter">
      <summary>Gets or sets the parameter to pass to the command for the close button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonCommandParameterProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonCommandProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonContent">
      <summary>Gets or sets the content of the teaching tip's close button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonContentProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonStyle">
      <summary>Gets or sets the Style to apply to the teaching tip's close button.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.CloseButtonStyleProperty" />
    <member name="E:Microsoft.UI.Xaml.Controls.TeachingTip.Closed">
      <summary>Occurs after the tip is closed.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TeachingTip.Closing">
      <summary>Occurs just before the tip begins to close.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.HeroContent">
      <summary>Border-to-border graphic content displayed in the header or footer of the teaching tip. Will appear opposite of the tail in targeted teaching tips unless otherwise set.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.HeroContentPlacement">
      <summary>Placement of the hero content within the teaching tip.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.HeroContentPlacementProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.HeroContentProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IconSource">
      <summary>Gets or sets the graphic content to appear alongside the title and subtitle.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IconSourceProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IsLightDismissEnabled">
      <summary>Enables light-dismiss functionality so that a teaching tip will dismiss when a user scrolls or interacts with other elements of the application.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IsLightDismissEnabledProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IsOpen">
      <summary>Gets or sets a value that indicates whether the teaching tip is open.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.IsOpenProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.PlacementMargin">
      <summary>Adds a margin between a targeted teaching tip and its target or between a non-targeted teaching tip and the xaml root.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.PlacementMarginProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.PreferredPlacement">
      <summary>Preferred placement to be used for the teaching tip. If there is not enough space to show at the preferred placement, a new placement will be automatically chosen. 
Placement is relative to its target if Target is non-null or to the parent window of the teaching tip if Target is null.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.PreferredPlacementProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ShouldConstrainToRootBounds">
      <summary>Gets or sets a value that indicates whether the teaching tip will constrain to the bounds of its xaml root.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.ShouldConstrainToRootBoundsProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.Subtitle">
      <summary>Gets or sets the subtitle of the teaching tip.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.SubtitleProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TailVisibility">
      <summary>Toggles collapse of a teaching tip's tail. Can be used to override auto behavior to make a tail visible on a non-targeted teaching tip and hidden on a targeted teaching tip.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TailVisibilityProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.Target">
      <summary>Sets the target for a teaching tip to position itself relative to and point at with its tail.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TargetProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TemplateSettings">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.TeachingTip?text=TeachingTip" />.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TemplateSettingsProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.Title">
      <summary>Gets or sets the title of the teaching tip.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTip.TitleProperty" />
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs">
      <summary>Provides data for the Closed event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs.Reason">
      <summary>Gets constant that specifies whether the cause of the Closed event was due to user interaction (Close button click), light-dismissal, or programmatic closure.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipCloseReason">
      <summary>Defines constants that specify the cause of the Close event.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipCloseReason.CloseButton">
      <summary>The teaching tip was closed by the user clicking the close button.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipCloseReason.LightDismiss">
      <summary>The teaching tip was closed by light-dismissal.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipCloseReason.Programmatic">
      <summary>The teaching tip was programmatically closed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs">
      <summary>Provides data for the Closing event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the Closing event should be canceled.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs.GetDeferral">
      <summary>Gets a deferral object for managing the work done in the Closing event handler.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs.Reason">
      <summary>Gets constant that specifies whether the cause of the Closing event was due to user interaction (Close button click), light-dismissal, or programmatic closure.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode">
      <summary>Defines constants that specify the location for positioning <see cref="Microsoft.UI.Xaml.Controls.TeachingTip.HeroContent?text=HeroContent" /> within a teaching tip.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode.Auto">
      <summary>The preferred location of the hero content is in the header of the teaching tip. 
If possible, the hero content will move to the footer to avoid intersecting with a targeted teaching tip's tail.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode.Bottom">
      <summary>The preferred location of the hero content is in the footer of the teaching tip.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode.Top">
      <summary>The preferred location of the hero content is in the header of the teaching tip.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode">
      <summary>Defines constants that specify the preferred location for positioning a teaching tip.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Auto">
      <summary>The preferred location of the teaching tip is along the bottom side of the xaml root when non-targeted and above the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Bottom">
      <summary>The preferred location of the teaching tip is along the bottom side of the xaml root when non-targeted and below the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.BottomLeft">
      <summary>The preferred location of the teaching tip is the bottom left corner of the xaml root when non-targeted and below the target element expanding leftward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.BottomRight">
      <summary>The preferred location of the teaching tip is the bottom right corner of the xaml root when non-targeted and below the target element expanding rightward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Center">
      <summary>The preferred location of the teaching tip is the center of the xaml root when non-targeted and pointing at the center of the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Left">
      <summary>The preferred location of the teaching tip is along the left side of the xaml root when non-targeted and left of the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.LeftBottom">
      <summary>The preferred location of the teaching tip is the bottom left corner of the xaml root when non-targeted and left of the target element expanding downward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.LeftTop">
      <summary>The preferred location of the teaching tip is the top left corner of the xaml root when non-targeted and left of the target element expanding upward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Right">
      <summary>The preferred location of the teaching tip is along the right side of the xaml root when non-targeted and right of the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.RightBottom">
      <summary>The preferred location of the teaching tip is the bottom right corner of the xaml root when non-targeted and right of the target element expanding downward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.RightTop">
      <summary>The preferred location of the teaching tip is the top right corner of the xaml root when non-targeted and right of the target element expanding upward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.Top">
      <summary>The preferred location of the teaching tip is along the top side of the xaml root when non-targeted and above the target element when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.TopLeft">
      <summary>The preferred location of the teaching tip is the top left corner of the xaml root when non-targeted and above the target element expanding leftward when targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode.TopRight">
      <summary>The preferred location of the teaching tip is the top right corner of the xaml root when non-targeted and above the target element expanding rightward when targeted.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility">
      <summary>Defines constants that specify whether a teaching tip's Tail is visible or collapsed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility.Auto">
      <summary>The teaching tip's tail is collapsed when non-targeted and visible when the targeted.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility.Collapsed">
      <summary>The teaching tip's tail is collapsed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility.Visible">
      <summary>The teaching tip's tail is visible.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.TeachingTip?text=TeachingTip" />.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.#ctor">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.TeachingTip?text=TeachingTip" />.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.IconElement">
      <summary>Gets the icon element.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.IconElementProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.TopLeftHighlightMargin">
      <summary>Gets the thickness value of the top left highlight margin.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.TopLeftHighlightMarginProperty" />
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.TopRightHighlightMargin">
      <summary>Gets the thickness value of the top right highlight margin.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings.TopRightHighlightMarginProperty" />
    <member name="T:Microsoft.UI.Xaml.Controls.TextCommandBarFlyout">
      <summary>Represents a specialized command bar flyout that contains commands for editing text.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TextCommandBarFlyout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.TextCommandBarFlyout?text=TextCommandBarFlyout" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSplitButton">
      <summary>Represents a button with two parts that can be invoked separately. One part behaves like a toggle button and the other part invokes a flyout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ToggleSplitButton.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.ToggleSplitButton?text=ToggleSplitButton" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ToggleSplitButton.IsChecked">
      <summary>Gets or sets whether the ToggleSplitButton is checked.</summary>
      <returns>true if the ToggleSplitButton is checked; false if the ToggleSplitButton is unchecked. The default is false.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.ToggleSplitButton.IsCheckedChanged">
      <summary>Occurs when the value of the IsChecked property is changed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.ToggleSplitButton.IsCheckedChanged?text=ToggleSplitButton.IsCheckedChanged" /> event.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeView">
      <summary>Represents a hierarchical list with expanding and collapsing nodes that contain nested items.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the TreeView control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanDragItems">
      <summary>Gets or sets a value that indicates whether items in the view can be dragged as data payload.</summary>
      <returns>true if items in the view can be dragged as data payload; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanDragItemsProperty">
      <summary>Identifies the CanDragItems dependency property.</summary>
      <returns>The identifier for the CanDragItems dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanReorderItems">
      <summary>Gets or sets a value that indicates whether items in the view can be reordered through user interaction.</summary>
      <returns>true if items in the view can be reordered through user interaction; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.CanReorderItemsProperty">
      <summary>Identifies the CanReorderItems dependency property.</summary>
      <returns>The identifier for the CanReorderItems dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.Collapse(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <param name="value" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.Collapsed">
      <summary>Occurs when a node in the tree is collapsed.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ContainerFromItem(System.Object)">
      <summary>Returns the container corresponding to the specified item.</summary>
      <param name="item">The item to retrieve the container for.</param>
      <returns>A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ContainerFromNode(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <param name="node" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.DragItemsCompleted">
      <summary>Occurs when a drag operation that involves one of the items in the view is ended.</summary>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.DragItemsStarting">
      <summary>Occurs when a drag operation that involves one of the items in the view is initiated.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.Expand(Microsoft.UI.Xaml.Controls.TreeViewNode)">
      <param name="value" />
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.Expanding">
      <summary>Occurs when a node in the tree starts to expand.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers.</summary>
      <returns>The style applied to the item containers. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
      <returns>The identifier for the ItemContainerStyle dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelector">
      <summary>Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.</summary>
      <returns>A custom StyleSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
      <returns>The identifier for the ItemContainerStyleSelector dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitions">
      <summary>Gets or sets the collection of Transition style elements that apply to the item containers of a TreeView.</summary>
      <returns>The collection of Transition style elements that apply to the item containers of an ItemsControl.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitionsProperty">
      <summary>Identifies the ItemContainerTransitions dependency property.</summary>
      <returns>The identifier for the ItemContainerTransitions dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.ItemFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the item that corresponds to the specified, generated container.</summary>
      <param name="container">The DependencyObject that corresponds to the item to be returned.</param>
      <returns>The contained item, or the container if it does not contain an item.</returns>
    </member>
    <member name="E:Microsoft.UI.Xaml.Controls.TreeView.ItemInvoked">
      <summary>Occurs when an item in the tree is invoked.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the TreeView.</summary>
      <returns>The object that is used to generate the content of the TreeView. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each item.</summary>
      <returns>The template that specifies the visualization of the data objects. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
      <returns>The identifier for the ItemTemplate dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelector">
      <summary>Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.</summary>
      <returns>A reference to a custom DataTemplateSelector logic class.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelectorProperty">
      <summary>Identifies the ItemTemplateSelector dependency property.</summary>
      <returns>The identifier for the ItemTemplateSelector dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.NodeFromContainer(Microsoft.UI.Xaml.DependencyObject)">
      <summary>Returns the TreeViewNode corresponding to the specified container.</summary>
      <param name="container">The container to retrieve the TreeViewNode for.</param>
      <returns>The node that corresponds to the specified container.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.RootNodes">
      <summary>Gets or sets the collection of root nodes of the tree.</summary>
      <returns>The collection of root nodes of the tree.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeView.SelectAll">
      <summary>Selects all nodes in the tree.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectedNodes">
      <summary>Gets or sets the collection of nodes that are selected in the tree.</summary>
      <returns>The collection of nodes that are selected in the tree. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectionMode">
      <summary>Gets or sets the selection behavior for a <see cref="Microsoft.UI.Xaml.Controls.TreeView?text=TreeView" /> instance.</summary>
      <returns>An enumeration value that specifies the selection behavior for a <see cref="Microsoft.UI.Xaml.Controls.TreeView?text=TreeView" />. The default is Single selection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeView.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
      <returns>The identifier for the SelectionMode dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.TreeView.Collapsed?text=TreeView.Collapsed" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs.Item">
      <summary>Gets the TreeView item that is collapsed.</summary>
      <returns>The TreeView item that is collapsed.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs.Node">
      <summary>Gets the TreeView node that is collapsed.</summary>
      <returns>The TreeView node that is collapsed.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.TreeView.DragItemsCompleted?text=TreeView.DragItemsCompleted" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs.DropResult">
      <summary>Gets a value that indicates what operation was performed on the dragged data, and whether it was successful.</summary>
      <returns>A value of the enumeration that indicates what operation was performed on the dragged data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.TreeView.DragItemsStarting?text=TreeView.DragItemsStarting" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the item drag action should be canceled.</summary>
      <returns>true to cancel the item drag action; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Data">
      <summary>Gets the data payload associated with an items drag action.</summary>
      <returns>The data payload.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs.Items">
      <summary>Gets the loosely typed collection of objects that are selected for the item drag action.</summary>
      <returns>A loosely typed collection of objects.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.TreeView.Expanding?text=TreeView.Expanding" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs.Item">
      <summary>Gets the data item for the tree view node that is expanding.</summary>
      <returns>The data item for the tree view node that is expanding.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs.Node">
      <summary>Gets the tree view node that is expanding.</summary>
      <returns>The tree view node that is expanding.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItem">
      <summary>Represents the container for an item in a <see cref="Microsoft.UI.Xaml.Controls.TreeView?text=TreeView" /> control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the TreeViewItem control.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyph">
      <summary>Gets or sets the glyph to show for a collapsed tree node.</summary>
      <returns>The glyph to show for a collapsed tree node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyphProperty">
      <summary>Identifies the CollapsedGlyph dependency property.</summary>
      <returns>The identifier for the CollapsedGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyph">
      <summary>Gets or sets the glyph to show for an expanded tree node.</summary>
      <returns>The glyph to show for an expanded tree node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyphProperty">
      <summary>Identifies the ExpandedGlyph dependency property.</summary>
      <returns>The identifier for the ExpandedGlyph dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrush">
      <summary>Gets or sets the Brush used to paint node glyphs on a TreeView.</summary>
      <returns>The Brush used to paint node glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrushProperty">
      <summary>Identifies the GlyphBrush dependency property.</summary>
      <returns>The identifier for the GlyphBrush dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacity">
      <summary>Gets or sets the opacity of node glyphs on a TreeView.</summary>
      <returns>The opacity of node glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacityProperty">
      <summary>Identifies the GlyphOpacity dependency property.</summary>
      <returns>The identifier for the GlyphOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSize">
      <summary>Gets or sets the size of node glyphs on a TreeView.</summary>
      <returns>The opacity of size glyphs on a TreeView.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSizeProperty">
      <summary>Identifies the GlyphSize dependency property.</summary>
      <returns>The identifier for the GlyphSize dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildren">
      <summary>Gets or sets a value that indicates whether the current item has child items that haven't been shown.</summary>
      <returns>true of the current item has child items that haven't been shown; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildrenProperty">
      <summary>Identifies the HasUnrealizedChildren dependency property.</summary>
      <returns>The identifier for the HasUnrealizedChildren dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets a value that indicates whether a tree node is expanded.</summary>
      <returns>true if the tree node is expanded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the IsExpanded dependency property.</summary>
      <returns>The identifier for the IsExpanded dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSource">
      <summary>Gets or sets an object source used to generate the content of the TreeView.</summary>
      <returns>The object that is used to generate the content of the TreeViewItem. The default is null.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
      <returns>The identifier for the ItemsSource dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettings">
      <summary>Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a TreeViewItem control.</summary>
      <returns>An object that provides calculated values for templates.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettingsProperty">
      <summary>Identifies the TreeViewItemTemplateSettings dependency property.</summary>
      <returns>The identifier for the TreeViewItemTemplateSettings dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs">
      <summary>Provides event data for the <see cref="Microsoft.UI.Xaml.Controls.TreeView.ItemInvoked?text=TreeView.ItemInvoked" /> event.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs.Handled">
      <summary>Gets or sets a value that marks the routed event as handled. A true value for prevents most handlers along the event route from handling the same event again.</summary>
      <returns>true to mark the routed event handled. false to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs.InvokedItem">
      <summary>Gets the TreeView item that is invoked.</summary>
      <returns>The TreeView item that is invoked.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings">
      <summary>Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a <see cref="Microsoft.UI.Xaml.Controls.TreeViewItem?text=TreeViewItem" /> control. Not intended for general use.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.#ctor">
      <summary>Initializes a new instance of the TreeViewItemTemplateSettings class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.CollapsedGlyphVisibility">
      <summary>Gets the visibilty of a collapsed glyph.</summary>
      <returns>The visibilty of a collapsed glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.CollapsedGlyphVisibilityProperty">
      <summary>Identifies the CollapsedGlyphVisibility dependency property.</summary>
      <returns>The identifier for the CollapsedGlyphVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.DragItemsCount">
      <summary>Gets the number of items being dragged.</summary>
      <returns>The number of items being dragged.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.DragItemsCountProperty">
      <summary>Identifies the DragItemsCount dependency property.</summary>
      <returns>The identifier for the DragItemsCount dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.ExpandedGlyphVisibility">
      <summary>Gets the visibilty of an expanded glyph.</summary>
      <returns>The visibilty of an expanded glyph.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.ExpandedGlyphVisibilityProperty">
      <summary>Identifies the ExpandedGlyphVisibility dependency property.</summary>
      <returns>The identifier for the ExpandedGlyphVisibility dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.Indentation">
      <summary>Gets the amount that the item is indented.</summary>
      <returns>The amount that the item is indented.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty">
      <summary>Identifies the Indentation dependency property.</summary>
      <returns>The identifier for the Indentation dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewList">
      <summary>Represents a flattened list of tree view items so that operations such as keyboard navigation and drag-and-drop can be inherited from ListView.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewList.#ctor">
      <summary>Initializes a new instance of the TreeViewList control.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewNode">
      <summary>Represents a node in a <see cref="Microsoft.UI.Xaml.Controls.TreeView?text=TreeView" /> control.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.TreeViewNode.#ctor">
      <summary>Initializes a new instance of the TreeViewNode class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Children">
      <summary>Gets the collection of nodes that are children of the current node.</summary>
      <returns>The collection of nodes that are children of the current node. The default is an empty collection.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Content">
      <summary>Gets or sets the data content for the current node.</summary>
      <returns>The data content for the current node.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
      <returns>The identifier for the Content dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Depth">
      <summary>Gets a value that indicates how far the current node is from the root node of the tree.</summary>
      <returns>The depth of the current node from the root node of the tree.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.DepthProperty">
      <summary>Identifies the Depth dependency property.</summary>
      <returns>The identifier for the Depth dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren">
      <summary>Gets a value that indicates whether the current node has child items.</summary>
      <returns>true if the current node has child items; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildrenProperty">
      <summary>Identifies the HasChildren dependency property.</summary>
      <returns>The identifier for the HasChildren dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren">
      <summary>Gets or sets a value that indicates whether the current node has child items that haven't been shown.</summary>
      <returns>true of the current node has child items that haven't been shown; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded">
      <summary>Gets or sets a value that indicates whether the cuurent tree view node is expanded.</summary>
      <returns>true if the node is expanded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpandedProperty">
      <summary>Identifies the IsExpanded dependency property.</summary>
      <returns>The identifier for the IsExpanded dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TreeViewNode.Parent">
      <summary>Gets or sets the node that is the parent of the current node.</summary>
      <returns>The node that is the parent of the current node.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode">
      <summary>Defines constants that specify the selection behavior for a <see cref="Microsoft.UI.Xaml.Controls.TreeView?text=TreeView" /> instance.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Multiple">
      <summary>The user can select multiple items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.None">
      <summary>A user can't select items.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Single">
      <summary>A user can select a single item.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneView" />
    <member name="M:Microsoft.UI.Xaml.Controls.TwoPaneView.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView?text=TwoPaneView" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeight" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeightProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeight?text=MinTallModeHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.MinTallModeHeight?text=MinTallModeHeight" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidth" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidth?text=MinWideModeWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.MinWideModeWidth?text=MinWideModeWidth" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Mode" />
    <member name="E:Microsoft.UI.Xaml.Controls.TwoPaneView.ModeChanged" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.ModeProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Mode?text=Mode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Mode?text=Mode" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Length" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1LengthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Length?text=Pane1Length" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Length?text=Pane1Length" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1Property">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1?text=Pane1" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane1?text=Pane1" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Length" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2LengthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Length?text=Pane2Length" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Length?text=Pane2Length" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2Property">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2?text=Pane2" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.Pane2?text=Pane2" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriority" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriorityProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriority?text=PanePriority" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.PanePriority?text=PanePriority" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfiguration" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfigurationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfiguration?text=TallModeConfiguration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.TallModeConfiguration?text=TallModeConfiguration" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfiguration" />
    <member name="P:Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfigurationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfiguration?text=WideModeConfiguration" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.TwoPaneView.WideModeConfiguration?text=WideModeConfiguration" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.SinglePane" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.Tall" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewMode.Wide" />
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority.Pane1" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewPriority.Pane2" />
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.BottomTop" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.SinglePane" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.TopBottom" />
    <member name="T:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.LeftRight" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.RightLeft" />
    <member name="F:Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.SinglePane" />
    <member name="T:Microsoft.UI.Xaml.Controls.UniformGridLayout">
      <summary>Positions elements sequentially from left to right or top to bottom in a wrapping layout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UniformGridLayout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout?text=UniformGridLayout" /> class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification">
      <summary>Gets or sets a value that indicates how items are aligned on the non-scrolling or non-virtualizing axis.</summary>
      <returns>An enumeration value that indicates how items are aligned. The default is Start.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustificationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification?text=ItemsJustification" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification?text=ItemsJustification" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretch">
      <summary>Gets or sets a value that indicates how items are sized to fill the available space.</summary>
      <returns>An enumeration value that indicates how items are sized to fill the available space. The default is None.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretchProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretch?text=ItemsStretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretch?text=ItemsStretch" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacing">
      <summary>Gets or sets the minimum space between items on the horizontal axis.</summary>
      <returns>The minimum space (in pixels) between items on the horizontal axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacing?text=MinColumnSpacing" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacing?text=MinColumnSpacing" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeight">
      <summary>Gets or sets the minimum height of each item.</summary>
      <returns>The minimum height (in pixels) of each item. The default is NaN, in which case the height of the first item is used as the minimum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeightProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeight?text=MinItemHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeight?text=MinItemHeight" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidth">
      <summary>Gets or sets the minimum width of each item.</summary>
      <returns>The minimum width (in pixels) of each item. The default is NaN, in which case the width of the first item is used as the minimum.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidthProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidth?text=MinItemWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidth?text=MinItemWidth" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacing">
      <summary>Gets or sets the minimum space between items on the vertical axis.</summary>
      <returns>The minimum space (in pixels) between items on the vertical axis.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacingProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacing?text=MinRowSpacing" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacing?text=MinRowSpacing" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.Orientation">
      <summary>Gets or sets the axis along which items are laid out.</summary>
      <returns>One of the enumeration values that specifies the axis along which items are laid out. The default is Vertical.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.UniformGridLayout.OrientationProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.Orientation?text=Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.Orientation?text=Orientation" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification">
      <summary>Defines constants that specify how items are aligned on the non-scrolling or non-virtualizing axis.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Center">
      <summary>Items are aligned in the center of the row or column, with extra space at the start and end. Spacing between items does not change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.End">
      <summary>Items are aligned with the end of the row or column, with extra space at the start. Spacing between items does not change.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceAround">
      <summary>Items are aligned so that extra space is added evenly before and after each item.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceBetween">
      <summary>Items are aligned so that extra space is added evenly between adjacent items. No space is added at the start or end.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Start">
      <summary>Items are aligned with the start of the row or column, with extra space at the end. Spacing between items does not change.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch">
      <summary>Defines constants that specify how items are sized to fill the available space.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Fill">
      <summary>The item is sized to fill the available space in the non-scrolling direction. Item size in the scrolling direction is not changed.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.None">
      <summary>The item retains its natural size. Use of extra space is determined by the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification?text=ItemsJustification" /> property.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Uniform">
      <summary>The item is sized to both fill the available space in the non-scrolling direction and maintain its aspect ratio.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.UniformGridLayoutState">
      <summary>Represents the state of a UniformGridLayout.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.UniformGridLayoutState.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.UniformGridLayoutState?text=UniformGridLayoutState" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VirtualizingLayout">
      <summary>Represents the base class for an object that sizes and arranges child elements for a host and supports virtualization.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayout?text=VirtualizingLayout" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.ArrangeOverride(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,Windows.Foundation.Size)">
      <summary>When implemented in a derived class, provides the behavior for the "Arrange" pass of layout. Classes can override this method to define their own "Arrange" pass behavior.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="finalSize">The final area within the container that this object should use to arrange itself and its children.</param>
      <returns>The actual size that is used after the element is arranged in layout.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.InitializeForContextCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>When overridden in a derived class, initializes any per-container state the layout requires when it is attached to a UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.MeasureOverride(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,Windows.Foundation.Size)">
      <summary>Provides the behavior for the "Measure" pass of the layout cycle. Classes can override this method to define their own "Measure" pass behavior.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
      <returns>The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects or based on other considerations such as a fixed container size.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.OnItemsChangedCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,System.Object,Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs)">
      <summary>Notifies the layout when the data collection assigned to the container element (ItemsSource) has changed.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
      <param name="source">The data source.</param>
      <param name="args">Data about the collection change.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayout.UninitializeForContextCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)">
      <summary>When overridden in a derived class, removes any state the layout previously stored on the UIElement container.</summary>
      <param name="context">The context object that facilitates communication between the layout and its host container.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext">
      <summary>Represents the base class for layout context types that support virtualization.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext?text=VirtualizingLayoutContext" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.GetItemAt(System.Int32)">
      <summary>Retrieves the data item in the source found at the specified index.</summary>
      <param name="index">The index of the data item to retrieve.</param>
      <returns>The data item at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.GetItemAtCore(System.Int32)">
      <summary>When implemented in a derived class, retrieves the data item in the source found at the specified index.</summary>
      <param name="index">The index of the data item to retrieve.</param>
      <returns>The data item at the specified index.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.GetOrCreateElementAt(System.Int32)">
      <summary>Retrieves a UIElement that represents the data item in the source found at the specified index. By default, if an element already exists, it is returned; otherwise, a new element is created.</summary>
      <param name="index">The index of the data item to retrieve a UIElement for.</param>
      <returns>A UIElement that represents the data item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.GetOrCreateElementAt(System.Int32,Microsoft.UI.Xaml.Controls.ElementRealizationOptions)">
      <summary>Retrieves a UIElement that represents the data item in the source found at the specified index using the specified options.</summary>
      <param name="index">The index of the data item to retrieve a UIElement for.</param>
      <param name="options">A value of <see cref="Microsoft.UI.Xaml.Controls.ElementRealizationOptions?text=ElementRealizationOptions" /> that specifies whether to suppress automatic recycling of the retrieved element or force creation of a new element.</param>
      <returns>A UIElement that represents the data item.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.GetOrCreateElementAtCore(System.Int32,Microsoft.UI.Xaml.Controls.ElementRealizationOptions)">
      <param name="index" />
      <param name="options" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.ItemCount">
      <summary>Gets the number of items in the data.</summary>
      <returns>The number of items in the data.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.ItemCountCore">
      <summary>When implemented in a derived class, retrieves the number of items in the data.</summary>
      <returns>The number of items in the data.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.LayoutOrigin">
      <summary>Gets or sets the origin point for the estimated content size.</summary>
      <returns>The origin point for the estimated content size.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.LayoutOriginCore">
      <summary>Implements the behavior of <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.LayoutOrigin?text=LayoutOrigin" /> in a derived or custom VirtualizingLayoutContext.</summary>
      <returns>The value that should be returned as <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.LayoutOrigin?text=LayoutOrigin" /> by the VirtualizingLayoutContext.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RealizationRect">
      <summary>Gets an area that represents the viewport and buffer that the layout should fill with realized elements.</summary>
      <returns>An area that represents the viewport and buffer that the layout should fill with realized elements.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RealizationRectCore">
      <summary>When implemented in a derived class, retrieves an area that represents the viewport and buffer that the layout should fill with realized elements.</summary>
      <returns>An area that represents the viewport and buffer that the layout should fill with realized elements.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecommendedAnchorIndex">
      <summary>Gets the recommended index from which to start the generation and layout of elements.</summary>
      <returns>The recommended index from which the layout should start.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecommendedAnchorIndexCore">
      <summary>Implements the behavior for getting the return value of <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecommendedAnchorIndex?text=RecommendedAnchorIndex" /> in a derived or custom VirtualizingLayoutContext.</summary>
      <returns>The value that should be returned as <see cref="Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecommendedAnchorIndex?text=RecommendedAnchorIndex" /> by the VirtualizingLayoutContext.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecycleElement(Microsoft.UI.Xaml.UIElement)">
      <summary>Clears the specified UIElement and allows it to be either re-used or released.</summary>
      <param name="element">The element to clear.</param>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext.RecycleElementCore(Microsoft.UI.Xaml.UIElement)">
      <summary>When implemented in a derived class, clears the specified UIElement and allows it to be either re-used or released.</summary>
      <param name="element">The element to clear.</param>
    </member>
    <member name="T:Microsoft.UI.Xaml.Controls.XamlControlsResources">
      <summary>Default styles for the controls in the
WinUI library.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.XamlControlsResources.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.Controls.XamlControlsResources?text=XamlControlsResources" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.XamlControlsResources.EnsureRevealLights(Microsoft.UI.Xaml.UIElement)">
      <param name="element" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources" />
    <member name="P:Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResourcesProperty" />
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs.Animation" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs.CenterPoint" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs.EndZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs.StartZoomFactor" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomAnimationStartingEventArgs.ZoomInfo" />
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomCompletedEventArgs" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomCompletedEventArgs.ZoomInfo" />
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomInfo" />
    <member name="F:Microsoft.UI.Xaml.Controls.ZoomInfo.ZoomFactorChangeId" />
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomMode" />
    <member name="F:Microsoft.UI.Xaml.Controls.ZoomMode.Disabled" />
    <member name="F:Microsoft.UI.Xaml.Controls.ZoomMode.Enabled" />
    <member name="T:Microsoft.UI.Xaml.Controls.ZoomOptions" />
    <member name="M:Microsoft.UI.Xaml.Controls.ZoomOptions.#ctor(Microsoft.UI.Xaml.Controls.AnimationMode)">
      <param name="animationMode" />
    </member>
    <member name="M:Microsoft.UI.Xaml.Controls.ZoomOptions.#ctor(Microsoft.UI.Xaml.Controls.AnimationMode,Microsoft.UI.Xaml.Controls.SnapPointsMode)">
      <param name="animationMode" />
      <param name="snapPointsMode" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomOptions.AnimationMode" />
    <member name="P:Microsoft.UI.Xaml.Controls.ZoomOptions.SnapPointsMode" />
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXContractPropertyAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXContractPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXContractPropertyAttribute?text=MUXContractPropertyAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXHasCustomActivationFactoryAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXHasCustomActivationFactoryAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXHasCustomActivationFactoryAttribute?text=MUXHasCustomActivationFactoryAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackAttribute?text=MUXPropertyChangedCallbackAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodNameAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodNameAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodNameAttribute?text=MUXPropertyChangedCallbackMethodNameAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyDefaultValueAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyDefaultValueAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyDefaultValueAttribute?text=MUXPropertyDefaultValueAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyNeedsDependencyPropertyFieldAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyNeedsDependencyPropertyFieldAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyNeedsDependencyPropertyFieldAttribute?text=MUXPropertyNeedsDependencyPropertyFieldAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyTypeAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyTypeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyTypeAttribute?text=MUXPropertyTypeAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyValidationCallbackAttribute" />
    <member name="M:Microsoft.UI.Xaml.CustomAttributes.MUXPropertyValidationCallbackAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.UI.Xaml.CustomAttributes.MUXPropertyValidationCallbackAttribute?text=MUXPropertyValidationCallbackAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.AcrylicBrush">
      <summary>Paints an area with a semi-transparent material that uses multiple effects including blur and a noise texture.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.AcrylicBrush.#ctor">
      <summary>Initializes a new instance of the AcrylicBrush class.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallback">
      <summary>Gets or sets a value that specifies whether the brush is forced to the solid fallback color.</summary>
      <returns>true to always replace the acrylic material with the solid fallback color. Otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallbackProperty">
      <summary>Identifies the AlwaysUseFallback dependency property.</summary>
      <returns>The identifier for the AlwaysUseFallback dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintColor">
      <summary>Gets or sets the color tint for the semi-transparent acrylic material.</summary>
      <returns>The color tint for the semi-transparent acrylic material.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintColorProperty">
      <summary>Identifies the TintColor dependency property.</summary>
      <returns>The identifier for the TintColor dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacity" />
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacityProperty">
      <summary>Identifies the <see cref="Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacity?text=TintLuminosityOpacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="Microsoft.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacity?text=TintLuminosityOpacity" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintOpacity">
      <summary>Gets or sets the degree of opacity of the color tint.</summary>
      <returns>The opacity expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintOpacityProperty">
      <summary>Identifies the TintOpacity dependency property.</summary>
      <returns>The identifier for the TintOpacity dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintTransitionDuration">
      <summary>Gets or sets the length of the automatic transition animation used when the TintColor changes.</summary>
      <returns>The length of the automatic transition animation used when the TintColor changes.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.AcrylicBrush.TintTransitionDurationProperty">
      <summary>Identifies the TintTransitionDuration dependency property.</summary>
      <returns>The identifier for the TintTransitionDuration dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBackgroundBrush">
      <summary>Paints a control background with a reveal effect using composition brush and light effects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBackgroundBrush.#ctor">
      <summary>Initializes a new instance of the RevealBackgroundBrush class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBorderBrush">
      <summary>Paints a control border with a reveal effect using composition brush and light effects.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBorderBrush.#ctor">
      <summary>Initializes a new instance of the RevealBorderBrush class.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBrush">
      <summary>Base class for brushes that use composition effects and lighting to implement the reveal visual design treatment.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.#ctor">
      <summary>Provides base class initialization behavior for RevealBrush-derived classes.</summary>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.AlwaysUseFallback">
      <summary>Gets or sets a value that specifies whether the brush is forced to the solid fallback color.</summary>
      <returns>true to always replace the reveal effect with the solid fallback color. Otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.AlwaysUseFallbackProperty">
      <summary>Identifies the AlwaysUseFallback dependency property.</summary>
      <returns>The identifier for the AlwaysUseFallback dependency property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.Color">
      <summary>Gets or sets a value that specifies the base background color for the brush.</summary>
      <returns>The base background color for the brush. The default value is transparent white (0x00FFFFFF).</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.ColorProperty">
      <summary>Identifies the Color dependency property.</summary>
      <returns>The identifier for the Color dependency property.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.GetState(Microsoft.UI.Xaml.UIElement)">
      <summary>Gets the value of the RevealBrush.State XAML attached property for the target element.</summary>
      <param name="element">The object from which the property value is read.</param>
      <returns>The RevealBrush.State XAML attached property value of the specified object.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.Media.RevealBrush.SetState(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Media.RevealBrushState)">
      <param name="element" />
      <param name="value" />
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.StateProperty">
      <summary>Identifies the RevealBrush.State attached property</summary>
      <returns>The identifier for the RevealBrush.State attached property.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.TargetTheme">
      <summary>Gets or sets a value that specifies the theme used to draw the brush and light, to ensure that the correct composition effect recipe is used for the desired theme.</summary>
      <returns>An ApplicationTheme value.</returns>
    </member>
    <member name="P:Microsoft.UI.Xaml.Media.RevealBrush.TargetThemeProperty">
      <summary>Identifies the TargetTheme dependency property.</summary>
      <returns>The identifier for the TargetTheme dependency property.</returns>
    </member>
    <member name="T:Microsoft.UI.Xaml.Media.RevealBrushState">
      <summary>Defines constants that specify the pointer state of an element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.Normal">
      <summary>The element is in its default state.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.PointerOver">
      <summary>The pointer is over the element.</summary>
    </member>
    <member name="F:Microsoft.UI.Xaml.Media.RevealBrushState.Pressed">
      <summary>The element is pressed.</summary>
    </member>
    <member name="T:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider">
      <summary>Implements XAML schema context concepts that support XAML parsing.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.#ctor">
      <summary>Creates a new instance of the <see cref="Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider?text=XamlControlsXamlMetadataProvider" /> class.</summary>
    </member>
    <member name="M:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.GetXamlType(System.String)">
      <summary>Implements XAML schema context access to underlying type mapping, based on specifying a full type name.</summary>
      <param name="fullName">The name of the class for which to return a XAML type mapping.</param>
      <returns>The schema context's implementation of the IXamlType concept.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.GetXamlType(Microsoft.UI.Xaml.Interop.TypeName)">
      <summary>Implements XAML schema context access to underlying type mapping, based on providing a helper value that describes a type.</summary>
      <param name="type">The type as represented by the relevant type system or interoperation support type.</param>
      <returns>The schema context's implementation of the IXamlType concept.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.GetXmlnsDefinitions">
      <summary>Gets the set of XMLNS (XAML namespace) definitions that apply to the context.</summary>
      <returns>The set of XMLNS (XAML namespace) definitions.</returns>
    </member>
    <member name="M:Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.Initialize">
      <summary>Invokes any necessary pre-activation logic as required by the XAML schema context and its platform dependencies.</summary>
    </member>
  </members>
</doc>

